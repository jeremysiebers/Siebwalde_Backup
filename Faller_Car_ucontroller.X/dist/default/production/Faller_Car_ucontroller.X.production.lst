

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Dec 22 00:02:28 2022

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og9 
     1                           	processor	16F15323
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	intentry,global,class=CODE,delta=2
    64                           	psect	text48,local,class=CODE,merge=1,delta=2
    65                           	psect	text49,local,class=CODE,merge=1,delta=2
    66                           	psect	text50,local,class=CODE,merge=1,delta=2
    67                           	psect	text51,local,class=CODE,merge=1,delta=2
    68                           	psect	text52,local,class=CODE,merge=1,delta=2
    69                           	psect	text53,local,class=CODE,merge=1,delta=2
    70                           	psect	text54,local,class=CODE,merge=1,delta=2
    71                           	psect	text55,local,class=CODE,merge=1,delta=2
    72                           	psect	text56,local,class=CODE,merge=1,delta=2
    73                           	psect	text57,local,class=CODE,merge=1,delta=2
    74                           	psect	text58,local,class=CODE,merge=1,delta=2
    75                           	psect	text59,local,class=CODE,merge=1,delta=2
    76                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    77                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    78                           	dabs	1,0x7E,2
    79  0000                     
    80                           ; Generated 19/07/2022 GMT
    81                           ; 
    82                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution. Publication is not required when
    96                           ;        this file is used in an embedded application.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC16F15323 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000E                     	;# 
   128  0012                     	;# 
   129  0014                     	;# 
   130  0018                     	;# 
   131  001A                     	;# 
   132  009B                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  0119                     	;# 
   139  0119                     	;# 
   140  0119                     	;# 
   141  011A                     	;# 
   142  011A                     	;# 
   143  011A                     	;# 
   144  011B                     	;# 
   145  011B                     	;# 
   146  011B                     	;# 
   147  011B                     	;# 
   148  011B                     	;# 
   149  011C                     	;# 
   150  011C                     	;# 
   151  011C                     	;# 
   152  011D                     	;# 
   153  011D                     	;# 
   154  011D                     	;# 
   155  011E                     	;# 
   156  011E                     	;# 
   157  011E                     	;# 
   158  011F                     	;# 
   159  011F                     	;# 
   160  011F                     	;# 
   161  011F                     	;# 
   162  011F                     	;# 
   163  018C                     	;# 
   164  018D                     	;# 
   165  018E                     	;# 
   166  018F                     	;# 
   167  0190                     	;# 
   168  0191                     	;# 
   169  0192                     	;# 
   170  020C                     	;# 
   171  020C                     	;# 
   172  020D                     	;# 
   173  020E                     	;# 
   174  020F                     	;# 
   175  020F                     	;# 
   176  0210                     	;# 
   177  0210                     	;# 
   178  0211                     	;# 
   179  0211                     	;# 
   180  028C                     	;# 
   181  028C                     	;# 
   182  028D                     	;# 
   183  028D                     	;# 
   184  028E                     	;# 
   185  028F                     	;# 
   186  0290                     	;# 
   187  0291                     	;# 
   188  030C                     	;# 
   189  030C                     	;# 
   190  030D                     	;# 
   191  030E                     	;# 
   192  030F                     	;# 
   193  0310                     	;# 
   194  0310                     	;# 
   195  0311                     	;# 
   196  0312                     	;# 
   197  0313                     	;# 
   198  0314                     	;# 
   199  0314                     	;# 
   200  0315                     	;# 
   201  0316                     	;# 
   202  0318                     	;# 
   203  0318                     	;# 
   204  0319                     	;# 
   205  031A                     	;# 
   206  031C                     	;# 
   207  031C                     	;# 
   208  031D                     	;# 
   209  031E                     	;# 
   210  038C                     	;# 
   211  038C                     	;# 
   212  038D                     	;# 
   213  038E                     	;# 
   214  058C                     	;# 
   215  058C                     	;# 
   216  058D                     	;# 
   217  058E                     	;# 
   218  058F                     	;# 
   219  058F                     	;# 
   220  0590                     	;# 
   221  0591                     	;# 
   222  0592                     	;# 
   223  0593                     	;# 
   224  059C                     	;# 
   225  059C                     	;# 
   226  059D                     	;# 
   227  059D                     	;# 
   228  059E                     	;# 
   229  059F                     	;# 
   230  060C                     	;# 
   231  060D                     	;# 
   232  060E                     	;# 
   233  060F                     	;# 
   234  0610                     	;# 
   235  0611                     	;# 
   236  0612                     	;# 
   237  0613                     	;# 
   238  0614                     	;# 
   239  070C                     	;# 
   240  070D                     	;# 
   241  070E                     	;# 
   242  070F                     	;# 
   243  0710                     	;# 
   244  0711                     	;# 
   245  0712                     	;# 
   246  0713                     	;# 
   247  0716                     	;# 
   248  0717                     	;# 
   249  0718                     	;# 
   250  0719                     	;# 
   251  071A                     	;# 
   252  071B                     	;# 
   253  071C                     	;# 
   254  071D                     	;# 
   255  0796                     	;# 
   256  0797                     	;# 
   257  0798                     	;# 
   258  0799                     	;# 
   259  079A                     	;# 
   260  079B                     	;# 
   261  080C                     	;# 
   262  080D                     	;# 
   263  080E                     	;# 
   264  080F                     	;# 
   265  0810                     	;# 
   266  0811                     	;# 
   267  0812                     	;# 
   268  0813                     	;# 
   269  0814                     	;# 
   270  081A                     	;# 
   271  081A                     	;# 
   272  081B                     	;# 
   273  081C                     	;# 
   274  081C                     	;# 
   275  081D                     	;# 
   276  081E                     	;# 
   277  081F                     	;# 
   278  088C                     	;# 
   279  088D                     	;# 
   280  088E                     	;# 
   281  088F                     	;# 
   282  0890                     	;# 
   283  0891                     	;# 
   284  0892                     	;# 
   285  0893                     	;# 
   286  0895                     	;# 
   287  0896                     	;# 
   288  090C                     	;# 
   289  090E                     	;# 
   290  090F                     	;# 
   291  091F                     	;# 
   292  098F                     	;# 
   293  098F                     	;# 
   294  0990                     	;# 
   295  0991                     	;# 
   296  0992                     	;# 
   297  0993                     	;# 
   298  0994                     	;# 
   299  0995                     	;# 
   300  0996                     	;# 
   301  0997                     	;# 
   302  1E0F                     	;# 
   303  1E10                     	;# 
   304  1E11                     	;# 
   305  1E12                     	;# 
   306  1E13                     	;# 
   307  1E14                     	;# 
   308  1E15                     	;# 
   309  1E16                     	;# 
   310  1E17                     	;# 
   311  1E18                     	;# 
   312  1E19                     	;# 
   313  1E1A                     	;# 
   314  1E1B                     	;# 
   315  1E1C                     	;# 
   316  1E1D                     	;# 
   317  1E1E                     	;# 
   318  1E1F                     	;# 
   319  1E20                     	;# 
   320  1E21                     	;# 
   321  1E22                     	;# 
   322  1E23                     	;# 
   323  1E24                     	;# 
   324  1E25                     	;# 
   325  1E26                     	;# 
   326  1E27                     	;# 
   327  1E28                     	;# 
   328  1E29                     	;# 
   329  1E2A                     	;# 
   330  1E2B                     	;# 
   331  1E2C                     	;# 
   332  1E2D                     	;# 
   333  1E2E                     	;# 
   334  1E2F                     	;# 
   335  1E30                     	;# 
   336  1E31                     	;# 
   337  1E32                     	;# 
   338  1E33                     	;# 
   339  1E34                     	;# 
   340  1E35                     	;# 
   341  1E36                     	;# 
   342  1E37                     	;# 
   343  1E8F                     	;# 
   344  1E90                     	;# 
   345  1E91                     	;# 
   346  1E92                     	;# 
   347  1E93                     	;# 
   348  1E9C                     	;# 
   349  1EA1                     	;# 
   350  1EA2                     	;# 
   351  1EB1                     	;# 
   352  1EBB                     	;# 
   353  1EBC                     	;# 
   354  1EBD                     	;# 
   355  1EBE                     	;# 
   356  1EC3                     	;# 
   357  1EC5                     	;# 
   358  1EC6                     	;# 
   359  1EC7                     	;# 
   360  1ECB                     	;# 
   361  1ECC                     	;# 
   362  1F10                     	;# 
   363  1F11                     	;# 
   364  1F12                     	;# 
   365  1F13                     	;# 
   366  1F14                     	;# 
   367  1F15                     	;# 
   368  1F20                     	;# 
   369  1F21                     	;# 
   370  1F22                     	;# 
   371  1F23                     	;# 
   372  1F24                     	;# 
   373  1F25                     	;# 
   374  1F38                     	;# 
   375  1F39                     	;# 
   376  1F3A                     	;# 
   377  1F3B                     	;# 
   378  1F3C                     	;# 
   379  1F3D                     	;# 
   380  1F3E                     	;# 
   381  1F3F                     	;# 
   382  1F4E                     	;# 
   383  1F4F                     	;# 
   384  1F50                     	;# 
   385  1F51                     	;# 
   386  1F52                     	;# 
   387  1F53                     	;# 
   388  1F54                     	;# 
   389  1F55                     	;# 
   390  1FE4                     	;# 
   391  1FE5                     	;# 
   392  1FE6                     	;# 
   393  1FE7                     	;# 
   394  1FE8                     	;# 
   395  1FE8                     	;# 
   396  1FE9                     	;# 
   397  1FEA                     	;# 
   398  1FEA                     	;# 
   399  1FEB                     	;# 
   400  1FED                     	;# 
   401  1FEE                     	;# 
   402  1FEF                     	;# 
   403  0000                     	;# 
   404  0001                     	;# 
   405  0002                     	;# 
   406  0003                     	;# 
   407  0004                     	;# 
   408  0005                     	;# 
   409  0006                     	;# 
   410  0007                     	;# 
   411  0008                     	;# 
   412  0009                     	;# 
   413  000A                     	;# 
   414  000B                     	;# 
   415  000C                     	;# 
   416  000E                     	;# 
   417  0012                     	;# 
   418  0014                     	;# 
   419  0018                     	;# 
   420  001A                     	;# 
   421  009B                     	;# 
   422  009B                     	;# 
   423  009C                     	;# 
   424  009D                     	;# 
   425  009E                     	;# 
   426  009F                     	;# 
   427  0119                     	;# 
   428  0119                     	;# 
   429  0119                     	;# 
   430  011A                     	;# 
   431  011A                     	;# 
   432  011A                     	;# 
   433  011B                     	;# 
   434  011B                     	;# 
   435  011B                     	;# 
   436  011B                     	;# 
   437  011B                     	;# 
   438  011C                     	;# 
   439  011C                     	;# 
   440  011C                     	;# 
   441  011D                     	;# 
   442  011D                     	;# 
   443  011D                     	;# 
   444  011E                     	;# 
   445  011E                     	;# 
   446  011E                     	;# 
   447  011F                     	;# 
   448  011F                     	;# 
   449  011F                     	;# 
   450  011F                     	;# 
   451  011F                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  018E                     	;# 
   455  018F                     	;# 
   456  0190                     	;# 
   457  0191                     	;# 
   458  0192                     	;# 
   459  020C                     	;# 
   460  020C                     	;# 
   461  020D                     	;# 
   462  020E                     	;# 
   463  020F                     	;# 
   464  020F                     	;# 
   465  0210                     	;# 
   466  0210                     	;# 
   467  0211                     	;# 
   468  0211                     	;# 
   469  028C                     	;# 
   470  028C                     	;# 
   471  028D                     	;# 
   472  028D                     	;# 
   473  028E                     	;# 
   474  028F                     	;# 
   475  0290                     	;# 
   476  0291                     	;# 
   477  030C                     	;# 
   478  030C                     	;# 
   479  030D                     	;# 
   480  030E                     	;# 
   481  030F                     	;# 
   482  0310                     	;# 
   483  0310                     	;# 
   484  0311                     	;# 
   485  0312                     	;# 
   486  0313                     	;# 
   487  0314                     	;# 
   488  0314                     	;# 
   489  0315                     	;# 
   490  0316                     	;# 
   491  0318                     	;# 
   492  0318                     	;# 
   493  0319                     	;# 
   494  031A                     	;# 
   495  031C                     	;# 
   496  031C                     	;# 
   497  031D                     	;# 
   498  031E                     	;# 
   499  038C                     	;# 
   500  038C                     	;# 
   501  038D                     	;# 
   502  038E                     	;# 
   503  058C                     	;# 
   504  058C                     	;# 
   505  058D                     	;# 
   506  058E                     	;# 
   507  058F                     	;# 
   508  058F                     	;# 
   509  0590                     	;# 
   510  0591                     	;# 
   511  0592                     	;# 
   512  0593                     	;# 
   513  059C                     	;# 
   514  059C                     	;# 
   515  059D                     	;# 
   516  059D                     	;# 
   517  059E                     	;# 
   518  059F                     	;# 
   519  060C                     	;# 
   520  060D                     	;# 
   521  060E                     	;# 
   522  060F                     	;# 
   523  0610                     	;# 
   524  0611                     	;# 
   525  0612                     	;# 
   526  0613                     	;# 
   527  0614                     	;# 
   528  070C                     	;# 
   529  070D                     	;# 
   530  070E                     	;# 
   531  070F                     	;# 
   532  0710                     	;# 
   533  0711                     	;# 
   534  0712                     	;# 
   535  0713                     	;# 
   536  0716                     	;# 
   537  0717                     	;# 
   538  0718                     	;# 
   539  0719                     	;# 
   540  071A                     	;# 
   541  071B                     	;# 
   542  071C                     	;# 
   543  071D                     	;# 
   544  0796                     	;# 
   545  0797                     	;# 
   546  0798                     	;# 
   547  0799                     	;# 
   548  079A                     	;# 
   549  079B                     	;# 
   550  080C                     	;# 
   551  080D                     	;# 
   552  080E                     	;# 
   553  080F                     	;# 
   554  0810                     	;# 
   555  0811                     	;# 
   556  0812                     	;# 
   557  0813                     	;# 
   558  0814                     	;# 
   559  081A                     	;# 
   560  081A                     	;# 
   561  081B                     	;# 
   562  081C                     	;# 
   563  081C                     	;# 
   564  081D                     	;# 
   565  081E                     	;# 
   566  081F                     	;# 
   567  088C                     	;# 
   568  088D                     	;# 
   569  088E                     	;# 
   570  088F                     	;# 
   571  0890                     	;# 
   572  0891                     	;# 
   573  0892                     	;# 
   574  0893                     	;# 
   575  0895                     	;# 
   576  0896                     	;# 
   577  090C                     	;# 
   578  090E                     	;# 
   579  090F                     	;# 
   580  091F                     	;# 
   581  098F                     	;# 
   582  098F                     	;# 
   583  0990                     	;# 
   584  0991                     	;# 
   585  0992                     	;# 
   586  0993                     	;# 
   587  0994                     	;# 
   588  0995                     	;# 
   589  0996                     	;# 
   590  0997                     	;# 
   591  1E0F                     	;# 
   592  1E10                     	;# 
   593  1E11                     	;# 
   594  1E12                     	;# 
   595  1E13                     	;# 
   596  1E14                     	;# 
   597  1E15                     	;# 
   598  1E16                     	;# 
   599  1E17                     	;# 
   600  1E18                     	;# 
   601  1E19                     	;# 
   602  1E1A                     	;# 
   603  1E1B                     	;# 
   604  1E1C                     	;# 
   605  1E1D                     	;# 
   606  1E1E                     	;# 
   607  1E1F                     	;# 
   608  1E20                     	;# 
   609  1E21                     	;# 
   610  1E22                     	;# 
   611  1E23                     	;# 
   612  1E24                     	;# 
   613  1E25                     	;# 
   614  1E26                     	;# 
   615  1E27                     	;# 
   616  1E28                     	;# 
   617  1E29                     	;# 
   618  1E2A                     	;# 
   619  1E2B                     	;# 
   620  1E2C                     	;# 
   621  1E2D                     	;# 
   622  1E2E                     	;# 
   623  1E2F                     	;# 
   624  1E30                     	;# 
   625  1E31                     	;# 
   626  1E32                     	;# 
   627  1E33                     	;# 
   628  1E34                     	;# 
   629  1E35                     	;# 
   630  1E36                     	;# 
   631  1E37                     	;# 
   632  1E8F                     	;# 
   633  1E90                     	;# 
   634  1E91                     	;# 
   635  1E92                     	;# 
   636  1E93                     	;# 
   637  1E9C                     	;# 
   638  1EA1                     	;# 
   639  1EA2                     	;# 
   640  1EB1                     	;# 
   641  1EBB                     	;# 
   642  1EBC                     	;# 
   643  1EBD                     	;# 
   644  1EBE                     	;# 
   645  1EC3                     	;# 
   646  1EC5                     	;# 
   647  1EC6                     	;# 
   648  1EC7                     	;# 
   649  1ECB                     	;# 
   650  1ECC                     	;# 
   651  1F10                     	;# 
   652  1F11                     	;# 
   653  1F12                     	;# 
   654  1F13                     	;# 
   655  1F14                     	;# 
   656  1F15                     	;# 
   657  1F20                     	;# 
   658  1F21                     	;# 
   659  1F22                     	;# 
   660  1F23                     	;# 
   661  1F24                     	;# 
   662  1F25                     	;# 
   663  1F38                     	;# 
   664  1F39                     	;# 
   665  1F3A                     	;# 
   666  1F3B                     	;# 
   667  1F3C                     	;# 
   668  1F3D                     	;# 
   669  1F3E                     	;# 
   670  1F3F                     	;# 
   671  1F4E                     	;# 
   672  1F4F                     	;# 
   673  1F50                     	;# 
   674  1F51                     	;# 
   675  1F52                     	;# 
   676  1F53                     	;# 
   677  1F54                     	;# 
   678  1F55                     	;# 
   679  1FE4                     	;# 
   680  1FE5                     	;# 
   681  1FE6                     	;# 
   682  1FE7                     	;# 
   683  1FE8                     	;# 
   684  1FE8                     	;# 
   685  1FE9                     	;# 
   686  1FEA                     	;# 
   687  1FEA                     	;# 
   688  1FEB                     	;# 
   689  1FED                     	;# 
   690  1FEE                     	;# 
   691  1FEF                     	;# 
   692  0000                     	;# 
   693  0001                     	;# 
   694  0002                     	;# 
   695  0003                     	;# 
   696  0004                     	;# 
   697  0005                     	;# 
   698  0006                     	;# 
   699  0007                     	;# 
   700  0008                     	;# 
   701  0009                     	;# 
   702  000A                     	;# 
   703  000B                     	;# 
   704  000C                     	;# 
   705  000E                     	;# 
   706  0012                     	;# 
   707  0014                     	;# 
   708  0018                     	;# 
   709  001A                     	;# 
   710  009B                     	;# 
   711  009B                     	;# 
   712  009C                     	;# 
   713  009D                     	;# 
   714  009E                     	;# 
   715  009F                     	;# 
   716  0119                     	;# 
   717  0119                     	;# 
   718  0119                     	;# 
   719  011A                     	;# 
   720  011A                     	;# 
   721  011A                     	;# 
   722  011B                     	;# 
   723  011B                     	;# 
   724  011B                     	;# 
   725  011B                     	;# 
   726  011B                     	;# 
   727  011C                     	;# 
   728  011C                     	;# 
   729  011C                     	;# 
   730  011D                     	;# 
   731  011D                     	;# 
   732  011D                     	;# 
   733  011E                     	;# 
   734  011E                     	;# 
   735  011E                     	;# 
   736  011F                     	;# 
   737  011F                     	;# 
   738  011F                     	;# 
   739  011F                     	;# 
   740  011F                     	;# 
   741  018C                     	;# 
   742  018D                     	;# 
   743  018E                     	;# 
   744  018F                     	;# 
   745  0190                     	;# 
   746  0191                     	;# 
   747  0192                     	;# 
   748  020C                     	;# 
   749  020C                     	;# 
   750  020D                     	;# 
   751  020E                     	;# 
   752  020F                     	;# 
   753  020F                     	;# 
   754  0210                     	;# 
   755  0210                     	;# 
   756  0211                     	;# 
   757  0211                     	;# 
   758  028C                     	;# 
   759  028C                     	;# 
   760  028D                     	;# 
   761  028D                     	;# 
   762  028E                     	;# 
   763  028F                     	;# 
   764  0290                     	;# 
   765  0291                     	;# 
   766  030C                     	;# 
   767  030C                     	;# 
   768  030D                     	;# 
   769  030E                     	;# 
   770  030F                     	;# 
   771  0310                     	;# 
   772  0310                     	;# 
   773  0311                     	;# 
   774  0312                     	;# 
   775  0313                     	;# 
   776  0314                     	;# 
   777  0314                     	;# 
   778  0315                     	;# 
   779  0316                     	;# 
   780  0318                     	;# 
   781  0318                     	;# 
   782  0319                     	;# 
   783  031A                     	;# 
   784  031C                     	;# 
   785  031C                     	;# 
   786  031D                     	;# 
   787  031E                     	;# 
   788  038C                     	;# 
   789  038C                     	;# 
   790  038D                     	;# 
   791  038E                     	;# 
   792  058C                     	;# 
   793  058C                     	;# 
   794  058D                     	;# 
   795  058E                     	;# 
   796  058F                     	;# 
   797  058F                     	;# 
   798  0590                     	;# 
   799  0591                     	;# 
   800  0592                     	;# 
   801  0593                     	;# 
   802  059C                     	;# 
   803  059C                     	;# 
   804  059D                     	;# 
   805  059D                     	;# 
   806  059E                     	;# 
   807  059F                     	;# 
   808  060C                     	;# 
   809  060D                     	;# 
   810  060E                     	;# 
   811  060F                     	;# 
   812  0610                     	;# 
   813  0611                     	;# 
   814  0612                     	;# 
   815  0613                     	;# 
   816  0614                     	;# 
   817  070C                     	;# 
   818  070D                     	;# 
   819  070E                     	;# 
   820  070F                     	;# 
   821  0710                     	;# 
   822  0711                     	;# 
   823  0712                     	;# 
   824  0713                     	;# 
   825  0716                     	;# 
   826  0717                     	;# 
   827  0718                     	;# 
   828  0719                     	;# 
   829  071A                     	;# 
   830  071B                     	;# 
   831  071C                     	;# 
   832  071D                     	;# 
   833  0796                     	;# 
   834  0797                     	;# 
   835  0798                     	;# 
   836  0799                     	;# 
   837  079A                     	;# 
   838  079B                     	;# 
   839  080C                     	;# 
   840  080D                     	;# 
   841  080E                     	;# 
   842  080F                     	;# 
   843  0810                     	;# 
   844  0811                     	;# 
   845  0812                     	;# 
   846  0813                     	;# 
   847  0814                     	;# 
   848  081A                     	;# 
   849  081A                     	;# 
   850  081B                     	;# 
   851  081C                     	;# 
   852  081C                     	;# 
   853  081D                     	;# 
   854  081E                     	;# 
   855  081F                     	;# 
   856  088C                     	;# 
   857  088D                     	;# 
   858  088E                     	;# 
   859  088F                     	;# 
   860  0890                     	;# 
   861  0891                     	;# 
   862  0892                     	;# 
   863  0893                     	;# 
   864  0895                     	;# 
   865  0896                     	;# 
   866  090C                     	;# 
   867  090E                     	;# 
   868  090F                     	;# 
   869  091F                     	;# 
   870  098F                     	;# 
   871  098F                     	;# 
   872  0990                     	;# 
   873  0991                     	;# 
   874  0992                     	;# 
   875  0993                     	;# 
   876  0994                     	;# 
   877  0995                     	;# 
   878  0996                     	;# 
   879  0997                     	;# 
   880  1E0F                     	;# 
   881  1E10                     	;# 
   882  1E11                     	;# 
   883  1E12                     	;# 
   884  1E13                     	;# 
   885  1E14                     	;# 
   886  1E15                     	;# 
   887  1E16                     	;# 
   888  1E17                     	;# 
   889  1E18                     	;# 
   890  1E19                     	;# 
   891  1E1A                     	;# 
   892  1E1B                     	;# 
   893  1E1C                     	;# 
   894  1E1D                     	;# 
   895  1E1E                     	;# 
   896  1E1F                     	;# 
   897  1E20                     	;# 
   898  1E21                     	;# 
   899  1E22                     	;# 
   900  1E23                     	;# 
   901  1E24                     	;# 
   902  1E25                     	;# 
   903  1E26                     	;# 
   904  1E27                     	;# 
   905  1E28                     	;# 
   906  1E29                     	;# 
   907  1E2A                     	;# 
   908  1E2B                     	;# 
   909  1E2C                     	;# 
   910  1E2D                     	;# 
   911  1E2E                     	;# 
   912  1E2F                     	;# 
   913  1E30                     	;# 
   914  1E31                     	;# 
   915  1E32                     	;# 
   916  1E33                     	;# 
   917  1E34                     	;# 
   918  1E35                     	;# 
   919  1E36                     	;# 
   920  1E37                     	;# 
   921  1E8F                     	;# 
   922  1E90                     	;# 
   923  1E91                     	;# 
   924  1E92                     	;# 
   925  1E93                     	;# 
   926  1E9C                     	;# 
   927  1EA1                     	;# 
   928  1EA2                     	;# 
   929  1EB1                     	;# 
   930  1EBB                     	;# 
   931  1EBC                     	;# 
   932  1EBD                     	;# 
   933  1EBE                     	;# 
   934  1EC3                     	;# 
   935  1EC5                     	;# 
   936  1EC6                     	;# 
   937  1EC7                     	;# 
   938  1ECB                     	;# 
   939  1ECC                     	;# 
   940  1F10                     	;# 
   941  1F11                     	;# 
   942  1F12                     	;# 
   943  1F13                     	;# 
   944  1F14                     	;# 
   945  1F15                     	;# 
   946  1F20                     	;# 
   947  1F21                     	;# 
   948  1F22                     	;# 
   949  1F23                     	;# 
   950  1F24                     	;# 
   951  1F25                     	;# 
   952  1F38                     	;# 
   953  1F39                     	;# 
   954  1F3A                     	;# 
   955  1F3B                     	;# 
   956  1F3C                     	;# 
   957  1F3D                     	;# 
   958  1F3E                     	;# 
   959  1F3F                     	;# 
   960  1F4E                     	;# 
   961  1F4F                     	;# 
   962  1F50                     	;# 
   963  1F51                     	;# 
   964  1F52                     	;# 
   965  1F53                     	;# 
   966  1F54                     	;# 
   967  1F55                     	;# 
   968  1FE4                     	;# 
   969  1FE5                     	;# 
   970  1FE6                     	;# 
   971  1FE7                     	;# 
   972  1FE8                     	;# 
   973  1FE8                     	;# 
   974  1FE9                     	;# 
   975  1FEA                     	;# 
   976  1FEA                     	;# 
   977  1FEB                     	;# 
   978  1FED                     	;# 
   979  1FEE                     	;# 
   980  1FEF                     	;# 
   981  0000                     	;# 
   982  0001                     	;# 
   983  0002                     	;# 
   984  0003                     	;# 
   985  0004                     	;# 
   986  0005                     	;# 
   987  0006                     	;# 
   988  0007                     	;# 
   989  0008                     	;# 
   990  0009                     	;# 
   991  000A                     	;# 
   992  000B                     	;# 
   993  000C                     	;# 
   994  000E                     	;# 
   995  0012                     	;# 
   996  0014                     	;# 
   997  0018                     	;# 
   998  001A                     	;# 
   999  009B                     	;# 
  1000  009B                     	;# 
  1001  009C                     	;# 
  1002  009D                     	;# 
  1003  009E                     	;# 
  1004  009F                     	;# 
  1005  0119                     	;# 
  1006  0119                     	;# 
  1007  0119                     	;# 
  1008  011A                     	;# 
  1009  011A                     	;# 
  1010  011A                     	;# 
  1011  011B                     	;# 
  1012  011B                     	;# 
  1013  011B                     	;# 
  1014  011B                     	;# 
  1015  011B                     	;# 
  1016  011C                     	;# 
  1017  011C                     	;# 
  1018  011C                     	;# 
  1019  011D                     	;# 
  1020  011D                     	;# 
  1021  011D                     	;# 
  1022  011E                     	;# 
  1023  011E                     	;# 
  1024  011E                     	;# 
  1025  011F                     	;# 
  1026  011F                     	;# 
  1027  011F                     	;# 
  1028  011F                     	;# 
  1029  011F                     	;# 
  1030  018C                     	;# 
  1031  018D                     	;# 
  1032  018E                     	;# 
  1033  018F                     	;# 
  1034  0190                     	;# 
  1035  0191                     	;# 
  1036  0192                     	;# 
  1037  020C                     	;# 
  1038  020C                     	;# 
  1039  020D                     	;# 
  1040  020E                     	;# 
  1041  020F                     	;# 
  1042  020F                     	;# 
  1043  0210                     	;# 
  1044  0210                     	;# 
  1045  0211                     	;# 
  1046  0211                     	;# 
  1047  028C                     	;# 
  1048  028C                     	;# 
  1049  028D                     	;# 
  1050  028D                     	;# 
  1051  028E                     	;# 
  1052  028F                     	;# 
  1053  0290                     	;# 
  1054  0291                     	;# 
  1055  030C                     	;# 
  1056  030C                     	;# 
  1057  030D                     	;# 
  1058  030E                     	;# 
  1059  030F                     	;# 
  1060  0310                     	;# 
  1061  0310                     	;# 
  1062  0311                     	;# 
  1063  0312                     	;# 
  1064  0313                     	;# 
  1065  0314                     	;# 
  1066  0314                     	;# 
  1067  0315                     	;# 
  1068  0316                     	;# 
  1069  0318                     	;# 
  1070  0318                     	;# 
  1071  0319                     	;# 
  1072  031A                     	;# 
  1073  031C                     	;# 
  1074  031C                     	;# 
  1075  031D                     	;# 
  1076  031E                     	;# 
  1077  038C                     	;# 
  1078  038C                     	;# 
  1079  038D                     	;# 
  1080  038E                     	;# 
  1081  058C                     	;# 
  1082  058C                     	;# 
  1083  058D                     	;# 
  1084  058E                     	;# 
  1085  058F                     	;# 
  1086  058F                     	;# 
  1087  0590                     	;# 
  1088  0591                     	;# 
  1089  0592                     	;# 
  1090  0593                     	;# 
  1091  059C                     	;# 
  1092  059C                     	;# 
  1093  059D                     	;# 
  1094  059D                     	;# 
  1095  059E                     	;# 
  1096  059F                     	;# 
  1097  060C                     	;# 
  1098  060D                     	;# 
  1099  060E                     	;# 
  1100  060F                     	;# 
  1101  0610                     	;# 
  1102  0611                     	;# 
  1103  0612                     	;# 
  1104  0613                     	;# 
  1105  0614                     	;# 
  1106  070C                     	;# 
  1107  070D                     	;# 
  1108  070E                     	;# 
  1109  070F                     	;# 
  1110  0710                     	;# 
  1111  0711                     	;# 
  1112  0712                     	;# 
  1113  0713                     	;# 
  1114  0716                     	;# 
  1115  0717                     	;# 
  1116  0718                     	;# 
  1117  0719                     	;# 
  1118  071A                     	;# 
  1119  071B                     	;# 
  1120  071C                     	;# 
  1121  071D                     	;# 
  1122  0796                     	;# 
  1123  0797                     	;# 
  1124  0798                     	;# 
  1125  0799                     	;# 
  1126  079A                     	;# 
  1127  079B                     	;# 
  1128  080C                     	;# 
  1129  080D                     	;# 
  1130  080E                     	;# 
  1131  080F                     	;# 
  1132  0810                     	;# 
  1133  0811                     	;# 
  1134  0812                     	;# 
  1135  0813                     	;# 
  1136  0814                     	;# 
  1137  081A                     	;# 
  1138  081A                     	;# 
  1139  081B                     	;# 
  1140  081C                     	;# 
  1141  081C                     	;# 
  1142  081D                     	;# 
  1143  081E                     	;# 
  1144  081F                     	;# 
  1145  088C                     	;# 
  1146  088D                     	;# 
  1147  088E                     	;# 
  1148  088F                     	;# 
  1149  0890                     	;# 
  1150  0891                     	;# 
  1151  0892                     	;# 
  1152  0893                     	;# 
  1153  0895                     	;# 
  1154  0896                     	;# 
  1155  090C                     	;# 
  1156  090E                     	;# 
  1157  090F                     	;# 
  1158  091F                     	;# 
  1159  098F                     	;# 
  1160  098F                     	;# 
  1161  0990                     	;# 
  1162  0991                     	;# 
  1163  0992                     	;# 
  1164  0993                     	;# 
  1165  0994                     	;# 
  1166  0995                     	;# 
  1167  0996                     	;# 
  1168  0997                     	;# 
  1169  1E0F                     	;# 
  1170  1E10                     	;# 
  1171  1E11                     	;# 
  1172  1E12                     	;# 
  1173  1E13                     	;# 
  1174  1E14                     	;# 
  1175  1E15                     	;# 
  1176  1E16                     	;# 
  1177  1E17                     	;# 
  1178  1E18                     	;# 
  1179  1E19                     	;# 
  1180  1E1A                     	;# 
  1181  1E1B                     	;# 
  1182  1E1C                     	;# 
  1183  1E1D                     	;# 
  1184  1E1E                     	;# 
  1185  1E1F                     	;# 
  1186  1E20                     	;# 
  1187  1E21                     	;# 
  1188  1E22                     	;# 
  1189  1E23                     	;# 
  1190  1E24                     	;# 
  1191  1E25                     	;# 
  1192  1E26                     	;# 
  1193  1E27                     	;# 
  1194  1E28                     	;# 
  1195  1E29                     	;# 
  1196  1E2A                     	;# 
  1197  1E2B                     	;# 
  1198  1E2C                     	;# 
  1199  1E2D                     	;# 
  1200  1E2E                     	;# 
  1201  1E2F                     	;# 
  1202  1E30                     	;# 
  1203  1E31                     	;# 
  1204  1E32                     	;# 
  1205  1E33                     	;# 
  1206  1E34                     	;# 
  1207  1E35                     	;# 
  1208  1E36                     	;# 
  1209  1E37                     	;# 
  1210  1E8F                     	;# 
  1211  1E90                     	;# 
  1212  1E91                     	;# 
  1213  1E92                     	;# 
  1214  1E93                     	;# 
  1215  1E9C                     	;# 
  1216  1EA1                     	;# 
  1217  1EA2                     	;# 
  1218  1EB1                     	;# 
  1219  1EBB                     	;# 
  1220  1EBC                     	;# 
  1221  1EBD                     	;# 
  1222  1EBE                     	;# 
  1223  1EC3                     	;# 
  1224  1EC5                     	;# 
  1225  1EC6                     	;# 
  1226  1EC7                     	;# 
  1227  1ECB                     	;# 
  1228  1ECC                     	;# 
  1229  1F10                     	;# 
  1230  1F11                     	;# 
  1231  1F12                     	;# 
  1232  1F13                     	;# 
  1233  1F14                     	;# 
  1234  1F15                     	;# 
  1235  1F20                     	;# 
  1236  1F21                     	;# 
  1237  1F22                     	;# 
  1238  1F23                     	;# 
  1239  1F24                     	;# 
  1240  1F25                     	;# 
  1241  1F38                     	;# 
  1242  1F39                     	;# 
  1243  1F3A                     	;# 
  1244  1F3B                     	;# 
  1245  1F3C                     	;# 
  1246  1F3D                     	;# 
  1247  1F3E                     	;# 
  1248  1F3F                     	;# 
  1249  1F4E                     	;# 
  1250  1F4F                     	;# 
  1251  1F50                     	;# 
  1252  1F51                     	;# 
  1253  1F52                     	;# 
  1254  1F53                     	;# 
  1255  1F54                     	;# 
  1256  1F55                     	;# 
  1257  1FE4                     	;# 
  1258  1FE5                     	;# 
  1259  1FE6                     	;# 
  1260  1FE7                     	;# 
  1261  1FE8                     	;# 
  1262  1FE8                     	;# 
  1263  1FE9                     	;# 
  1264  1FEA                     	;# 
  1265  1FEA                     	;# 
  1266  1FEB                     	;# 
  1267  1FED                     	;# 
  1268  1FEE                     	;# 
  1269  1FEF                     	;# 
  1270  0000                     	;# 
  1271  0001                     	;# 
  1272  0002                     	;# 
  1273  0003                     	;# 
  1274  0004                     	;# 
  1275  0005                     	;# 
  1276  0006                     	;# 
  1277  0007                     	;# 
  1278  0008                     	;# 
  1279  0009                     	;# 
  1280  000A                     	;# 
  1281  000B                     	;# 
  1282  000C                     	;# 
  1283  000E                     	;# 
  1284  0012                     	;# 
  1285  0014                     	;# 
  1286  0018                     	;# 
  1287  001A                     	;# 
  1288  009B                     	;# 
  1289  009B                     	;# 
  1290  009C                     	;# 
  1291  009D                     	;# 
  1292  009E                     	;# 
  1293  009F                     	;# 
  1294  0119                     	;# 
  1295  0119                     	;# 
  1296  0119                     	;# 
  1297  011A                     	;# 
  1298  011A                     	;# 
  1299  011A                     	;# 
  1300  011B                     	;# 
  1301  011B                     	;# 
  1302  011B                     	;# 
  1303  011B                     	;# 
  1304  011B                     	;# 
  1305  011C                     	;# 
  1306  011C                     	;# 
  1307  011C                     	;# 
  1308  011D                     	;# 
  1309  011D                     	;# 
  1310  011D                     	;# 
  1311  011E                     	;# 
  1312  011E                     	;# 
  1313  011E                     	;# 
  1314  011F                     	;# 
  1315  011F                     	;# 
  1316  011F                     	;# 
  1317  011F                     	;# 
  1318  011F                     	;# 
  1319  018C                     	;# 
  1320  018D                     	;# 
  1321  018E                     	;# 
  1322  018F                     	;# 
  1323  0190                     	;# 
  1324  0191                     	;# 
  1325  0192                     	;# 
  1326  020C                     	;# 
  1327  020C                     	;# 
  1328  020D                     	;# 
  1329  020E                     	;# 
  1330  020F                     	;# 
  1331  020F                     	;# 
  1332  0210                     	;# 
  1333  0210                     	;# 
  1334  0211                     	;# 
  1335  0211                     	;# 
  1336  028C                     	;# 
  1337  028C                     	;# 
  1338  028D                     	;# 
  1339  028D                     	;# 
  1340  028E                     	;# 
  1341  028F                     	;# 
  1342  0290                     	;# 
  1343  0291                     	;# 
  1344  030C                     	;# 
  1345  030C                     	;# 
  1346  030D                     	;# 
  1347  030E                     	;# 
  1348  030F                     	;# 
  1349  0310                     	;# 
  1350  0310                     	;# 
  1351  0311                     	;# 
  1352  0312                     	;# 
  1353  0313                     	;# 
  1354  0314                     	;# 
  1355  0314                     	;# 
  1356  0315                     	;# 
  1357  0316                     	;# 
  1358  0318                     	;# 
  1359  0318                     	;# 
  1360  0319                     	;# 
  1361  031A                     	;# 
  1362  031C                     	;# 
  1363  031C                     	;# 
  1364  031D                     	;# 
  1365  031E                     	;# 
  1366  038C                     	;# 
  1367  038C                     	;# 
  1368  038D                     	;# 
  1369  038E                     	;# 
  1370  058C                     	;# 
  1371  058C                     	;# 
  1372  058D                     	;# 
  1373  058E                     	;# 
  1374  058F                     	;# 
  1375  058F                     	;# 
  1376  0590                     	;# 
  1377  0591                     	;# 
  1378  0592                     	;# 
  1379  0593                     	;# 
  1380  059C                     	;# 
  1381  059C                     	;# 
  1382  059D                     	;# 
  1383  059D                     	;# 
  1384  059E                     	;# 
  1385  059F                     	;# 
  1386  060C                     	;# 
  1387  060D                     	;# 
  1388  060E                     	;# 
  1389  060F                     	;# 
  1390  0610                     	;# 
  1391  0611                     	;# 
  1392  0612                     	;# 
  1393  0613                     	;# 
  1394  0614                     	;# 
  1395  070C                     	;# 
  1396  070D                     	;# 
  1397  070E                     	;# 
  1398  070F                     	;# 
  1399  0710                     	;# 
  1400  0711                     	;# 
  1401  0712                     	;# 
  1402  0713                     	;# 
  1403  0716                     	;# 
  1404  0717                     	;# 
  1405  0718                     	;# 
  1406  0719                     	;# 
  1407  071A                     	;# 
  1408  071B                     	;# 
  1409  071C                     	;# 
  1410  071D                     	;# 
  1411  0796                     	;# 
  1412  0797                     	;# 
  1413  0798                     	;# 
  1414  0799                     	;# 
  1415  079A                     	;# 
  1416  079B                     	;# 
  1417  080C                     	;# 
  1418  080D                     	;# 
  1419  080E                     	;# 
  1420  080F                     	;# 
  1421  0810                     	;# 
  1422  0811                     	;# 
  1423  0812                     	;# 
  1424  0813                     	;# 
  1425  0814                     	;# 
  1426  081A                     	;# 
  1427  081A                     	;# 
  1428  081B                     	;# 
  1429  081C                     	;# 
  1430  081C                     	;# 
  1431  081D                     	;# 
  1432  081E                     	;# 
  1433  081F                     	;# 
  1434  088C                     	;# 
  1435  088D                     	;# 
  1436  088E                     	;# 
  1437  088F                     	;# 
  1438  0890                     	;# 
  1439  0891                     	;# 
  1440  0892                     	;# 
  1441  0893                     	;# 
  1442  0895                     	;# 
  1443  0896                     	;# 
  1444  090C                     	;# 
  1445  090E                     	;# 
  1446  090F                     	;# 
  1447  091F                     	;# 
  1448  098F                     	;# 
  1449  098F                     	;# 
  1450  0990                     	;# 
  1451  0991                     	;# 
  1452  0992                     	;# 
  1453  0993                     	;# 
  1454  0994                     	;# 
  1455  0995                     	;# 
  1456  0996                     	;# 
  1457  0997                     	;# 
  1458  1E0F                     	;# 
  1459  1E10                     	;# 
  1460  1E11                     	;# 
  1461  1E12                     	;# 
  1462  1E13                     	;# 
  1463  1E14                     	;# 
  1464  1E15                     	;# 
  1465  1E16                     	;# 
  1466  1E17                     	;# 
  1467  1E18                     	;# 
  1468  1E19                     	;# 
  1469  1E1A                     	;# 
  1470  1E1B                     	;# 
  1471  1E1C                     	;# 
  1472  1E1D                     	;# 
  1473  1E1E                     	;# 
  1474  1E1F                     	;# 
  1475  1E20                     	;# 
  1476  1E21                     	;# 
  1477  1E22                     	;# 
  1478  1E23                     	;# 
  1479  1E24                     	;# 
  1480  1E25                     	;# 
  1481  1E26                     	;# 
  1482  1E27                     	;# 
  1483  1E28                     	;# 
  1484  1E29                     	;# 
  1485  1E2A                     	;# 
  1486  1E2B                     	;# 
  1487  1E2C                     	;# 
  1488  1E2D                     	;# 
  1489  1E2E                     	;# 
  1490  1E2F                     	;# 
  1491  1E30                     	;# 
  1492  1E31                     	;# 
  1493  1E32                     	;# 
  1494  1E33                     	;# 
  1495  1E34                     	;# 
  1496  1E35                     	;# 
  1497  1E36                     	;# 
  1498  1E37                     	;# 
  1499  1E8F                     	;# 
  1500  1E90                     	;# 
  1501  1E91                     	;# 
  1502  1E92                     	;# 
  1503  1E93                     	;# 
  1504  1E9C                     	;# 
  1505  1EA1                     	;# 
  1506  1EA2                     	;# 
  1507  1EB1                     	;# 
  1508  1EBB                     	;# 
  1509  1EBC                     	;# 
  1510  1EBD                     	;# 
  1511  1EBE                     	;# 
  1512  1EC3                     	;# 
  1513  1EC5                     	;# 
  1514  1EC6                     	;# 
  1515  1EC7                     	;# 
  1516  1ECB                     	;# 
  1517  1ECC                     	;# 
  1518  1F10                     	;# 
  1519  1F11                     	;# 
  1520  1F12                     	;# 
  1521  1F13                     	;# 
  1522  1F14                     	;# 
  1523  1F15                     	;# 
  1524  1F20                     	;# 
  1525  1F21                     	;# 
  1526  1F22                     	;# 
  1527  1F23                     	;# 
  1528  1F24                     	;# 
  1529  1F25                     	;# 
  1530  1F38                     	;# 
  1531  1F39                     	;# 
  1532  1F3A                     	;# 
  1533  1F3B                     	;# 
  1534  1F3C                     	;# 
  1535  1F3D                     	;# 
  1536  1F3E                     	;# 
  1537  1F3F                     	;# 
  1538  1F4E                     	;# 
  1539  1F4F                     	;# 
  1540  1F50                     	;# 
  1541  1F51                     	;# 
  1542  1F52                     	;# 
  1543  1F53                     	;# 
  1544  1F54                     	;# 
  1545  1F55                     	;# 
  1546  1FE4                     	;# 
  1547  1FE5                     	;# 
  1548  1FE6                     	;# 
  1549  1FE7                     	;# 
  1550  1FE8                     	;# 
  1551  1FE8                     	;# 
  1552  1FE9                     	;# 
  1553  1FEA                     	;# 
  1554  1FEA                     	;# 
  1555  1FEB                     	;# 
  1556  1FED                     	;# 
  1557  1FEE                     	;# 
  1558  1FEF                     	;# 
  1559  0000                     	;# 
  1560  0001                     	;# 
  1561  0002                     	;# 
  1562  0003                     	;# 
  1563  0004                     	;# 
  1564  0005                     	;# 
  1565  0006                     	;# 
  1566  0007                     	;# 
  1567  0008                     	;# 
  1568  0009                     	;# 
  1569  000A                     	;# 
  1570  000B                     	;# 
  1571  000C                     	;# 
  1572  000E                     	;# 
  1573  0012                     	;# 
  1574  0014                     	;# 
  1575  0018                     	;# 
  1576  001A                     	;# 
  1577  009B                     	;# 
  1578  009B                     	;# 
  1579  009C                     	;# 
  1580  009D                     	;# 
  1581  009E                     	;# 
  1582  009F                     	;# 
  1583  0119                     	;# 
  1584  0119                     	;# 
  1585  0119                     	;# 
  1586  011A                     	;# 
  1587  011A                     	;# 
  1588  011A                     	;# 
  1589  011B                     	;# 
  1590  011B                     	;# 
  1591  011B                     	;# 
  1592  011B                     	;# 
  1593  011B                     	;# 
  1594  011C                     	;# 
  1595  011C                     	;# 
  1596  011C                     	;# 
  1597  011D                     	;# 
  1598  011D                     	;# 
  1599  011D                     	;# 
  1600  011E                     	;# 
  1601  011E                     	;# 
  1602  011E                     	;# 
  1603  011F                     	;# 
  1604  011F                     	;# 
  1605  011F                     	;# 
  1606  011F                     	;# 
  1607  011F                     	;# 
  1608  018C                     	;# 
  1609  018D                     	;# 
  1610  018E                     	;# 
  1611  018F                     	;# 
  1612  0190                     	;# 
  1613  0191                     	;# 
  1614  0192                     	;# 
  1615  020C                     	;# 
  1616  020C                     	;# 
  1617  020D                     	;# 
  1618  020E                     	;# 
  1619  020F                     	;# 
  1620  020F                     	;# 
  1621  0210                     	;# 
  1622  0210                     	;# 
  1623  0211                     	;# 
  1624  0211                     	;# 
  1625  028C                     	;# 
  1626  028C                     	;# 
  1627  028D                     	;# 
  1628  028D                     	;# 
  1629  028E                     	;# 
  1630  028F                     	;# 
  1631  0290                     	;# 
  1632  0291                     	;# 
  1633  030C                     	;# 
  1634  030C                     	;# 
  1635  030D                     	;# 
  1636  030E                     	;# 
  1637  030F                     	;# 
  1638  0310                     	;# 
  1639  0310                     	;# 
  1640  0311                     	;# 
  1641  0312                     	;# 
  1642  0313                     	;# 
  1643  0314                     	;# 
  1644  0314                     	;# 
  1645  0315                     	;# 
  1646  0316                     	;# 
  1647  0318                     	;# 
  1648  0318                     	;# 
  1649  0319                     	;# 
  1650  031A                     	;# 
  1651  031C                     	;# 
  1652  031C                     	;# 
  1653  031D                     	;# 
  1654  031E                     	;# 
  1655  038C                     	;# 
  1656  038C                     	;# 
  1657  038D                     	;# 
  1658  038E                     	;# 
  1659  058C                     	;# 
  1660  058C                     	;# 
  1661  058D                     	;# 
  1662  058E                     	;# 
  1663  058F                     	;# 
  1664  058F                     	;# 
  1665  0590                     	;# 
  1666  0591                     	;# 
  1667  0592                     	;# 
  1668  0593                     	;# 
  1669  059C                     	;# 
  1670  059C                     	;# 
  1671  059D                     	;# 
  1672  059D                     	;# 
  1673  059E                     	;# 
  1674  059F                     	;# 
  1675  060C                     	;# 
  1676  060D                     	;# 
  1677  060E                     	;# 
  1678  060F                     	;# 
  1679  0610                     	;# 
  1680  0611                     	;# 
  1681  0612                     	;# 
  1682  0613                     	;# 
  1683  0614                     	;# 
  1684  070C                     	;# 
  1685  070D                     	;# 
  1686  070E                     	;# 
  1687  070F                     	;# 
  1688  0710                     	;# 
  1689  0711                     	;# 
  1690  0712                     	;# 
  1691  0713                     	;# 
  1692  0716                     	;# 
  1693  0717                     	;# 
  1694  0718                     	;# 
  1695  0719                     	;# 
  1696  071A                     	;# 
  1697  071B                     	;# 
  1698  071C                     	;# 
  1699  071D                     	;# 
  1700  0796                     	;# 
  1701  0797                     	;# 
  1702  0798                     	;# 
  1703  0799                     	;# 
  1704  079A                     	;# 
  1705  079B                     	;# 
  1706  080C                     	;# 
  1707  080D                     	;# 
  1708  080E                     	;# 
  1709  080F                     	;# 
  1710  0810                     	;# 
  1711  0811                     	;# 
  1712  0812                     	;# 
  1713  0813                     	;# 
  1714  0814                     	;# 
  1715  081A                     	;# 
  1716  081A                     	;# 
  1717  081B                     	;# 
  1718  081C                     	;# 
  1719  081C                     	;# 
  1720  081D                     	;# 
  1721  081E                     	;# 
  1722  081F                     	;# 
  1723  088C                     	;# 
  1724  088D                     	;# 
  1725  088E                     	;# 
  1726  088F                     	;# 
  1727  0890                     	;# 
  1728  0891                     	;# 
  1729  0892                     	;# 
  1730  0893                     	;# 
  1731  0895                     	;# 
  1732  0896                     	;# 
  1733  090C                     	;# 
  1734  090E                     	;# 
  1735  090F                     	;# 
  1736  091F                     	;# 
  1737  098F                     	;# 
  1738  098F                     	;# 
  1739  0990                     	;# 
  1740  0991                     	;# 
  1741  0992                     	;# 
  1742  0993                     	;# 
  1743  0994                     	;# 
  1744  0995                     	;# 
  1745  0996                     	;# 
  1746  0997                     	;# 
  1747  1E0F                     	;# 
  1748  1E10                     	;# 
  1749  1E11                     	;# 
  1750  1E12                     	;# 
  1751  1E13                     	;# 
  1752  1E14                     	;# 
  1753  1E15                     	;# 
  1754  1E16                     	;# 
  1755  1E17                     	;# 
  1756  1E18                     	;# 
  1757  1E19                     	;# 
  1758  1E1A                     	;# 
  1759  1E1B                     	;# 
  1760  1E1C                     	;# 
  1761  1E1D                     	;# 
  1762  1E1E                     	;# 
  1763  1E1F                     	;# 
  1764  1E20                     	;# 
  1765  1E21                     	;# 
  1766  1E22                     	;# 
  1767  1E23                     	;# 
  1768  1E24                     	;# 
  1769  1E25                     	;# 
  1770  1E26                     	;# 
  1771  1E27                     	;# 
  1772  1E28                     	;# 
  1773  1E29                     	;# 
  1774  1E2A                     	;# 
  1775  1E2B                     	;# 
  1776  1E2C                     	;# 
  1777  1E2D                     	;# 
  1778  1E2E                     	;# 
  1779  1E2F                     	;# 
  1780  1E30                     	;# 
  1781  1E31                     	;# 
  1782  1E32                     	;# 
  1783  1E33                     	;# 
  1784  1E34                     	;# 
  1785  1E35                     	;# 
  1786  1E36                     	;# 
  1787  1E37                     	;# 
  1788  1E8F                     	;# 
  1789  1E90                     	;# 
  1790  1E91                     	;# 
  1791  1E92                     	;# 
  1792  1E93                     	;# 
  1793  1E9C                     	;# 
  1794  1EA1                     	;# 
  1795  1EA2                     	;# 
  1796  1EB1                     	;# 
  1797  1EBB                     	;# 
  1798  1EBC                     	;# 
  1799  1EBD                     	;# 
  1800  1EBE                     	;# 
  1801  1EC3                     	;# 
  1802  1EC5                     	;# 
  1803  1EC6                     	;# 
  1804  1EC7                     	;# 
  1805  1ECB                     	;# 
  1806  1ECC                     	;# 
  1807  1F10                     	;# 
  1808  1F11                     	;# 
  1809  1F12                     	;# 
  1810  1F13                     	;# 
  1811  1F14                     	;# 
  1812  1F15                     	;# 
  1813  1F20                     	;# 
  1814  1F21                     	;# 
  1815  1F22                     	;# 
  1816  1F23                     	;# 
  1817  1F24                     	;# 
  1818  1F25                     	;# 
  1819  1F38                     	;# 
  1820  1F39                     	;# 
  1821  1F3A                     	;# 
  1822  1F3B                     	;# 
  1823  1F3C                     	;# 
  1824  1F3D                     	;# 
  1825  1F3E                     	;# 
  1826  1F3F                     	;# 
  1827  1F4E                     	;# 
  1828  1F4F                     	;# 
  1829  1F50                     	;# 
  1830  1F51                     	;# 
  1831  1F52                     	;# 
  1832  1F53                     	;# 
  1833  1F54                     	;# 
  1834  1F55                     	;# 
  1835  1FE4                     	;# 
  1836  1FE5                     	;# 
  1837  1FE6                     	;# 
  1838  1FE7                     	;# 
  1839  1FE8                     	;# 
  1840  1FE8                     	;# 
  1841  1FE9                     	;# 
  1842  1FEA                     	;# 
  1843  1FEA                     	;# 
  1844  1FEB                     	;# 
  1845  1FED                     	;# 
  1846  1FEE                     	;# 
  1847  1FEF                     	;# 
  1848  0000                     	;# 
  1849  0001                     	;# 
  1850  0002                     	;# 
  1851  0003                     	;# 
  1852  0004                     	;# 
  1853  0005                     	;# 
  1854  0006                     	;# 
  1855  0007                     	;# 
  1856  0008                     	;# 
  1857  0009                     	;# 
  1858  000A                     	;# 
  1859  000B                     	;# 
  1860  000C                     	;# 
  1861  000E                     	;# 
  1862  0012                     	;# 
  1863  0014                     	;# 
  1864  0018                     	;# 
  1865  001A                     	;# 
  1866  009B                     	;# 
  1867  009B                     	;# 
  1868  009C                     	;# 
  1869  009D                     	;# 
  1870  009E                     	;# 
  1871  009F                     	;# 
  1872  0119                     	;# 
  1873  0119                     	;# 
  1874  0119                     	;# 
  1875  011A                     	;# 
  1876  011A                     	;# 
  1877  011A                     	;# 
  1878  011B                     	;# 
  1879  011B                     	;# 
  1880  011B                     	;# 
  1881  011B                     	;# 
  1882  011B                     	;# 
  1883  011C                     	;# 
  1884  011C                     	;# 
  1885  011C                     	;# 
  1886  011D                     	;# 
  1887  011D                     	;# 
  1888  011D                     	;# 
  1889  011E                     	;# 
  1890  011E                     	;# 
  1891  011E                     	;# 
  1892  011F                     	;# 
  1893  011F                     	;# 
  1894  011F                     	;# 
  1895  011F                     	;# 
  1896  011F                     	;# 
  1897  018C                     	;# 
  1898  018D                     	;# 
  1899  018E                     	;# 
  1900  018F                     	;# 
  1901  0190                     	;# 
  1902  0191                     	;# 
  1903  0192                     	;# 
  1904  020C                     	;# 
  1905  020C                     	;# 
  1906  020D                     	;# 
  1907  020E                     	;# 
  1908  020F                     	;# 
  1909  020F                     	;# 
  1910  0210                     	;# 
  1911  0210                     	;# 
  1912  0211                     	;# 
  1913  0211                     	;# 
  1914  028C                     	;# 
  1915  028C                     	;# 
  1916  028D                     	;# 
  1917  028D                     	;# 
  1918  028E                     	;# 
  1919  028F                     	;# 
  1920  0290                     	;# 
  1921  0291                     	;# 
  1922  030C                     	;# 
  1923  030C                     	;# 
  1924  030D                     	;# 
  1925  030E                     	;# 
  1926  030F                     	;# 
  1927  0310                     	;# 
  1928  0310                     	;# 
  1929  0311                     	;# 
  1930  0312                     	;# 
  1931  0313                     	;# 
  1932  0314                     	;# 
  1933  0314                     	;# 
  1934  0315                     	;# 
  1935  0316                     	;# 
  1936  0318                     	;# 
  1937  0318                     	;# 
  1938  0319                     	;# 
  1939  031A                     	;# 
  1940  031C                     	;# 
  1941  031C                     	;# 
  1942  031D                     	;# 
  1943  031E                     	;# 
  1944  038C                     	;# 
  1945  038C                     	;# 
  1946  038D                     	;# 
  1947  038E                     	;# 
  1948  058C                     	;# 
  1949  058C                     	;# 
  1950  058D                     	;# 
  1951  058E                     	;# 
  1952  058F                     	;# 
  1953  058F                     	;# 
  1954  0590                     	;# 
  1955  0591                     	;# 
  1956  0592                     	;# 
  1957  0593                     	;# 
  1958  059C                     	;# 
  1959  059C                     	;# 
  1960  059D                     	;# 
  1961  059D                     	;# 
  1962  059E                     	;# 
  1963  059F                     	;# 
  1964  060C                     	;# 
  1965  060D                     	;# 
  1966  060E                     	;# 
  1967  060F                     	;# 
  1968  0610                     	;# 
  1969  0611                     	;# 
  1970  0612                     	;# 
  1971  0613                     	;# 
  1972  0614                     	;# 
  1973  070C                     	;# 
  1974  070D                     	;# 
  1975  070E                     	;# 
  1976  070F                     	;# 
  1977  0710                     	;# 
  1978  0711                     	;# 
  1979  0712                     	;# 
  1980  0713                     	;# 
  1981  0716                     	;# 
  1982  0717                     	;# 
  1983  0718                     	;# 
  1984  0719                     	;# 
  1985  071A                     	;# 
  1986  071B                     	;# 
  1987  071C                     	;# 
  1988  071D                     	;# 
  1989  0796                     	;# 
  1990  0797                     	;# 
  1991  0798                     	;# 
  1992  0799                     	;# 
  1993  079A                     	;# 
  1994  079B                     	;# 
  1995  080C                     	;# 
  1996  080D                     	;# 
  1997  080E                     	;# 
  1998  080F                     	;# 
  1999  0810                     	;# 
  2000  0811                     	;# 
  2001  0812                     	;# 
  2002  0813                     	;# 
  2003  0814                     	;# 
  2004  081A                     	;# 
  2005  081A                     	;# 
  2006  081B                     	;# 
  2007  081C                     	;# 
  2008  081C                     	;# 
  2009  081D                     	;# 
  2010  081E                     	;# 
  2011  081F                     	;# 
  2012  088C                     	;# 
  2013  088D                     	;# 
  2014  088E                     	;# 
  2015  088F                     	;# 
  2016  0890                     	;# 
  2017  0891                     	;# 
  2018  0892                     	;# 
  2019  0893                     	;# 
  2020  0895                     	;# 
  2021  0896                     	;# 
  2022  090C                     	;# 
  2023  090E                     	;# 
  2024  090F                     	;# 
  2025  091F                     	;# 
  2026  098F                     	;# 
  2027  098F                     	;# 
  2028  0990                     	;# 
  2029  0991                     	;# 
  2030  0992                     	;# 
  2031  0993                     	;# 
  2032  0994                     	;# 
  2033  0995                     	;# 
  2034  0996                     	;# 
  2035  0997                     	;# 
  2036  1E0F                     	;# 
  2037  1E10                     	;# 
  2038  1E11                     	;# 
  2039  1E12                     	;# 
  2040  1E13                     	;# 
  2041  1E14                     	;# 
  2042  1E15                     	;# 
  2043  1E16                     	;# 
  2044  1E17                     	;# 
  2045  1E18                     	;# 
  2046  1E19                     	;# 
  2047  1E1A                     	;# 
  2048  1E1B                     	;# 
  2049  1E1C                     	;# 
  2050  1E1D                     	;# 
  2051  1E1E                     	;# 
  2052  1E1F                     	;# 
  2053  1E20                     	;# 
  2054  1E21                     	;# 
  2055  1E22                     	;# 
  2056  1E23                     	;# 
  2057  1E24                     	;# 
  2058  1E25                     	;# 
  2059  1E26                     	;# 
  2060  1E27                     	;# 
  2061  1E28                     	;# 
  2062  1E29                     	;# 
  2063  1E2A                     	;# 
  2064  1E2B                     	;# 
  2065  1E2C                     	;# 
  2066  1E2D                     	;# 
  2067  1E2E                     	;# 
  2068  1E2F                     	;# 
  2069  1E30                     	;# 
  2070  1E31                     	;# 
  2071  1E32                     	;# 
  2072  1E33                     	;# 
  2073  1E34                     	;# 
  2074  1E35                     	;# 
  2075  1E36                     	;# 
  2076  1E37                     	;# 
  2077  1E8F                     	;# 
  2078  1E90                     	;# 
  2079  1E91                     	;# 
  2080  1E92                     	;# 
  2081  1E93                     	;# 
  2082  1E9C                     	;# 
  2083  1EA1                     	;# 
  2084  1EA2                     	;# 
  2085  1EB1                     	;# 
  2086  1EBB                     	;# 
  2087  1EBC                     	;# 
  2088  1EBD                     	;# 
  2089  1EBE                     	;# 
  2090  1EC3                     	;# 
  2091  1EC5                     	;# 
  2092  1EC6                     	;# 
  2093  1EC7                     	;# 
  2094  1ECB                     	;# 
  2095  1ECC                     	;# 
  2096  1F10                     	;# 
  2097  1F11                     	;# 
  2098  1F12                     	;# 
  2099  1F13                     	;# 
  2100  1F14                     	;# 
  2101  1F15                     	;# 
  2102  1F20                     	;# 
  2103  1F21                     	;# 
  2104  1F22                     	;# 
  2105  1F23                     	;# 
  2106  1F24                     	;# 
  2107  1F25                     	;# 
  2108  1F38                     	;# 
  2109  1F39                     	;# 
  2110  1F3A                     	;# 
  2111  1F3B                     	;# 
  2112  1F3C                     	;# 
  2113  1F3D                     	;# 
  2114  1F3E                     	;# 
  2115  1F3F                     	;# 
  2116  1F4E                     	;# 
  2117  1F4F                     	;# 
  2118  1F50                     	;# 
  2119  1F51                     	;# 
  2120  1F52                     	;# 
  2121  1F53                     	;# 
  2122  1F54                     	;# 
  2123  1F55                     	;# 
  2124  1FE4                     	;# 
  2125  1FE5                     	;# 
  2126  1FE6                     	;# 
  2127  1FE7                     	;# 
  2128  1FE8                     	;# 
  2129  1FE8                     	;# 
  2130  1FE9                     	;# 
  2131  1FEA                     	;# 
  2132  1FEA                     	;# 
  2133  1FEB                     	;# 
  2134  1FED                     	;# 
  2135  1FEE                     	;# 
  2136  1FEF                     	;# 
  2137  0000                     	;# 
  2138  0001                     	;# 
  2139  0002                     	;# 
  2140  0003                     	;# 
  2141  0004                     	;# 
  2142  0005                     	;# 
  2143  0006                     	;# 
  2144  0007                     	;# 
  2145  0008                     	;# 
  2146  0009                     	;# 
  2147  000A                     	;# 
  2148  000B                     	;# 
  2149  000C                     	;# 
  2150  000E                     	;# 
  2151  0012                     	;# 
  2152  0014                     	;# 
  2153  0018                     	;# 
  2154  001A                     	;# 
  2155  009B                     	;# 
  2156  009B                     	;# 
  2157  009C                     	;# 
  2158  009D                     	;# 
  2159  009E                     	;# 
  2160  009F                     	;# 
  2161  0119                     	;# 
  2162  0119                     	;# 
  2163  0119                     	;# 
  2164  011A                     	;# 
  2165  011A                     	;# 
  2166  011A                     	;# 
  2167  011B                     	;# 
  2168  011B                     	;# 
  2169  011B                     	;# 
  2170  011B                     	;# 
  2171  011B                     	;# 
  2172  011C                     	;# 
  2173  011C                     	;# 
  2174  011C                     	;# 
  2175  011D                     	;# 
  2176  011D                     	;# 
  2177  011D                     	;# 
  2178  011E                     	;# 
  2179  011E                     	;# 
  2180  011E                     	;# 
  2181  011F                     	;# 
  2182  011F                     	;# 
  2183  011F                     	;# 
  2184  011F                     	;# 
  2185  011F                     	;# 
  2186  018C                     	;# 
  2187  018D                     	;# 
  2188  018E                     	;# 
  2189  018F                     	;# 
  2190  0190                     	;# 
  2191  0191                     	;# 
  2192  0192                     	;# 
  2193  020C                     	;# 
  2194  020C                     	;# 
  2195  020D                     	;# 
  2196  020E                     	;# 
  2197  020F                     	;# 
  2198  020F                     	;# 
  2199  0210                     	;# 
  2200  0210                     	;# 
  2201  0211                     	;# 
  2202  0211                     	;# 
  2203  028C                     	;# 
  2204  028C                     	;# 
  2205  028D                     	;# 
  2206  028D                     	;# 
  2207  028E                     	;# 
  2208  028F                     	;# 
  2209  0290                     	;# 
  2210  0291                     	;# 
  2211  030C                     	;# 
  2212  030C                     	;# 
  2213  030D                     	;# 
  2214  030E                     	;# 
  2215  030F                     	;# 
  2216  0310                     	;# 
  2217  0310                     	;# 
  2218  0311                     	;# 
  2219  0312                     	;# 
  2220  0313                     	;# 
  2221  0314                     	;# 
  2222  0314                     	;# 
  2223  0315                     	;# 
  2224  0316                     	;# 
  2225  0318                     	;# 
  2226  0318                     	;# 
  2227  0319                     	;# 
  2228  031A                     	;# 
  2229  031C                     	;# 
  2230  031C                     	;# 
  2231  031D                     	;# 
  2232  031E                     	;# 
  2233  038C                     	;# 
  2234  038C                     	;# 
  2235  038D                     	;# 
  2236  038E                     	;# 
  2237  058C                     	;# 
  2238  058C                     	;# 
  2239  058D                     	;# 
  2240  058E                     	;# 
  2241  058F                     	;# 
  2242  058F                     	;# 
  2243  0590                     	;# 
  2244  0591                     	;# 
  2245  0592                     	;# 
  2246  0593                     	;# 
  2247  059C                     	;# 
  2248  059C                     	;# 
  2249  059D                     	;# 
  2250  059D                     	;# 
  2251  059E                     	;# 
  2252  059F                     	;# 
  2253  060C                     	;# 
  2254  060D                     	;# 
  2255  060E                     	;# 
  2256  060F                     	;# 
  2257  0610                     	;# 
  2258  0611                     	;# 
  2259  0612                     	;# 
  2260  0613                     	;# 
  2261  0614                     	;# 
  2262  070C                     	;# 
  2263  070D                     	;# 
  2264  070E                     	;# 
  2265  070F                     	;# 
  2266  0710                     	;# 
  2267  0711                     	;# 
  2268  0712                     	;# 
  2269  0713                     	;# 
  2270  0716                     	;# 
  2271  0717                     	;# 
  2272  0718                     	;# 
  2273  0719                     	;# 
  2274  071A                     	;# 
  2275  071B                     	;# 
  2276  071C                     	;# 
  2277  071D                     	;# 
  2278  0796                     	;# 
  2279  0797                     	;# 
  2280  0798                     	;# 
  2281  0799                     	;# 
  2282  079A                     	;# 
  2283  079B                     	;# 
  2284  080C                     	;# 
  2285  080D                     	;# 
  2286  080E                     	;# 
  2287  080F                     	;# 
  2288  0810                     	;# 
  2289  0811                     	;# 
  2290  0812                     	;# 
  2291  0813                     	;# 
  2292  0814                     	;# 
  2293  081A                     	;# 
  2294  081A                     	;# 
  2295  081B                     	;# 
  2296  081C                     	;# 
  2297  081C                     	;# 
  2298  081D                     	;# 
  2299  081E                     	;# 
  2300  081F                     	;# 
  2301  088C                     	;# 
  2302  088D                     	;# 
  2303  088E                     	;# 
  2304  088F                     	;# 
  2305  0890                     	;# 
  2306  0891                     	;# 
  2307  0892                     	;# 
  2308  0893                     	;# 
  2309  0895                     	;# 
  2310  0896                     	;# 
  2311  090C                     	;# 
  2312  090E                     	;# 
  2313  090F                     	;# 
  2314  091F                     	;# 
  2315  098F                     	;# 
  2316  098F                     	;# 
  2317  0990                     	;# 
  2318  0991                     	;# 
  2319  0992                     	;# 
  2320  0993                     	;# 
  2321  0994                     	;# 
  2322  0995                     	;# 
  2323  0996                     	;# 
  2324  0997                     	;# 
  2325  1E0F                     	;# 
  2326  1E10                     	;# 
  2327  1E11                     	;# 
  2328  1E12                     	;# 
  2329  1E13                     	;# 
  2330  1E14                     	;# 
  2331  1E15                     	;# 
  2332  1E16                     	;# 
  2333  1E17                     	;# 
  2334  1E18                     	;# 
  2335  1E19                     	;# 
  2336  1E1A                     	;# 
  2337  1E1B                     	;# 
  2338  1E1C                     	;# 
  2339  1E1D                     	;# 
  2340  1E1E                     	;# 
  2341  1E1F                     	;# 
  2342  1E20                     	;# 
  2343  1E21                     	;# 
  2344  1E22                     	;# 
  2345  1E23                     	;# 
  2346  1E24                     	;# 
  2347  1E25                     	;# 
  2348  1E26                     	;# 
  2349  1E27                     	;# 
  2350  1E28                     	;# 
  2351  1E29                     	;# 
  2352  1E2A                     	;# 
  2353  1E2B                     	;# 
  2354  1E2C                     	;# 
  2355  1E2D                     	;# 
  2356  1E2E                     	;# 
  2357  1E2F                     	;# 
  2358  1E30                     	;# 
  2359  1E31                     	;# 
  2360  1E32                     	;# 
  2361  1E33                     	;# 
  2362  1E34                     	;# 
  2363  1E35                     	;# 
  2364  1E36                     	;# 
  2365  1E37                     	;# 
  2366  1E8F                     	;# 
  2367  1E90                     	;# 
  2368  1E91                     	;# 
  2369  1E92                     	;# 
  2370  1E93                     	;# 
  2371  1E9C                     	;# 
  2372  1EA1                     	;# 
  2373  1EA2                     	;# 
  2374  1EB1                     	;# 
  2375  1EBB                     	;# 
  2376  1EBC                     	;# 
  2377  1EBD                     	;# 
  2378  1EBE                     	;# 
  2379  1EC3                     	;# 
  2380  1EC5                     	;# 
  2381  1EC6                     	;# 
  2382  1EC7                     	;# 
  2383  1ECB                     	;# 
  2384  1ECC                     	;# 
  2385  1F10                     	;# 
  2386  1F11                     	;# 
  2387  1F12                     	;# 
  2388  1F13                     	;# 
  2389  1F14                     	;# 
  2390  1F15                     	;# 
  2391  1F20                     	;# 
  2392  1F21                     	;# 
  2393  1F22                     	;# 
  2394  1F23                     	;# 
  2395  1F24                     	;# 
  2396  1F25                     	;# 
  2397  1F38                     	;# 
  2398  1F39                     	;# 
  2399  1F3A                     	;# 
  2400  1F3B                     	;# 
  2401  1F3C                     	;# 
  2402  1F3D                     	;# 
  2403  1F3E                     	;# 
  2404  1F3F                     	;# 
  2405  1F4E                     	;# 
  2406  1F4F                     	;# 
  2407  1F50                     	;# 
  2408  1F51                     	;# 
  2409  1F52                     	;# 
  2410  1F53                     	;# 
  2411  1F54                     	;# 
  2412  1F55                     	;# 
  2413  1FE4                     	;# 
  2414  1FE5                     	;# 
  2415  1FE6                     	;# 
  2416  1FE7                     	;# 
  2417  1FE8                     	;# 
  2418  1FE8                     	;# 
  2419  1FE9                     	;# 
  2420  1FEA                     	;# 
  2421  1FEA                     	;# 
  2422  1FEB                     	;# 
  2423  1FED                     	;# 
  2424  1FEE                     	;# 
  2425  1FEF                     	;# 
  2426  0000                     	;# 
  2427  0001                     	;# 
  2428  0002                     	;# 
  2429  0003                     	;# 
  2430  0004                     	;# 
  2431  0005                     	;# 
  2432  0006                     	;# 
  2433  0007                     	;# 
  2434  0008                     	;# 
  2435  0009                     	;# 
  2436  000A                     	;# 
  2437  000B                     	;# 
  2438  000C                     	;# 
  2439  000E                     	;# 
  2440  0012                     	;# 
  2441  0014                     	;# 
  2442  0018                     	;# 
  2443  001A                     	;# 
  2444  009B                     	;# 
  2445  009B                     	;# 
  2446  009C                     	;# 
  2447  009D                     	;# 
  2448  009E                     	;# 
  2449  009F                     	;# 
  2450  0119                     	;# 
  2451  0119                     	;# 
  2452  0119                     	;# 
  2453  011A                     	;# 
  2454  011A                     	;# 
  2455  011A                     	;# 
  2456  011B                     	;# 
  2457  011B                     	;# 
  2458  011B                     	;# 
  2459  011B                     	;# 
  2460  011B                     	;# 
  2461  011C                     	;# 
  2462  011C                     	;# 
  2463  011C                     	;# 
  2464  011D                     	;# 
  2465  011D                     	;# 
  2466  011D                     	;# 
  2467  011E                     	;# 
  2468  011E                     	;# 
  2469  011E                     	;# 
  2470  011F                     	;# 
  2471  011F                     	;# 
  2472  011F                     	;# 
  2473  011F                     	;# 
  2474  011F                     	;# 
  2475  018C                     	;# 
  2476  018D                     	;# 
  2477  018E                     	;# 
  2478  018F                     	;# 
  2479  0190                     	;# 
  2480  0191                     	;# 
  2481  0192                     	;# 
  2482  020C                     	;# 
  2483  020C                     	;# 
  2484  020D                     	;# 
  2485  020E                     	;# 
  2486  020F                     	;# 
  2487  020F                     	;# 
  2488  0210                     	;# 
  2489  0210                     	;# 
  2490  0211                     	;# 
  2491  0211                     	;# 
  2492  028C                     	;# 
  2493  028C                     	;# 
  2494  028D                     	;# 
  2495  028D                     	;# 
  2496  028E                     	;# 
  2497  028F                     	;# 
  2498  0290                     	;# 
  2499  0291                     	;# 
  2500  030C                     	;# 
  2501  030C                     	;# 
  2502  030D                     	;# 
  2503  030E                     	;# 
  2504  030F                     	;# 
  2505  0310                     	;# 
  2506  0310                     	;# 
  2507  0311                     	;# 
  2508  0312                     	;# 
  2509  0313                     	;# 
  2510  0314                     	;# 
  2511  0314                     	;# 
  2512  0315                     	;# 
  2513  0316                     	;# 
  2514  0318                     	;# 
  2515  0318                     	;# 
  2516  0319                     	;# 
  2517  031A                     	;# 
  2518  031C                     	;# 
  2519  031C                     	;# 
  2520  031D                     	;# 
  2521  031E                     	;# 
  2522  038C                     	;# 
  2523  038C                     	;# 
  2524  038D                     	;# 
  2525  038E                     	;# 
  2526  058C                     	;# 
  2527  058C                     	;# 
  2528  058D                     	;# 
  2529  058E                     	;# 
  2530  058F                     	;# 
  2531  058F                     	;# 
  2532  0590                     	;# 
  2533  0591                     	;# 
  2534  0592                     	;# 
  2535  0593                     	;# 
  2536  059C                     	;# 
  2537  059C                     	;# 
  2538  059D                     	;# 
  2539  059D                     	;# 
  2540  059E                     	;# 
  2541  059F                     	;# 
  2542  060C                     	;# 
  2543  060D                     	;# 
  2544  060E                     	;# 
  2545  060F                     	;# 
  2546  0610                     	;# 
  2547  0611                     	;# 
  2548  0612                     	;# 
  2549  0613                     	;# 
  2550  0614                     	;# 
  2551  070C                     	;# 
  2552  070D                     	;# 
  2553  070E                     	;# 
  2554  070F                     	;# 
  2555  0710                     	;# 
  2556  0711                     	;# 
  2557  0712                     	;# 
  2558  0713                     	;# 
  2559  0716                     	;# 
  2560  0717                     	;# 
  2561  0718                     	;# 
  2562  0719                     	;# 
  2563  071A                     	;# 
  2564  071B                     	;# 
  2565  071C                     	;# 
  2566  071D                     	;# 
  2567  0796                     	;# 
  2568  0797                     	;# 
  2569  0798                     	;# 
  2570  0799                     	;# 
  2571  079A                     	;# 
  2572  079B                     	;# 
  2573  080C                     	;# 
  2574  080D                     	;# 
  2575  080E                     	;# 
  2576  080F                     	;# 
  2577  0810                     	;# 
  2578  0811                     	;# 
  2579  0812                     	;# 
  2580  0813                     	;# 
  2581  0814                     	;# 
  2582  081A                     	;# 
  2583  081A                     	;# 
  2584  081B                     	;# 
  2585  081C                     	;# 
  2586  081C                     	;# 
  2587  081D                     	;# 
  2588  081E                     	;# 
  2589  081F                     	;# 
  2590  088C                     	;# 
  2591  088D                     	;# 
  2592  088E                     	;# 
  2593  088F                     	;# 
  2594  0890                     	;# 
  2595  0891                     	;# 
  2596  0892                     	;# 
  2597  0893                     	;# 
  2598  0895                     	;# 
  2599  0896                     	;# 
  2600  090C                     	;# 
  2601  090E                     	;# 
  2602  090F                     	;# 
  2603  091F                     	;# 
  2604  098F                     	;# 
  2605  098F                     	;# 
  2606  0990                     	;# 
  2607  0991                     	;# 
  2608  0992                     	;# 
  2609  0993                     	;# 
  2610  0994                     	;# 
  2611  0995                     	;# 
  2612  0996                     	;# 
  2613  0997                     	;# 
  2614  1E0F                     	;# 
  2615  1E10                     	;# 
  2616  1E11                     	;# 
  2617  1E12                     	;# 
  2618  1E13                     	;# 
  2619  1E14                     	;# 
  2620  1E15                     	;# 
  2621  1E16                     	;# 
  2622  1E17                     	;# 
  2623  1E18                     	;# 
  2624  1E19                     	;# 
  2625  1E1A                     	;# 
  2626  1E1B                     	;# 
  2627  1E1C                     	;# 
  2628  1E1D                     	;# 
  2629  1E1E                     	;# 
  2630  1E1F                     	;# 
  2631  1E20                     	;# 
  2632  1E21                     	;# 
  2633  1E22                     	;# 
  2634  1E23                     	;# 
  2635  1E24                     	;# 
  2636  1E25                     	;# 
  2637  1E26                     	;# 
  2638  1E27                     	;# 
  2639  1E28                     	;# 
  2640  1E29                     	;# 
  2641  1E2A                     	;# 
  2642  1E2B                     	;# 
  2643  1E2C                     	;# 
  2644  1E2D                     	;# 
  2645  1E2E                     	;# 
  2646  1E2F                     	;# 
  2647  1E30                     	;# 
  2648  1E31                     	;# 
  2649  1E32                     	;# 
  2650  1E33                     	;# 
  2651  1E34                     	;# 
  2652  1E35                     	;# 
  2653  1E36                     	;# 
  2654  1E37                     	;# 
  2655  1E8F                     	;# 
  2656  1E90                     	;# 
  2657  1E91                     	;# 
  2658  1E92                     	;# 
  2659  1E93                     	;# 
  2660  1E9C                     	;# 
  2661  1EA1                     	;# 
  2662  1EA2                     	;# 
  2663  1EB1                     	;# 
  2664  1EBB                     	;# 
  2665  1EBC                     	;# 
  2666  1EBD                     	;# 
  2667  1EBE                     	;# 
  2668  1EC3                     	;# 
  2669  1EC5                     	;# 
  2670  1EC6                     	;# 
  2671  1EC7                     	;# 
  2672  1ECB                     	;# 
  2673  1ECC                     	;# 
  2674  1F10                     	;# 
  2675  1F11                     	;# 
  2676  1F12                     	;# 
  2677  1F13                     	;# 
  2678  1F14                     	;# 
  2679  1F15                     	;# 
  2680  1F20                     	;# 
  2681  1F21                     	;# 
  2682  1F22                     	;# 
  2683  1F23                     	;# 
  2684  1F24                     	;# 
  2685  1F25                     	;# 
  2686  1F38                     	;# 
  2687  1F39                     	;# 
  2688  1F3A                     	;# 
  2689  1F3B                     	;# 
  2690  1F3C                     	;# 
  2691  1F3D                     	;# 
  2692  1F3E                     	;# 
  2693  1F3F                     	;# 
  2694  1F4E                     	;# 
  2695  1F4F                     	;# 
  2696  1F50                     	;# 
  2697  1F51                     	;# 
  2698  1F52                     	;# 
  2699  1F53                     	;# 
  2700  1F54                     	;# 
  2701  1F55                     	;# 
  2702  1FE4                     	;# 
  2703  1FE5                     	;# 
  2704  1FE6                     	;# 
  2705  1FE7                     	;# 
  2706  1FE8                     	;# 
  2707  1FE8                     	;# 
  2708  1FE9                     	;# 
  2709  1FEA                     	;# 
  2710  1FEA                     	;# 
  2711  1FEB                     	;# 
  2712  1FED                     	;# 
  2713  1FEE                     	;# 
  2714  1FEF                     	;# 
  2715  0000                     	;# 
  2716  0001                     	;# 
  2717  0002                     	;# 
  2718  0003                     	;# 
  2719  0004                     	;# 
  2720  0005                     	;# 
  2721  0006                     	;# 
  2722  0007                     	;# 
  2723  0008                     	;# 
  2724  0009                     	;# 
  2725  000A                     	;# 
  2726  000B                     	;# 
  2727  000C                     	;# 
  2728  000E                     	;# 
  2729  0012                     	;# 
  2730  0014                     	;# 
  2731  0018                     	;# 
  2732  001A                     	;# 
  2733  009B                     	;# 
  2734  009B                     	;# 
  2735  009C                     	;# 
  2736  009D                     	;# 
  2737  009E                     	;# 
  2738  009F                     	;# 
  2739  0119                     	;# 
  2740  0119                     	;# 
  2741  0119                     	;# 
  2742  011A                     	;# 
  2743  011A                     	;# 
  2744  011A                     	;# 
  2745  011B                     	;# 
  2746  011B                     	;# 
  2747  011B                     	;# 
  2748  011B                     	;# 
  2749  011B                     	;# 
  2750  011C                     	;# 
  2751  011C                     	;# 
  2752  011C                     	;# 
  2753  011D                     	;# 
  2754  011D                     	;# 
  2755  011D                     	;# 
  2756  011E                     	;# 
  2757  011E                     	;# 
  2758  011E                     	;# 
  2759  011F                     	;# 
  2760  011F                     	;# 
  2761  011F                     	;# 
  2762  011F                     	;# 
  2763  011F                     	;# 
  2764  018C                     	;# 
  2765  018D                     	;# 
  2766  018E                     	;# 
  2767  018F                     	;# 
  2768  0190                     	;# 
  2769  0191                     	;# 
  2770  0192                     	;# 
  2771  020C                     	;# 
  2772  020C                     	;# 
  2773  020D                     	;# 
  2774  020E                     	;# 
  2775  020F                     	;# 
  2776  020F                     	;# 
  2777  0210                     	;# 
  2778  0210                     	;# 
  2779  0211                     	;# 
  2780  0211                     	;# 
  2781  028C                     	;# 
  2782  028C                     	;# 
  2783  028D                     	;# 
  2784  028D                     	;# 
  2785  028E                     	;# 
  2786  028F                     	;# 
  2787  0290                     	;# 
  2788  0291                     	;# 
  2789  030C                     	;# 
  2790  030C                     	;# 
  2791  030D                     	;# 
  2792  030E                     	;# 
  2793  030F                     	;# 
  2794  0310                     	;# 
  2795  0310                     	;# 
  2796  0311                     	;# 
  2797  0312                     	;# 
  2798  0313                     	;# 
  2799  0314                     	;# 
  2800  0314                     	;# 
  2801  0315                     	;# 
  2802  0316                     	;# 
  2803  0318                     	;# 
  2804  0318                     	;# 
  2805  0319                     	;# 
  2806  031A                     	;# 
  2807  031C                     	;# 
  2808  031C                     	;# 
  2809  031D                     	;# 
  2810  031E                     	;# 
  2811  038C                     	;# 
  2812  038C                     	;# 
  2813  038D                     	;# 
  2814  038E                     	;# 
  2815  058C                     	;# 
  2816  058C                     	;# 
  2817  058D                     	;# 
  2818  058E                     	;# 
  2819  058F                     	;# 
  2820  058F                     	;# 
  2821  0590                     	;# 
  2822  0591                     	;# 
  2823  0592                     	;# 
  2824  0593                     	;# 
  2825  059C                     	;# 
  2826  059C                     	;# 
  2827  059D                     	;# 
  2828  059D                     	;# 
  2829  059E                     	;# 
  2830  059F                     	;# 
  2831  060C                     	;# 
  2832  060D                     	;# 
  2833  060E                     	;# 
  2834  060F                     	;# 
  2835  0610                     	;# 
  2836  0611                     	;# 
  2837  0612                     	;# 
  2838  0613                     	;# 
  2839  0614                     	;# 
  2840  070C                     	;# 
  2841  070D                     	;# 
  2842  070E                     	;# 
  2843  070F                     	;# 
  2844  0710                     	;# 
  2845  0711                     	;# 
  2846  0712                     	;# 
  2847  0713                     	;# 
  2848  0716                     	;# 
  2849  0717                     	;# 
  2850  0718                     	;# 
  2851  0719                     	;# 
  2852  071A                     	;# 
  2853  071B                     	;# 
  2854  071C                     	;# 
  2855  071D                     	;# 
  2856  0796                     	;# 
  2857  0797                     	;# 
  2858  0798                     	;# 
  2859  0799                     	;# 
  2860  079A                     	;# 
  2861  079B                     	;# 
  2862  080C                     	;# 
  2863  080D                     	;# 
  2864  080E                     	;# 
  2865  080F                     	;# 
  2866  0810                     	;# 
  2867  0811                     	;# 
  2868  0812                     	;# 
  2869  0813                     	;# 
  2870  0814                     	;# 
  2871  081A                     	;# 
  2872  081A                     	;# 
  2873  081B                     	;# 
  2874  081C                     	;# 
  2875  081C                     	;# 
  2876  081D                     	;# 
  2877  081E                     	;# 
  2878  081F                     	;# 
  2879  088C                     	;# 
  2880  088D                     	;# 
  2881  088E                     	;# 
  2882  088F                     	;# 
  2883  0890                     	;# 
  2884  0891                     	;# 
  2885  0892                     	;# 
  2886  0893                     	;# 
  2887  0895                     	;# 
  2888  0896                     	;# 
  2889  090C                     	;# 
  2890  090E                     	;# 
  2891  090F                     	;# 
  2892  091F                     	;# 
  2893  098F                     	;# 
  2894  098F                     	;# 
  2895  0990                     	;# 
  2896  0991                     	;# 
  2897  0992                     	;# 
  2898  0993                     	;# 
  2899  0994                     	;# 
  2900  0995                     	;# 
  2901  0996                     	;# 
  2902  0997                     	;# 
  2903  1E0F                     	;# 
  2904  1E10                     	;# 
  2905  1E11                     	;# 
  2906  1E12                     	;# 
  2907  1E13                     	;# 
  2908  1E14                     	;# 
  2909  1E15                     	;# 
  2910  1E16                     	;# 
  2911  1E17                     	;# 
  2912  1E18                     	;# 
  2913  1E19                     	;# 
  2914  1E1A                     	;# 
  2915  1E1B                     	;# 
  2916  1E1C                     	;# 
  2917  1E1D                     	;# 
  2918  1E1E                     	;# 
  2919  1E1F                     	;# 
  2920  1E20                     	;# 
  2921  1E21                     	;# 
  2922  1E22                     	;# 
  2923  1E23                     	;# 
  2924  1E24                     	;# 
  2925  1E25                     	;# 
  2926  1E26                     	;# 
  2927  1E27                     	;# 
  2928  1E28                     	;# 
  2929  1E29                     	;# 
  2930  1E2A                     	;# 
  2931  1E2B                     	;# 
  2932  1E2C                     	;# 
  2933  1E2D                     	;# 
  2934  1E2E                     	;# 
  2935  1E2F                     	;# 
  2936  1E30                     	;# 
  2937  1E31                     	;# 
  2938  1E32                     	;# 
  2939  1E33                     	;# 
  2940  1E34                     	;# 
  2941  1E35                     	;# 
  2942  1E36                     	;# 
  2943  1E37                     	;# 
  2944  1E8F                     	;# 
  2945  1E90                     	;# 
  2946  1E91                     	;# 
  2947  1E92                     	;# 
  2948  1E93                     	;# 
  2949  1E9C                     	;# 
  2950  1EA1                     	;# 
  2951  1EA2                     	;# 
  2952  1EB1                     	;# 
  2953  1EBB                     	;# 
  2954  1EBC                     	;# 
  2955  1EBD                     	;# 
  2956  1EBE                     	;# 
  2957  1EC3                     	;# 
  2958  1EC5                     	;# 
  2959  1EC6                     	;# 
  2960  1EC7                     	;# 
  2961  1ECB                     	;# 
  2962  1ECC                     	;# 
  2963  1F10                     	;# 
  2964  1F11                     	;# 
  2965  1F12                     	;# 
  2966  1F13                     	;# 
  2967  1F14                     	;# 
  2968  1F15                     	;# 
  2969  1F20                     	;# 
  2970  1F21                     	;# 
  2971  1F22                     	;# 
  2972  1F23                     	;# 
  2973  1F24                     	;# 
  2974  1F25                     	;# 
  2975  1F38                     	;# 
  2976  1F39                     	;# 
  2977  1F3A                     	;# 
  2978  1F3B                     	;# 
  2979  1F3C                     	;# 
  2980  1F3D                     	;# 
  2981  1F3E                     	;# 
  2982  1F3F                     	;# 
  2983  1F4E                     	;# 
  2984  1F4F                     	;# 
  2985  1F50                     	;# 
  2986  1F51                     	;# 
  2987  1F52                     	;# 
  2988  1F53                     	;# 
  2989  1F54                     	;# 
  2990  1F55                     	;# 
  2991  1FE4                     	;# 
  2992  1FE5                     	;# 
  2993  1FE6                     	;# 
  2994  1FE7                     	;# 
  2995  1FE8                     	;# 
  2996  1FE8                     	;# 
  2997  1FE9                     	;# 
  2998  1FEA                     	;# 
  2999  1FEA                     	;# 
  3000  1FEB                     	;# 
  3001  1FED                     	;# 
  3002  1FEE                     	;# 
  3003  1FEF                     	;# 
  3004  0000                     	;# 
  3005  0001                     	;# 
  3006  0002                     	;# 
  3007  0003                     	;# 
  3008  0004                     	;# 
  3009  0005                     	;# 
  3010  0006                     	;# 
  3011  0007                     	;# 
  3012  0008                     	;# 
  3013  0009                     	;# 
  3014  000A                     	;# 
  3015  000B                     	;# 
  3016  000C                     	;# 
  3017  000E                     	;# 
  3018  0012                     	;# 
  3019  0014                     	;# 
  3020  0018                     	;# 
  3021  001A                     	;# 
  3022  009B                     	;# 
  3023  009B                     	;# 
  3024  009C                     	;# 
  3025  009D                     	;# 
  3026  009E                     	;# 
  3027  009F                     	;# 
  3028  0119                     	;# 
  3029  0119                     	;# 
  3030  0119                     	;# 
  3031  011A                     	;# 
  3032  011A                     	;# 
  3033  011A                     	;# 
  3034  011B                     	;# 
  3035  011B                     	;# 
  3036  011B                     	;# 
  3037  011B                     	;# 
  3038  011B                     	;# 
  3039  011C                     	;# 
  3040  011C                     	;# 
  3041  011C                     	;# 
  3042  011D                     	;# 
  3043  011D                     	;# 
  3044  011D                     	;# 
  3045  011E                     	;# 
  3046  011E                     	;# 
  3047  011E                     	;# 
  3048  011F                     	;# 
  3049  011F                     	;# 
  3050  011F                     	;# 
  3051  011F                     	;# 
  3052  011F                     	;# 
  3053  018C                     	;# 
  3054  018D                     	;# 
  3055  018E                     	;# 
  3056  018F                     	;# 
  3057  0190                     	;# 
  3058  0191                     	;# 
  3059  0192                     	;# 
  3060  020C                     	;# 
  3061  020C                     	;# 
  3062  020D                     	;# 
  3063  020E                     	;# 
  3064  020F                     	;# 
  3065  020F                     	;# 
  3066  0210                     	;# 
  3067  0210                     	;# 
  3068  0211                     	;# 
  3069  0211                     	;# 
  3070  028C                     	;# 
  3071  028C                     	;# 
  3072  028D                     	;# 
  3073  028D                     	;# 
  3074  028E                     	;# 
  3075  028F                     	;# 
  3076  0290                     	;# 
  3077  0291                     	;# 
  3078  030C                     	;# 
  3079  030C                     	;# 
  3080  030D                     	;# 
  3081  030E                     	;# 
  3082  030F                     	;# 
  3083  0310                     	;# 
  3084  0310                     	;# 
  3085  0311                     	;# 
  3086  0312                     	;# 
  3087  0313                     	;# 
  3088  0314                     	;# 
  3089  0314                     	;# 
  3090  0315                     	;# 
  3091  0316                     	;# 
  3092  0318                     	;# 
  3093  0318                     	;# 
  3094  0319                     	;# 
  3095  031A                     	;# 
  3096  031C                     	;# 
  3097  031C                     	;# 
  3098  031D                     	;# 
  3099  031E                     	;# 
  3100  038C                     	;# 
  3101  038C                     	;# 
  3102  038D                     	;# 
  3103  038E                     	;# 
  3104  058C                     	;# 
  3105  058C                     	;# 
  3106  058D                     	;# 
  3107  058E                     	;# 
  3108  058F                     	;# 
  3109  058F                     	;# 
  3110  0590                     	;# 
  3111  0591                     	;# 
  3112  0592                     	;# 
  3113  0593                     	;# 
  3114  059C                     	;# 
  3115  059C                     	;# 
  3116  059D                     	;# 
  3117  059D                     	;# 
  3118  059E                     	;# 
  3119  059F                     	;# 
  3120  060C                     	;# 
  3121  060D                     	;# 
  3122  060E                     	;# 
  3123  060F                     	;# 
  3124  0610                     	;# 
  3125  0611                     	;# 
  3126  0612                     	;# 
  3127  0613                     	;# 
  3128  0614                     	;# 
  3129  070C                     	;# 
  3130  070D                     	;# 
  3131  070E                     	;# 
  3132  070F                     	;# 
  3133  0710                     	;# 
  3134  0711                     	;# 
  3135  0712                     	;# 
  3136  0713                     	;# 
  3137  0716                     	;# 
  3138  0717                     	;# 
  3139  0718                     	;# 
  3140  0719                     	;# 
  3141  071A                     	;# 
  3142  071B                     	;# 
  3143  071C                     	;# 
  3144  071D                     	;# 
  3145  0796                     	;# 
  3146  0797                     	;# 
  3147  0798                     	;# 
  3148  0799                     	;# 
  3149  079A                     	;# 
  3150  079B                     	;# 
  3151  080C                     	;# 
  3152  080D                     	;# 
  3153  080E                     	;# 
  3154  080F                     	;# 
  3155  0810                     	;# 
  3156  0811                     	;# 
  3157  0812                     	;# 
  3158  0813                     	;# 
  3159  0814                     	;# 
  3160  081A                     	;# 
  3161  081A                     	;# 
  3162  081B                     	;# 
  3163  081C                     	;# 
  3164  081C                     	;# 
  3165  081D                     	;# 
  3166  081E                     	;# 
  3167  081F                     	;# 
  3168  088C                     	;# 
  3169  088D                     	;# 
  3170  088E                     	;# 
  3171  088F                     	;# 
  3172  0890                     	;# 
  3173  0891                     	;# 
  3174  0892                     	;# 
  3175  0893                     	;# 
  3176  0895                     	;# 
  3177  0896                     	;# 
  3178  090C                     	;# 
  3179  090E                     	;# 
  3180  090F                     	;# 
  3181  091F                     	;# 
  3182  098F                     	;# 
  3183  098F                     	;# 
  3184  0990                     	;# 
  3185  0991                     	;# 
  3186  0992                     	;# 
  3187  0993                     	;# 
  3188  0994                     	;# 
  3189  0995                     	;# 
  3190  0996                     	;# 
  3191  0997                     	;# 
  3192  1E0F                     	;# 
  3193  1E10                     	;# 
  3194  1E11                     	;# 
  3195  1E12                     	;# 
  3196  1E13                     	;# 
  3197  1E14                     	;# 
  3198  1E15                     	;# 
  3199  1E16                     	;# 
  3200  1E17                     	;# 
  3201  1E18                     	;# 
  3202  1E19                     	;# 
  3203  1E1A                     	;# 
  3204  1E1B                     	;# 
  3205  1E1C                     	;# 
  3206  1E1D                     	;# 
  3207  1E1E                     	;# 
  3208  1E1F                     	;# 
  3209  1E20                     	;# 
  3210  1E21                     	;# 
  3211  1E22                     	;# 
  3212  1E23                     	;# 
  3213  1E24                     	;# 
  3214  1E25                     	;# 
  3215  1E26                     	;# 
  3216  1E27                     	;# 
  3217  1E28                     	;# 
  3218  1E29                     	;# 
  3219  1E2A                     	;# 
  3220  1E2B                     	;# 
  3221  1E2C                     	;# 
  3222  1E2D                     	;# 
  3223  1E2E                     	;# 
  3224  1E2F                     	;# 
  3225  1E30                     	;# 
  3226  1E31                     	;# 
  3227  1E32                     	;# 
  3228  1E33                     	;# 
  3229  1E34                     	;# 
  3230  1E35                     	;# 
  3231  1E36                     	;# 
  3232  1E37                     	;# 
  3233  1E8F                     	;# 
  3234  1E90                     	;# 
  3235  1E91                     	;# 
  3236  1E92                     	;# 
  3237  1E93                     	;# 
  3238  1E9C                     	;# 
  3239  1EA1                     	;# 
  3240  1EA2                     	;# 
  3241  1EB1                     	;# 
  3242  1EBB                     	;# 
  3243  1EBC                     	;# 
  3244  1EBD                     	;# 
  3245  1EBE                     	;# 
  3246  1EC3                     	;# 
  3247  1EC5                     	;# 
  3248  1EC6                     	;# 
  3249  1EC7                     	;# 
  3250  1ECB                     	;# 
  3251  1ECC                     	;# 
  3252  1F10                     	;# 
  3253  1F11                     	;# 
  3254  1F12                     	;# 
  3255  1F13                     	;# 
  3256  1F14                     	;# 
  3257  1F15                     	;# 
  3258  1F20                     	;# 
  3259  1F21                     	;# 
  3260  1F22                     	;# 
  3261  1F23                     	;# 
  3262  1F24                     	;# 
  3263  1F25                     	;# 
  3264  1F38                     	;# 
  3265  1F39                     	;# 
  3266  1F3A                     	;# 
  3267  1F3B                     	;# 
  3268  1F3C                     	;# 
  3269  1F3D                     	;# 
  3270  1F3E                     	;# 
  3271  1F3F                     	;# 
  3272  1F4E                     	;# 
  3273  1F4F                     	;# 
  3274  1F50                     	;# 
  3275  1F51                     	;# 
  3276  1F52                     	;# 
  3277  1F53                     	;# 
  3278  1F54                     	;# 
  3279  1F55                     	;# 
  3280  1FE4                     	;# 
  3281  1FE5                     	;# 
  3282  1FE6                     	;# 
  3283  1FE7                     	;# 
  3284  1FE8                     	;# 
  3285  1FE8                     	;# 
  3286  1FE9                     	;# 
  3287  1FEA                     	;# 
  3288  1FEA                     	;# 
  3289  1FEB                     	;# 
  3290  1FED                     	;# 
  3291  1FEE                     	;# 
  3292  1FEF                     	;# 
  3293  0000                     	;# 
  3294  0001                     	;# 
  3295  0002                     	;# 
  3296  0003                     	;# 
  3297  0004                     	;# 
  3298  0005                     	;# 
  3299  0006                     	;# 
  3300  0007                     	;# 
  3301  0008                     	;# 
  3302  0009                     	;# 
  3303  000A                     	;# 
  3304  000B                     	;# 
  3305  000C                     	;# 
  3306  000E                     	;# 
  3307  0012                     	;# 
  3308  0014                     	;# 
  3309  0018                     	;# 
  3310  001A                     	;# 
  3311  009B                     	;# 
  3312  009B                     	;# 
  3313  009C                     	;# 
  3314  009D                     	;# 
  3315  009E                     	;# 
  3316  009F                     	;# 
  3317  0119                     	;# 
  3318  0119                     	;# 
  3319  0119                     	;# 
  3320  011A                     	;# 
  3321  011A                     	;# 
  3322  011A                     	;# 
  3323  011B                     	;# 
  3324  011B                     	;# 
  3325  011B                     	;# 
  3326  011B                     	;# 
  3327  011B                     	;# 
  3328  011C                     	;# 
  3329  011C                     	;# 
  3330  011C                     	;# 
  3331  011D                     	;# 
  3332  011D                     	;# 
  3333  011D                     	;# 
  3334  011E                     	;# 
  3335  011E                     	;# 
  3336  011E                     	;# 
  3337  011F                     	;# 
  3338  011F                     	;# 
  3339  011F                     	;# 
  3340  011F                     	;# 
  3341  011F                     	;# 
  3342  018C                     	;# 
  3343  018D                     	;# 
  3344  018E                     	;# 
  3345  018F                     	;# 
  3346  0190                     	;# 
  3347  0191                     	;# 
  3348  0192                     	;# 
  3349  020C                     	;# 
  3350  020C                     	;# 
  3351  020D                     	;# 
  3352  020E                     	;# 
  3353  020F                     	;# 
  3354  020F                     	;# 
  3355  0210                     	;# 
  3356  0210                     	;# 
  3357  0211                     	;# 
  3358  0211                     	;# 
  3359  028C                     	;# 
  3360  028C                     	;# 
  3361  028D                     	;# 
  3362  028D                     	;# 
  3363  028E                     	;# 
  3364  028F                     	;# 
  3365  0290                     	;# 
  3366  0291                     	;# 
  3367  030C                     	;# 
  3368  030C                     	;# 
  3369  030D                     	;# 
  3370  030E                     	;# 
  3371  030F                     	;# 
  3372  0310                     	;# 
  3373  0310                     	;# 
  3374  0311                     	;# 
  3375  0312                     	;# 
  3376  0313                     	;# 
  3377  0314                     	;# 
  3378  0314                     	;# 
  3379  0315                     	;# 
  3380  0316                     	;# 
  3381  0318                     	;# 
  3382  0318                     	;# 
  3383  0319                     	;# 
  3384  031A                     	;# 
  3385  031C                     	;# 
  3386  031C                     	;# 
  3387  031D                     	;# 
  3388  031E                     	;# 
  3389  038C                     	;# 
  3390  038C                     	;# 
  3391  038D                     	;# 
  3392  038E                     	;# 
  3393  058C                     	;# 
  3394  058C                     	;# 
  3395  058D                     	;# 
  3396  058E                     	;# 
  3397  058F                     	;# 
  3398  058F                     	;# 
  3399  0590                     	;# 
  3400  0591                     	;# 
  3401  0592                     	;# 
  3402  0593                     	;# 
  3403  059C                     	;# 
  3404  059C                     	;# 
  3405  059D                     	;# 
  3406  059D                     	;# 
  3407  059E                     	;# 
  3408  059F                     	;# 
  3409  060C                     	;# 
  3410  060D                     	;# 
  3411  060E                     	;# 
  3412  060F                     	;# 
  3413  0610                     	;# 
  3414  0611                     	;# 
  3415  0612                     	;# 
  3416  0613                     	;# 
  3417  0614                     	;# 
  3418  070C                     	;# 
  3419  070D                     	;# 
  3420  070E                     	;# 
  3421  070F                     	;# 
  3422  0710                     	;# 
  3423  0711                     	;# 
  3424  0712                     	;# 
  3425  0713                     	;# 
  3426  0716                     	;# 
  3427  0717                     	;# 
  3428  0718                     	;# 
  3429  0719                     	;# 
  3430  071A                     	;# 
  3431  071B                     	;# 
  3432  071C                     	;# 
  3433  071D                     	;# 
  3434  0796                     	;# 
  3435  0797                     	;# 
  3436  0798                     	;# 
  3437  0799                     	;# 
  3438  079A                     	;# 
  3439  079B                     	;# 
  3440  080C                     	;# 
  3441  080D                     	;# 
  3442  080E                     	;# 
  3443  080F                     	;# 
  3444  0810                     	;# 
  3445  0811                     	;# 
  3446  0812                     	;# 
  3447  0813                     	;# 
  3448  0814                     	;# 
  3449  081A                     	;# 
  3450  081A                     	;# 
  3451  081B                     	;# 
  3452  081C                     	;# 
  3453  081C                     	;# 
  3454  081D                     	;# 
  3455  081E                     	;# 
  3456  081F                     	;# 
  3457  088C                     	;# 
  3458  088D                     	;# 
  3459  088E                     	;# 
  3460  088F                     	;# 
  3461  0890                     	;# 
  3462  0891                     	;# 
  3463  0892                     	;# 
  3464  0893                     	;# 
  3465  0895                     	;# 
  3466  0896                     	;# 
  3467  090C                     	;# 
  3468  090E                     	;# 
  3469  090F                     	;# 
  3470  091F                     	;# 
  3471  098F                     	;# 
  3472  098F                     	;# 
  3473  0990                     	;# 
  3474  0991                     	;# 
  3475  0992                     	;# 
  3476  0993                     	;# 
  3477  0994                     	;# 
  3478  0995                     	;# 
  3479  0996                     	;# 
  3480  0997                     	;# 
  3481  1E0F                     	;# 
  3482  1E10                     	;# 
  3483  1E11                     	;# 
  3484  1E12                     	;# 
  3485  1E13                     	;# 
  3486  1E14                     	;# 
  3487  1E15                     	;# 
  3488  1E16                     	;# 
  3489  1E17                     	;# 
  3490  1E18                     	;# 
  3491  1E19                     	;# 
  3492  1E1A                     	;# 
  3493  1E1B                     	;# 
  3494  1E1C                     	;# 
  3495  1E1D                     	;# 
  3496  1E1E                     	;# 
  3497  1E1F                     	;# 
  3498  1E20                     	;# 
  3499  1E21                     	;# 
  3500  1E22                     	;# 
  3501  1E23                     	;# 
  3502  1E24                     	;# 
  3503  1E25                     	;# 
  3504  1E26                     	;# 
  3505  1E27                     	;# 
  3506  1E28                     	;# 
  3507  1E29                     	;# 
  3508  1E2A                     	;# 
  3509  1E2B                     	;# 
  3510  1E2C                     	;# 
  3511  1E2D                     	;# 
  3512  1E2E                     	;# 
  3513  1E2F                     	;# 
  3514  1E30                     	;# 
  3515  1E31                     	;# 
  3516  1E32                     	;# 
  3517  1E33                     	;# 
  3518  1E34                     	;# 
  3519  1E35                     	;# 
  3520  1E36                     	;# 
  3521  1E37                     	;# 
  3522  1E8F                     	;# 
  3523  1E90                     	;# 
  3524  1E91                     	;# 
  3525  1E92                     	;# 
  3526  1E93                     	;# 
  3527  1E9C                     	;# 
  3528  1EA1                     	;# 
  3529  1EA2                     	;# 
  3530  1EB1                     	;# 
  3531  1EBB                     	;# 
  3532  1EBC                     	;# 
  3533  1EBD                     	;# 
  3534  1EBE                     	;# 
  3535  1EC3                     	;# 
  3536  1EC5                     	;# 
  3537  1EC6                     	;# 
  3538  1EC7                     	;# 
  3539  1ECB                     	;# 
  3540  1ECC                     	;# 
  3541  1F10                     	;# 
  3542  1F11                     	;# 
  3543  1F12                     	;# 
  3544  1F13                     	;# 
  3545  1F14                     	;# 
  3546  1F15                     	;# 
  3547  1F20                     	;# 
  3548  1F21                     	;# 
  3549  1F22                     	;# 
  3550  1F23                     	;# 
  3551  1F24                     	;# 
  3552  1F25                     	;# 
  3553  1F38                     	;# 
  3554  1F39                     	;# 
  3555  1F3A                     	;# 
  3556  1F3B                     	;# 
  3557  1F3C                     	;# 
  3558  1F3D                     	;# 
  3559  1F3E                     	;# 
  3560  1F3F                     	;# 
  3561  1F4E                     	;# 
  3562  1F4F                     	;# 
  3563  1F50                     	;# 
  3564  1F51                     	;# 
  3565  1F52                     	;# 
  3566  1F53                     	;# 
  3567  1F54                     	;# 
  3568  1F55                     	;# 
  3569  1FE4                     	;# 
  3570  1FE5                     	;# 
  3571  1FE6                     	;# 
  3572  1FE7                     	;# 
  3573  1FE8                     	;# 
  3574  1FE8                     	;# 
  3575  1FE9                     	;# 
  3576  1FEA                     	;# 
  3577  1FEA                     	;# 
  3578  1FEB                     	;# 
  3579  1FED                     	;# 
  3580  1FEE                     	;# 
  3581  1FEF                     	;# 
  3582  0000                     	;# 
  3583  0001                     	;# 
  3584  0002                     	;# 
  3585  0003                     	;# 
  3586  0004                     	;# 
  3587  0005                     	;# 
  3588  0006                     	;# 
  3589  0007                     	;# 
  3590  0008                     	;# 
  3591  0009                     	;# 
  3592  000A                     	;# 
  3593  000B                     	;# 
  3594  000C                     	;# 
  3595  000E                     	;# 
  3596  0012                     	;# 
  3597  0014                     	;# 
  3598  0018                     	;# 
  3599  001A                     	;# 
  3600  009B                     	;# 
  3601  009B                     	;# 
  3602  009C                     	;# 
  3603  009D                     	;# 
  3604  009E                     	;# 
  3605  009F                     	;# 
  3606  0119                     	;# 
  3607  0119                     	;# 
  3608  0119                     	;# 
  3609  011A                     	;# 
  3610  011A                     	;# 
  3611  011A                     	;# 
  3612  011B                     	;# 
  3613  011B                     	;# 
  3614  011B                     	;# 
  3615  011B                     	;# 
  3616  011B                     	;# 
  3617  011C                     	;# 
  3618  011C                     	;# 
  3619  011C                     	;# 
  3620  011D                     	;# 
  3621  011D                     	;# 
  3622  011D                     	;# 
  3623  011E                     	;# 
  3624  011E                     	;# 
  3625  011E                     	;# 
  3626  011F                     	;# 
  3627  011F                     	;# 
  3628  011F                     	;# 
  3629  011F                     	;# 
  3630  011F                     	;# 
  3631  018C                     	;# 
  3632  018D                     	;# 
  3633  018E                     	;# 
  3634  018F                     	;# 
  3635  0190                     	;# 
  3636  0191                     	;# 
  3637  0192                     	;# 
  3638  020C                     	;# 
  3639  020C                     	;# 
  3640  020D                     	;# 
  3641  020E                     	;# 
  3642  020F                     	;# 
  3643  020F                     	;# 
  3644  0210                     	;# 
  3645  0210                     	;# 
  3646  0211                     	;# 
  3647  0211                     	;# 
  3648  028C                     	;# 
  3649  028C                     	;# 
  3650  028D                     	;# 
  3651  028D                     	;# 
  3652  028E                     	;# 
  3653  028F                     	;# 
  3654  0290                     	;# 
  3655  0291                     	;# 
  3656  030C                     	;# 
  3657  030C                     	;# 
  3658  030D                     	;# 
  3659  030E                     	;# 
  3660  030F                     	;# 
  3661  0310                     	;# 
  3662  0310                     	;# 
  3663  0311                     	;# 
  3664  0312                     	;# 
  3665  0313                     	;# 
  3666  0314                     	;# 
  3667  0314                     	;# 
  3668  0315                     	;# 
  3669  0316                     	;# 
  3670  0318                     	;# 
  3671  0318                     	;# 
  3672  0319                     	;# 
  3673  031A                     	;# 
  3674  031C                     	;# 
  3675  031C                     	;# 
  3676  031D                     	;# 
  3677  031E                     	;# 
  3678  038C                     	;# 
  3679  038C                     	;# 
  3680  038D                     	;# 
  3681  038E                     	;# 
  3682  058C                     	;# 
  3683  058C                     	;# 
  3684  058D                     	;# 
  3685  058E                     	;# 
  3686  058F                     	;# 
  3687  058F                     	;# 
  3688  0590                     	;# 
  3689  0591                     	;# 
  3690  0592                     	;# 
  3691  0593                     	;# 
  3692  059C                     	;# 
  3693  059C                     	;# 
  3694  059D                     	;# 
  3695  059D                     	;# 
  3696  059E                     	;# 
  3697  059F                     	;# 
  3698  060C                     	;# 
  3699  060D                     	;# 
  3700  060E                     	;# 
  3701  060F                     	;# 
  3702  0610                     	;# 
  3703  0611                     	;# 
  3704  0612                     	;# 
  3705  0613                     	;# 
  3706  0614                     	;# 
  3707  070C                     	;# 
  3708  070D                     	;# 
  3709  070E                     	;# 
  3710  070F                     	;# 
  3711  0710                     	;# 
  3712  0711                     	;# 
  3713  0712                     	;# 
  3714  0713                     	;# 
  3715  0716                     	;# 
  3716  0717                     	;# 
  3717  0718                     	;# 
  3718  0719                     	;# 
  3719  071A                     	;# 
  3720  071B                     	;# 
  3721  071C                     	;# 
  3722  071D                     	;# 
  3723  0796                     	;# 
  3724  0797                     	;# 
  3725  0798                     	;# 
  3726  0799                     	;# 
  3727  079A                     	;# 
  3728  079B                     	;# 
  3729  080C                     	;# 
  3730  080D                     	;# 
  3731  080E                     	;# 
  3732  080F                     	;# 
  3733  0810                     	;# 
  3734  0811                     	;# 
  3735  0812                     	;# 
  3736  0813                     	;# 
  3737  0814                     	;# 
  3738  081A                     	;# 
  3739  081A                     	;# 
  3740  081B                     	;# 
  3741  081C                     	;# 
  3742  081C                     	;# 
  3743  081D                     	;# 
  3744  081E                     	;# 
  3745  081F                     	;# 
  3746  088C                     	;# 
  3747  088D                     	;# 
  3748  088E                     	;# 
  3749  088F                     	;# 
  3750  0890                     	;# 
  3751  0891                     	;# 
  3752  0892                     	;# 
  3753  0893                     	;# 
  3754  0895                     	;# 
  3755  0896                     	;# 
  3756  090C                     	;# 
  3757  090E                     	;# 
  3758  090F                     	;# 
  3759  091F                     	;# 
  3760  098F                     	;# 
  3761  098F                     	;# 
  3762  0990                     	;# 
  3763  0991                     	;# 
  3764  0992                     	;# 
  3765  0993                     	;# 
  3766  0994                     	;# 
  3767  0995                     	;# 
  3768  0996                     	;# 
  3769  0997                     	;# 
  3770  1E0F                     	;# 
  3771  1E10                     	;# 
  3772  1E11                     	;# 
  3773  1E12                     	;# 
  3774  1E13                     	;# 
  3775  1E14                     	;# 
  3776  1E15                     	;# 
  3777  1E16                     	;# 
  3778  1E17                     	;# 
  3779  1E18                     	;# 
  3780  1E19                     	;# 
  3781  1E1A                     	;# 
  3782  1E1B                     	;# 
  3783  1E1C                     	;# 
  3784  1E1D                     	;# 
  3785  1E1E                     	;# 
  3786  1E1F                     	;# 
  3787  1E20                     	;# 
  3788  1E21                     	;# 
  3789  1E22                     	;# 
  3790  1E23                     	;# 
  3791  1E24                     	;# 
  3792  1E25                     	;# 
  3793  1E26                     	;# 
  3794  1E27                     	;# 
  3795  1E28                     	;# 
  3796  1E29                     	;# 
  3797  1E2A                     	;# 
  3798  1E2B                     	;# 
  3799  1E2C                     	;# 
  3800  1E2D                     	;# 
  3801  1E2E                     	;# 
  3802  1E2F                     	;# 
  3803  1E30                     	;# 
  3804  1E31                     	;# 
  3805  1E32                     	;# 
  3806  1E33                     	;# 
  3807  1E34                     	;# 
  3808  1E35                     	;# 
  3809  1E36                     	;# 
  3810  1E37                     	;# 
  3811  1E8F                     	;# 
  3812  1E90                     	;# 
  3813  1E91                     	;# 
  3814  1E92                     	;# 
  3815  1E93                     	;# 
  3816  1E9C                     	;# 
  3817  1EA1                     	;# 
  3818  1EA2                     	;# 
  3819  1EB1                     	;# 
  3820  1EBB                     	;# 
  3821  1EBC                     	;# 
  3822  1EBD                     	;# 
  3823  1EBE                     	;# 
  3824  1EC3                     	;# 
  3825  1EC5                     	;# 
  3826  1EC6                     	;# 
  3827  1EC7                     	;# 
  3828  1ECB                     	;# 
  3829  1ECC                     	;# 
  3830  1F10                     	;# 
  3831  1F11                     	;# 
  3832  1F12                     	;# 
  3833  1F13                     	;# 
  3834  1F14                     	;# 
  3835  1F15                     	;# 
  3836  1F20                     	;# 
  3837  1F21                     	;# 
  3838  1F22                     	;# 
  3839  1F23                     	;# 
  3840  1F24                     	;# 
  3841  1F25                     	;# 
  3842  1F38                     	;# 
  3843  1F39                     	;# 
  3844  1F3A                     	;# 
  3845  1F3B                     	;# 
  3846  1F3C                     	;# 
  3847  1F3D                     	;# 
  3848  1F3E                     	;# 
  3849  1F3F                     	;# 
  3850  1F4E                     	;# 
  3851  1F4F                     	;# 
  3852  1F50                     	;# 
  3853  1F51                     	;# 
  3854  1F52                     	;# 
  3855  1F53                     	;# 
  3856  1F54                     	;# 
  3857  1F55                     	;# 
  3858  1FE4                     	;# 
  3859  1FE5                     	;# 
  3860  1FE6                     	;# 
  3861  1FE7                     	;# 
  3862  1FE8                     	;# 
  3863  1FE8                     	;# 
  3864  1FE9                     	;# 
  3865  1FEA                     	;# 
  3866  1FEA                     	;# 
  3867  1FEB                     	;# 
  3868  1FED                     	;# 
  3869  1FEE                     	;# 
  3870  1FEF                     	;# 
  3871  0000                     	;# 
  3872  0001                     	;# 
  3873  0002                     	;# 
  3874  0003                     	;# 
  3875  0004                     	;# 
  3876  0005                     	;# 
  3877  0006                     	;# 
  3878  0007                     	;# 
  3879  0008                     	;# 
  3880  0009                     	;# 
  3881  000A                     	;# 
  3882  000B                     	;# 
  3883  000C                     	;# 
  3884  000E                     	;# 
  3885  0012                     	;# 
  3886  0014                     	;# 
  3887  0018                     	;# 
  3888  001A                     	;# 
  3889  009B                     	;# 
  3890  009B                     	;# 
  3891  009C                     	;# 
  3892  009D                     	;# 
  3893  009E                     	;# 
  3894  009F                     	;# 
  3895  0119                     	;# 
  3896  0119                     	;# 
  3897  0119                     	;# 
  3898  011A                     	;# 
  3899  011A                     	;# 
  3900  011A                     	;# 
  3901  011B                     	;# 
  3902  011B                     	;# 
  3903  011B                     	;# 
  3904  011B                     	;# 
  3905  011B                     	;# 
  3906  011C                     	;# 
  3907  011C                     	;# 
  3908  011C                     	;# 
  3909  011D                     	;# 
  3910  011D                     	;# 
  3911  011D                     	;# 
  3912  011E                     	;# 
  3913  011E                     	;# 
  3914  011E                     	;# 
  3915  011F                     	;# 
  3916  011F                     	;# 
  3917  011F                     	;# 
  3918  011F                     	;# 
  3919  011F                     	;# 
  3920  018C                     	;# 
  3921  018D                     	;# 
  3922  018E                     	;# 
  3923  018F                     	;# 
  3924  0190                     	;# 
  3925  0191                     	;# 
  3926  0192                     	;# 
  3927  020C                     	;# 
  3928  020C                     	;# 
  3929  020D                     	;# 
  3930  020E                     	;# 
  3931  020F                     	;# 
  3932  020F                     	;# 
  3933  0210                     	;# 
  3934  0210                     	;# 
  3935  0211                     	;# 
  3936  0211                     	;# 
  3937  028C                     	;# 
  3938  028C                     	;# 
  3939  028D                     	;# 
  3940  028D                     	;# 
  3941  028E                     	;# 
  3942  028F                     	;# 
  3943  0290                     	;# 
  3944  0291                     	;# 
  3945  030C                     	;# 
  3946  030C                     	;# 
  3947  030D                     	;# 
  3948  030E                     	;# 
  3949  030F                     	;# 
  3950  0310                     	;# 
  3951  0310                     	;# 
  3952  0311                     	;# 
  3953  0312                     	;# 
  3954  0313                     	;# 
  3955  0314                     	;# 
  3956  0314                     	;# 
  3957  0315                     	;# 
  3958  0316                     	;# 
  3959  0318                     	;# 
  3960  0318                     	;# 
  3961  0319                     	;# 
  3962  031A                     	;# 
  3963  031C                     	;# 
  3964  031C                     	;# 
  3965  031D                     	;# 
  3966  031E                     	;# 
  3967  038C                     	;# 
  3968  038C                     	;# 
  3969  038D                     	;# 
  3970  038E                     	;# 
  3971  058C                     	;# 
  3972  058C                     	;# 
  3973  058D                     	;# 
  3974  058E                     	;# 
  3975  058F                     	;# 
  3976  058F                     	;# 
  3977  0590                     	;# 
  3978  0591                     	;# 
  3979  0592                     	;# 
  3980  0593                     	;# 
  3981  059C                     	;# 
  3982  059C                     	;# 
  3983  059D                     	;# 
  3984  059D                     	;# 
  3985  059E                     	;# 
  3986  059F                     	;# 
  3987  060C                     	;# 
  3988  060D                     	;# 
  3989  060E                     	;# 
  3990  060F                     	;# 
  3991  0610                     	;# 
  3992  0611                     	;# 
  3993  0612                     	;# 
  3994  0613                     	;# 
  3995  0614                     	;# 
  3996  070C                     	;# 
  3997  070D                     	;# 
  3998  070E                     	;# 
  3999  070F                     	;# 
  4000  0710                     	;# 
  4001  0711                     	;# 
  4002  0712                     	;# 
  4003  0713                     	;# 
  4004  0716                     	;# 
  4005  0717                     	;# 
  4006  0718                     	;# 
  4007  0719                     	;# 
  4008  071A                     	;# 
  4009  071B                     	;# 
  4010  071C                     	;# 
  4011  071D                     	;# 
  4012  0796                     	;# 
  4013  0797                     	;# 
  4014  0798                     	;# 
  4015  0799                     	;# 
  4016  079A                     	;# 
  4017  079B                     	;# 
  4018  080C                     	;# 
  4019  080D                     	;# 
  4020  080E                     	;# 
  4021  080F                     	;# 
  4022  0810                     	;# 
  4023  0811                     	;# 
  4024  0812                     	;# 
  4025  0813                     	;# 
  4026  0814                     	;# 
  4027  081A                     	;# 
  4028  081A                     	;# 
  4029  081B                     	;# 
  4030  081C                     	;# 
  4031  081C                     	;# 
  4032  081D                     	;# 
  4033  081E                     	;# 
  4034  081F                     	;# 
  4035  088C                     	;# 
  4036  088D                     	;# 
  4037  088E                     	;# 
  4038  088F                     	;# 
  4039  0890                     	;# 
  4040  0891                     	;# 
  4041  0892                     	;# 
  4042  0893                     	;# 
  4043  0895                     	;# 
  4044  0896                     	;# 
  4045  090C                     	;# 
  4046  090E                     	;# 
  4047  090F                     	;# 
  4048  091F                     	;# 
  4049  098F                     	;# 
  4050  098F                     	;# 
  4051  0990                     	;# 
  4052  0991                     	;# 
  4053  0992                     	;# 
  4054  0993                     	;# 
  4055  0994                     	;# 
  4056  0995                     	;# 
  4057  0996                     	;# 
  4058  0997                     	;# 
  4059  1E0F                     	;# 
  4060  1E10                     	;# 
  4061  1E11                     	;# 
  4062  1E12                     	;# 
  4063  1E13                     	;# 
  4064  1E14                     	;# 
  4065  1E15                     	;# 
  4066  1E16                     	;# 
  4067  1E17                     	;# 
  4068  1E18                     	;# 
  4069  1E19                     	;# 
  4070  1E1A                     	;# 
  4071  1E1B                     	;# 
  4072  1E1C                     	;# 
  4073  1E1D                     	;# 
  4074  1E1E                     	;# 
  4075  1E1F                     	;# 
  4076  1E20                     	;# 
  4077  1E21                     	;# 
  4078  1E22                     	;# 
  4079  1E23                     	;# 
  4080  1E24                     	;# 
  4081  1E25                     	;# 
  4082  1E26                     	;# 
  4083  1E27                     	;# 
  4084  1E28                     	;# 
  4085  1E29                     	;# 
  4086  1E2A                     	;# 
  4087  1E2B                     	;# 
  4088  1E2C                     	;# 
  4089  1E2D                     	;# 
  4090  1E2E                     	;# 
  4091  1E2F                     	;# 
  4092  1E30                     	;# 
  4093  1E31                     	;# 
  4094  1E32                     	;# 
  4095  1E33                     	;# 
  4096  1E34                     	;# 
  4097  1E35                     	;# 
  4098  1E36                     	;# 
  4099  1E37                     	;# 
  4100  1E8F                     	;# 
  4101  1E90                     	;# 
  4102  1E91                     	;# 
  4103  1E92                     	;# 
  4104  1E93                     	;# 
  4105  1E9C                     	;# 
  4106  1EA1                     	;# 
  4107  1EA2                     	;# 
  4108  1EB1                     	;# 
  4109  1EBB                     	;# 
  4110  1EBC                     	;# 
  4111  1EBD                     	;# 
  4112  1EBE                     	;# 
  4113  1EC3                     	;# 
  4114  1EC5                     	;# 
  4115  1EC6                     	;# 
  4116  1EC7                     	;# 
  4117  1ECB                     	;# 
  4118  1ECC                     	;# 
  4119  1F10                     	;# 
  4120  1F11                     	;# 
  4121  1F12                     	;# 
  4122  1F13                     	;# 
  4123  1F14                     	;# 
  4124  1F15                     	;# 
  4125  1F20                     	;# 
  4126  1F21                     	;# 
  4127  1F22                     	;# 
  4128  1F23                     	;# 
  4129  1F24                     	;# 
  4130  1F25                     	;# 
  4131  1F38                     	;# 
  4132  1F39                     	;# 
  4133  1F3A                     	;# 
  4134  1F3B                     	;# 
  4135  1F3C                     	;# 
  4136  1F3D                     	;# 
  4137  1F3E                     	;# 
  4138  1F3F                     	;# 
  4139  1F4E                     	;# 
  4140  1F4F                     	;# 
  4141  1F50                     	;# 
  4142  1F51                     	;# 
  4143  1F52                     	;# 
  4144  1F53                     	;# 
  4145  1F54                     	;# 
  4146  1F55                     	;# 
  4147  1FE4                     	;# 
  4148  1FE5                     	;# 
  4149  1FE6                     	;# 
  4150  1FE7                     	;# 
  4151  1FE8                     	;# 
  4152  1FE8                     	;# 
  4153  1FE9                     	;# 
  4154  1FEA                     	;# 
  4155  1FEA                     	;# 
  4156  1FEB                     	;# 
  4157  1FED                     	;# 
  4158  1FEE                     	;# 
  4159  1FEF                     	;# 
  4160  0000                     	;# 
  4161  0001                     	;# 
  4162  0002                     	;# 
  4163  0003                     	;# 
  4164  0004                     	;# 
  4165  0005                     	;# 
  4166  0006                     	;# 
  4167  0007                     	;# 
  4168  0008                     	;# 
  4169  0009                     	;# 
  4170  000A                     	;# 
  4171  000B                     	;# 
  4172  000C                     	;# 
  4173  000E                     	;# 
  4174  0012                     	;# 
  4175  0014                     	;# 
  4176  0018                     	;# 
  4177  001A                     	;# 
  4178  009B                     	;# 
  4179  009B                     	;# 
  4180  009C                     	;# 
  4181  009D                     	;# 
  4182  009E                     	;# 
  4183  009F                     	;# 
  4184  0119                     	;# 
  4185  0119                     	;# 
  4186  0119                     	;# 
  4187  011A                     	;# 
  4188  011A                     	;# 
  4189  011A                     	;# 
  4190  011B                     	;# 
  4191  011B                     	;# 
  4192  011B                     	;# 
  4193  011B                     	;# 
  4194  011B                     	;# 
  4195  011C                     	;# 
  4196  011C                     	;# 
  4197  011C                     	;# 
  4198  011D                     	;# 
  4199  011D                     	;# 
  4200  011D                     	;# 
  4201  011E                     	;# 
  4202  011E                     	;# 
  4203  011E                     	;# 
  4204  011F                     	;# 
  4205  011F                     	;# 
  4206  011F                     	;# 
  4207  011F                     	;# 
  4208  011F                     	;# 
  4209  018C                     	;# 
  4210  018D                     	;# 
  4211  018E                     	;# 
  4212  018F                     	;# 
  4213  0190                     	;# 
  4214  0191                     	;# 
  4215  0192                     	;# 
  4216  020C                     	;# 
  4217  020C                     	;# 
  4218  020D                     	;# 
  4219  020E                     	;# 
  4220  020F                     	;# 
  4221  020F                     	;# 
  4222  0210                     	;# 
  4223  0210                     	;# 
  4224  0211                     	;# 
  4225  0211                     	;# 
  4226  028C                     	;# 
  4227  028C                     	;# 
  4228  028D                     	;# 
  4229  028D                     	;# 
  4230  028E                     	;# 
  4231  028F                     	;# 
  4232  0290                     	;# 
  4233  0291                     	;# 
  4234  030C                     	;# 
  4235  030C                     	;# 
  4236  030D                     	;# 
  4237  030E                     	;# 
  4238  030F                     	;# 
  4239  0310                     	;# 
  4240  0310                     	;# 
  4241  0311                     	;# 
  4242  0312                     	;# 
  4243  0313                     	;# 
  4244  0314                     	;# 
  4245  0314                     	;# 
  4246  0315                     	;# 
  4247  0316                     	;# 
  4248  0318                     	;# 
  4249  0318                     	;# 
  4250  0319                     	;# 
  4251  031A                     	;# 
  4252  031C                     	;# 
  4253  031C                     	;# 
  4254  031D                     	;# 
  4255  031E                     	;# 
  4256  038C                     	;# 
  4257  038C                     	;# 
  4258  038D                     	;# 
  4259  038E                     	;# 
  4260  058C                     	;# 
  4261  058C                     	;# 
  4262  058D                     	;# 
  4263  058E                     	;# 
  4264  058F                     	;# 
  4265  058F                     	;# 
  4266  0590                     	;# 
  4267  0591                     	;# 
  4268  0592                     	;# 
  4269  0593                     	;# 
  4270  059C                     	;# 
  4271  059C                     	;# 
  4272  059D                     	;# 
  4273  059D                     	;# 
  4274  059E                     	;# 
  4275  059F                     	;# 
  4276  060C                     	;# 
  4277  060D                     	;# 
  4278  060E                     	;# 
  4279  060F                     	;# 
  4280  0610                     	;# 
  4281  0611                     	;# 
  4282  0612                     	;# 
  4283  0613                     	;# 
  4284  0614                     	;# 
  4285  070C                     	;# 
  4286  070D                     	;# 
  4287  070E                     	;# 
  4288  070F                     	;# 
  4289  0710                     	;# 
  4290  0711                     	;# 
  4291  0712                     	;# 
  4292  0713                     	;# 
  4293  0716                     	;# 
  4294  0717                     	;# 
  4295  0718                     	;# 
  4296  0719                     	;# 
  4297  071A                     	;# 
  4298  071B                     	;# 
  4299  071C                     	;# 
  4300  071D                     	;# 
  4301  0796                     	;# 
  4302  0797                     	;# 
  4303  0798                     	;# 
  4304  0799                     	;# 
  4305  079A                     	;# 
  4306  079B                     	;# 
  4307  080C                     	;# 
  4308  080D                     	;# 
  4309  080E                     	;# 
  4310  080F                     	;# 
  4311  0810                     	;# 
  4312  0811                     	;# 
  4313  0812                     	;# 
  4314  0813                     	;# 
  4315  0814                     	;# 
  4316  081A                     	;# 
  4317  081A                     	;# 
  4318  081B                     	;# 
  4319  081C                     	;# 
  4320  081C                     	;# 
  4321  081D                     	;# 
  4322  081E                     	;# 
  4323  081F                     	;# 
  4324  088C                     	;# 
  4325  088D                     	;# 
  4326  088E                     	;# 
  4327  088F                     	;# 
  4328  0890                     	;# 
  4329  0891                     	;# 
  4330  0892                     	;# 
  4331  0893                     	;# 
  4332  0895                     	;# 
  4333  0896                     	;# 
  4334  090C                     	;# 
  4335  090E                     	;# 
  4336  090F                     	;# 
  4337  091F                     	;# 
  4338  098F                     	;# 
  4339  098F                     	;# 
  4340  0990                     	;# 
  4341  0991                     	;# 
  4342  0992                     	;# 
  4343  0993                     	;# 
  4344  0994                     	;# 
  4345  0995                     	;# 
  4346  0996                     	;# 
  4347  0997                     	;# 
  4348  1E0F                     	;# 
  4349  1E10                     	;# 
  4350  1E11                     	;# 
  4351  1E12                     	;# 
  4352  1E13                     	;# 
  4353  1E14                     	;# 
  4354  1E15                     	;# 
  4355  1E16                     	;# 
  4356  1E17                     	;# 
  4357  1E18                     	;# 
  4358  1E19                     	;# 
  4359  1E1A                     	;# 
  4360  1E1B                     	;# 
  4361  1E1C                     	;# 
  4362  1E1D                     	;# 
  4363  1E1E                     	;# 
  4364  1E1F                     	;# 
  4365  1E20                     	;# 
  4366  1E21                     	;# 
  4367  1E22                     	;# 
  4368  1E23                     	;# 
  4369  1E24                     	;# 
  4370  1E25                     	;# 
  4371  1E26                     	;# 
  4372  1E27                     	;# 
  4373  1E28                     	;# 
  4374  1E29                     	;# 
  4375  1E2A                     	;# 
  4376  1E2B                     	;# 
  4377  1E2C                     	;# 
  4378  1E2D                     	;# 
  4379  1E2E                     	;# 
  4380  1E2F                     	;# 
  4381  1E30                     	;# 
  4382  1E31                     	;# 
  4383  1E32                     	;# 
  4384  1E33                     	;# 
  4385  1E34                     	;# 
  4386  1E35                     	;# 
  4387  1E36                     	;# 
  4388  1E37                     	;# 
  4389  1E8F                     	;# 
  4390  1E90                     	;# 
  4391  1E91                     	;# 
  4392  1E92                     	;# 
  4393  1E93                     	;# 
  4394  1E9C                     	;# 
  4395  1EA1                     	;# 
  4396  1EA2                     	;# 
  4397  1EB1                     	;# 
  4398  1EBB                     	;# 
  4399  1EBC                     	;# 
  4400  1EBD                     	;# 
  4401  1EBE                     	;# 
  4402  1EC3                     	;# 
  4403  1EC5                     	;# 
  4404  1EC6                     	;# 
  4405  1EC7                     	;# 
  4406  1ECB                     	;# 
  4407  1ECC                     	;# 
  4408  1F10                     	;# 
  4409  1F11                     	;# 
  4410  1F12                     	;# 
  4411  1F13                     	;# 
  4412  1F14                     	;# 
  4413  1F15                     	;# 
  4414  1F20                     	;# 
  4415  1F21                     	;# 
  4416  1F22                     	;# 
  4417  1F23                     	;# 
  4418  1F24                     	;# 
  4419  1F25                     	;# 
  4420  1F38                     	;# 
  4421  1F39                     	;# 
  4422  1F3A                     	;# 
  4423  1F3B                     	;# 
  4424  1F3C                     	;# 
  4425  1F3D                     	;# 
  4426  1F3E                     	;# 
  4427  1F3F                     	;# 
  4428  1F4E                     	;# 
  4429  1F4F                     	;# 
  4430  1F50                     	;# 
  4431  1F51                     	;# 
  4432  1F52                     	;# 
  4433  1F53                     	;# 
  4434  1F54                     	;# 
  4435  1F55                     	;# 
  4436  1FE4                     	;# 
  4437  1FE5                     	;# 
  4438  1FE6                     	;# 
  4439  1FE7                     	;# 
  4440  1FE8                     	;# 
  4441  1FE8                     	;# 
  4442  1FE9                     	;# 
  4443  1FEA                     	;# 
  4444  1FEA                     	;# 
  4445  1FEB                     	;# 
  4446  1FED                     	;# 
  4447  1FEE                     	;# 
  4448  1FEF                     	;# 
  4449  0000                     	;# 
  4450  0001                     	;# 
  4451  0002                     	;# 
  4452  0003                     	;# 
  4453  0004                     	;# 
  4454  0005                     	;# 
  4455  0006                     	;# 
  4456  0007                     	;# 
  4457  0008                     	;# 
  4458  0009                     	;# 
  4459  000A                     	;# 
  4460  000B                     	;# 
  4461  000C                     	;# 
  4462  000E                     	;# 
  4463  0012                     	;# 
  4464  0014                     	;# 
  4465  0018                     	;# 
  4466  001A                     	;# 
  4467  009B                     	;# 
  4468  009B                     	;# 
  4469  009C                     	;# 
  4470  009D                     	;# 
  4471  009E                     	;# 
  4472  009F                     	;# 
  4473  0119                     	;# 
  4474  0119                     	;# 
  4475  0119                     	;# 
  4476  011A                     	;# 
  4477  011A                     	;# 
  4478  011A                     	;# 
  4479  011B                     	;# 
  4480  011B                     	;# 
  4481  011B                     	;# 
  4482  011B                     	;# 
  4483  011B                     	;# 
  4484  011C                     	;# 
  4485  011C                     	;# 
  4486  011C                     	;# 
  4487  011D                     	;# 
  4488  011D                     	;# 
  4489  011D                     	;# 
  4490  011E                     	;# 
  4491  011E                     	;# 
  4492  011E                     	;# 
  4493  011F                     	;# 
  4494  011F                     	;# 
  4495  011F                     	;# 
  4496  011F                     	;# 
  4497  011F                     	;# 
  4498  018C                     	;# 
  4499  018D                     	;# 
  4500  018E                     	;# 
  4501  018F                     	;# 
  4502  0190                     	;# 
  4503  0191                     	;# 
  4504  0192                     	;# 
  4505  020C                     	;# 
  4506  020C                     	;# 
  4507  020D                     	;# 
  4508  020E                     	;# 
  4509  020F                     	;# 
  4510  020F                     	;# 
  4511  0210                     	;# 
  4512  0210                     	;# 
  4513  0211                     	;# 
  4514  0211                     	;# 
  4515  028C                     	;# 
  4516  028C                     	;# 
  4517  028D                     	;# 
  4518  028D                     	;# 
  4519  028E                     	;# 
  4520  028F                     	;# 
  4521  0290                     	;# 
  4522  0291                     	;# 
  4523  030C                     	;# 
  4524  030C                     	;# 
  4525  030D                     	;# 
  4526  030E                     	;# 
  4527  030F                     	;# 
  4528  0310                     	;# 
  4529  0310                     	;# 
  4530  0311                     	;# 
  4531  0312                     	;# 
  4532  0313                     	;# 
  4533  0314                     	;# 
  4534  0314                     	;# 
  4535  0315                     	;# 
  4536  0316                     	;# 
  4537  0318                     	;# 
  4538  0318                     	;# 
  4539  0319                     	;# 
  4540  031A                     	;# 
  4541  031C                     	;# 
  4542  031C                     	;# 
  4543  031D                     	;# 
  4544  031E                     	;# 
  4545  038C                     	;# 
  4546  038C                     	;# 
  4547  038D                     	;# 
  4548  038E                     	;# 
  4549  058C                     	;# 
  4550  058C                     	;# 
  4551  058D                     	;# 
  4552  058E                     	;# 
  4553  058F                     	;# 
  4554  058F                     	;# 
  4555  0590                     	;# 
  4556  0591                     	;# 
  4557  0592                     	;# 
  4558  0593                     	;# 
  4559  059C                     	;# 
  4560  059C                     	;# 
  4561  059D                     	;# 
  4562  059D                     	;# 
  4563  059E                     	;# 
  4564  059F                     	;# 
  4565  060C                     	;# 
  4566  060D                     	;# 
  4567  060E                     	;# 
  4568  060F                     	;# 
  4569  0610                     	;# 
  4570  0611                     	;# 
  4571  0612                     	;# 
  4572  0613                     	;# 
  4573  0614                     	;# 
  4574  070C                     	;# 
  4575  070D                     	;# 
  4576  070E                     	;# 
  4577  070F                     	;# 
  4578  0710                     	;# 
  4579  0711                     	;# 
  4580  0712                     	;# 
  4581  0713                     	;# 
  4582  0716                     	;# 
  4583  0717                     	;# 
  4584  0718                     	;# 
  4585  0719                     	;# 
  4586  071A                     	;# 
  4587  071B                     	;# 
  4588  071C                     	;# 
  4589  071D                     	;# 
  4590  0796                     	;# 
  4591  0797                     	;# 
  4592  0798                     	;# 
  4593  0799                     	;# 
  4594  079A                     	;# 
  4595  079B                     	;# 
  4596  080C                     	;# 
  4597  080D                     	;# 
  4598  080E                     	;# 
  4599  080F                     	;# 
  4600  0810                     	;# 
  4601  0811                     	;# 
  4602  0812                     	;# 
  4603  0813                     	;# 
  4604  0814                     	;# 
  4605  081A                     	;# 
  4606  081A                     	;# 
  4607  081B                     	;# 
  4608  081C                     	;# 
  4609  081C                     	;# 
  4610  081D                     	;# 
  4611  081E                     	;# 
  4612  081F                     	;# 
  4613  088C                     	;# 
  4614  088D                     	;# 
  4615  088E                     	;# 
  4616  088F                     	;# 
  4617  0890                     	;# 
  4618  0891                     	;# 
  4619  0892                     	;# 
  4620  0893                     	;# 
  4621  0895                     	;# 
  4622  0896                     	;# 
  4623  090C                     	;# 
  4624  090E                     	;# 
  4625  090F                     	;# 
  4626  091F                     	;# 
  4627  098F                     	;# 
  4628  098F                     	;# 
  4629  0990                     	;# 
  4630  0991                     	;# 
  4631  0992                     	;# 
  4632  0993                     	;# 
  4633  0994                     	;# 
  4634  0995                     	;# 
  4635  0996                     	;# 
  4636  0997                     	;# 
  4637  1E0F                     	;# 
  4638  1E10                     	;# 
  4639  1E11                     	;# 
  4640  1E12                     	;# 
  4641  1E13                     	;# 
  4642  1E14                     	;# 
  4643  1E15                     	;# 
  4644  1E16                     	;# 
  4645  1E17                     	;# 
  4646  1E18                     	;# 
  4647  1E19                     	;# 
  4648  1E1A                     	;# 
  4649  1E1B                     	;# 
  4650  1E1C                     	;# 
  4651  1E1D                     	;# 
  4652  1E1E                     	;# 
  4653  1E1F                     	;# 
  4654  1E20                     	;# 
  4655  1E21                     	;# 
  4656  1E22                     	;# 
  4657  1E23                     	;# 
  4658  1E24                     	;# 
  4659  1E25                     	;# 
  4660  1E26                     	;# 
  4661  1E27                     	;# 
  4662  1E28                     	;# 
  4663  1E29                     	;# 
  4664  1E2A                     	;# 
  4665  1E2B                     	;# 
  4666  1E2C                     	;# 
  4667  1E2D                     	;# 
  4668  1E2E                     	;# 
  4669  1E2F                     	;# 
  4670  1E30                     	;# 
  4671  1E31                     	;# 
  4672  1E32                     	;# 
  4673  1E33                     	;# 
  4674  1E34                     	;# 
  4675  1E35                     	;# 
  4676  1E36                     	;# 
  4677  1E37                     	;# 
  4678  1E8F                     	;# 
  4679  1E90                     	;# 
  4680  1E91                     	;# 
  4681  1E92                     	;# 
  4682  1E93                     	;# 
  4683  1E9C                     	;# 
  4684  1EA1                     	;# 
  4685  1EA2                     	;# 
  4686  1EB1                     	;# 
  4687  1EBB                     	;# 
  4688  1EBC                     	;# 
  4689  1EBD                     	;# 
  4690  1EBE                     	;# 
  4691  1EC3                     	;# 
  4692  1EC5                     	;# 
  4693  1EC6                     	;# 
  4694  1EC7                     	;# 
  4695  1ECB                     	;# 
  4696  1ECC                     	;# 
  4697  1F10                     	;# 
  4698  1F11                     	;# 
  4699  1F12                     	;# 
  4700  1F13                     	;# 
  4701  1F14                     	;# 
  4702  1F15                     	;# 
  4703  1F20                     	;# 
  4704  1F21                     	;# 
  4705  1F22                     	;# 
  4706  1F23                     	;# 
  4707  1F24                     	;# 
  4708  1F25                     	;# 
  4709  1F38                     	;# 
  4710  1F39                     	;# 
  4711  1F3A                     	;# 
  4712  1F3B                     	;# 
  4713  1F3C                     	;# 
  4714  1F3D                     	;# 
  4715  1F3E                     	;# 
  4716  1F3F                     	;# 
  4717  1F4E                     	;# 
  4718  1F4F                     	;# 
  4719  1F50                     	;# 
  4720  1F51                     	;# 
  4721  1F52                     	;# 
  4722  1F53                     	;# 
  4723  1F54                     	;# 
  4724  1F55                     	;# 
  4725  1FE4                     	;# 
  4726  1FE5                     	;# 
  4727  1FE6                     	;# 
  4728  1FE7                     	;# 
  4729  1FE8                     	;# 
  4730  1FE8                     	;# 
  4731  1FE9                     	;# 
  4732  1FEA                     	;# 
  4733  1FEA                     	;# 
  4734  1FEB                     	;# 
  4735  1FED                     	;# 
  4736  1FEE                     	;# 
  4737  1FEF                     	;# 
  4738  0000                     	;# 
  4739  0001                     	;# 
  4740  0002                     	;# 
  4741  0003                     	;# 
  4742  0004                     	;# 
  4743  0005                     	;# 
  4744  0006                     	;# 
  4745  0007                     	;# 
  4746  0008                     	;# 
  4747  0009                     	;# 
  4748  000A                     	;# 
  4749  000B                     	;# 
  4750  000C                     	;# 
  4751  000E                     	;# 
  4752  0012                     	;# 
  4753  0014                     	;# 
  4754  0018                     	;# 
  4755  001A                     	;# 
  4756  009B                     	;# 
  4757  009B                     	;# 
  4758  009C                     	;# 
  4759  009D                     	;# 
  4760  009E                     	;# 
  4761  009F                     	;# 
  4762  0119                     	;# 
  4763  0119                     	;# 
  4764  0119                     	;# 
  4765  011A                     	;# 
  4766  011A                     	;# 
  4767  011A                     	;# 
  4768  011B                     	;# 
  4769  011B                     	;# 
  4770  011B                     	;# 
  4771  011B                     	;# 
  4772  011B                     	;# 
  4773  011C                     	;# 
  4774  011C                     	;# 
  4775  011C                     	;# 
  4776  011D                     	;# 
  4777  011D                     	;# 
  4778  011D                     	;# 
  4779  011E                     	;# 
  4780  011E                     	;# 
  4781  011E                     	;# 
  4782  011F                     	;# 
  4783  011F                     	;# 
  4784  011F                     	;# 
  4785  011F                     	;# 
  4786  011F                     	;# 
  4787  018C                     	;# 
  4788  018D                     	;# 
  4789  018E                     	;# 
  4790  018F                     	;# 
  4791  0190                     	;# 
  4792  0191                     	;# 
  4793  0192                     	;# 
  4794  020C                     	;# 
  4795  020C                     	;# 
  4796  020D                     	;# 
  4797  020E                     	;# 
  4798  020F                     	;# 
  4799  020F                     	;# 
  4800  0210                     	;# 
  4801  0210                     	;# 
  4802  0211                     	;# 
  4803  0211                     	;# 
  4804  028C                     	;# 
  4805  028C                     	;# 
  4806  028D                     	;# 
  4807  028D                     	;# 
  4808  028E                     	;# 
  4809  028F                     	;# 
  4810  0290                     	;# 
  4811  0291                     	;# 
  4812  030C                     	;# 
  4813  030C                     	;# 
  4814  030D                     	;# 
  4815  030E                     	;# 
  4816  030F                     	;# 
  4817  0310                     	;# 
  4818  0310                     	;# 
  4819  0311                     	;# 
  4820  0312                     	;# 
  4821  0313                     	;# 
  4822  0314                     	;# 
  4823  0314                     	;# 
  4824  0315                     	;# 
  4825  0316                     	;# 
  4826  0318                     	;# 
  4827  0318                     	;# 
  4828  0319                     	;# 
  4829  031A                     	;# 
  4830  031C                     	;# 
  4831  031C                     	;# 
  4832  031D                     	;# 
  4833  031E                     	;# 
  4834  038C                     	;# 
  4835  038C                     	;# 
  4836  038D                     	;# 
  4837  038E                     	;# 
  4838  058C                     	;# 
  4839  058C                     	;# 
  4840  058D                     	;# 
  4841  058E                     	;# 
  4842  058F                     	;# 
  4843  058F                     	;# 
  4844  0590                     	;# 
  4845  0591                     	;# 
  4846  0592                     	;# 
  4847  0593                     	;# 
  4848  059C                     	;# 
  4849  059C                     	;# 
  4850  059D                     	;# 
  4851  059D                     	;# 
  4852  059E                     	;# 
  4853  059F                     	;# 
  4854  060C                     	;# 
  4855  060D                     	;# 
  4856  060E                     	;# 
  4857  060F                     	;# 
  4858  0610                     	;# 
  4859  0611                     	;# 
  4860  0612                     	;# 
  4861  0613                     	;# 
  4862  0614                     	;# 
  4863  070C                     	;# 
  4864  070D                     	;# 
  4865  070E                     	;# 
  4866  070F                     	;# 
  4867  0710                     	;# 
  4868  0711                     	;# 
  4869  0712                     	;# 
  4870  0713                     	;# 
  4871  0716                     	;# 
  4872  0717                     	;# 
  4873  0718                     	;# 
  4874  0719                     	;# 
  4875  071A                     	;# 
  4876  071B                     	;# 
  4877  071C                     	;# 
  4878  071D                     	;# 
  4879  0796                     	;# 
  4880  0797                     	;# 
  4881  0798                     	;# 
  4882  0799                     	;# 
  4883  079A                     	;# 
  4884  079B                     	;# 
  4885  080C                     	;# 
  4886  080D                     	;# 
  4887  080E                     	;# 
  4888  080F                     	;# 
  4889  0810                     	;# 
  4890  0811                     	;# 
  4891  0812                     	;# 
  4892  0813                     	;# 
  4893  0814                     	;# 
  4894  081A                     	;# 
  4895  081A                     	;# 
  4896  081B                     	;# 
  4897  081C                     	;# 
  4898  081C                     	;# 
  4899  081D                     	;# 
  4900  081E                     	;# 
  4901  081F                     	;# 
  4902  088C                     	;# 
  4903  088D                     	;# 
  4904  088E                     	;# 
  4905  088F                     	;# 
  4906  0890                     	;# 
  4907  0891                     	;# 
  4908  0892                     	;# 
  4909  0893                     	;# 
  4910  0895                     	;# 
  4911  0896                     	;# 
  4912  090C                     	;# 
  4913  090E                     	;# 
  4914  090F                     	;# 
  4915  091F                     	;# 
  4916  098F                     	;# 
  4917  098F                     	;# 
  4918  0990                     	;# 
  4919  0991                     	;# 
  4920  0992                     	;# 
  4921  0993                     	;# 
  4922  0994                     	;# 
  4923  0995                     	;# 
  4924  0996                     	;# 
  4925  0997                     	;# 
  4926  1E0F                     	;# 
  4927  1E10                     	;# 
  4928  1E11                     	;# 
  4929  1E12                     	;# 
  4930  1E13                     	;# 
  4931  1E14                     	;# 
  4932  1E15                     	;# 
  4933  1E16                     	;# 
  4934  1E17                     	;# 
  4935  1E18                     	;# 
  4936  1E19                     	;# 
  4937  1E1A                     	;# 
  4938  1E1B                     	;# 
  4939  1E1C                     	;# 
  4940  1E1D                     	;# 
  4941  1E1E                     	;# 
  4942  1E1F                     	;# 
  4943  1E20                     	;# 
  4944  1E21                     	;# 
  4945  1E22                     	;# 
  4946  1E23                     	;# 
  4947  1E24                     	;# 
  4948  1E25                     	;# 
  4949  1E26                     	;# 
  4950  1E27                     	;# 
  4951  1E28                     	;# 
  4952  1E29                     	;# 
  4953  1E2A                     	;# 
  4954  1E2B                     	;# 
  4955  1E2C                     	;# 
  4956  1E2D                     	;# 
  4957  1E2E                     	;# 
  4958  1E2F                     	;# 
  4959  1E30                     	;# 
  4960  1E31                     	;# 
  4961  1E32                     	;# 
  4962  1E33                     	;# 
  4963  1E34                     	;# 
  4964  1E35                     	;# 
  4965  1E36                     	;# 
  4966  1E37                     	;# 
  4967  1E8F                     	;# 
  4968  1E90                     	;# 
  4969  1E91                     	;# 
  4970  1E92                     	;# 
  4971  1E93                     	;# 
  4972  1E9C                     	;# 
  4973  1EA1                     	;# 
  4974  1EA2                     	;# 
  4975  1EB1                     	;# 
  4976  1EBB                     	;# 
  4977  1EBC                     	;# 
  4978  1EBD                     	;# 
  4979  1EBE                     	;# 
  4980  1EC3                     	;# 
  4981  1EC5                     	;# 
  4982  1EC6                     	;# 
  4983  1EC7                     	;# 
  4984  1ECB                     	;# 
  4985  1ECC                     	;# 
  4986  1F10                     	;# 
  4987  1F11                     	;# 
  4988  1F12                     	;# 
  4989  1F13                     	;# 
  4990  1F14                     	;# 
  4991  1F15                     	;# 
  4992  1F20                     	;# 
  4993  1F21                     	;# 
  4994  1F22                     	;# 
  4995  1F23                     	;# 
  4996  1F24                     	;# 
  4997  1F25                     	;# 
  4998  1F38                     	;# 
  4999  1F39                     	;# 
  5000  1F3A                     	;# 
  5001  1F3B                     	;# 
  5002  1F3C                     	;# 
  5003  1F3D                     	;# 
  5004  1F3E                     	;# 
  5005  1F3F                     	;# 
  5006  1F4E                     	;# 
  5007  1F4F                     	;# 
  5008  1F50                     	;# 
  5009  1F51                     	;# 
  5010  1F52                     	;# 
  5011  1F53                     	;# 
  5012  1F54                     	;# 
  5013  1F55                     	;# 
  5014  1FE4                     	;# 
  5015  1FE5                     	;# 
  5016  1FE6                     	;# 
  5017  1FE7                     	;# 
  5018  1FE8                     	;# 
  5019  1FE8                     	;# 
  5020  1FE9                     	;# 
  5021  1FEA                     	;# 
  5022  1FEA                     	;# 
  5023  1FEB                     	;# 
  5024  1FED                     	;# 
  5025  1FEE                     	;# 
  5026  1FEF                     	;# 
  5027                           
  5028 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
  5029  0000                     
  5030 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
  5031  0000                     
  5032 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
  5033  0000                     
  5034                           	psect	idataBANK0
  5035  0620                     __pidataBANK0:
  5036                           
  5037                           ;initializer for _AdcResult
  5038  0620  34FF               	retlw	255
  5039  0621  3403               	retlw	3
  5040  0622  34FF               	retlw	255
  5041  0623  3403               	retlw	3
  5042  0624  34FF               	retlw	255
  5043  0625  3403               	retlw	3
  5044  0626  34FF               	retlw	255
  5045  0627  3403               	retlw	3
  5046  0628  34FF               	retlw	255
  5047  0629  3403               	retlw	3
  5048  062A  34FF               	retlw	255
  5049  062B  3403               	retlw	3
  5050  062C  34FF               	retlw	255
  5051  062D  3403               	retlw	3
  5052  062E  34FF               	retlw	255
  5053  062F  3403               	retlw	3
  5054                           
  5055                           	psect	idataBANK1
  5056  0353                     __pidataBANK1:
  5057                           
  5058                           ;initializer for _LedBit
  5059  0353  3400               	retlw	0
  5060  0354  3400               	retlw	0
  5061  0355  3492               	retlw	low _LedOff
  5062  0356  3404               	retlw	high _LedOff
  5063  0357  3400               	retlw	0
  5064  0358  34FE               	retlw	254
  5065  0359  3400               	retlw	0
  5066  035A  3400               	retlw	0
  5067  035B  3401               	retlw	1
  5068  035C  3457               	retlw	low _PWM1_LoadDutyValue
  5069  035D  3405               	retlw	high _PWM1_LoadDutyValue
  5070  035E  3401               	retlw	1
  5071  035F  3400               	retlw	0
  5072  0360  3492               	retlw	low _LedOff
  5073  0361  3404               	retlw	high _LedOff
  5074  0362  3400               	retlw	0
  5075  0363  34FE               	retlw	254
  5076  0364  3400               	retlw	0
  5077  0365  3400               	retlw	0
  5078  0366  3401               	retlw	1
  5079  0367  346D               	retlw	low _PWM2_LoadDutyValue
  5080  0368  3405               	retlw	high _PWM2_LoadDutyValue
  5081  0369  3402               	retlw	2
  5082  036A  3400               	retlw	0
  5083  036B  3492               	retlw	low _LedOff
  5084  036C  3404               	retlw	high _LedOff
  5085  036D  3400               	retlw	0
  5086  036E  3419               	retlw	25
  5087  036F  3400               	retlw	0
  5088  0370  3400               	retlw	0
  5089  0371  3401               	retlw	1
  5090  0372  3499               	retlw	low _PWM3_LoadDutyValue
  5091  0373  3405               	retlw	high _PWM3_LoadDutyValue
  5092  0374  3403               	retlw	3
  5093  0375  3400               	retlw	0
  5094  0376  3492               	retlw	low _LedOff
  5095  0377  3404               	retlw	high _LedOff
  5096  0378  3400               	retlw	0
  5097  0379  3419               	retlw	25
  5098  037A  3400               	retlw	0
  5099  037B  3400               	retlw	0
  5100  037C  3401               	retlw	1
  5101  037D  34AF               	retlw	low _PWM4_LoadDutyValue
  5102  037E  3405               	retlw	high _PWM4_LoadDutyValue
  5103  037F  3404               	retlw	4
  5104  0380  3400               	retlw	0
  5105  0381  3492               	retlw	low _LedOff
  5106  0382  3404               	retlw	high _LedOff
  5107  0383  3400               	retlw	0
  5108  0384  3450               	retlw	80
  5109  0385  3400               	retlw	0
  5110  0386  3400               	retlw	0
  5111  0387  3401               	retlw	1
  5112  0388  3483               	retlw	low _PWM5_LoadDutyValue
  5113  0389  3405               	retlw	high _PWM5_LoadDutyValue
  5114  038A  3405               	retlw	5
  5115  038B  3400               	retlw	0
  5116  038C  3492               	retlw	low _LedOff
  5117  038D  3404               	retlw	high _LedOff
  5118  038E  3400               	retlw	0
  5119  038F  3450               	retlw	80
  5120  0390  3400               	retlw	0
  5121  0391  3400               	retlw	0
  5122  0392  3401               	retlw	1
  5123  0393  34C5               	retlw	low _PWM6_LoadDutyValue
  5124  0394  3405               	retlw	high _PWM6_LoadDutyValue
  5125                           
  5126                           	psect	nvBANK0
  5127  0064                     __pnvBANK0:
  5128  0064                     _IOCAF3_InterruptHandler:
  5129  0064                     	ds	2
  5130  000C                     _PORTAbits	set	12
  5131  0014                     _TRISCbits	set	20
  5132  001A                     _LATCbits	set	26
  5133  000B                     _INTCONbits	set	11
  5134  0014                     _TRISC	set	20
  5135  0012                     _TRISA	set	18
  5136  001A                     _LATC	set	26
  5137  0018                     _LATA	set	24
  5138  009D                     _ADCON0bits	set	157
  5139  009D                     _ADCON0	set	157
  5140  009C                     _ADRESH	set	156
  5141  009B                     _ADRESL	set	155
  5142  009F                     _ADACT	set	159
  5143  009E                     _ADCON1	set	158
  5144  011C                     _SP1BRGH	set	284
  5145  011B                     _SP1BRGL	set	283
  5146  011E                     _TX1STA	set	286
  5147  011D                     _RC1STA	set	285
  5148  011F                     _BAUD1CON	set	287
  5149  020E                     _T1CONbits	set	526
  5150  020E                     _T1CON	set	526
  5151  020C                     _TMR1L	set	524
  5152  020D                     _TMR1H	set	525
  5153  0211                     _T1CLK	set	529
  5154  0210                     _T1GATE	set	528
  5155  020F                     _T1GCON	set	527
  5156  028E                     _T2CON	set	654
  5157  028C                     _T2TMR	set	652
  5158  028D                     _T2PR	set	653
  5159  0291                     _T2RST	set	657
  5160  028F                     _T2HLT	set	655
  5161  0290                     _T2CLKCON	set	656
  5162  030E                     _CCP1CONbits	set	782
  5163  030C                     _CCPR1L	set	780
  5164  030D                     _CCPR1H	set	781
  5165  030E                     _CCP1CON	set	782
  5166  0312                     _CCP2CONbits	set	786
  5167  0310                     _CCPR2L	set	784
  5168  0311                     _CCPR2H	set	785
  5169  0312                     _CCP2CON	set	786
  5170  031C                     _PWM5DCL	set	796
  5171  031D                     _PWM5DCH	set	797
  5172  031E                     _PWM5CON	set	798
  5173  0314                     _PWM3DCL	set	788
  5174  0315                     _PWM3DCH	set	789
  5175  0316                     _PWM3CON	set	790
  5176  0318                     _PWM4DCL	set	792
  5177  0319                     _PWM4DCH	set	793
  5178  031A                     _PWM4CON	set	794
  5179  038C                     _PWM6DCL	set	908
  5180  038D                     _PWM6DCH	set	909
  5181  038E                     _PWM6CON	set	910
  5182  059E                     _T0CON0	set	1438
  5183  059C                     _TMR0L	set	1436
  5184  059D                     _TMR0H	set	1437
  5185  059F                     _T0CON1	set	1439
  5186  071A                     _PIE4bits	set	1818
  5187  070C                     _PIR0bits	set	1804
  5188  0716                     _PIE0bits	set	1814
  5189  0710                     _PIR4bits	set	1808
  5190  079B                     _PMD5	set	1947
  5191  079A                     _PMD4	set	1946
  5192  0799                     _PMD3	set	1945
  5193  0798                     _PMD2	set	1944
  5194  0797                     _PMD1	set	1943
  5195  0796                     _PMD0	set	1942
  5196  0892                     _OSCTUNE	set	2194
  5197  0890                     _OSCSTAT	set	2192
  5198  0893                     _OSCFRQ	set	2195
  5199  0891                     _OSCEN	set	2193
  5200  088F                     _OSCCON3	set	2191
  5201  088D                     _OSCCON1	set	2189
  5202  4480                     _PLLR	set	17536
  5203  090C                     _FVRCON	set	2316
  5204  1ECB                     _RX1DTPPS	set	7883
  5205  1EC3                     _ADACTPPS	set	7875
  5206  1F25                     _RC5PPS	set	7973
  5207  1F12                     _RA2PPS	set	7954
  5208  1F22                     _RC2PPS	set	7970
  5209  1F15                     _RA5PPS	set	7957
  5210  1F24                     _RC4PPS	set	7972
  5211  1F23                     _RC3PPS	set	7971
  5212  1F14                     _RA4PPS	set	7956
  5213  1F3D                     _IOCAPbits	set	7997
  5214  1F3E                     _IOCANbits	set	7998
  5215  1F3F                     _IOCAFbits	set	7999
  5216  1F52                     _INLVLC	set	8018
  5217  1F3C                     _INLVLA	set	7996
  5218  1F51                     _SLRCONC	set	8017
  5219  1F3B                     _SLRCONA	set	7995
  5220  1F50                     _ODCONC	set	8016
  5221  1F3A                     _ODCONA	set	7994
  5222  1F4F                     _WPUC	set	8015
  5223  1F39                     _WPUA	set	7993
  5224  1F38                     _ANSELA	set	7992
  5225  1F4E                     _ANSELC	set	8014
  5226                           
  5227                           	psect	cinit
  5228  001A                     start_initialization:	
  5229                           ; #config settings
  5230                           
  5231  001A                     __initialization:
  5232                           
  5233                           ; Initialize objects allocated to BANK0
  5234  001A  3020               	movlw	low __pidataBANK0
  5235  001B  0084               	movwf	4
  5236  001C  3086               	movlw	(high __pidataBANK0)| (0+128)
  5237  001D  0085               	movwf	5
  5238  001E  3054               	movlw	low __pdataBANK0
  5239  001F  0086               	movwf	6
  5240  0020  3000               	movlw	high __pdataBANK0
  5241  0021  0087               	movwf	7
  5242  0022  3010               	movlw	16
  5243  0023  26E5               	fcall	init_ram
  5244                           
  5245                           ; Initialize objects allocated to BANK1
  5246  0024  3053               	movlw	low __pidataBANK1
  5247  0025  0084               	movwf	4
  5248  0026  3083               	movlw	(high __pidataBANK1)| (0+128)
  5249  0027  0085               	movwf	5
  5250  0028  30A0               	movlw	low __pdataBANK1
  5251  0029  0086               	movwf	6
  5252  002A  3000               	movlw	high __pdataBANK1
  5253  002B  0087               	movwf	7
  5254  002C  3042               	movlw	66
  5255  002D  26E5               	fcall	init_ram
  5256                           
  5257                           ; Clear objects allocated to COMMON
  5258  002E  01FA               	clrf	__pbssCOMMON& (0+127)
  5259  002F  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  5260                           
  5261                           ; Clear objects allocated to BANK0
  5262  0030  3020               	movlw	low __pbssBANK0
  5263  0031  0084               	movwf	4
  5264  0032  3000               	movlw	high __pbssBANK0
  5265  0033  0085               	movwf	5
  5266  0034  3021               	movlw	33
  5267  0035  26EB               	fcall	clear_ram0
  5268  0036                     end_of_initialization:	
  5269                           ;End of C runtime variable initialization code
  5270                           
  5271  0036                     __end_of__initialization:
  5272  0036  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5273  0037  0140               	movlb	0
  5274  0038  2A42               	ljmp	_main	;jump to C main() function
  5275                           
  5276                           	psect	bssCOMMON
  5277  007A                     __pbssCOMMON:
  5278  007A                     _timer0ReloadVal16bit:
  5279  007A                     	ds	2
  5280                           
  5281                           	psect	bssBANK0
  5282  0020                     __pbssBANK0:
  5283  0020                     _EUSART1_ErrorHandler:
  5284  0020                     	ds	2
  5285  0022                     _EUSART1_OverrunErrorHandler:
  5286  0022                     	ds	2
  5287  0024                     _EUSART1_FramingErrorHandler:
  5288  0024                     	ds	2
  5289  0026                     _Random:
  5290  0026                     	ds	2
  5291  0028                     _AdcResultAvg:
  5292  0028                     	ds	2
  5293  002A                     _AdcResultSample:
  5294  002A                     	ds	2
  5295  002C                     _TMR1_InterruptHandler:
  5296  002C                     	ds	2
  5297  002E                     _timer1ReloadVal:
  5298  002E                     	ds	2
  5299  0030                     _TMR0_InterruptHandler:
  5300  0030                     	ds	2
  5301  0032                     _ADC_InterruptHandler:
  5302  0032                     	ds	2
  5303  0034                     _eusart1RxLastError:
  5304  0034                     	ds	1
  5305  0035                     _ReturnVal:
  5306  0035                     	ds	1
  5307  0036                     _pAdcResult:
  5308  0036                     	ds	1
  5309  0037                     _AdcState:
  5310  0037                     	ds	1
  5311  0038                     _CarrOff:
  5312  0038                     	ds	1
  5313  0039                     _BattProtect:
  5314  0039                     	ds	1
  5315  003A                     _UpdateVbatt:
  5316  003A                     	ds	1
  5317  003B                     _UpdateRcs:
  5318  003B                     	ds	1
  5319  003C                     _UpdateLeds:
  5320  003C                     	ds	1
  5321  003D                     _seed:
  5322  003D                     	ds	4
  5323                           
  5324                           	psect	dataBANK0
  5325  0054                     __pdataBANK0:
  5326  0054                     _AdcResult:
  5327  0054                     	ds	16
  5328                           
  5329                           	psect	dataBANK1
  5330  00A0                     __pdataBANK1:
  5331  00A0                     _LedBit:
  5332  00A0                     	ds	66
  5333                           
  5334                           	psect	inittext
  5335  06E5                     init_ram:
  5336  06E5  00FE               	movwf	126
  5337  06E6                     initloop:
  5338  06E6  0012               	moviw fsr0++
  5339  06E7  001E               	movwi fsr1++
  5340  06E8  0BFE               	decfsz	126,f
  5341  06E9  2EE6               	goto	initloop
  5342  06EA  3400               	retlw	0
  5343                           
  5344                           	psect	clrtext
  5345  06EB                     clear_ram0:	
  5346                           ;	Called with FSR0 containing the base address, and
  5347                           ;	WREG with the size to clear
  5348                           
  5349  06EB  0064               	clrwdt	;clear the watchdog before getting into this loop
  5350  06EC                     clrloop0:
  5351  06EC  0180               	clrf	0	;clear RAM location pointed to by FSR
  5352  06ED  3101               	addfsr 0,1
  5353  06EE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5354  06EF  2EEC               	goto	clrloop0	;have we reached the end yet?
  5355  06F0  3400               	retlw	0	;all done for this memory range, return
  5356                           
  5357                           	psect	cstackCOMMON
  5358  0070                     __pcstackCOMMON:
  5359  0070                     ?_IOCAF3_DefaultInterruptHandler:
  5360  0070                     ??_IOCAF3_DefaultInterruptHandler:	
  5361                           ; 1 bytes @ 0x0
  5362                           
  5363  0070                     ?_IOCAF3_ISR:	
  5364                           ; 1 bytes @ 0x0
  5365                           
  5366  0070                     ?_PMD_Initialize:	
  5367                           ; 1 bytes @ 0x0
  5368                           
  5369  0070                     ?_OSCILLATOR_Initialize:	
  5370                           ; 1 bytes @ 0x0
  5371                           
  5372  0070                     ?_PWM2_Initialize:	
  5373                           ; 1 bytes @ 0x0
  5374                           
  5375  0070                     ?_TMR0_Initialize:	
  5376                           ; 1 bytes @ 0x0
  5377                           
  5378  0070                     ?_PWM1_Initialize:	
  5379                           ; 1 bytes @ 0x0
  5380                           
  5381  0070                     ?_TMR1_Initialize:	
  5382                           ; 1 bytes @ 0x0
  5383                           
  5384  0070                     ?_EUSART1_Initialize:	
  5385                           ; 1 bytes @ 0x0
  5386                           
  5387  0070                     ?_TMR0_ISR:	
  5388                           ; 1 bytes @ 0x0
  5389                           
  5390  0070                     ??_TMR0_ISR:	
  5391                           ; 1 bytes @ 0x0
  5392                           
  5393  0070                     ?_TMR1_ISR:	
  5394                           ; 1 bytes @ 0x0
  5395                           
  5396  0070                     ?_TMR0_DefaultInterruptHandler:	
  5397                           ; 1 bytes @ 0x0
  5398                           
  5399  0070                     ??_TMR0_DefaultInterruptHandler:	
  5400                           ; 1 bytes @ 0x0
  5401                           
  5402  0070                     ?_TMR1_DefaultInterruptHandler:	
  5403                           ; 1 bytes @ 0x0
  5404                           
  5405  0070                     ??_TMR1_DefaultInterruptHandler:	
  5406                           ; 1 bytes @ 0x0
  5407                           
  5408  0070                     ?_TMR0_INT:	
  5409                           ; 1 bytes @ 0x0
  5410                           
  5411  0070                     ??_TMR0_INT:	
  5412                           ; 1 bytes @ 0x0
  5413                           
  5414  0070                     ?_TMR1_INT:	
  5415                           ; 1 bytes @ 0x0
  5416                           
  5417  0070                     ??_TMR1_INT:	
  5418                           ; 1 bytes @ 0x0
  5419                           
  5420  0070                     ?_RCS_INT:	
  5421                           ; 1 bytes @ 0x0
  5422                           
  5423  0070                     ?_INITxEXECUTER:	
  5424                           ; 1 bytes @ 0x0
  5425                           
  5426  0070                     ?_EXECUTExEFFECT:	
  5427                           ; 1 bytes @ 0x0
  5428                           
  5429  0070                     ?_RCSxLED:	
  5430                           ; 1 bytes @ 0x0
  5431                           
  5432  0070                     ?_BATTxPROTECT:	
  5433                           ; 1 bytes @ 0x0
  5434                           
  5435  0070                     ?_CalcPwm:	
  5436                           ; 1 bytes @ 0x0
  5437                           
  5438  0070                     ?_TMR2_Initialize:	
  5439                           ; 1 bytes @ 0x0
  5440                           
  5441  0070                     ?_ADC_Initialize:	
  5442                           ; 1 bytes @ 0x0
  5443                           
  5444  0070                     ?_ADC_SelectChannel:	
  5445                           ; 1 bytes @ 0x0
  5446                           
  5447  0070                     ?_ADC_StartConversion:	
  5448                           ; 1 bytes @ 0x0
  5449                           
  5450  0070                     ?_ADC_IsConversionDone:	
  5451                           ; 1 bytes @ 0x0
  5452                           
  5453  0070                     ?_PWM4_Initialize:	
  5454                           ; 1 bytes @ 0x0
  5455                           
  5456  0070                     ?_PWM3_Initialize:	
  5457                           ; 1 bytes @ 0x0
  5458                           
  5459  0070                     ?_PWM6_Initialize:	
  5460                           ; 1 bytes @ 0x0
  5461                           
  5462  0070                     ?_PWM5_Initialize:	
  5463                           ; 1 bytes @ 0x0
  5464                           
  5465  0070                     ?_FVR_Initialize:	
  5466                           ; 1 bytes @ 0x0
  5467                           
  5468  0070                     ?_PIN_MANAGER_Initialize:	
  5469                           ; 1 bytes @ 0x0
  5470                           
  5471  0070                     ?_PIN_MANAGER_IOC:	
  5472                           ; 1 bytes @ 0x0
  5473                           
  5474  0070                     ?_SYSTEM_Initialize:	
  5475                           ; 1 bytes @ 0x0
  5476                           
  5477  0070                     ?_INTERRUPT_InterruptManager:	
  5478                           ; 1 bytes @ 0x0
  5479                           
  5480  0070                     ?_TMR1_WriteTimer:	
  5481                           ; 1 bytes @ 0x0
  5482                           
  5483  0070                     ?_TMR1_Reload:	
  5484                           ; 1 bytes @ 0x0
  5485                           
  5486  0070                     ?_main:	
  5487                           ; 1 bytes @ 0x0
  5488                           
  5489  0070                     TMR1_WriteTimer@timerVal:	
  5490                           ; 1 bytes @ 0x0
  5491                           
  5492                           
  5493                           ; 2 bytes @ 0x0
  5494  0070                     	ds	2
  5495  0072                     ?_IOCAF3_SetInterruptHandler:
  5496  0072                     ??_IOCAF3_ISR:	
  5497                           ; 1 bytes @ 0x2
  5498                           
  5499  0072                     ??_PMD_Initialize:	
  5500                           ; 1 bytes @ 0x2
  5501                           
  5502  0072                     ??_OSCILLATOR_Initialize:	
  5503                           ; 1 bytes @ 0x2
  5504                           
  5505  0072                     ??_PWM2_Initialize:	
  5506                           ; 1 bytes @ 0x2
  5507                           
  5508  0072                     ??_PWM1_Initialize:	
  5509                           ; 1 bytes @ 0x2
  5510                           
  5511  0072                     ??_TMR1_ISR:	
  5512                           ; 1 bytes @ 0x2
  5513                           
  5514  0072                     ?_TMR0_SetInterruptHandler:	
  5515                           ; 1 bytes @ 0x2
  5516                           
  5517  0072                     ?_TMR1_SetInterruptHandler:	
  5518                           ; 1 bytes @ 0x2
  5519                           
  5520  0072                     ??_RCS_INT:	
  5521                           ; 1 bytes @ 0x2
  5522                           
  5523  0072                     ??_BATTxPROTECT:	
  5524                           ; 1 bytes @ 0x2
  5525                           
  5526  0072                     ?_srand:	
  5527                           ; 1 bytes @ 0x2
  5528                           
  5529  0072                     ?_EUSART1_SetFramingErrorHandler:	
  5530                           ; 1 bytes @ 0x2
  5531                           
  5532  0072                     ?_EUSART1_SetOverrunErrorHandler:	
  5533                           ; 1 bytes @ 0x2
  5534                           
  5535  0072                     ?_EUSART1_SetErrorHandler:	
  5536                           ; 1 bytes @ 0x2
  5537                           
  5538  0072                     ??_TMR2_Initialize:	
  5539                           ; 1 bytes @ 0x2
  5540                           
  5541  0072                     ??_ADC_Initialize:	
  5542                           ; 1 bytes @ 0x2
  5543                           
  5544  0072                     ??_ADC_SelectChannel:	
  5545                           ; 1 bytes @ 0x2
  5546                           
  5547  0072                     ??_ADC_StartConversion:	
  5548                           ; 1 bytes @ 0x2
  5549                           
  5550  0072                     ??_ADC_IsConversionDone:	
  5551                           ; 1 bytes @ 0x2
  5552                           
  5553  0072                     ??_PWM4_Initialize:	
  5554                           ; 1 bytes @ 0x2
  5555                           
  5556  0072                     ??_PWM3_Initialize:	
  5557                           ; 1 bytes @ 0x2
  5558                           
  5559  0072                     ??_PWM6_Initialize:	
  5560                           ; 1 bytes @ 0x2
  5561                           
  5562  0072                     ??_PWM5_Initialize:	
  5563                           ; 1 bytes @ 0x2
  5564                           
  5565  0072                     ??_FVR_Initialize:	
  5566                           ; 1 bytes @ 0x2
  5567                           
  5568  0072                     ??_PIN_MANAGER_IOC:	
  5569                           ; 1 bytes @ 0x2
  5570                           
  5571  0072                     ??_INTERRUPT_InterruptManager:	
  5572                           ; 1 bytes @ 0x2
  5573                           
  5574  0072                     ??_TMR1_WriteTimer:	
  5575                           ; 1 bytes @ 0x2
  5576                           
  5577  0072                     ??_TMR1_Reload:	
  5578                           ; 1 bytes @ 0x2
  5579                           
  5580  0072                     ?___bmul:	
  5581                           ; 1 bytes @ 0x2
  5582                           
  5583  0072                     ?_ADC_GetConversionResult:	
  5584                           ; 1 bytes @ 0x2
  5585                           
  5586  0072                     ?___lmul:	
  5587                           ; 2 bytes @ 0x2
  5588                           
  5589  0072                     ___bmul@multiplicand:	
  5590                           ; 4 bytes @ 0x2
  5591                           
  5592  0072                     IOCAF3_SetInterruptHandler@InterruptHandler:	
  5593                           ; 1 bytes @ 0x2
  5594                           
  5595  0072                     TMR0_SetInterruptHandler@InterruptHandler:	
  5596                           ; 2 bytes @ 0x2
  5597                           
  5598  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  5599                           ; 2 bytes @ 0x2
  5600                           
  5601  0072                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  5602                           ; 2 bytes @ 0x2
  5603                           
  5604  0072                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  5605                           ; 2 bytes @ 0x2
  5606                           
  5607  0072                     EUSART1_SetErrorHandler@interruptHandler:	
  5608                           ; 2 bytes @ 0x2
  5609                           
  5610  0072                     srand@s:	
  5611                           ; 2 bytes @ 0x2
  5612                           
  5613  0072                     ___lmul@multiplier:	
  5614                           ; 2 bytes @ 0x2
  5615                           
  5616                           
  5617                           ; 4 bytes @ 0x2
  5618  0072                     	ds	1
  5619  0073                     ??___bmul:
  5620  0073                     ADC_SelectChannel@channel:	
  5621                           ; 1 bytes @ 0x3
  5622                           
  5623                           
  5624                           ; 1 bytes @ 0x3
  5625  0073                     	ds	1
  5626  0074                     ??_IOCAF3_SetInterruptHandler:
  5627  0074                     ??_TMR0_Initialize:	
  5628                           ; 1 bytes @ 0x4
  5629                           
  5630  0074                     ??_TMR1_Initialize:	
  5631                           ; 1 bytes @ 0x4
  5632                           
  5633  0074                     ??_EUSART1_Initialize:	
  5634                           ; 1 bytes @ 0x4
  5635                           
  5636  0074                     ??_TMR0_SetInterruptHandler:	
  5637                           ; 1 bytes @ 0x4
  5638                           
  5639  0074                     ??_TMR1_SetInterruptHandler:	
  5640                           ; 1 bytes @ 0x4
  5641                           
  5642  0074                     ??_srand:	
  5643                           ; 1 bytes @ 0x4
  5644                           
  5645  0074                     ??_EUSART1_SetFramingErrorHandler:	
  5646                           ; 1 bytes @ 0x4
  5647                           
  5648  0074                     ??_EUSART1_SetOverrunErrorHandler:	
  5649                           ; 1 bytes @ 0x4
  5650                           
  5651  0074                     ??_EUSART1_SetErrorHandler:	
  5652                           ; 1 bytes @ 0x4
  5653                           
  5654  0074                     ??_ADC_GetConversionResult:	
  5655                           ; 1 bytes @ 0x4
  5656                           
  5657  0074                     ??_PIN_MANAGER_Initialize:	
  5658                           ; 1 bytes @ 0x4
  5659                           
  5660  0074                     ??_SYSTEM_Initialize:	
  5661                           ; 1 bytes @ 0x4
  5662                           
  5663  0074                     ___bmul@product:	
  5664                           ; 1 bytes @ 0x4
  5665                           
  5666                           
  5667                           ; 1 bytes @ 0x4
  5668  0074                     	ds	1
  5669  0075                     ___bmul@multiplier:
  5670                           
  5671                           ; 1 bytes @ 0x5
  5672  0075                     	ds	1
  5673  0076                     ?_PWM4_LoadDutyValue:
  5674  0076                     ?_PWM3_LoadDutyValue:	
  5675                           ; 1 bytes @ 0x6
  5676                           
  5677  0076                     ?_PWM6_LoadDutyValue:	
  5678                           ; 1 bytes @ 0x6
  5679                           
  5680  0076                     ?_PWM5_LoadDutyValue:	
  5681                           ; 1 bytes @ 0x6
  5682                           
  5683  0076                     ?_PWM2_LoadDutyValue:	
  5684                           ; 1 bytes @ 0x6
  5685                           
  5686  0076                     ?_PWM1_LoadDutyValue:	
  5687                           ; 1 bytes @ 0x6
  5688                           
  5689  0076                     PWM4_LoadDutyValue@dutyValue:	
  5690                           ; 1 bytes @ 0x6
  5691                           
  5692  0076                     PWM3_LoadDutyValue@dutyValue:	
  5693                           ; 2 bytes @ 0x6
  5694                           
  5695  0076                     PWM6_LoadDutyValue@dutyValue:	
  5696                           ; 2 bytes @ 0x6
  5697                           
  5698  0076                     PWM5_LoadDutyValue@dutyValue:	
  5699                           ; 2 bytes @ 0x6
  5700                           
  5701  0076                     PWM2_LoadDutyValue@dutyValue:	
  5702                           ; 2 bytes @ 0x6
  5703                           
  5704  0076                     PWM1_LoadDutyValue@dutyValue:	
  5705                           ; 2 bytes @ 0x6
  5706                           
  5707  0076                     ___lmul@multiplicand:	
  5708                           ; 2 bytes @ 0x6
  5709                           
  5710                           
  5711                           ; 4 bytes @ 0x6
  5712  0076                     	ds	2
  5713  0078                     ??_PWM4_LoadDutyValue:
  5714  0078                     ??_PWM3_LoadDutyValue:	
  5715                           ; 1 bytes @ 0x8
  5716                           
  5717  0078                     ??_PWM6_LoadDutyValue:	
  5718                           ; 1 bytes @ 0x8
  5719                           
  5720  0078                     ??_PWM5_LoadDutyValue:	
  5721                           ; 1 bytes @ 0x8
  5722                           
  5723  0078                     ??_PWM2_LoadDutyValue:	
  5724                           ; 1 bytes @ 0x8
  5725                           
  5726  0078                     ??_PWM1_LoadDutyValue:	
  5727                           ; 1 bytes @ 0x8
  5728                           
  5729                           
  5730                           ; 1 bytes @ 0x8
  5731  0078                     	ds	2
  5732  007A                     ??_INITxEXECUTER:
  5733  007A                     ??___lmul:	
  5734                           ; 1 bytes @ 0xA
  5735                           
  5736                           
  5737                           	psect	cstackBANK0
  5738  0041                     __pcstackBANK0:	
  5739                           ; 1 bytes @ 0xA
  5740                           
  5741  0041                     ??_CalcPwm:
  5742  0041                     ___lmul@product:	
  5743                           ; 1 bytes @ 0x0
  5744                           
  5745                           
  5746                           ; 4 bytes @ 0x0
  5747  0041                     	ds	4
  5748  0045                     ?_rand:
  5749  0045                     CalcPwm@Led:	
  5750                           ; 2 bytes @ 0x4
  5751                           
  5752                           
  5753                           ; 1 bytes @ 0x4
  5754  0045                     	ds	1
  5755  0046                     ?_LedOff:
  5756  0046                     ?_LedFlash:	
  5757                           ; 1 bytes @ 0x5
  5758                           
  5759  0046                     ?_LedNom:	
  5760                           ; 1 bytes @ 0x5
  5761                           
  5762  0046                     ?_LedSlFl:	
  5763                           ; 1 bytes @ 0x5
  5764                           
  5765  0046                     ?_LedBrake:	
  5766                           ; 1 bytes @ 0x5
  5767                           
  5768  0046                     LedOff@Led:	
  5769                           ; 1 bytes @ 0x5
  5770                           
  5771  0046                     LedNom@Led:	
  5772                           ; 1 bytes @ 0x5
  5773                           
  5774  0046                     LedBrake@Led:	
  5775                           ; 1 bytes @ 0x5
  5776                           
  5777  0046                     LedSlFl@Led:	
  5778                           ; 1 bytes @ 0x5
  5779                           
  5780  0046                     LedFlash@Led:	
  5781                           ; 1 bytes @ 0x5
  5782                           
  5783                           
  5784                           ; 1 bytes @ 0x5
  5785  0046                     	ds	1
  5786  0047                     ??_LedOff:
  5787  0047                     ??_rand:	
  5788                           ; 1 bytes @ 0x6
  5789                           
  5790  0047                     ??_LedFlash:	
  5791                           ; 1 bytes @ 0x6
  5792                           
  5793  0047                     ??_LedNom:	
  5794                           ; 1 bytes @ 0x6
  5795                           
  5796  0047                     ??_LedSlFl:	
  5797                           ; 1 bytes @ 0x6
  5798                           
  5799  0047                     ??_LedBrake:	
  5800                           ; 1 bytes @ 0x6
  5801                           
  5802                           
  5803                           ; 1 bytes @ 0x6
  5804  0047                     	ds	3
  5805  004A                     LedSlFl@ReturnVal:
  5806  004A                     LedFlash@ReturnVal:	
  5807                           ; 1 bytes @ 0x9
  5808                           
  5809                           
  5810                           ; 1 bytes @ 0x9
  5811  004A                     	ds	1
  5812  004B                     ??_EXECUTExEFFECT:
  5813  004B                     ??_RCSxLED:	
  5814                           ; 1 bytes @ 0xA
  5815                           
  5816                           
  5817                           ; 1 bytes @ 0xA
  5818  004B                     	ds	2
  5819  004D                     _EXECUTExEFFECT$2042:
  5820                           
  5821                           ; 2 bytes @ 0xC
  5822  004D                     	ds	2
  5823  004F                     EXECUTExEFFECT@ReturnData:
  5824                           
  5825                           ; 1 bytes @ 0xE
  5826  004F                     	ds	1
  5827  0050                     EXECUTExEFFECT@x:
  5828                           
  5829                           ; 1 bytes @ 0xF
  5830  0050                     	ds	1
  5831  0051                     ??_main:
  5832                           
  5833                           ; 1 bytes @ 0x10
  5834  0051                     	ds	2
  5835  0053                     main@i:
  5836                           
  5837                           ; 1 bytes @ 0x12
  5838  0053                     	ds	1
  5839                           
  5840                           	psect	maintext
  5841  0242                     __pmaintext:	
  5842 ;;
  5843 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5844 ;;
  5845 ;; *************** function _main *****************
  5846 ;; Defined at:
  5847 ;;		line 71 in file "Main.c"
  5848 ;; Parameters:    Size  Location     Type
  5849 ;;		None
  5850 ;; Auto vars:     Size  Location     Type
  5851 ;;  i               1   18[BANK0 ] unsigned char 
  5852 ;; Return value:  Size  Location     Type
  5853 ;;                  1    wreg      void 
  5854 ;; Registers used:
  5855 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5856 ;; Tracked objects:
  5857 ;;		On entry : B3F/0
  5858 ;;		On exit  : 0/0
  5859 ;;		Unchanged: 0/0
  5860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5861 ;;      Params:         0       0       0       0
  5862 ;;      Locals:         0       1       0       0
  5863 ;;      Temps:          0       2       0       0
  5864 ;;      Totals:         0       3       0       0
  5865 ;;Total ram usage:        3 bytes
  5866 ;; Hardware stack levels required when called:   10
  5867 ;; This function calls:
  5868 ;;		_ADC_GetConversionResult
  5869 ;;		_ADC_IsConversionDone
  5870 ;;		_ADC_SelectChannel
  5871 ;;		_ADC_StartConversion
  5872 ;;		_BATTxPROTECT
  5873 ;;		_EXECUTExEFFECT
  5874 ;;		_INITxEXECUTER
  5875 ;;		_IOCAF3_SetInterruptHandler
  5876 ;;		_RCSxLED
  5877 ;;		_SYSTEM_Initialize
  5878 ;;		_TMR0_SetInterruptHandler
  5879 ;;		_TMR1_SetInterruptHandler
  5880 ;; This function is called by:
  5881 ;;		Startup code after reset
  5882 ;; This function uses a non-reentrant model
  5883 ;;
  5884                           
  5885                           
  5886                           ;psect for function _main
  5887  0242                     _main:
  5888                           
  5889                           ;Main.c: 74:     SYSTEM_Initialize();
  5890                           
  5891                           ;incstack = 0
  5892                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5893  0242  2630               	fcall	_SYSTEM_Initialize
  5894                           
  5895                           ;Main.c: 80:     (INTCONbits.GIE = 1);
  5896  0243  178B               	bsf	11,7	;volatile
  5897                           
  5898                           ;Main.c: 83:     (INTCONbits.PEIE = 1);
  5899  0244  170B               	bsf	11,6	;volatile
  5900                           
  5901                           ;Main.c: 92:     TMR0_SetInterruptHandler(TMR0_INT);
  5902  0245  3031               	movlw	low _TMR0_INT
  5903  0246  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  5904  0247  3007               	movlw	high _TMR0_INT
  5905  0248  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  5906  0249  26F7               	fcall	_TMR0_SetInterruptHandler
  5907                           
  5908                           ;Main.c: 93:     TMR1_SetInterruptHandler(TMR1_INT);
  5909  024A  302E               	movlw	low _TMR1_INT
  5910  024B  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  5911  024C  3007               	movlw	high _TMR1_INT
  5912  024D  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  5913  024E  26F1               	fcall	_TMR1_SetInterruptHandler
  5914                           
  5915                           ;Main.c: 95:     IOCAF3_SetInterruptHandler(RCS_INT);
  5916  024F  3027               	movlw	low _RCS_INT
  5917  0250  00F2               	movwf	IOCAF3_SetInterruptHandler@InterruptHandler
  5918  0251  3007               	movlw	high _RCS_INT
  5919  0252  00F3               	movwf	IOCAF3_SetInterruptHandler@InterruptHandler+1
  5920  0253  26FD               	fcall	_IOCAF3_SetInterruptHandler
  5921                           
  5922                           ;Main.c: 97:     ADC_SelectChannel(Vbatt);
  5923  0254  3000               	movlw	0
  5924  0255  266A               	fcall	_ADC_SelectChannel
  5925                           
  5926                           ;Main.c: 99:     INITxEXECUTER();
  5927  0256  2690               	fcall	_INITxEXECUTER
  5928  0257                     l2760:
  5929                           
  5930                           ;Main.c: 102:     {;Main.c: 104:         if(UpdateLeds){
  5931  0257  0140               	movlb	0	; select bank0
  5932  0258  083C               	movf	_UpdateLeds,w
  5933  0259  1903               	btfsc	3,2
  5934  025A  2A60               	goto	l2766
  5935                           
  5936                           ;Main.c: 105:             if (EXECUTExEFFECT() == 1 )
  5937  025B  2463               	fcall	_EXECUTExEFFECT
  5938  025C  3A01               	xorlw	1
  5939  025D  1D03               	skipz
  5940  025E  2A60               	goto	l2766
  5941                           
  5942                           ;Main.c: 106:             {;Main.c: 107:                 UpdateLeds = 0;
  5943  025F  01BC               	clrf	_UpdateLeds
  5944  0260                     l2766:
  5945                           
  5946                           ;Main.c: 112:         if(UpdateRcs && !CarrOff){
  5947  0260  083B               	movf	_UpdateRcs,w
  5948  0261  1903               	btfsc	3,2
  5949  0262  2A68               	goto	l2774
  5950  0263  0838               	movf	_CarrOff,w
  5951  0264  1D03               	btfss	3,2
  5952  0265  2A68               	goto	l2774
  5953                           
  5954                           ;Main.c: 113:             RCSxLED();
  5955  0266  22D7               	fcall	_RCSxLED
  5956                           
  5957                           ;Main.c: 114:             UpdateRcs = 0;
  5958  0267  01BB               	clrf	_UpdateRcs
  5959  0268                     l2774:
  5960                           
  5961                           ;Main.c: 118:         if(UpdateVbatt){
  5962  0268  083A               	movf	_UpdateVbatt,w
  5963  0269  1D03               	btfss	3,2
  5964  026A  2ABC               	goto	l2816
  5965  026B  2ACC               	goto	l2818
  5966  026C                     l2778:
  5967  026C  272B               	fcall	_ADC_StartConversion
  5968                           
  5969                           ;Main.c: 121:                         AdcState = 1;
  5970  026D  0140               	movlb	0	; select bank0
  5971  026E  01B7               	clrf	_AdcState
  5972  026F  0AB7               	incf	_AdcState,f
  5973                           
  5974                           ;Main.c: 122:                     break;
  5975  0270  2ACC               	goto	l2818
  5976  0271                     l2782:
  5977  0271  26DE               	fcall	_ADC_IsConversionDone
  5978  0272  3A00               	xorlw	0
  5979  0273  1903               	skipnz
  5980  0274  2ACC               	goto	l2818
  5981                           
  5982                           ;Main.c: 124:                             AdcResultSample = ADC_GetConversionResult();
  5983  0275  2719               	fcall	_ADC_GetConversionResult
  5984  0276  0873               	movf	?_ADC_GetConversionResult+1,w
  5985  0277  0140               	movlb	0	; select bank0
  5986  0278  00AB               	movwf	_AdcResultSample+1
  5987  0279  0872               	movf	?_ADC_GetConversionResult,w
  5988  027A  00AA               	movwf	_AdcResultSample
  5989                           
  5990                           ;Main.c: 125:                             AdcResult[pAdcResult] = AdcResultSample;
  5991  027B  3536               	lslf	_pAdcResult,w
  5992  027C  3E54               	addlw	(low (_AdcResult| 0))& (0+255)
  5993  027D  0086               	movwf	6
  5994  027E  0187               	clrf	7
  5995  027F  082A               	movf	_AdcResultSample,w
  5996  0280  3FC0               	movwi [0]fsr1
  5997  0281  082B               	movf	_AdcResultSample+1,w
  5998  0282  3FC1               	movwi [1]fsr1
  5999                           
  6000                           ;Main.c: 127:                             pAdcResult++;
  6001  0283  3001               	movlw	1
  6002  0284  00D1               	movwf	??_main
  6003  0285  0851               	movf	??_main,w
  6004  0286  07B6               	addwf	_pAdcResult,f
  6005                           
  6006                           ;Main.c: 128:                             if(pAdcResult > (8 - 1)){
  6007  0287  3008               	movlw	8
  6008  0288  0236               	subwf	_pAdcResult,w
  6009  0289  1803               	btfsc	3,0
  6010                           
  6011                           ;Main.c: 129:                                 pAdcResult = 0;
  6012  028A  01B6               	clrf	_pAdcResult
  6013                           
  6014                           ;Main.c: 132:                             AdcResultAvg = 0;
  6015                           
  6016                           ;Main.c: 130:                             }
  6017  028B  01A8               	clrf	_AdcResultAvg
  6018  028C  01A9               	clrf	_AdcResultAvg+1
  6019                           
  6020                           ;Main.c: 133:                             for(uint8_t i=0; i < 8; i++){
  6021  028D  01D3               	clrf	main@i
  6022  028E                     l2798:
  6023                           
  6024                           ;Main.c: 134:                                 AdcResultAvg += AdcResult[i];
  6025  028E  3553               	lslf	main@i,w
  6026  028F  3E54               	addlw	(low (_AdcResult| 0))& (0+255)
  6027  0290  0086               	movwf	6
  6028  0291  0187               	clrf	7
  6029  0292  3F40               	moviw [0]fsr1
  6030  0293  00D1               	movwf	??_main
  6031  0294  3F41               	moviw [1]fsr1
  6032  0295  00D2               	movwf	??_main+1
  6033  0296  0851               	movf	??_main,w
  6034  0297  07A8               	addwf	_AdcResultAvg,f
  6035  0298  0852               	movf	??_main+1,w
  6036  0299  3DA9               	addwfc	_AdcResultAvg+1,f
  6037                           
  6038                           ;Main.c: 135:                             };
  6039  029A  3001               	movlw	1
  6040  029B  00D1               	movwf	??_main
  6041  029C  0851               	movf	??_main,w
  6042  029D  07D3               	addwf	main@i,f
  6043  029E  3008               	movlw	8
  6044  029F  0253               	subwf	main@i,w
  6045  02A0  1C03               	skipc
  6046  02A1  2A8E               	goto	l2798
  6047                           
  6048                           ;Main.c: 137:                             AdcResultAvg = AdcResultAvg >> 3;
  6049  02A2  0829               	movf	_AdcResultAvg+1,w
  6050  02A3  00D2               	movwf	??_main+1
  6051  02A4  0828               	movf	_AdcResultAvg,w
  6052  02A5  00D1               	movwf	??_main
  6053  02A6  36D2               	lsrf	??_main+1,f
  6054  02A7  0CD1               	rrf	??_main,f
  6055  02A8  36D2               	lsrf	??_main+1,f
  6056  02A9  0CD1               	rrf	??_main,f
  6057  02AA  36D2               	lsrf	??_main+1,f
  6058  02AB  0CD1               	rrf	??_main,f
  6059  02AC  0851               	movf	??_main,w
  6060  02AD  00A8               	movwf	_AdcResultAvg
  6061  02AE  0852               	movf	??_main+1,w
  6062  02AF  00A9               	movwf	_AdcResultAvg+1
  6063                           
  6064                           ;Main.c: 138:                             if (AdcResultAvg < 800){
  6065  02B0  3003               	movlw	3
  6066  02B1  0229               	subwf	_AdcResultAvg+1,w
  6067  02B2  3020               	movlw	32
  6068  02B3  1903               	skipnz
  6069  02B4  0228               	subwf	_AdcResultAvg,w
  6070  02B5  1803               	skipnc
  6071  02B6  2AB9               	goto	l2810
  6072                           
  6073                           ;Main.c: 139:                                BattProtect = 1;
  6074  02B7  01B9               	clrf	_BattProtect
  6075  02B8  0AB9               	incf	_BattProtect,f
  6076  02B9                     l2810:
  6077                           
  6078                           ;Main.c: 141:                             UpdateVbatt = 0;
  6079  02B9  01BA               	clrf	_UpdateVbatt
  6080  02BA                     l2812:	
  6081                           ;Main.c: 142:                             AdcState = 0;
  6082                           
  6083  02BA  01B7               	clrf	_AdcState
  6084                           
  6085                           ;Main.c: 147:                     break;
  6086  02BB  2ACC               	goto	l2818
  6087  02BC                     l2816:
  6088  02BC  0837               	movf	_AdcState,w
  6089  02BD  00D1               	movwf	??_main
  6090  02BE  01D2               	clrf	??_main+1
  6091                           
  6092                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6093                           ; Switch size 1, requested type "simple"
  6094                           ; Number of cases is 1, Range of values is 0 to 0
  6095                           ; switch strategies available:
  6096                           ; Name         Instructions Cycles
  6097                           ; simple_byte            4     3 (average)
  6098                           ; direct_byte            8     6 (fixed)
  6099                           ; jumptable            260     6 (fixed)
  6100                           ;	Chosen strategy is simple_byte
  6101  02BF  0852               	movf	??_main+1,w
  6102  02C0  3A00               	xorlw	0	; case 0
  6103  02C1  1903               	skipnz
  6104  02C2  2AC4               	goto	l2902
  6105  02C3  2ABA               	goto	l2812
  6106  02C4                     l2902:
  6107                           
  6108                           ; Switch size 1, requested type "simple"
  6109                           ; Number of cases is 2, Range of values is 0 to 1
  6110                           ; switch strategies available:
  6111                           ; Name         Instructions Cycles
  6112                           ; simple_byte            7     4 (average)
  6113                           ; direct_byte           10     6 (fixed)
  6114                           ; jumptable            260     6 (fixed)
  6115                           ;	Chosen strategy is simple_byte
  6116  02C4  0851               	movf	??_main,w
  6117  02C5  3A00               	xorlw	0	; case 0
  6118  02C6  1903               	skipnz
  6119  02C7  2A6C               	goto	l2778
  6120  02C8  3A01               	xorlw	1	; case 1
  6121  02C9  1903               	skipnz
  6122  02CA  2A71               	goto	l2782
  6123  02CB  2ABA               	goto	l2812
  6124  02CC                     l2818:
  6125                           
  6126                           ;Main.c: 151:         if(BattProtect){
  6127  02CC  0140               	movlb	0	; select bank0
  6128  02CD  0839               	movf	_BattProtect,w
  6129  02CE  1903               	btfsc	3,2
  6130  02CF  2AD5               	goto	l567
  6131                           
  6132                           ;Main.c: 153:             BATTxPROTECT();
  6133  02D0  24E2               	fcall	_BATTxPROTECT
  6134                           
  6135                           ;Main.c: 154:             BattProtect = 0;
  6136  02D1  0140               	movlb	0	; select bank0
  6137  02D2  01B9               	clrf	_BattProtect
  6138                           
  6139                           ;Main.c: 156:             CarrOff = 1;
  6140  02D3  01B8               	clrf	_CarrOff
  6141  02D4  0AB8               	incf	_CarrOff,f
  6142  02D5                     l567:	
  6143                           ;Main.c: 157:         }
  6144                           
  6145  02D5  0064               	clrwdt	;# 
  6146  02D6  2A57               	goto	l2760
  6147  02D7                     __end_of_main:
  6148                           
  6149                           	psect	text1
  6150  0630                     __ptext1:	
  6151 ;; *************** function _SYSTEM_Initialize *****************
  6152 ;; Defined at:
  6153 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6154 ;; Parameters:    Size  Location     Type
  6155 ;;		None
  6156 ;; Auto vars:     Size  Location     Type
  6157 ;;		None
  6158 ;; Return value:  Size  Location     Type
  6159 ;;                  1    wreg      void 
  6160 ;; Registers used:
  6161 ;;		wreg, status,2, status,0, pclath, cstack
  6162 ;; Tracked objects:
  6163 ;;		On entry : B3F/0
  6164 ;;		On exit  : 3F/0
  6165 ;;		Unchanged: 0/0
  6166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6167 ;;      Params:         0       0       0       0
  6168 ;;      Locals:         0       0       0       0
  6169 ;;      Temps:          0       0       0       0
  6170 ;;      Totals:         0       0       0       0
  6171 ;;Total ram usage:        0 bytes
  6172 ;; Hardware stack levels used:    1
  6173 ;; Hardware stack levels required when called:    8
  6174 ;; This function calls:
  6175 ;;		_ADC_Initialize
  6176 ;;		_EUSART1_Initialize
  6177 ;;		_FVR_Initialize
  6178 ;;		_OSCILLATOR_Initialize
  6179 ;;		_PIN_MANAGER_Initialize
  6180 ;;		_PMD_Initialize
  6181 ;;		_PWM1_Initialize
  6182 ;;		_PWM2_Initialize
  6183 ;;		_PWM3_Initialize
  6184 ;;		_PWM4_Initialize
  6185 ;;		_PWM5_Initialize
  6186 ;;		_PWM6_Initialize
  6187 ;;		_TMR0_Initialize
  6188 ;;		_TMR1_Initialize
  6189 ;;		_TMR2_Initialize
  6190 ;; This function is called by:
  6191 ;;		_main
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           
  6195                           
  6196                           ;psect for function _SYSTEM_Initialize
  6197  0630                     _SYSTEM_Initialize:
  6198                           
  6199                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  6200                           
  6201                           ;incstack = 0
  6202                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6203  0630  265D               	fcall	_PMD_Initialize
  6204                           
  6205                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  6206  0631  23CD               	fcall	_PIN_MANAGER_Initialize
  6207                           
  6208                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  6209  0632  2684               	fcall	_OSCILLATOR_Initialize
  6210                           
  6211                           ;mcc_generated_files/mcc.c: 55:     FVR_Initialize();
  6212  0633  2723               	fcall	_FVR_Initialize
  6213                           
  6214                           ;mcc_generated_files/mcc.c: 56:     PWM2_Initialize();
  6215  0634  26C0               	fcall	_PWM2_Initialize
  6216                           
  6217                           ;mcc_generated_files/mcc.c: 57:     PWM4_Initialize();
  6218  0635  26D7               	fcall	_PWM4_Initialize
  6219                           
  6220                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  6221  0636  264F               	fcall	_TMR2_Initialize
  6222                           
  6223                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  6224  0637  2540               	fcall	_TMR0_Initialize
  6225                           
  6226                           ;mcc_generated_files/mcc.c: 60:     PWM6_Initialize();
  6227  0638  26B0               	fcall	_PWM6_Initialize
  6228                           
  6229                           ;mcc_generated_files/mcc.c: 61:     PWM1_Initialize();
  6230  0639  26C8               	fcall	_PWM1_Initialize
  6231                           
  6232                           ;mcc_generated_files/mcc.c: 62:     ADC_Initialize();
  6233  063A  269C               	fcall	_ADC_Initialize
  6234                           
  6235                           ;mcc_generated_files/mcc.c: 63:     PWM3_Initialize();
  6236  063B  26B8               	fcall	_PWM3_Initialize
  6237                           
  6238                           ;mcc_generated_files/mcc.c: 64:     PWM5_Initialize();
  6239  063C  26D0               	fcall	_PWM5_Initialize
  6240                           
  6241                           ;mcc_generated_files/mcc.c: 65:     TMR1_Initialize();
  6242  063D  2506               	fcall	_TMR1_Initialize
  6243                           
  6244                           ;mcc_generated_files/mcc.c: 66:     EUSART1_Initialize();
  6245  063E  2524               	fcall	_EUSART1_Initialize
  6246  063F  0008               	return
  6247  0640                     __end_of_SYSTEM_Initialize:
  6248                           
  6249                           	psect	text2
  6250  064F                     __ptext2:	
  6251 ;; *************** function _TMR2_Initialize *****************
  6252 ;; Defined at:
  6253 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  6254 ;; Parameters:    Size  Location     Type
  6255 ;;		None
  6256 ;; Auto vars:     Size  Location     Type
  6257 ;;		None
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  1    wreg      void 
  6260 ;; Registers used:
  6261 ;;		wreg, status,2
  6262 ;; Tracked objects:
  6263 ;;		On entry : 3F/6
  6264 ;;		On exit  : 3F/5
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6267 ;;      Params:         0       0       0       0
  6268 ;;      Locals:         0       0       0       0
  6269 ;;      Temps:          0       0       0       0
  6270 ;;      Totals:         0       0       0       0
  6271 ;;Total ram usage:        0 bytes
  6272 ;; Hardware stack levels used:    1
  6273 ;; Hardware stack levels required when called:    6
  6274 ;; This function calls:
  6275 ;;		Nothing
  6276 ;; This function is called by:
  6277 ;;		_SYSTEM_Initialize
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281                           
  6282                           ;psect for function _TMR2_Initialize
  6283  064F                     _TMR2_Initialize:
  6284                           
  6285                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
  6286                           
  6287                           ;incstack = 0
  6288                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  6289  064F  3001               	movlw	1
  6290  0650  0145               	movlb	5	; select bank5
  6291  0651  0090               	movwf	16	;volatile
  6292                           
  6293                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  6294  0652  018F               	clrf	15	;volatile
  6295                           
  6296                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  6297  0653  0191               	clrf	17	;volatile
  6298                           
  6299                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
  6300  0654  30FF               	movlw	255
  6301  0655  008D               	movwf	13	;volatile
  6302                           
  6303                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  6304  0656  018C               	clrf	12	;volatile
  6305                           
  6306                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  6307  0657  014E               	movlb	14	; select bank14
  6308  0658  1090               	bcf	16,1	;volatile
  6309                           
  6310                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0x80;
  6311  0659  3080               	movlw	128
  6312  065A  0145               	movlb	5	; select bank5
  6313  065B  008E               	movwf	14	;volatile
  6314  065C  0008               	return
  6315  065D                     __end_of_TMR2_Initialize:
  6316                           
  6317                           	psect	text3
  6318  0506                     __ptext3:	
  6319 ;; *************** function _TMR1_Initialize *****************
  6320 ;; Defined at:
  6321 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;		None
  6324 ;; Auto vars:     Size  Location     Type
  6325 ;;		None
  6326 ;; Return value:  Size  Location     Type
  6327 ;;                  1    wreg      void 
  6328 ;; Registers used:
  6329 ;;		wreg, status,2, status,0, pclath, cstack
  6330 ;; Tracked objects:
  6331 ;;		On entry : 3F/6
  6332 ;;		On exit  : 3F/4
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6335 ;;      Params:         0       0       0       0
  6336 ;;      Locals:         0       0       0       0
  6337 ;;      Temps:          0       0       0       0
  6338 ;;      Totals:         0       0       0       0
  6339 ;;Total ram usage:        0 bytes
  6340 ;; Hardware stack levels used:    1
  6341 ;; Hardware stack levels required when called:    7
  6342 ;; This function calls:
  6343 ;;		_TMR1_SetInterruptHandler
  6344 ;; This function is called by:
  6345 ;;		_SYSTEM_Initialize
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349                           
  6350                           ;psect for function _TMR1_Initialize
  6351  0506                     _TMR1_Initialize:
  6352                           
  6353                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  6354                           
  6355                           ;incstack = 0
  6356                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6357  0506  0144               	movlb	4	; select bank4
  6358  0507  018F               	clrf	15	;volatile
  6359                           
  6360                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
  6361  0508  0190               	clrf	16	;volatile
  6362                           
  6363                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x09;
  6364  0509  3009               	movlw	9
  6365  050A  0091               	movwf	17	;volatile
  6366                           
  6367                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xF6;
  6368  050B  30F6               	movlw	246
  6369  050C  008D               	movwf	13	;volatile
  6370                           
  6371                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0x3C;
  6372  050D  303C               	movlw	60
  6373  050E  008C               	movwf	12	;volatile
  6374                           
  6375                           ;mcc_generated_files/tmr1.c: 84:     PIR4bits.TMR1IF = 0;
  6376  050F  014E               	movlb	14	; select bank14
  6377  0510  1010               	bcf	16,0	;volatile
  6378                           
  6379                           ;mcc_generated_files/tmr1.c: 87:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  6380  0511  0144               	movlb	4	; select bank4
  6381  0512  080D               	movf	13,w	;volatile
  6382  0513  0140               	movlb	0	; select bank0
  6383  0514  00AF               	movwf	_timer1ReloadVal+1	;volatile
  6384  0515  0144               	movlb	4	; select bank4
  6385  0516  080C               	movf	12,w	;volatile
  6386  0517  0140               	movlb	0	; select bank0
  6387  0518  00AE               	movwf	_timer1ReloadVal	;volatile
  6388                           
  6389                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
  6390  0519  014E               	movlb	14	; select bank14
  6391  051A  141A               	bsf	26,0	;volatile
  6392                           
  6393                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  6394  051B  3034               	movlw	low _TMR1_DefaultInterruptHandler
  6395  051C  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  6396  051D  3007               	movlw	high _TMR1_DefaultInterruptHandler
  6397  051E  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  6398  051F  26F1               	fcall	_TMR1_SetInterruptHandler
  6399                           
  6400                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x11;
  6401  0520  3011               	movlw	17
  6402  0521  0144               	movlb	4	; select bank4
  6403  0522  008E               	movwf	14	;volatile
  6404  0523  0008               	return
  6405  0524                     __end_of_TMR1_Initialize:
  6406                           
  6407                           	psect	text4
  6408  06F1                     __ptext4:	
  6409 ;; *************** function _TMR1_SetInterruptHandler *****************
  6410 ;; Defined at:
  6411 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  6412 ;; Parameters:    Size  Location     Type
  6413 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  6414 ;;		 -> TMR1_INT(1), TMR1_DefaultInterruptHandler(1), 
  6415 ;; Auto vars:     Size  Location     Type
  6416 ;;		None
  6417 ;; Return value:  Size  Location     Type
  6418 ;;                  1    wreg      void 
  6419 ;; Registers used:
  6420 ;;		wreg
  6421 ;; Tracked objects:
  6422 ;;		On entry : 31/0
  6423 ;;		On exit  : 3F/0
  6424 ;;		Unchanged: 0/0
  6425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6426 ;;      Params:         2       0       0       0
  6427 ;;      Locals:         0       0       0       0
  6428 ;;      Temps:          0       0       0       0
  6429 ;;      Totals:         2       0       0       0
  6430 ;;Total ram usage:        2 bytes
  6431 ;; Hardware stack levels used:    1
  6432 ;; Hardware stack levels required when called:    6
  6433 ;; This function calls:
  6434 ;;		Nothing
  6435 ;; This function is called by:
  6436 ;;		_TMR1_Initialize
  6437 ;;		_main
  6438 ;; This function uses a non-reentrant model
  6439 ;;
  6440                           
  6441                           
  6442                           ;psect for function _TMR1_SetInterruptHandler
  6443  06F1                     _TMR1_SetInterruptHandler:
  6444                           
  6445                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  6446                           
  6447                           ;incstack = 0
  6448                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  6449  06F1  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  6450  06F2  0140               	movlb	0	; select bank0
  6451  06F3  00AD               	movwf	_TMR1_InterruptHandler+1
  6452  06F4  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  6453  06F5  00AC               	movwf	_TMR1_InterruptHandler
  6454  06F6  0008               	return
  6455  06F7                     __end_of_TMR1_SetInterruptHandler:
  6456                           
  6457                           	psect	text5
  6458  0540                     __ptext5:	
  6459 ;; *************** function _TMR0_Initialize *****************
  6460 ;; Defined at:
  6461 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  6462 ;; Parameters:    Size  Location     Type
  6463 ;;		None
  6464 ;; Auto vars:     Size  Location     Type
  6465 ;;		None
  6466 ;; Return value:  Size  Location     Type
  6467 ;;                  1    wreg      void 
  6468 ;; Registers used:
  6469 ;;		wreg, status,2, status,0, pclath, cstack
  6470 ;; Tracked objects:
  6471 ;;		On entry : 3F/5
  6472 ;;		On exit  : 3F/B
  6473 ;;		Unchanged: 0/0
  6474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6475 ;;      Params:         0       0       0       0
  6476 ;;      Locals:         0       0       0       0
  6477 ;;      Temps:          0       0       0       0
  6478 ;;      Totals:         0       0       0       0
  6479 ;;Total ram usage:        0 bytes
  6480 ;; Hardware stack levels used:    1
  6481 ;; Hardware stack levels required when called:    7
  6482 ;; This function calls:
  6483 ;;		_TMR0_SetInterruptHandler
  6484 ;; This function is called by:
  6485 ;;		_SYSTEM_Initialize
  6486 ;; This function uses a non-reentrant model
  6487 ;;
  6488                           
  6489                           
  6490                           ;psect for function _TMR0_Initialize
  6491  0540                     _TMR0_Initialize:
  6492                           
  6493                           ;mcc_generated_files/tmr0.c: 71:     T0CON1 = 0x40;
  6494                           
  6495                           ;incstack = 0
  6496                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6497  0540  3040               	movlw	64
  6498  0541  014B               	movlb	11	; select bank11
  6499  0542  009F               	movwf	31	;volatile
  6500                           
  6501                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0xF0;
  6502  0543  30F0               	movlw	240
  6503  0544  009D               	movwf	29	;volatile
  6504                           
  6505                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0x60;
  6506  0545  3060               	movlw	96
  6507  0546  009C               	movwf	28	;volatile
  6508                           
  6509                           ;mcc_generated_files/tmr0.c: 80:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  6510  0547  081D               	movf	29,w	;volatile
  6511  0548  00FB               	movwf	_timer0ReloadVal16bit+1	;volatile
  6512  0549  081C               	movf	28,w	;volatile
  6513  054A  00FA               	movwf	_timer0ReloadVal16bit	;volatile
  6514                           
  6515                           ;mcc_generated_files/tmr0.c: 83:     PIR0bits.TMR0IF = 0;
  6516  054B  014E               	movlb	14	; select bank14
  6517  054C  128C               	bcf	12,5	;volatile
  6518                           
  6519                           ;mcc_generated_files/tmr0.c: 86:     PIE0bits.TMR0IE = 1;
  6520  054D  1696               	bsf	22,5	;volatile
  6521                           
  6522                           ;mcc_generated_files/tmr0.c: 89:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  6523  054E  3035               	movlw	low _TMR0_DefaultInterruptHandler
  6524  054F  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  6525  0550  3007               	movlw	high _TMR0_DefaultInterruptHandler
  6526  0551  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  6527  0552  26F7               	fcall	_TMR0_SetInterruptHandler
  6528                           
  6529                           ;mcc_generated_files/tmr0.c: 92:     T0CON0 = 0x90;
  6530  0553  3090               	movlw	144
  6531  0554  014B               	movlb	11	; select bank11
  6532  0555  009E               	movwf	30	;volatile
  6533  0556  0008               	return
  6534  0557                     __end_of_TMR0_Initialize:
  6535                           
  6536                           	psect	text6
  6537  06F7                     __ptext6:	
  6538 ;; *************** function _TMR0_SetInterruptHandler *****************
  6539 ;; Defined at:
  6540 ;;		line 151 in file "mcc_generated_files/tmr0.c"
  6541 ;; Parameters:    Size  Location     Type
  6542 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  6543 ;;		 -> TMR0_INT(1), TMR0_DefaultInterruptHandler(1), 
  6544 ;; Auto vars:     Size  Location     Type
  6545 ;;		None
  6546 ;; Return value:  Size  Location     Type
  6547 ;;                  1    wreg      void 
  6548 ;; Registers used:
  6549 ;;		wreg
  6550 ;; Tracked objects:
  6551 ;;		On entry : 31/0
  6552 ;;		On exit  : 3F/0
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6555 ;;      Params:         2       0       0       0
  6556 ;;      Locals:         0       0       0       0
  6557 ;;      Temps:          0       0       0       0
  6558 ;;      Totals:         2       0       0       0
  6559 ;;Total ram usage:        2 bytes
  6560 ;; Hardware stack levels used:    1
  6561 ;; Hardware stack levels required when called:    6
  6562 ;; This function calls:
  6563 ;;		Nothing
  6564 ;; This function is called by:
  6565 ;;		_TMR0_Initialize
  6566 ;;		_main
  6567 ;; This function uses a non-reentrant model
  6568 ;;
  6569                           
  6570                           
  6571                           ;psect for function _TMR0_SetInterruptHandler
  6572  06F7                     _TMR0_SetInterruptHandler:
  6573                           
  6574                           ;mcc_generated_files/tmr0.c: 152:     TMR0_InterruptHandler = InterruptHandler;
  6575                           
  6576                           ;incstack = 0
  6577                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  6578  06F7  0873               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  6579  06F8  0140               	movlb	0	; select bank0
  6580  06F9  00B1               	movwf	_TMR0_InterruptHandler+1
  6581  06FA  0872               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  6582  06FB  00B0               	movwf	_TMR0_InterruptHandler
  6583  06FC  0008               	return
  6584  06FD                     __end_of_TMR0_SetInterruptHandler:
  6585                           
  6586                           	psect	text7
  6587  06B0                     __ptext7:	
  6588 ;; *************** function _PWM6_Initialize *****************
  6589 ;; Defined at:
  6590 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  6591 ;; Parameters:    Size  Location     Type
  6592 ;;		None
  6593 ;; Auto vars:     Size  Location     Type
  6594 ;;		None
  6595 ;; Return value:  Size  Location     Type
  6596 ;;                  1    wreg      void 
  6597 ;; Registers used:
  6598 ;;		wreg
  6599 ;; Tracked objects:
  6600 ;;		On entry : 3F/B
  6601 ;;		On exit  : 3F/7
  6602 ;;		Unchanged: 0/0
  6603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6604 ;;      Params:         0       0       0       0
  6605 ;;      Locals:         0       0       0       0
  6606 ;;      Temps:          0       0       0       0
  6607 ;;      Totals:         0       0       0       0
  6608 ;;Total ram usage:        0 bytes
  6609 ;; Hardware stack levels used:    1
  6610 ;; Hardware stack levels required when called:    6
  6611 ;; This function calls:
  6612 ;;		Nothing
  6613 ;; This function is called by:
  6614 ;;		_SYSTEM_Initialize
  6615 ;; This function uses a non-reentrant model
  6616 ;;
  6617                           
  6618                           
  6619                           ;psect for function _PWM6_Initialize
  6620  06B0                     _PWM6_Initialize:
  6621                           
  6622                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
  6623                           
  6624                           ;incstack = 0
  6625                           ; Regs used in _PWM6_Initialize: [wreg]
  6626  06B0  3080               	movlw	128
  6627  06B1  0147               	movlb	7	; select bank7
  6628  06B2  008E               	movwf	14	;volatile
  6629                           
  6630                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x7F;
  6631  06B3  307F               	movlw	127
  6632  06B4  008D               	movwf	13	;volatile
  6633                           
  6634                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0xC0;
  6635  06B5  30C0               	movlw	192
  6636  06B6  008C               	movwf	12	;volatile
  6637  06B7  0008               	return
  6638  06B8                     __end_of_PWM6_Initialize:
  6639                           
  6640                           	psect	text8
  6641  06D0                     __ptext8:	
  6642 ;; *************** function _PWM5_Initialize *****************
  6643 ;; Defined at:
  6644 ;;		line 58 in file "mcc_generated_files/pwm5.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;		None
  6647 ;; Auto vars:     Size  Location     Type
  6648 ;;		None
  6649 ;; Return value:  Size  Location     Type
  6650 ;;                  1    wreg      void 
  6651 ;; Registers used:
  6652 ;;		wreg
  6653 ;; Tracked objects:
  6654 ;;		On entry : 3F/6
  6655 ;;		On exit  : 3F/6
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6658 ;;      Params:         0       0       0       0
  6659 ;;      Locals:         0       0       0       0
  6660 ;;      Temps:          0       0       0       0
  6661 ;;      Totals:         0       0       0       0
  6662 ;;Total ram usage:        0 bytes
  6663 ;; Hardware stack levels used:    1
  6664 ;; Hardware stack levels required when called:    6
  6665 ;; This function calls:
  6666 ;;		Nothing
  6667 ;; This function is called by:
  6668 ;;		_SYSTEM_Initialize
  6669 ;; This function uses a non-reentrant model
  6670 ;;
  6671                           
  6672                           
  6673                           ;psect for function _PWM5_Initialize
  6674  06D0                     _PWM5_Initialize:
  6675                           
  6676                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
  6677                           
  6678                           ;incstack = 0
  6679                           ; Regs used in _PWM5_Initialize: [wreg]
  6680  06D0  3080               	movlw	128
  6681  06D1  009E               	movwf	30	;volatile
  6682                           
  6683                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x7F;
  6684  06D2  307F               	movlw	127
  6685  06D3  009D               	movwf	29	;volatile
  6686                           
  6687                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0xC0;
  6688  06D4  30C0               	movlw	192
  6689  06D5  009C               	movwf	28	;volatile
  6690  06D6  0008               	return
  6691  06D7                     __end_of_PWM5_Initialize:
  6692                           
  6693                           	psect	text9
  6694  06D7                     __ptext9:	
  6695 ;; *************** function _PWM4_Initialize *****************
  6696 ;; Defined at:
  6697 ;;		line 58 in file "mcc_generated_files/pwm4.c"
  6698 ;; Parameters:    Size  Location     Type
  6699 ;;		None
  6700 ;; Auto vars:     Size  Location     Type
  6701 ;;		None
  6702 ;; Return value:  Size  Location     Type
  6703 ;;                  1    wreg      void 
  6704 ;; Registers used:
  6705 ;;		wreg
  6706 ;; Tracked objects:
  6707 ;;		On entry : 3F/6
  6708 ;;		On exit  : 3F/6
  6709 ;;		Unchanged: 0/0
  6710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6711 ;;      Params:         0       0       0       0
  6712 ;;      Locals:         0       0       0       0
  6713 ;;      Temps:          0       0       0       0
  6714 ;;      Totals:         0       0       0       0
  6715 ;;Total ram usage:        0 bytes
  6716 ;; Hardware stack levels used:    1
  6717 ;; Hardware stack levels required when called:    6
  6718 ;; This function calls:
  6719 ;;		Nothing
  6720 ;; This function is called by:
  6721 ;;		_SYSTEM_Initialize
  6722 ;; This function uses a non-reentrant model
  6723 ;;
  6724                           
  6725                           
  6726                           ;psect for function _PWM4_Initialize
  6727  06D7                     _PWM4_Initialize:
  6728                           
  6729                           ;mcc_generated_files/pwm4.c: 62:     PWM4CON = 0x80;
  6730                           
  6731                           ;incstack = 0
  6732                           ; Regs used in _PWM4_Initialize: [wreg]
  6733  06D7  3080               	movlw	128
  6734  06D8  009A               	movwf	26	;volatile
  6735                           
  6736                           ;mcc_generated_files/pwm4.c: 65:     PWM4DCH = 0x7F;
  6737  06D9  307F               	movlw	127
  6738  06DA  0099               	movwf	25	;volatile
  6739                           
  6740                           ;mcc_generated_files/pwm4.c: 68:     PWM4DCL = 0xC0;
  6741  06DB  30C0               	movlw	192
  6742  06DC  0098               	movwf	24	;volatile
  6743  06DD  0008               	return
  6744  06DE                     __end_of_PWM4_Initialize:
  6745                           
  6746                           	psect	text10
  6747  06B8                     __ptext10:	
  6748 ;; *************** function _PWM3_Initialize *****************
  6749 ;; Defined at:
  6750 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  6751 ;; Parameters:    Size  Location     Type
  6752 ;;		None
  6753 ;; Auto vars:     Size  Location     Type
  6754 ;;		None
  6755 ;; Return value:  Size  Location     Type
  6756 ;;                  1    wreg      void 
  6757 ;; Registers used:
  6758 ;;		wreg
  6759 ;; Tracked objects:
  6760 ;;		On entry : 3F/1
  6761 ;;		On exit  : 3F/6
  6762 ;;		Unchanged: 0/0
  6763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6764 ;;      Params:         0       0       0       0
  6765 ;;      Locals:         0       0       0       0
  6766 ;;      Temps:          0       0       0       0
  6767 ;;      Totals:         0       0       0       0
  6768 ;;Total ram usage:        0 bytes
  6769 ;; Hardware stack levels used:    1
  6770 ;; Hardware stack levels required when called:    6
  6771 ;; This function calls:
  6772 ;;		Nothing
  6773 ;; This function is called by:
  6774 ;;		_SYSTEM_Initialize
  6775 ;; This function uses a non-reentrant model
  6776 ;;
  6777                           
  6778                           
  6779                           ;psect for function _PWM3_Initialize
  6780  06B8                     _PWM3_Initialize:
  6781                           
  6782                           ;mcc_generated_files/pwm3.c: 62:     PWM3CON = 0x80;
  6783                           
  6784                           ;incstack = 0
  6785                           ; Regs used in _PWM3_Initialize: [wreg]
  6786  06B8  3080               	movlw	128
  6787  06B9  0146               	movlb	6	; select bank6
  6788  06BA  0096               	movwf	22	;volatile
  6789                           
  6790                           ;mcc_generated_files/pwm3.c: 65:     PWM3DCH = 0x7F;
  6791  06BB  307F               	movlw	127
  6792  06BC  0095               	movwf	21	;volatile
  6793                           
  6794                           ;mcc_generated_files/pwm3.c: 68:     PWM3DCL = 0xC0;
  6795  06BD  30C0               	movlw	192
  6796  06BE  0094               	movwf	20	;volatile
  6797  06BF  0008               	return
  6798  06C0                     __end_of_PWM3_Initialize:
  6799                           
  6800                           	psect	text11
  6801  06C0                     __ptext11:	
  6802 ;; *************** function _PWM2_Initialize *****************
  6803 ;; Defined at:
  6804 ;;		line 64 in file "mcc_generated_files/pwm2.c"
  6805 ;; Parameters:    Size  Location     Type
  6806 ;;		None
  6807 ;; Auto vars:     Size  Location     Type
  6808 ;;		None
  6809 ;; Return value:  Size  Location     Type
  6810 ;;                  1    wreg      void 
  6811 ;; Registers used:
  6812 ;;		wreg
  6813 ;; Tracked objects:
  6814 ;;		On entry : 3F/12
  6815 ;;		On exit  : 3F/6
  6816 ;;		Unchanged: 0/0
  6817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6818 ;;      Params:         0       0       0       0
  6819 ;;      Locals:         0       0       0       0
  6820 ;;      Temps:          0       0       0       0
  6821 ;;      Totals:         0       0       0       0
  6822 ;;Total ram usage:        0 bytes
  6823 ;; Hardware stack levels used:    1
  6824 ;; Hardware stack levels required when called:    6
  6825 ;; This function calls:
  6826 ;;		Nothing
  6827 ;; This function is called by:
  6828 ;;		_SYSTEM_Initialize
  6829 ;; This function uses a non-reentrant model
  6830 ;;
  6831                           
  6832                           
  6833                           ;psect for function _PWM2_Initialize
  6834  06C0                     _PWM2_Initialize:
  6835                           
  6836                           ;mcc_generated_files/pwm2.c: 69:  CCP2CON = 0x8F;
  6837                           
  6838                           ;incstack = 0
  6839                           ; Regs used in _PWM2_Initialize: [wreg]
  6840  06C0  308F               	movlw	143
  6841  06C1  0146               	movlb	6	; select bank6
  6842  06C2  0092               	movwf	18	;volatile
  6843                           
  6844                           ;mcc_generated_files/pwm2.c: 72:  CCPR2H = 0x01;
  6845  06C3  3001               	movlw	1
  6846  06C4  0091               	movwf	17	;volatile
  6847                           
  6848                           ;mcc_generated_files/pwm2.c: 75:  CCPR2L = 0xFF;
  6849  06C5  30FF               	movlw	255
  6850  06C6  0090               	movwf	16	;volatile
  6851  06C7  0008               	return
  6852  06C8                     __end_of_PWM2_Initialize:
  6853                           
  6854                           	psect	text12
  6855  06C8                     __ptext12:	
  6856 ;; *************** function _PWM1_Initialize *****************
  6857 ;; Defined at:
  6858 ;;		line 64 in file "mcc_generated_files/pwm1.c"
  6859 ;; Parameters:    Size  Location     Type
  6860 ;;		None
  6861 ;; Auto vars:     Size  Location     Type
  6862 ;;		None
  6863 ;; Return value:  Size  Location     Type
  6864 ;;                  1    wreg      void 
  6865 ;; Registers used:
  6866 ;;		wreg
  6867 ;; Tracked objects:
  6868 ;;		On entry : 3F/7
  6869 ;;		On exit  : 3F/6
  6870 ;;		Unchanged: 0/0
  6871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6872 ;;      Params:         0       0       0       0
  6873 ;;      Locals:         0       0       0       0
  6874 ;;      Temps:          0       0       0       0
  6875 ;;      Totals:         0       0       0       0
  6876 ;;Total ram usage:        0 bytes
  6877 ;; Hardware stack levels used:    1
  6878 ;; Hardware stack levels required when called:    6
  6879 ;; This function calls:
  6880 ;;		Nothing
  6881 ;; This function is called by:
  6882 ;;		_SYSTEM_Initialize
  6883 ;; This function uses a non-reentrant model
  6884 ;;
  6885                           
  6886                           
  6887                           ;psect for function _PWM1_Initialize
  6888  06C8                     _PWM1_Initialize:
  6889                           
  6890                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8F;
  6891                           
  6892                           ;incstack = 0
  6893                           ; Regs used in _PWM1_Initialize: [wreg]
  6894  06C8  308F               	movlw	143
  6895  06C9  0146               	movlb	6	; select bank6
  6896  06CA  008E               	movwf	14	;volatile
  6897                           
  6898                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x01;
  6899  06CB  3001               	movlw	1
  6900  06CC  008D               	movwf	13	;volatile
  6901                           
  6902                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0xFF;
  6903  06CD  30FF               	movlw	255
  6904  06CE  008C               	movwf	12	;volatile
  6905  06CF  0008               	return
  6906  06D0                     __end_of_PWM1_Initialize:
  6907                           
  6908                           	psect	text13
  6909  065D                     __ptext13:	
  6910 ;; *************** function _PMD_Initialize *****************
  6911 ;; Defined at:
  6912 ;;		line 89 in file "mcc_generated_files/mcc.c"
  6913 ;; Parameters:    Size  Location     Type
  6914 ;;		None
  6915 ;; Auto vars:     Size  Location     Type
  6916 ;;		None
  6917 ;; Return value:  Size  Location     Type
  6918 ;;                  1    wreg      void 
  6919 ;; Registers used:
  6920 ;;		wreg, status,2
  6921 ;; Tracked objects:
  6922 ;;		On entry : B3F/0
  6923 ;;		On exit  : B3F/F
  6924 ;;		Unchanged: B00/0
  6925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6926 ;;      Params:         0       0       0       0
  6927 ;;      Locals:         0       0       0       0
  6928 ;;      Temps:          0       0       0       0
  6929 ;;      Totals:         0       0       0       0
  6930 ;;Total ram usage:        0 bytes
  6931 ;; Hardware stack levels used:    1
  6932 ;; Hardware stack levels required when called:    6
  6933 ;; This function calls:
  6934 ;;		Nothing
  6935 ;; This function is called by:
  6936 ;;		_SYSTEM_Initialize
  6937 ;; This function uses a non-reentrant model
  6938 ;;
  6939                           
  6940                           
  6941                           ;psect for function _PMD_Initialize
  6942  065D                     _PMD_Initialize:
  6943                           
  6944                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x06;
  6945                           
  6946                           ;incstack = 0
  6947                           ; Regs used in _PMD_Initialize: [wreg+status,2]
  6948  065D  3006               	movlw	6
  6949  065E  014F               	movlb	15	; select bank15
  6950  065F  0096               	movwf	22	;volatile
  6951                           
  6952                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x80;
  6953  0660  3080               	movlw	128
  6954  0661  0097               	movwf	23	;volatile
  6955                           
  6956                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x47;
  6957  0662  3047               	movlw	71
  6958  0663  0098               	movwf	24	;volatile
  6959                           
  6960                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
  6961  0664  0199               	clrf	25	;volatile
  6962                           
  6963                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0xD1;
  6964  0665  30D1               	movlw	209
  6965  0666  009A               	movwf	26	;volatile
  6966                           
  6967                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x1E;
  6968  0667  301E               	movlw	30
  6969  0668  009B               	movwf	27	;volatile
  6970  0669  0008               	return
  6971  066A                     __end_of_PMD_Initialize:
  6972                           
  6973                           	psect	text14
  6974  03CD                     __ptext14:	
  6975 ;; *************** function _PIN_MANAGER_Initialize *****************
  6976 ;; Defined at:
  6977 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  6978 ;; Parameters:    Size  Location     Type
  6979 ;;		None
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;		None
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  1    wreg      void 
  6984 ;; Registers used:
  6985 ;;		wreg, status,2, status,0, pclath, cstack
  6986 ;; Tracked objects:
  6987 ;;		On entry : B3F/F
  6988 ;;		On exit  : 3F/3D
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6991 ;;      Params:         0       0       0       0
  6992 ;;      Locals:         0       0       0       0
  6993 ;;      Temps:          0       0       0       0
  6994 ;;      Totals:         0       0       0       0
  6995 ;;Total ram usage:        0 bytes
  6996 ;; Hardware stack levels used:    1
  6997 ;; Hardware stack levels required when called:    7
  6998 ;; This function calls:
  6999 ;;		_IOCAF3_SetInterruptHandler
  7000 ;; This function is called by:
  7001 ;;		_SYSTEM_Initialize
  7002 ;; This function uses a non-reentrant model
  7003 ;;
  7004                           
  7005                           
  7006                           ;psect for function _PIN_MANAGER_Initialize
  7007  03CD                     _PIN_MANAGER_Initialize:
  7008                           
  7009                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  7010                           
  7011                           ;incstack = 0
  7012                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7013  03CD  0140               	movlb	0	; select bank0
  7014  03CE  0198               	clrf	24	;volatile
  7015                           
  7016                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
  7017  03CF  019A               	clrf	26	;volatile
  7018                           
  7019                           ;mcc_generated_files/pin_manager.c: 68:     TRISA = 0x03;
  7020  03D0  3003               	movlw	3
  7021  03D1  0092               	movwf	18	;volatile
  7022                           
  7023                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x00;
  7024  03D2  0194               	clrf	20	;volatile
  7025                           
  7026                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x01;
  7027  03D3  3001               	movlw	1
  7028  03D4  017E               	movlb	62	; select bank62
  7029  03D5  00CE               	movwf	78	;volatile
  7030                           
  7031                           ;mcc_generated_files/pin_manager.c: 75:     ANSELA = 0x01;
  7032  03D6  3001               	movlw	1
  7033  03D7  00B8               	movwf	56	;volatile
  7034                           
  7035                           ;mcc_generated_files/pin_manager.c: 80:     WPUA = 0x00;
  7036  03D8  01B9               	clrf	57	;volatile
  7037                           
  7038                           ;mcc_generated_files/pin_manager.c: 81:     WPUC = 0x00;
  7039  03D9  01CF               	clrf	79	;volatile
  7040                           
  7041                           ;mcc_generated_files/pin_manager.c: 86:     ODCONA = 0x00;
  7042  03DA  01BA               	clrf	58	;volatile
  7043                           
  7044                           ;mcc_generated_files/pin_manager.c: 87:     ODCONC = 0x00;
  7045  03DB  01D0               	clrf	80	;volatile
  7046                           
  7047                           ;mcc_generated_files/pin_manager.c: 92:     SLRCONA = 0x3F;
  7048  03DC  303F               	movlw	63
  7049  03DD  00BB               	movwf	59	;volatile
  7050                           
  7051                           ;mcc_generated_files/pin_manager.c: 93:     SLRCONC = 0x3F;
  7052  03DE  303F               	movlw	63
  7053  03DF  00D1               	movwf	81	;volatile
  7054                           
  7055                           ;mcc_generated_files/pin_manager.c: 98:     INLVLA = 0x3F;
  7056  03E0  303F               	movlw	63
  7057  03E1  00BC               	movwf	60	;volatile
  7058                           
  7059                           ;mcc_generated_files/pin_manager.c: 99:     INLVLC = 0x3F;
  7060  03E2  303F               	movlw	63
  7061  03E3  00D2               	movwf	82	;volatile
  7062                           
  7063                           ;mcc_generated_files/pin_manager.c: 106:     IOCAFbits.IOCAF3 = 0;
  7064  03E4  11BF               	bcf	63,3	;volatile
  7065                           
  7066                           ;mcc_generated_files/pin_manager.c: 108:     IOCANbits.IOCAN3 = 1;
  7067  03E5  15BE               	bsf	62,3	;volatile
  7068                           
  7069                           ;mcc_generated_files/pin_manager.c: 110:     IOCAPbits.IOCAP3 = 1;
  7070  03E6  15BD               	bsf	61,3	;volatile
  7071                           
  7072                           ;mcc_generated_files/pin_manager.c: 115:     IOCAF3_SetInterruptHandler(IOCAF3_DefaultIn
      +                          terruptHandler);
  7073  03E7  3036               	movlw	low _IOCAF3_DefaultInterruptHandler
  7074  03E8  00F2               	movwf	IOCAF3_SetInterruptHandler@InterruptHandler
  7075  03E9  3007               	movlw	high _IOCAF3_DefaultInterruptHandler
  7076  03EA  00F3               	movwf	IOCAF3_SetInterruptHandler@InterruptHandler+1
  7077  03EB  26FD               	fcall	_IOCAF3_SetInterruptHandler
  7078                           
  7079                           ;mcc_generated_files/pin_manager.c: 118:     PIE0bits.IOCIE = 1;
  7080  03EC  014E               	movlb	14	; select bank14
  7081  03ED  1616               	bsf	22,4	;volatile
  7082                           
  7083                           ;mcc_generated_files/pin_manager.c: 121:     ADACTPPS = 0x00;
  7084  03EE  017D               	movlb	61	; select bank61
  7085  03EF  01C3               	clrf	67	;volatile
  7086                           
  7087                           ;mcc_generated_files/pin_manager.c: 122:     RA4PPS = 0x0C;
  7088  03F0  300C               	movlw	12
  7089  03F1  017E               	movlb	62	; select bank62
  7090  03F2  0094               	movwf	20	;volatile
  7091                           
  7092                           ;mcc_generated_files/pin_manager.c: 123:     RC3PPS = 0x0A;
  7093  03F3  300A               	movlw	10
  7094  03F4  00A3               	movwf	35	;volatile
  7095                           
  7096                           ;mcc_generated_files/pin_manager.c: 124:     RC4PPS = 0x0E;
  7097  03F5  300E               	movlw	14
  7098  03F6  00A4               	movwf	36	;volatile
  7099                           
  7100                           ;mcc_generated_files/pin_manager.c: 125:     RA5PPS = 0x0B;
  7101  03F7  300B               	movlw	11
  7102  03F8  0095               	movwf	21	;volatile
  7103                           
  7104                           ;mcc_generated_files/pin_manager.c: 126:     RC2PPS = 0x09;
  7105  03F9  3009               	movlw	9
  7106  03FA  00A2               	movwf	34	;volatile
  7107                           
  7108                           ;mcc_generated_files/pin_manager.c: 127:     RA2PPS = 0x0F;
  7109  03FB  300F               	movlw	15
  7110  03FC  0092               	movwf	18	;volatile
  7111                           
  7112                           ;mcc_generated_files/pin_manager.c: 128:     RC5PPS = 0x0D;
  7113  03FD  300D               	movlw	13
  7114  03FE  00A5               	movwf	37	;volatile
  7115                           
  7116                           ;mcc_generated_files/pin_manager.c: 129:     RX1DTPPS = 0x01;
  7117  03FF  3001               	movlw	1
  7118  0400  017D               	movlb	61	; select bank61
  7119  0401  00CB               	movwf	75	;volatile
  7120  0402  0008               	return
  7121  0403                     __end_of_PIN_MANAGER_Initialize:
  7122                           
  7123                           	psect	text15
  7124  06FD                     __ptext15:	
  7125 ;; *************** function _IOCAF3_SetInterruptHandler *****************
  7126 ;; Defined at:
  7127 ;;		line 159 in file "mcc_generated_files/pin_manager.c"
  7128 ;; Parameters:    Size  Location     Type
  7129 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  7130 ;;		 -> RCS_INT(1), IOCAF3_DefaultInterruptHandler(1), 
  7131 ;; Auto vars:     Size  Location     Type
  7132 ;;		None
  7133 ;; Return value:  Size  Location     Type
  7134 ;;                  1    wreg      void 
  7135 ;; Registers used:
  7136 ;;		wreg
  7137 ;; Tracked objects:
  7138 ;;		On entry : 1/0
  7139 ;;		On exit  : 3F/0
  7140 ;;		Unchanged: 0/0
  7141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7142 ;;      Params:         2       0       0       0
  7143 ;;      Locals:         0       0       0       0
  7144 ;;      Temps:          0       0       0       0
  7145 ;;      Totals:         2       0       0       0
  7146 ;;Total ram usage:        2 bytes
  7147 ;; Hardware stack levels used:    1
  7148 ;; Hardware stack levels required when called:    6
  7149 ;; This function calls:
  7150 ;;		Nothing
  7151 ;; This function is called by:
  7152 ;;		_PIN_MANAGER_Initialize
  7153 ;;		_main
  7154 ;; This function uses a non-reentrant model
  7155 ;;
  7156                           
  7157                           
  7158                           ;psect for function _IOCAF3_SetInterruptHandler
  7159  06FD                     _IOCAF3_SetInterruptHandler:
  7160                           
  7161                           ;mcc_generated_files/pin_manager.c: 160:     IOCAF3_InterruptHandler = InterruptHandler;
  7162                           
  7163                           ;incstack = 0
  7164                           ; Regs used in _IOCAF3_SetInterruptHandler: [wreg]
  7165  06FD  0873               	movf	IOCAF3_SetInterruptHandler@InterruptHandler+1,w
  7166  06FE  0140               	movlb	0	; select bank0
  7167  06FF  00E5               	movwf	_IOCAF3_InterruptHandler+1
  7168  0700  0872               	movf	IOCAF3_SetInterruptHandler@InterruptHandler,w
  7169  0701  00E4               	movwf	_IOCAF3_InterruptHandler
  7170  0702  0008               	return
  7171  0703                     __end_of_IOCAF3_SetInterruptHandler:
  7172                           
  7173                           	psect	text16
  7174  0684                     __ptext16:	
  7175 ;; *************** function _OSCILLATOR_Initialize *****************
  7176 ;; Defined at:
  7177 ;;		line 69 in file "mcc_generated_files/mcc.c"
  7178 ;; Parameters:    Size  Location     Type
  7179 ;;		None
  7180 ;; Auto vars:     Size  Location     Type
  7181 ;;		None
  7182 ;; Return value:  Size  Location     Type
  7183 ;;                  1    wreg      void 
  7184 ;; Registers used:
  7185 ;;		wreg, status,2
  7186 ;; Tracked objects:
  7187 ;;		On entry : 3F/3D
  7188 ;;		On exit  : 3F/11
  7189 ;;		Unchanged: 0/0
  7190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7191 ;;      Params:         0       0       0       0
  7192 ;;      Locals:         0       0       0       0
  7193 ;;      Temps:          0       0       0       0
  7194 ;;      Totals:         0       0       0       0
  7195 ;;Total ram usage:        0 bytes
  7196 ;; Hardware stack levels used:    1
  7197 ;; Hardware stack levels required when called:    6
  7198 ;; This function calls:
  7199 ;;		Nothing
  7200 ;; This function is called by:
  7201 ;;		_SYSTEM_Initialize
  7202 ;; This function uses a non-reentrant model
  7203 ;;
  7204                           
  7205                           
  7206                           ;psect for function _OSCILLATOR_Initialize
  7207  0684                     _OSCILLATOR_Initialize:
  7208                           
  7209                           ;mcc_generated_files/mcc.c: 72:     OSCCON1 = 0x10;
  7210                           
  7211                           ;incstack = 0
  7212                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7213  0684  3010               	movlw	16
  7214  0685  0151               	movlb	17	; select bank17
  7215  0686  008D               	movwf	13	;volatile
  7216                           
  7217                           ;mcc_generated_files/mcc.c: 74:     OSCCON3 = 0x00;
  7218  0687  018F               	clrf	15	;volatile
  7219                           
  7220                           ;mcc_generated_files/mcc.c: 76:     OSCEN = 0x00;
  7221  0688  0191               	clrf	17	;volatile
  7222                           
  7223                           ;mcc_generated_files/mcc.c: 78:     OSCFRQ = 0x03;
  7224  0689  3003               	movlw	3
  7225  068A  0093               	movwf	19	;volatile
  7226                           
  7227                           ;mcc_generated_files/mcc.c: 80:     OSCSTAT = 0x00;
  7228  068B  0190               	clrf	16	;volatile
  7229                           
  7230                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
  7231  068C  0192               	clrf	18	;volatile
  7232  068D                     l306:	
  7233                           ;mcc_generated_files/mcc.c: 85:     {;mcc_generated_files/mcc.c: 86:     }
  7234                           
  7235                           
  7236                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
  7237  068D  1810               	btfsc	16,0	;volatile
  7238  068E  0008               	return
  7239  068F  2E8D               	goto	l306
  7240  0690                     __end_of_OSCILLATOR_Initialize:
  7241                           
  7242                           	psect	text17
  7243  0723                     __ptext17:	
  7244 ;; *************** function _FVR_Initialize *****************
  7245 ;; Defined at:
  7246 ;;		line 58 in file "mcc_generated_files/fvr.c"
  7247 ;; Parameters:    Size  Location     Type
  7248 ;;		None
  7249 ;; Auto vars:     Size  Location     Type
  7250 ;;		None
  7251 ;; Return value:  Size  Location     Type
  7252 ;;                  1    wreg      void 
  7253 ;; Registers used:
  7254 ;;		wreg
  7255 ;; Tracked objects:
  7256 ;;		On entry : 3F/11
  7257 ;;		On exit  : 3F/12
  7258 ;;		Unchanged: 0/0
  7259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7260 ;;      Params:         0       0       0       0
  7261 ;;      Locals:         0       0       0       0
  7262 ;;      Temps:          0       0       0       0
  7263 ;;      Totals:         0       0       0       0
  7264 ;;Total ram usage:        0 bytes
  7265 ;; Hardware stack levels used:    1
  7266 ;; Hardware stack levels required when called:    6
  7267 ;; This function calls:
  7268 ;;		Nothing
  7269 ;; This function is called by:
  7270 ;;		_SYSTEM_Initialize
  7271 ;; This function uses a non-reentrant model
  7272 ;;
  7273                           
  7274                           
  7275                           ;psect for function _FVR_Initialize
  7276  0723                     _FVR_Initialize:
  7277                           
  7278                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x82;
  7279                           
  7280                           ;incstack = 0
  7281                           ; Regs used in _FVR_Initialize: [wreg]
  7282  0723  3082               	movlw	130
  7283  0724  0152               	movlb	18	; select bank18
  7284  0725  008C               	movwf	12	;volatile
  7285  0726  0008               	return
  7286  0727                     __end_of_FVR_Initialize:
  7287                           
  7288                           	psect	text18
  7289  0524                     __ptext18:	
  7290 ;; *************** function _EUSART1_Initialize *****************
  7291 ;; Defined at:
  7292 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  7293 ;; Parameters:    Size  Location     Type
  7294 ;;		None
  7295 ;; Auto vars:     Size  Location     Type
  7296 ;;		None
  7297 ;; Return value:  Size  Location     Type
  7298 ;;                  1    wreg      void 
  7299 ;; Registers used:
  7300 ;;		wreg, status,2, status,0, pclath, cstack
  7301 ;; Tracked objects:
  7302 ;;		On entry : 3F/4
  7303 ;;		On exit  : 3F/0
  7304 ;;		Unchanged: 0/0
  7305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7306 ;;      Params:         0       0       0       0
  7307 ;;      Locals:         0       0       0       0
  7308 ;;      Temps:          0       0       0       0
  7309 ;;      Totals:         0       0       0       0
  7310 ;;Total ram usage:        0 bytes
  7311 ;; Hardware stack levels used:    1
  7312 ;; Hardware stack levels required when called:    7
  7313 ;; This function calls:
  7314 ;;		_EUSART1_SetErrorHandler
  7315 ;;		_EUSART1_SetFramingErrorHandler
  7316 ;;		_EUSART1_SetOverrunErrorHandler
  7317 ;; This function is called by:
  7318 ;;		_SYSTEM_Initialize
  7319 ;; This function uses a non-reentrant model
  7320 ;;
  7321                           
  7322                           
  7323                           ;psect for function _EUSART1_Initialize
  7324  0524                     _EUSART1_Initialize:
  7325                           
  7326                           ;mcc_generated_files/eusart1.c: 71:     BAUD1CON = 0x08;
  7327                           
  7328                           ;incstack = 0
  7329                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7330  0524  3008               	movlw	8
  7331  0525  0142               	movlb	2	; select bank2
  7332  0526  009F               	movwf	31	;volatile
  7333                           
  7334                           ;mcc_generated_files/eusart1.c: 74:     RC1STA = 0x90;
  7335  0527  3090               	movlw	144
  7336  0528  009D               	movwf	29	;volatile
  7337                           
  7338                           ;mcc_generated_files/eusart1.c: 77:     TX1STA = 0x24;
  7339  0529  3024               	movlw	36
  7340  052A  009E               	movwf	30	;volatile
  7341                           
  7342                           ;mcc_generated_files/eusart1.c: 80:     SP1BRGL = 0xA0;
  7343  052B  30A0               	movlw	160
  7344  052C  009B               	movwf	27	;volatile
  7345                           
  7346                           ;mcc_generated_files/eusart1.c: 83:     SP1BRGH = 0x01;
  7347  052D  3001               	movlw	1
  7348  052E  009C               	movwf	28	;volatile
  7349                           
  7350                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  7351  052F  3000               	movlw	0
  7352  0530  00F2               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  7353  0531  3000               	movlw	0
  7354  0532  00F3               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  7355  0533  2703               	fcall	_EUSART1_SetFramingErrorHandler
  7356                           
  7357                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  7358  0534  3000               	movlw	0
  7359  0535  00F2               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  7360  0536  3000               	movlw	0
  7361  0537  00F3               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  7362  0538  270F               	fcall	_EUSART1_SetOverrunErrorHandler
  7363                           
  7364                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  7365  0539  3000               	movlw	0
  7366  053A  00F2               	movwf	EUSART1_SetErrorHandler@interruptHandler
  7367  053B  3000               	movlw	0
  7368  053C  00F3               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  7369  053D  2714               	fcall	_EUSART1_SetErrorHandler
  7370                           
  7371                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  7372  053E  01B4               	clrf	_eusart1RxLastError	;volatile
  7373  053F  0008               	return
  7374  0540                     __end_of_EUSART1_Initialize:
  7375                           
  7376                           	psect	text19
  7377  070F                     __ptext19:	
  7378 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  7379 ;; Defined at:
  7380 ;;		line 161 in file "mcc_generated_files/eusart1.c"
  7381 ;; Parameters:    Size  Location     Type
  7382 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  7383 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  7384 ;; Auto vars:     Size  Location     Type
  7385 ;;		None
  7386 ;; Return value:  Size  Location     Type
  7387 ;;                  1    wreg      void 
  7388 ;; Registers used:
  7389 ;;		wreg
  7390 ;; Tracked objects:
  7391 ;;		On entry : 3F/0
  7392 ;;		On exit  : 3F/0
  7393 ;;		Unchanged: 0/0
  7394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7395 ;;      Params:         2       0       0       0
  7396 ;;      Locals:         0       0       0       0
  7397 ;;      Temps:          0       0       0       0
  7398 ;;      Totals:         2       0       0       0
  7399 ;;Total ram usage:        2 bytes
  7400 ;; Hardware stack levels used:    1
  7401 ;; Hardware stack levels required when called:    6
  7402 ;; This function calls:
  7403 ;;		Nothing
  7404 ;; This function is called by:
  7405 ;;		_EUSART1_Initialize
  7406 ;; This function uses a non-reentrant model
  7407 ;;
  7408                           
  7409                           
  7410                           ;psect for function _EUSART1_SetOverrunErrorHandler
  7411  070F                     _EUSART1_SetOverrunErrorHandler:
  7412                           
  7413                           ;mcc_generated_files/eusart1.c: 162:     EUSART1_OverrunErrorHandler = interruptHandler;
  7414                           
  7415                           ;incstack = 0
  7416                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  7417  070F  0873               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  7418  0710  00A3               	movwf	_EUSART1_OverrunErrorHandler+1
  7419  0711  0872               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  7420  0712  00A2               	movwf	_EUSART1_OverrunErrorHandler
  7421  0713  0008               	return
  7422  0714                     __end_of_EUSART1_SetOverrunErrorHandler:
  7423                           
  7424                           	psect	text20
  7425  0703                     __ptext20:	
  7426 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  7427 ;; Defined at:
  7428 ;;		line 157 in file "mcc_generated_files/eusart1.c"
  7429 ;; Parameters:    Size  Location     Type
  7430 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  7431 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;		None
  7434 ;; Return value:  Size  Location     Type
  7435 ;;                  1    wreg      void 
  7436 ;; Registers used:
  7437 ;;		wreg
  7438 ;; Tracked objects:
  7439 ;;		On entry : 3F/2
  7440 ;;		On exit  : 3F/0
  7441 ;;		Unchanged: 0/0
  7442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7443 ;;      Params:         2       0       0       0
  7444 ;;      Locals:         0       0       0       0
  7445 ;;      Temps:          0       0       0       0
  7446 ;;      Totals:         2       0       0       0
  7447 ;;Total ram usage:        2 bytes
  7448 ;; Hardware stack levels used:    1
  7449 ;; Hardware stack levels required when called:    6
  7450 ;; This function calls:
  7451 ;;		Nothing
  7452 ;; This function is called by:
  7453 ;;		_EUSART1_Initialize
  7454 ;; This function uses a non-reentrant model
  7455 ;;
  7456                           
  7457                           
  7458                           ;psect for function _EUSART1_SetFramingErrorHandler
  7459  0703                     _EUSART1_SetFramingErrorHandler:
  7460                           
  7461                           ;mcc_generated_files/eusart1.c: 158:     EUSART1_FramingErrorHandler = interruptHandler;
  7462                           
  7463                           ;incstack = 0
  7464                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  7465  0703  0873               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  7466  0704  0140               	movlb	0	; select bank0
  7467  0705  00A5               	movwf	_EUSART1_FramingErrorHandler+1
  7468  0706  0872               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  7469  0707  00A4               	movwf	_EUSART1_FramingErrorHandler
  7470  0708  0008               	return
  7471  0709                     __end_of_EUSART1_SetFramingErrorHandler:
  7472                           
  7473                           	psect	text21
  7474  0714                     __ptext21:	
  7475 ;; *************** function _EUSART1_SetErrorHandler *****************
  7476 ;; Defined at:
  7477 ;;		line 165 in file "mcc_generated_files/eusart1.c"
  7478 ;; Parameters:    Size  Location     Type
  7479 ;;  interruptHan    2    2[COMMON] PTR FTN()void 
  7480 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  7481 ;; Auto vars:     Size  Location     Type
  7482 ;;		None
  7483 ;; Return value:  Size  Location     Type
  7484 ;;                  1    wreg      void 
  7485 ;; Registers used:
  7486 ;;		wreg
  7487 ;; Tracked objects:
  7488 ;;		On entry : 3F/0
  7489 ;;		On exit  : 3F/0
  7490 ;;		Unchanged: 0/0
  7491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7492 ;;      Params:         2       0       0       0
  7493 ;;      Locals:         0       0       0       0
  7494 ;;      Temps:          0       0       0       0
  7495 ;;      Totals:         2       0       0       0
  7496 ;;Total ram usage:        2 bytes
  7497 ;; Hardware stack levels used:    1
  7498 ;; Hardware stack levels required when called:    6
  7499 ;; This function calls:
  7500 ;;		Nothing
  7501 ;; This function is called by:
  7502 ;;		_EUSART1_Initialize
  7503 ;; This function uses a non-reentrant model
  7504 ;;
  7505                           
  7506                           
  7507                           ;psect for function _EUSART1_SetErrorHandler
  7508  0714                     _EUSART1_SetErrorHandler:
  7509                           
  7510                           ;mcc_generated_files/eusart1.c: 166:     EUSART1_ErrorHandler = interruptHandler;
  7511                           
  7512                           ;incstack = 0
  7513                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  7514  0714  0873               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  7515  0715  00A1               	movwf	_EUSART1_ErrorHandler+1
  7516  0716  0872               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  7517  0717  00A0               	movwf	_EUSART1_ErrorHandler
  7518  0718  0008               	return
  7519  0719                     __end_of_EUSART1_SetErrorHandler:
  7520                           
  7521                           	psect	text22
  7522  069C                     __ptext22:	
  7523 ;; *************** function _ADC_Initialize *****************
  7524 ;; Defined at:
  7525 ;;		line 67 in file "mcc_generated_files/adc.c"
  7526 ;; Parameters:    Size  Location     Type
  7527 ;;		None
  7528 ;; Auto vars:     Size  Location     Type
  7529 ;;		None
  7530 ;; Return value:  Size  Location     Type
  7531 ;;                  1    wreg      void 
  7532 ;; Registers used:
  7533 ;;		wreg, status,2
  7534 ;; Tracked objects:
  7535 ;;		On entry : 3F/6
  7536 ;;		On exit  : 3F/1
  7537 ;;		Unchanged: 0/0
  7538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7539 ;;      Params:         0       0       0       0
  7540 ;;      Locals:         0       0       0       0
  7541 ;;      Temps:          0       0       0       0
  7542 ;;      Totals:         0       0       0       0
  7543 ;;Total ram usage:        0 bytes
  7544 ;; Hardware stack levels used:    1
  7545 ;; Hardware stack levels required when called:    6
  7546 ;; This function calls:
  7547 ;;		Nothing
  7548 ;; This function is called by:
  7549 ;;		_SYSTEM_Initialize
  7550 ;; This function uses a non-reentrant model
  7551 ;;
  7552                           
  7553                           
  7554                           ;psect for function _ADC_Initialize
  7555  069C                     _ADC_Initialize:
  7556                           
  7557                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x03;
  7558                           
  7559                           ;incstack = 0
  7560                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  7561  069C  3003               	movlw	3
  7562  069D  0141               	movlb	1	; select bank1
  7563  069E  009E               	movwf	30	;volatile
  7564                           
  7565                           ;mcc_generated_files/adc.c: 75:     ADACT = 0x01;
  7566  069F  3001               	movlw	1
  7567  06A0  009F               	movwf	31	;volatile
  7568                           
  7569                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
  7570  06A1  019B               	clrf	27	;volatile
  7571                           
  7572                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
  7573  06A2  019C               	clrf	28	;volatile
  7574                           
  7575                           ;mcc_generated_files/adc.c: 84:     ADCON0 = 0x01;
  7576  06A3  3001               	movlw	1
  7577  06A4  009D               	movwf	29	;volatile
  7578  06A5  0008               	return
  7579  06A6                     __end_of_ADC_Initialize:
  7580                           
  7581                           	psect	text23
  7582  0690                     __ptext23:	
  7583 ;; *************** function _INITxEXECUTER *****************
  7584 ;; Defined at:
  7585 ;;		line 35 in file "executer.c"
  7586 ;; Parameters:    Size  Location     Type
  7587 ;;		None
  7588 ;; Auto vars:     Size  Location     Type
  7589 ;;		None
  7590 ;; Return value:  Size  Location     Type
  7591 ;;                  1    wreg      void 
  7592 ;; Registers used:
  7593 ;;		wreg, status,2, status,0, pclath, cstack
  7594 ;; Tracked objects:
  7595 ;;		On entry : 3F/1
  7596 ;;		On exit  : 3F/0
  7597 ;;		Unchanged: 0/0
  7598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7599 ;;      Params:         0       0       0       0
  7600 ;;      Locals:         0       0       0       0
  7601 ;;      Temps:          0       0       0       0
  7602 ;;      Totals:         0       0       0       0
  7603 ;;Total ram usage:        0 bytes
  7604 ;; Hardware stack levels used:    1
  7605 ;; Hardware stack levels required when called:    9
  7606 ;; This function calls:
  7607 ;;		_RCSxLED
  7608 ;;		_rand
  7609 ;;		_srand
  7610 ;; This function is called by:
  7611 ;;		_main
  7612 ;; This function uses a non-reentrant model
  7613 ;;
  7614                           
  7615                           
  7616                           ;psect for function _INITxEXECUTER
  7617  0690                     _INITxEXECUTER:
  7618                           
  7619                           ;executer.c: 38:     srand(13);
  7620                           
  7621                           ;incstack = 0
  7622                           ; Regs used in _INITxEXECUTER: [wreg+status,2+status,0+pclath+cstack]
  7623  0690  300D               	movlw	13
  7624  0691  00F2               	movwf	srand@s
  7625  0692  3000               	movlw	0
  7626  0693  00F3               	movwf	srand@s+1
  7627  0694  26A6               	fcall	_srand
  7628                           
  7629                           ;executer.c: 39:     Random = rand();
  7630  0695  2403               	fcall	_rand
  7631  0696  0846               	movf	?_rand+1,w
  7632  0697  00A7               	movwf	_Random+1
  7633  0698  0845               	movf	?_rand,w
  7634  0699  00A6               	movwf	_Random
  7635                           
  7636                           ;executer.c: 41:     RCSxLED();
  7637  069A  22D7               	fcall	_RCSxLED
  7638  069B  0008               	return
  7639  069C                     __end_of_INITxEXECUTER:
  7640                           
  7641                           	psect	text24
  7642  06A6                     __ptext24:	
  7643 ;; *************** function _srand *****************
  7644 ;; Defined at:
  7645 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\rand.c"
  7646 ;; Parameters:    Size  Location     Type
  7647 ;;  s               2    2[COMMON] unsigned int 
  7648 ;; Auto vars:     Size  Location     Type
  7649 ;;		None
  7650 ;; Return value:  Size  Location     Type
  7651 ;;                  1    wreg      void 
  7652 ;; Registers used:
  7653 ;;		wreg, status,2, status,0
  7654 ;; Tracked objects:
  7655 ;;		On entry : 3F/1
  7656 ;;		On exit  : 3F/0
  7657 ;;		Unchanged: 0/0
  7658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7659 ;;      Params:         2       0       0       0
  7660 ;;      Locals:         0       0       0       0
  7661 ;;      Temps:          0       0       0       0
  7662 ;;      Totals:         2       0       0       0
  7663 ;;Total ram usage:        2 bytes
  7664 ;; Hardware stack levels used:    1
  7665 ;; Hardware stack levels required when called:    6
  7666 ;; This function calls:
  7667 ;;		Nothing
  7668 ;; This function is called by:
  7669 ;;		_INITxEXECUTER
  7670 ;; This function uses a non-reentrant model
  7671 ;;
  7672                           
  7673                           
  7674                           ;psect for function _srand
  7675  06A6                     _srand:
  7676                           
  7677                           ;incstack = 0
  7678                           ; Regs used in _srand: [wreg+status,2+status,0]
  7679  06A6  0872               	movf	srand@s,w
  7680  06A7  3EFF               	addlw	255
  7681  06A8  0140               	movlb	0	; select bank0
  7682  06A9  00BD               	movwf	_seed
  7683  06AA  30FF               	movlw	255
  7684  06AB  3D73               	addwfc	srand@s+1,w
  7685  06AC  00BE               	movwf	_seed+1
  7686  06AD  01BF               	clrf	_seed+2
  7687  06AE  01C0               	clrf	_seed+3
  7688  06AF  0008               	return
  7689  06B0                     __end_of_srand:
  7690                           
  7691                           	psect	text25
  7692  02D7                     __ptext25:	
  7693 ;; *************** function _RCSxLED *****************
  7694 ;; Defined at:
  7695 ;;		line 81 in file "executer.c"
  7696 ;; Parameters:    Size  Location     Type
  7697 ;;		None
  7698 ;; Auto vars:     Size  Location     Type
  7699 ;;		None
  7700 ;; Return value:  Size  Location     Type
  7701 ;;                  1    wreg      void 
  7702 ;; Registers used:
  7703 ;;		wreg, status,2, status,0, pclath, cstack
  7704 ;; Tracked objects:
  7705 ;;		On entry : 3F/0
  7706 ;;		On exit  : 3F/0
  7707 ;;		Unchanged: 0/0
  7708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7709 ;;      Params:         0       0       0       0
  7710 ;;      Locals:         0       0       0       0
  7711 ;;      Temps:          0       1       0       0
  7712 ;;      Totals:         0       1       0       0
  7713 ;;Total ram usage:        1 bytes
  7714 ;; Hardware stack levels used:    1
  7715 ;; Hardware stack levels required when called:    8
  7716 ;; This function calls:
  7717 ;;		_rand
  7718 ;; This function is called by:
  7719 ;;		_main
  7720 ;;		_INITxEXECUTER
  7721 ;; This function uses a non-reentrant model
  7722 ;;
  7723                           
  7724                           
  7725                           ;psect for function _RCSxLED
  7726  02D7                     _RCSxLED:
  7727                           
  7728                           ;executer.c: 83:     if(PORTAbits.RA3){
  7729                           
  7730                           ;incstack = 0
  7731                           ; Regs used in _RCSxLED: [wreg+status,2+status,0+pclath+cstack]
  7732  02D7  1D8C               	btfss	12,3	;volatile
  7733  02D8  2B2B               	goto	l2616
  7734                           
  7735                           ;executer.c: 86:         LedBit[LedBackLeft].Prog = LedNom;
  7736  02D9  3095               	movlw	low _LedNom
  7737  02DA  0141               	movlb	1	; select bank1
  7738  02DB  00B8               	movwf	(low ((_LedBit| 0+24)))^(0+128)
  7739  02DC  3003               	movlw	high _LedNom
  7740  02DD  00B9               	movwf	((low ((_LedBit| 0+24)))^(0+128)+1)
  7741                           
  7742                           ;executer.c: 87:         LedBit[LedBackRight].Prog = LedNom;
  7743  02DE  3095               	movlw	low _LedNom
  7744  02DF  00C3               	movwf	(low ((_LedBit| 0+35)))^(0+128)
  7745  02E0  3003               	movlw	high _LedNom
  7746  02E1  00C4               	movwf	((low ((_LedBit| 0+35)))^(0+128)+1)
  7747                           
  7748                           ;executer.c: 90:         if(Random > 16383)
  7749  02E2  3040               	movlw	64
  7750  02E3  0140               	movlb	0	; select bank0
  7751  02E4  0227               	subwf	_Random+1,w
  7752  02E5  3000               	movlw	0
  7753  02E6  1903               	skipnz
  7754  02E7  0226               	subwf	_Random,w
  7755  02E8  1C03               	skipc
  7756  02E9  2B27               	goto	l2612
  7757                           
  7758                           ;executer.c: 91:         {;executer.c: 93:             LedBit[LedFlashLeft].Prog = LedFl
      +                          ash;
  7759  02EA  30A0               	movlw	low _LedFlash
  7760  02EB  0141               	movlb	1	; select bank1
  7761  02EC  00A2               	movwf	(low ((_LedBit| 0+2)))^(0+128)
  7762  02ED  3001               	movlw	high _LedFlash
  7763  02EE  00A3               	movwf	((low ((_LedBit| 0+2)))^(0+128)+1)
  7764                           
  7765                           ;executer.c: 94:             LedBit[LedFlashLeft].Led = MAX;
  7766  02EF  30FE               	movlw	254
  7767  02F0  0140               	movlb	0	; select bank0
  7768  02F1  00CB               	movwf	??_RCSxLED
  7769  02F2  084B               	movf	??_RCSxLED,w
  7770  02F3  0141               	movlb	1	; select bank1
  7771  02F4  00A1               	movwf	(_LedBit^(0+128)+1)
  7772                           
  7773                           ;executer.c: 95:             LedBit[LedFlashLeft].Prog_State = 0;
  7774  02F5  01A6               	clrf	(_LedBit^(0+128)+6)
  7775                           
  7776                           ;executer.c: 96:             LedBit[LedFlashLeft].Speed = 150;
  7777  02F6  3096               	movlw	150
  7778  02F7  0140               	movlb	0	; select bank0
  7779  02F8  00CB               	movwf	??_RCSxLED
  7780  02F9  084B               	movf	??_RCSxLED,w
  7781  02FA  0141               	movlb	1	; select bank1
  7782  02FB  00A4               	movwf	(_LedBit^(0+128)+4)
  7783                           
  7784                           ;executer.c: 98:             LedBit[LedFlashRight].Prog = LedFlash;
  7785  02FC  30A0               	movlw	low _LedFlash
  7786  02FD  00AD               	movwf	(low ((_LedBit| 0+13)))^(0+128)
  7787  02FE  3001               	movlw	high _LedFlash
  7788  02FF  00AE               	movwf	((low ((_LedBit| 0+13)))^(0+128)+1)
  7789                           
  7790                           ;executer.c: 99:             LedBit[LedFlashRight].Led = 0;
  7791  0300  01AC               	clrf	(_LedBit^(0+128)+12)
  7792                           
  7793                           ;executer.c: 100:             LedBit[LedFlashRight].Prog_State = 0;
  7794  0301  01B1               	clrf	(_LedBit^(0+128)+17)
  7795                           
  7796                           ;executer.c: 101:             LedBit[LedFlashRight].Speed = 150;
  7797  0302  3096               	movlw	150
  7798  0303  0140               	movlb	0	; select bank0
  7799  0304  00CB               	movwf	??_RCSxLED
  7800  0305  084B               	movf	??_RCSxLED,w
  7801  0306  0141               	movlb	1	; select bank1
  7802  0307  00AF               	movwf	(_LedBit^(0+128)+15)
  7803                           
  7804                           ;executer.c: 104:             LedBit[LedFrontLeft].Prog = LedSlFl;
  7805  0308  3039               	movlw	low _LedSlFl
  7806  0309  00CE               	movwf	(low ((_LedBit| 0+46)))^(0+128)
  7807  030A  3000               	movlw	high _LedSlFl
  7808  030B  00CF               	movwf	((low ((_LedBit| 0+46)))^(0+128)+1)
  7809                           
  7810                           ;executer.c: 105:             LedBit[LedFrontLeft].Led = FRONT_HIGH;
  7811  030C  30FF               	movlw	255
  7812  030D  0140               	movlb	0	; select bank0
  7813  030E  00CB               	movwf	??_RCSxLED
  7814  030F  084B               	movf	??_RCSxLED,w
  7815  0310  0141               	movlb	1	; select bank1
  7816  0311  00CD               	movwf	(_LedBit^(0+128)+45)
  7817                           
  7818                           ;executer.c: 106:             LedBit[LedFrontLeft].Prog_State = 2;
  7819  0312  3002               	movlw	2
  7820  0313  0140               	movlb	0	; select bank0
  7821  0314  00CB               	movwf	??_RCSxLED
  7822  0315  084B               	movf	??_RCSxLED,w
  7823  0316  0141               	movlb	1	; select bank1
  7824  0317  00D2               	movwf	(_LedBit^(0+128)+50)
  7825                           
  7826                           ;executer.c: 107:             LedBit[LedFrontLeft].Speed = 1;
  7827  0318  01D0               	clrf	(_LedBit^(0+128)+48)
  7828  0319  0AD0               	incf	(_LedBit^(0+128)+48),f
  7829                           
  7830                           ;executer.c: 109:             LedBit[LedFrontRight].Prog = LedSlFl;
  7831  031A  3039               	movlw	low _LedSlFl
  7832  031B  00D9               	movwf	(low ((_LedBit| 0+57)))^(0+128)
  7833  031C  3000               	movlw	high _LedSlFl
  7834  031D  00DA               	movwf	((low ((_LedBit| 0+57)))^(0+128)+1)
  7835                           
  7836                           ;executer.c: 110:             LedBit[LedFrontRight].Led = FRONT;
  7837  031E  3050               	movlw	80
  7838  031F  0140               	movlb	0	; select bank0
  7839  0320  00CB               	movwf	??_RCSxLED
  7840  0321  084B               	movf	??_RCSxLED,w
  7841  0322  0141               	movlb	1	; select bank1
  7842  0323  00D8               	movwf	(_LedBit^(0+128)+56)
  7843                           
  7844                           ;executer.c: 111:             LedBit[LedFrontRight].Prog_State = 0;
  7845  0324  01DD               	clrf	(_LedBit^(0+128)+61)
  7846                           
  7847                           ;executer.c: 112:             LedBit[LedFrontRight].Speed = 1;
  7848  0325  01DB               	clrf	(_LedBit^(0+128)+59)
  7849  0326  0ADB               	incf	(_LedBit^(0+128)+59),f
  7850  0327                     l2612:
  7851  0327  0140               	movlb	0	; select bank0
  7852  0328  109A               	bcf	26,1	;volatile
  7853                           
  7854                           ;executer.c: 119:         LATCbits.LATC0 = 1;
  7855  0329  141A               	bsf	26,0	;volatile
  7856                           
  7857                           ;executer.c: 120:     }
  7858  032A  2B4D               	goto	l2618
  7859  032B                     l2616:
  7860                           
  7861                           ;executer.c: 124:         LedBit[LedBackLeft].Prog = LedBrake;
  7862  032B  30ED               	movlw	low _LedBrake
  7863  032C  0141               	movlb	1	; select bank1
  7864  032D  00B8               	movwf	(low ((_LedBit| 0+24)))^(0+128)
  7865  032E  3005               	movlw	high _LedBrake
  7866  032F  00B9               	movwf	((low ((_LedBit| 0+24)))^(0+128)+1)
  7867                           
  7868                           ;executer.c: 125:         LedBit[LedBackRight].Prog = LedBrake;
  7869  0330  30ED               	movlw	low _LedBrake
  7870  0331  00C3               	movwf	(low ((_LedBit| 0+35)))^(0+128)
  7871  0332  3005               	movlw	high _LedBrake
  7872  0333  00C4               	movwf	((low ((_LedBit| 0+35)))^(0+128)+1)
  7873                           
  7874                           ;executer.c: 128:         LedBit[LedFlashLeft].Prog = LedOff;
  7875  0334  3092               	movlw	low _LedOff
  7876  0335  00A2               	movwf	(low ((_LedBit| 0+2)))^(0+128)
  7877  0336  3004               	movlw	high _LedOff
  7878  0337  00A3               	movwf	((low ((_LedBit| 0+2)))^(0+128)+1)
  7879                           
  7880                           ;executer.c: 129:         LedBit[LedFlashRight].Prog = LedOff;
  7881  0338  3092               	movlw	low _LedOff
  7882  0339  00AD               	movwf	(low ((_LedBit| 0+13)))^(0+128)
  7883  033A  3004               	movlw	high _LedOff
  7884  033B  00AE               	movwf	((low ((_LedBit| 0+13)))^(0+128)+1)
  7885                           
  7886                           ;executer.c: 132:         LedBit[LedFrontLeft].Prog = LedNom;
  7887  033C  3095               	movlw	low _LedNom
  7888  033D  00CE               	movwf	(low ((_LedBit| 0+46)))^(0+128)
  7889  033E  3003               	movlw	high _LedNom
  7890  033F  00CF               	movwf	((low ((_LedBit| 0+46)))^(0+128)+1)
  7891                           
  7892                           ;executer.c: 133:         LedBit[LedFrontRight].Prog = LedNom;
  7893  0340  3095               	movlw	low _LedNom
  7894  0341  00D9               	movwf	(low ((_LedBit| 0+57)))^(0+128)
  7895  0342  3003               	movlw	high _LedNom
  7896  0343  00DA               	movwf	((low ((_LedBit| 0+57)))^(0+128)+1)
  7897                           
  7898                           ;executer.c: 135:         if(Random < 16383)
  7899  0344  303F               	movlw	63
  7900  0345  0140               	movlb	0	; select bank0
  7901  0346  0227               	subwf	_Random+1,w
  7902  0347  30FF               	movlw	255
  7903  0348  1903               	skipnz
  7904  0349  0226               	subwf	_Random,w
  7905  034A  1C03               	btfss	3,0
  7906                           
  7907                           ;executer.c: 136:         {;executer.c: 138:             do { LATCbits.LATC1 = 1; } whil
      +                          e(0);
  7908  034B  149A               	bsf	26,1	;volatile
  7909                           
  7910                           ;executer.c: 142:         LATCbits.LATC0 = 0;
  7911                           
  7912                           ;executer.c: 139:         }
  7913  034C  101A               	bcf	26,0	;volatile
  7914  034D                     l2618:
  7915                           
  7916                           ;executer.c: 146:     Random = rand();
  7917  034D  2403               	fcall	_rand
  7918  034E  0846               	movf	?_rand+1,w
  7919  034F  00A7               	movwf	_Random+1
  7920  0350  0845               	movf	?_rand,w
  7921  0351  00A6               	movwf	_Random
  7922  0352  0008               	return
  7923  0353                     __end_of_RCSxLED:
  7924                           
  7925                           	psect	text26
  7926  0403                     __ptext26:	
  7927 ;; *************** function _rand *****************
  7928 ;; Defined at:
  7929 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\rand.c"
  7930 ;; Parameters:    Size  Location     Type
  7931 ;;		None
  7932 ;; Auto vars:     Size  Location     Type
  7933 ;;		None
  7934 ;; Return value:  Size  Location     Type
  7935 ;;                  2    4[BANK0 ] int 
  7936 ;; Registers used:
  7937 ;;		wreg, status,2, status,0, pclath, cstack
  7938 ;; Tracked objects:
  7939 ;;		On entry : 3F/0
  7940 ;;		On exit  : 3F/0
  7941 ;;		Unchanged: 0/0
  7942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7943 ;;      Params:         0       2       0       0
  7944 ;;      Locals:         0       0       0       0
  7945 ;;      Temps:          0       4       0       0
  7946 ;;      Totals:         0       6       0       0
  7947 ;;Total ram usage:        6 bytes
  7948 ;; Hardware stack levels used:    1
  7949 ;; Hardware stack levels required when called:    7
  7950 ;; This function calls:
  7951 ;;		___lmul
  7952 ;; This function is called by:
  7953 ;;		_INITxEXECUTER
  7954 ;;		_RCSxLED
  7955 ;; This function uses a non-reentrant model
  7956 ;;
  7957                           
  7958                           
  7959                           ;psect for function _rand
  7960  0403                     _rand:
  7961                           
  7962                           ;incstack = 0
  7963                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  7964  0403  0840               	movf	_seed+3,w
  7965  0404  00F5               	movwf	___lmul@multiplier+3
  7966  0405  083F               	movf	_seed+2,w
  7967  0406  00F4               	movwf	___lmul@multiplier+2
  7968  0407  083E               	movf	_seed+1,w
  7969  0408  00F3               	movwf	___lmul@multiplier+1
  7970  0409  083D               	movf	_seed,w
  7971  040A  00F2               	movwf	___lmul@multiplier
  7972  040B  304C               	movlw	76
  7973  040C  00F9               	movwf	___lmul@multiplicand+3
  7974  040D  3095               	movlw	149
  7975  040E  00F8               	movwf	___lmul@multiplicand+2
  7976  040F  307F               	movlw	127
  7977  0410  00F7               	movwf	___lmul@multiplicand+1
  7978  0411  302D               	movlw	45
  7979  0412  00F6               	movwf	___lmul@multiplicand
  7980  0413  2434               	fcall	___lmul
  7981  0414  3001               	movlw	1
  7982  0415  0772               	addwf	?___lmul,w
  7983  0416  00BD               	movwf	_seed
  7984  0417  3000               	movlw	0
  7985  0418  3D73               	addwfc	?___lmul+1,w
  7986  0419  00BE               	movwf	_seed+1
  7987  041A  3000               	movlw	0
  7988  041B  3D74               	addwfc	?___lmul+2,w
  7989  041C  00BF               	movwf	_seed+2
  7990  041D  3000               	movlw	0
  7991  041E  3D75               	addwfc	?___lmul+3,w
  7992  041F  00C0               	movwf	_seed+3
  7993  0420  083D               	movf	_seed,w
  7994  0421  00C7               	movwf	??_rand
  7995  0422  083E               	movf	_seed+1,w
  7996  0423  00C8               	movwf	??_rand+1
  7997  0424  083F               	movf	_seed+2,w
  7998  0425  00C9               	movwf	??_rand+2
  7999  0426  0840               	movf	_seed+3,w
  8000  0427  00CA               	movwf	??_rand+3
  8001  0428  3011               	movlw	17
  8002  0429                     u1155:
  8003  0429  36CA               	lsrf	??_rand+3,f
  8004  042A  0CC9               	rrf	??_rand+2,f
  8005  042B  0CC8               	rrf	??_rand+1,f
  8006  042C  0CC7               	rrf	??_rand,f
  8007  042D  0B89               	decfsz	9,f
  8008  042E  2C29               	goto	u1155
  8009  042F  0848               	movf	??_rand+1,w
  8010  0430  00C6               	movwf	?_rand+1
  8011  0431  0847               	movf	??_rand,w
  8012  0432  00C5               	movwf	?_rand
  8013  0433  0008               	return
  8014  0434                     __end_of_rand:
  8015                           
  8016                           	psect	text27
  8017  0434                     __ptext27:	
  8018 ;; *************** function ___lmul *****************
  8019 ;; Defined at:
  8020 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul32.c"
  8021 ;; Parameters:    Size  Location     Type
  8022 ;;  multiplier      4    2[COMMON] unsigned long 
  8023 ;;  multiplicand    4    6[COMMON] unsigned long 
  8024 ;; Auto vars:     Size  Location     Type
  8025 ;;  product         4    0[BANK0 ] unsigned long 
  8026 ;; Return value:  Size  Location     Type
  8027 ;;                  4    2[COMMON] unsigned long 
  8028 ;; Registers used:
  8029 ;;		wreg, status,2, status,0
  8030 ;; Tracked objects:
  8031 ;;		On entry : 3F/0
  8032 ;;		On exit  : 3F/0
  8033 ;;		Unchanged: 0/0
  8034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8035 ;;      Params:         8       0       0       0
  8036 ;;      Locals:         0       4       0       0
  8037 ;;      Temps:          0       0       0       0
  8038 ;;      Totals:         8       4       0       0
  8039 ;;Total ram usage:       12 bytes
  8040 ;; Hardware stack levels used:    1
  8041 ;; Hardware stack levels required when called:    6
  8042 ;; This function calls:
  8043 ;;		Nothing
  8044 ;; This function is called by:
  8045 ;;		_rand
  8046 ;; This function uses a non-reentrant model
  8047 ;;
  8048                           
  8049                           
  8050                           ;psect for function ___lmul
  8051  0434                     ___lmul:
  8052                           
  8053                           ;incstack = 0
  8054                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8055  0434  3000               	movlw	0
  8056  0435  00C4               	movwf	___lmul@product+3
  8057  0436  3000               	movlw	0
  8058  0437  00C3               	movwf	___lmul@product+2
  8059  0438  3000               	movlw	0
  8060  0439  00C2               	movwf	___lmul@product+1
  8061  043A  3000               	movlw	0
  8062  043B  00C1               	movwf	___lmul@product
  8063  043C                     l1964:
  8064  043C  1C72               	btfss	___lmul@multiplier,0
  8065  043D  2C46               	goto	l1968
  8066  043E  0876               	movf	___lmul@multiplicand,w
  8067  043F  07C1               	addwf	___lmul@product,f
  8068  0440  0877               	movf	___lmul@multiplicand+1,w
  8069  0441  3DC2               	addwfc	___lmul@product+1,f
  8070  0442  0878               	movf	___lmul@multiplicand+2,w
  8071  0443  3DC3               	addwfc	___lmul@product+2,f
  8072  0444  0879               	movf	___lmul@multiplicand+3,w
  8073  0445  3DC4               	addwfc	___lmul@product+3,f
  8074  0446                     l1968:
  8075  0446  3001               	movlw	1
  8076  0447                     u635:
  8077  0447  35F6               	lslf	___lmul@multiplicand,f
  8078  0448  0DF7               	rlf	___lmul@multiplicand+1,f
  8079  0449  0DF8               	rlf	___lmul@multiplicand+2,f
  8080  044A  0DF9               	rlf	___lmul@multiplicand+3,f
  8081  044B  0B89               	decfsz	9,f
  8082  044C  2C47               	goto	u635
  8083  044D  3001               	movlw	1
  8084  044E                     u645:
  8085  044E  36F5               	lsrf	___lmul@multiplier+3,f
  8086  044F  0CF4               	rrf	___lmul@multiplier+2,f
  8087  0450  0CF3               	rrf	___lmul@multiplier+1,f
  8088  0451  0CF2               	rrf	___lmul@multiplier,f
  8089  0452  0B89               	decfsz	9,f
  8090  0453  2C4E               	goto	u645
  8091  0454  0875               	movf	___lmul@multiplier+3,w
  8092  0455  0474               	iorwf	___lmul@multiplier+2,w
  8093  0456  0473               	iorwf	___lmul@multiplier+1,w
  8094  0457  0472               	iorwf	___lmul@multiplier,w
  8095  0458  1D03               	skipz
  8096  0459  2C3C               	goto	l1964
  8097  045A  0844               	movf	___lmul@product+3,w
  8098  045B  00F5               	movwf	?___lmul+3
  8099  045C  0843               	movf	___lmul@product+2,w
  8100  045D  00F4               	movwf	?___lmul+2
  8101  045E  0842               	movf	___lmul@product+1,w
  8102  045F  00F3               	movwf	?___lmul+1
  8103  0460  0841               	movf	___lmul@product,w
  8104  0461  00F2               	movwf	?___lmul
  8105  0462  0008               	return
  8106  0463                     __end_of___lmul:
  8107                           
  8108                           	psect	text28
  8109  0463                     __ptext28:	
  8110 ;; *************** function _EXECUTExEFFECT *****************
  8111 ;; Defined at:
  8112 ;;		line 152 in file "executer.c"
  8113 ;; Parameters:    Size  Location     Type
  8114 ;;		None
  8115 ;; Auto vars:     Size  Location     Type
  8116 ;;  x               1   15[BANK0 ] unsigned char 
  8117 ;;  ReturnData      1   14[BANK0 ] unsigned char 
  8118 ;; Return value:  Size  Location     Type
  8119 ;;                  1    wreg      unsigned char 
  8120 ;; Registers used:
  8121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8122 ;; Tracked objects:
  8123 ;;		On entry : 3F/0
  8124 ;;		On exit  : 3F/0
  8125 ;;		Unchanged: 0/0
  8126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8127 ;;      Params:         0       0       0       0
  8128 ;;      Locals:         0       4       0       0
  8129 ;;      Temps:          0       2       0       0
  8130 ;;      Totals:         0       6       0       0
  8131 ;;Total ram usage:        6 bytes
  8132 ;; Hardware stack levels used:    1
  8133 ;; Hardware stack levels required when called:    9
  8134 ;; This function calls:
  8135 ;;		_LedBrake
  8136 ;;		_LedFlash
  8137 ;;		_LedNom
  8138 ;;		_LedOff
  8139 ;;		_LedSlFl
  8140 ;;		___bmul
  8141 ;; This function is called by:
  8142 ;;		_main
  8143 ;; This function uses a non-reentrant model
  8144 ;;
  8145                           
  8146                           
  8147                           ;psect for function _EXECUTExEFFECT
  8148  0463                     _EXECUTExEFFECT:
  8149                           
  8150                           ;executer.c: 154:     ReturnVal = 0;
  8151                           
  8152                           ;incstack = 0
  8153                           ; Regs used in _EXECUTExEFFECT: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8154  0463  01B5               	clrf	_ReturnVal
  8155                           
  8156                           ;executer.c: 155:     uint8_t ReturnData = 0;
  8157  0464  01CF               	clrf	EXECUTExEFFECT@ReturnData
  8158                           
  8159                           ;executer.c: 157:     for(uint8_t x=0; x<6; x++)
  8160  0465  01D0               	clrf	EXECUTExEFFECT@x
  8161  0466                     l2734:
  8162                           
  8163                           ;executer.c: 158:     {;executer.c: 159:         ReturnData += LedBit[x].Prog(x);
  8164  0466  300B               	movlw	11
  8165  0467  00CB               	movwf	??_EXECUTExEFFECT
  8166  0468  084B               	movf	??_EXECUTExEFFECT,w
  8167  0469  00F2               	movwf	___bmul@multiplicand
  8168  046A  0850               	movf	EXECUTExEFFECT@x,w
  8169  046B  25FE               	fcall	___bmul
  8170  046C  3EA2               	addlw	(low ((_LedBit| 0+2)))& (0+255)
  8171  046D  0086               	movwf	6
  8172  046E  0187               	clrf	7
  8173  046F  3F40               	moviw [0]fsr1
  8174  0470  00CD               	movwf	_EXECUTExEFFECT$2042
  8175  0471  3F41               	moviw [1]fsr1
  8176  0472  00CE               	movwf	_EXECUTExEFFECT$2042+1
  8177                           
  8178                           ;executer.c: 158:     {;executer.c: 159:         ReturnData += LedBit[x].Prog(x);
  8179  0473  0850               	movf	EXECUTExEFFECT@x,w
  8180  0474  00CB               	movwf	??_EXECUTExEFFECT
  8181  0475  084B               	movf	??_EXECUTExEFFECT,w
  8182  0476  00C6               	movwf	LedBrake@Led
  8183  0477  084E               	movf	_EXECUTExEFFECT$2042+1,w
  8184  0478  008A               	movwf	10
  8185  0479  084D               	movf	_EXECUTExEFFECT$2042,w
  8186  047A  000A               	callw
  8187  047B  3184               	pagesel	$
  8188  047C  0140               	movlb	0	; select bank0
  8189  047D  00CC               	movwf	??_EXECUTExEFFECT+1
  8190  047E  084C               	movf	??_EXECUTExEFFECT+1,w
  8191  047F  07CF               	addwf	EXECUTExEFFECT@ReturnData,f
  8192                           
  8193                           ;executer.c: 160:     }
  8194  0480  3001               	movlw	1
  8195  0481  00CB               	movwf	??_EXECUTExEFFECT
  8196  0482  084B               	movf	??_EXECUTExEFFECT,w
  8197  0483  07D0               	addwf	EXECUTExEFFECT@x,f
  8198  0484  3006               	movlw	6
  8199  0485  0250               	subwf	EXECUTExEFFECT@x,w
  8200  0486  1C03               	skipc
  8201  0487  2C66               	goto	l2734
  8202                           
  8203                           ;executer.c: 161:     if(ReturnData >= 5)
  8204  0488  3005               	movlw	5
  8205  0489  024F               	subwf	EXECUTExEFFECT@ReturnData,w
  8206  048A  1C03               	skipc
  8207  048B  2C8F               	goto	l2746
  8208                           
  8209                           ;executer.c: 162:     {;executer.c: 163:         ReturnVal = 1;
  8210  048C  01B5               	clrf	_ReturnVal
  8211  048D  0AB5               	incf	_ReturnVal,f
  8212                           
  8213                           ;executer.c: 164:     }
  8214  048E  2C90               	goto	l2748
  8215  048F                     l2746:
  8216                           
  8217                           ;executer.c: 166:         ReturnVal = 0;
  8218  048F  01B5               	clrf	_ReturnVal
  8219  0490                     l2748:
  8220                           
  8221                           ;executer.c: 168:     return ReturnVal;
  8222  0490  0835               	movf	_ReturnVal,w
  8223  0491  0008               	return
  8224  0492                     __end_of_EXECUTExEFFECT:
  8225                           
  8226                           	psect	text29
  8227  05ED                     __ptext29:	
  8228 ;; *************** function _LedBrake *****************
  8229 ;; Defined at:
  8230 ;;		line 213 in file "executer.c"
  8231 ;; Parameters:    Size  Location     Type
  8232 ;;  Led             1    5[BANK0 ] unsigned char 
  8233 ;; Auto vars:     Size  Location     Type
  8234 ;;		None
  8235 ;; Return value:  Size  Location     Type
  8236 ;;                  1    wreg      unsigned char 
  8237 ;; Registers used:
  8238 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8239 ;; Tracked objects:
  8240 ;;		On entry : 3F/0
  8241 ;;		On exit  : 3E/6
  8242 ;;		Unchanged: 0/0
  8243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8244 ;;      Params:         0       1       0       0
  8245 ;;      Locals:         0       0       0       0
  8246 ;;      Temps:          0       2       0       0
  8247 ;;      Totals:         0       3       0       0
  8248 ;;Total ram usage:        3 bytes
  8249 ;; Hardware stack levels used:    1
  8250 ;; Hardware stack levels required when called:    8
  8251 ;; This function calls:
  8252 ;;		_CalcPwm
  8253 ;;		___bmul
  8254 ;; This function is called by:
  8255 ;;		_RCSxLED
  8256 ;;		_EXECUTExEFFECT
  8257 ;; This function uses a non-reentrant model
  8258 ;;
  8259                           
  8260                           
  8261                           ;psect for function _LedBrake
  8262  05ED                     _LedBrake:
  8263                           
  8264                           ;executer.c: 213: uint8_t LedBrake(uint8_t Led);executer.c: 214: {;executer.c: 215:     
      +                          LedBit[Led].Led = BRAKE;
  8265                           
  8266                           ;incstack = 0
  8267                           ; Regs used in _LedBrake: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8268  05ED  307F               	movlw	127
  8269  05EE  00C7               	movwf	??_LedBrake
  8270  05EF  300B               	movlw	11
  8271  05F0  00C8               	movwf	??_LedBrake+1
  8272  05F1  0848               	movf	??_LedBrake+1,w
  8273  05F2  00F2               	movwf	___bmul@multiplicand
  8274  05F3  0846               	movf	LedBrake@Led,w
  8275  05F4  25FE               	fcall	___bmul
  8276  05F5  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8277  05F6  0086               	movwf	6
  8278  05F7  0187               	clrf	7
  8279  05F8  0847               	movf	??_LedBrake,w
  8280  05F9  0081               	movwf	1
  8281                           
  8282                           ;executer.c: 216:     CalcPwm(Led);
  8283  05FA  0846               	movf	LedBrake@Led,w
  8284  05FB  24BE               	fcall	_CalcPwm
  8285                           
  8286                           ;executer.c: 217:     return(1);
  8287  05FC  3001               	movlw	1
  8288  05FD  0008               	return
  8289  05FE                     __end_of_LedBrake:
  8290                           
  8291                           	psect	text30
  8292  0395                     __ptext30:	
  8293 ;; *************** function _LedNom *****************
  8294 ;; Defined at:
  8295 ;;		line 187 in file "executer.c"
  8296 ;; Parameters:    Size  Location     Type
  8297 ;;  Led             1    5[BANK0 ] unsigned char 
  8298 ;; Auto vars:     Size  Location     Type
  8299 ;;		None
  8300 ;; Return value:  Size  Location     Type
  8301 ;;                  1    wreg      unsigned char 
  8302 ;; Registers used:
  8303 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8304 ;; Tracked objects:
  8305 ;;		On entry : 3F/0
  8306 ;;		On exit  : 3E/6
  8307 ;;		Unchanged: 0/0
  8308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8309 ;;      Params:         0       1       0       0
  8310 ;;      Locals:         0       0       0       0
  8311 ;;      Temps:          0       3       0       0
  8312 ;;      Totals:         0       4       0       0
  8313 ;;Total ram usage:        4 bytes
  8314 ;; Hardware stack levels used:    1
  8315 ;; Hardware stack levels required when called:    8
  8316 ;; This function calls:
  8317 ;;		_CalcPwm
  8318 ;;		___bmul
  8319 ;; This function is called by:
  8320 ;;		_RCSxLED
  8321 ;;		_EXECUTExEFFECT
  8322 ;; This function uses a non-reentrant model
  8323 ;;
  8324                           
  8325                           
  8326                           ;psect for function _LedNom
  8327  0395                     _LedNom:
  8328                           
  8329                           ;executer.c: 187: uint8_t LedNom(uint8_t Led);executer.c: 188: {;executer.c: 189:     Le
      +                          dBit[Led].Led = LedBit[Led].nominal;
  8330                           
  8331                           ;incstack = 0
  8332                           ; Regs used in _LedNom: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8333  0395  300B               	movlw	11
  8334  0396  00C7               	movwf	??_LedNom
  8335  0397  0847               	movf	??_LedNom,w
  8336  0398  00F2               	movwf	___bmul@multiplicand
  8337  0399  0846               	movf	LedNom@Led,w
  8338  039A  25FE               	fcall	___bmul
  8339  039B  3EA5               	addlw	(low ((_LedBit| 0+5)))& (0+255)
  8340  039C  0086               	movwf	6
  8341  039D  0187               	clrf	7
  8342  039E  0801               	movf	1,w
  8343  039F  00C8               	movwf	??_LedNom+1
  8344  03A0  300B               	movlw	11
  8345  03A1  00C9               	movwf	??_LedNom+2
  8346  03A2  0849               	movf	??_LedNom+2,w
  8347  03A3  00F2               	movwf	___bmul@multiplicand
  8348  03A4  0846               	movf	LedNom@Led,w
  8349  03A5  25FE               	fcall	___bmul
  8350  03A6  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8351  03A7  0086               	movwf	6
  8352  03A8  0187               	clrf	7
  8353  03A9  0848               	movf	??_LedNom+1,w
  8354  03AA  0081               	movwf	1
  8355                           
  8356                           ;executer.c: 190:     LedBit[Led].Speed = 0;
  8357  03AB  300B               	movlw	11
  8358  03AC  00C7               	movwf	??_LedNom
  8359  03AD  0847               	movf	??_LedNom,w
  8360  03AE  00F2               	movwf	___bmul@multiplicand
  8361  03AF  0846               	movf	LedNom@Led,w
  8362  03B0  25FE               	fcall	___bmul
  8363  03B1  3EA4               	addlw	(low ((_LedBit| 0+4)))& (0+255)
  8364  03B2  0086               	movwf	6
  8365  03B3  0187               	clrf	7
  8366  03B4  0181               	clrf	1
  8367                           
  8368                           ;executer.c: 191:     LedBit[Led].Prog_State = 0;
  8369  03B5  300B               	movlw	11
  8370  03B6  00C7               	movwf	??_LedNom
  8371  03B7  0847               	movf	??_LedNom,w
  8372  03B8  00F2               	movwf	___bmul@multiplicand
  8373  03B9  0846               	movf	LedNom@Led,w
  8374  03BA  25FE               	fcall	___bmul
  8375  03BB  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8376  03BC  0086               	movwf	6
  8377  03BD  0187               	clrf	7
  8378  03BE  0181               	clrf	1
  8379                           
  8380                           ;executer.c: 192:     LedBit[Led].Iteration = 0;
  8381  03BF  300B               	movlw	11
  8382  03C0  00C7               	movwf	??_LedNom
  8383  03C1  0847               	movf	??_LedNom,w
  8384  03C2  00F2               	movwf	___bmul@multiplicand
  8385  03C3  0846               	movf	LedNom@Led,w
  8386  03C4  25FE               	fcall	___bmul
  8387  03C5  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8388  03C6  0086               	movwf	6
  8389  03C7  0187               	clrf	7
  8390  03C8  0181               	clrf	1
  8391                           
  8392                           ;executer.c: 193:     CalcPwm(Led);
  8393  03C9  0846               	movf	LedNom@Led,w
  8394  03CA  24BE               	fcall	_CalcPwm
  8395                           
  8396                           ;executer.c: 194:     return(1);
  8397  03CB  3001               	movlw	1
  8398  03CC  0008               	return
  8399  03CD                     __end_of_LedNom:
  8400                           
  8401                           	psect	text31
  8402  01A0                     __ptext31:	
  8403 ;; *************** function _LedFlash *****************
  8404 ;; Defined at:
  8405 ;;		line 275 in file "executer.c"
  8406 ;; Parameters:    Size  Location     Type
  8407 ;;  Led             1    5[BANK0 ] unsigned char 
  8408 ;; Auto vars:     Size  Location     Type
  8409 ;;  ReturnVal       1    9[BANK0 ] unsigned char 
  8410 ;; Return value:  Size  Location     Type
  8411 ;;                  1    wreg      unsigned char 
  8412 ;; Registers used:
  8413 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8414 ;; Tracked objects:
  8415 ;;		On entry : 3F/0
  8416 ;;		On exit  : 3F/0
  8417 ;;		Unchanged: 0/0
  8418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8419 ;;      Params:         0       1       0       0
  8420 ;;      Locals:         0       1       0       0
  8421 ;;      Temps:          0       3       0       0
  8422 ;;      Totals:         0       5       0       0
  8423 ;;Total ram usage:        5 bytes
  8424 ;; Hardware stack levels used:    1
  8425 ;; Hardware stack levels required when called:    8
  8426 ;; This function calls:
  8427 ;;		_CalcPwm
  8428 ;;		___bmul
  8429 ;; This function is called by:
  8430 ;;		_BATTxPROTECT
  8431 ;;		_RCSxLED
  8432 ;;		_EXECUTExEFFECT
  8433 ;; This function uses a non-reentrant model
  8434 ;;
  8435                           
  8436                           
  8437                           ;psect for function _LedFlash
  8438  01A0                     _LedFlash:
  8439                           
  8440                           ;executer.c: 275: uint8_t LedFlash(uint8_t Led);executer.c: 276: {;executer.c: 277:     
      +                          uint8_t ReturnVal = 0;
  8441                           
  8442                           ;incstack = 0
  8443                           ; Regs used in _LedFlash: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8444  01A0  01CA               	clrf	LedFlash@ReturnVal
  8445                           
  8446                           ;executer.c: 279:     switch(LedBit[Led].Prog_State){
  8447  01A1  2A24               	goto	l2714
  8448  01A2                     l2694:
  8449  01A2  300B               	movlw	11
  8450  01A3  00C7               	movwf	??_LedFlash
  8451  01A4  0847               	movf	??_LedFlash,w
  8452  01A5  00F2               	movwf	___bmul@multiplicand
  8453  01A6  0846               	movf	LedFlash@Led,w
  8454  01A7  25FE               	fcall	___bmul
  8455  01A8  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8456  01A9  0086               	movwf	6
  8457  01AA  0187               	clrf	7
  8458  01AB  0181               	clrf	1
  8459                           
  8460                           ;executer.c: 281:                     LedBit[Led].Prog_State = 1;
  8461  01AC  300B               	movlw	11
  8462  01AD  00C7               	movwf	??_LedFlash
  8463  01AE  0847               	movf	??_LedFlash,w
  8464  01AF  00F2               	movwf	___bmul@multiplicand
  8465  01B0  0846               	movf	LedFlash@Led,w
  8466  01B1  25FE               	fcall	___bmul
  8467  01B2  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8468  01B3  0086               	movwf	6
  8469  01B4  0187               	clrf	7
  8470  01B5  0181               	clrf	1
  8471  01B6  0A81               	incf	1,f
  8472                           
  8473                           ;executer.c: 282:                     ReturnVal = 0;
  8474  01B7  01CA               	clrf	LedFlash@ReturnVal
  8475                           
  8476                           ;executer.c: 283:             break;
  8477  01B8  2A3D               	goto	l2716
  8478  01B9                     l2698:
  8479  01B9  3001               	movlw	1
  8480  01BA  00C7               	movwf	??_LedFlash
  8481  01BB  300B               	movlw	11
  8482  01BC  00C8               	movwf	??_LedFlash+1
  8483  01BD  0848               	movf	??_LedFlash+1,w
  8484  01BE  00F2               	movwf	___bmul@multiplicand
  8485  01BF  0846               	movf	LedFlash@Led,w
  8486  01C0  25FE               	fcall	___bmul
  8487  01C1  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8488  01C2  0086               	movwf	6
  8489  01C3  0187               	clrf	7
  8490  01C4  0847               	movf	??_LedFlash,w
  8491  01C5  0781               	addwf	1,f
  8492                           
  8493                           ;executer.c: 286:                     if(LedBit[Led].Iteration > LedBit[Led].Speed){
  8494  01C6  300B               	movlw	11
  8495  01C7  00C7               	movwf	??_LedFlash
  8496  01C8  0847               	movf	??_LedFlash,w
  8497  01C9  00F2               	movwf	___bmul@multiplicand
  8498  01CA  0846               	movf	LedFlash@Led,w
  8499  01CB  25FE               	fcall	___bmul
  8500  01CC  3EA4               	addlw	(low ((_LedBit| 0+4)))& (0+255)
  8501  01CD  0086               	movwf	6
  8502  01CE  0187               	clrf	7
  8503  01CF  300B               	movlw	11
  8504  01D0  00C8               	movwf	??_LedFlash+1
  8505  01D1  0848               	movf	??_LedFlash+1,w
  8506  01D2  00F2               	movwf	___bmul@multiplicand
  8507  01D3  0846               	movf	LedFlash@Led,w
  8508  01D4  25FE               	fcall	___bmul
  8509  01D5  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8510  01D6  0084               	movwf	4
  8511  01D7  0185               	clrf	5
  8512  01D8  0800               	movf	0,w
  8513  01D9  0201               	subwf	1,w
  8514  01DA  1803               	skipnc
  8515  01DB  2A0B               	goto	l683
  8516                           
  8517                           ;executer.c: 287:                         LedBit[Led].Iteration = 0;
  8518  01DC  300B               	movlw	11
  8519  01DD  00C7               	movwf	??_LedFlash
  8520  01DE  0847               	movf	??_LedFlash,w
  8521  01DF  00F2               	movwf	___bmul@multiplicand
  8522  01E0  0846               	movf	LedFlash@Led,w
  8523  01E1  25FE               	fcall	___bmul
  8524  01E2  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8525  01E3  0086               	movwf	6
  8526  01E4  0187               	clrf	7
  8527  01E5  0181               	clrf	1
  8528                           
  8529                           ;executer.c: 288:                         if(LedBit[Led].Led == MAX){
  8530  01E6  300B               	movlw	11
  8531  01E7  00C7               	movwf	??_LedFlash
  8532  01E8  0847               	movf	??_LedFlash,w
  8533  01E9  00F2               	movwf	___bmul@multiplicand
  8534  01EA  0846               	movf	LedFlash@Led,w
  8535  01EB  25FE               	fcall	___bmul
  8536  01EC  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8537  01ED  0086               	movwf	6
  8538  01EE  0187               	clrf	7
  8539  01EF  30FE               	movlw	254
  8540  01F0  0601               	xorwf	1,w
  8541  01F1  1D03               	btfss	3,2
  8542  01F2  29FE               	goto	l2706
  8543                           
  8544                           ;executer.c: 289:                             LedBit[Led].Led = 0;
  8545  01F3  300B               	movlw	11
  8546  01F4  00C7               	movwf	??_LedFlash
  8547  01F5  0847               	movf	??_LedFlash,w
  8548  01F6  00F2               	movwf	___bmul@multiplicand
  8549  01F7  0846               	movf	LedFlash@Led,w
  8550  01F8  25FE               	fcall	___bmul
  8551  01F9  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8552  01FA  0086               	movwf	6
  8553  01FB  0187               	clrf	7
  8554  01FC  0181               	clrf	1
  8555                           
  8556                           ;executer.c: 290:                         }
  8557  01FD  2A0B               	goto	l683
  8558  01FE                     l2706:
  8559                           
  8560                           ;executer.c: 292:                             LedBit[Led].Led = MAX;
  8561  01FE  30FE               	movlw	254
  8562  01FF  00C7               	movwf	??_LedFlash
  8563  0200  300B               	movlw	11
  8564  0201  00C8               	movwf	??_LedFlash+1
  8565  0202  0848               	movf	??_LedFlash+1,w
  8566  0203  00F2               	movwf	___bmul@multiplicand
  8567  0204  0846               	movf	LedFlash@Led,w
  8568  0205  25FE               	fcall	___bmul
  8569  0206  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8570  0207  0086               	movwf	6
  8571  0208  0187               	clrf	7
  8572  0209  0847               	movf	??_LedFlash,w
  8573  020A  0081               	movwf	1
  8574  020B                     l683:	
  8575                           ;executer.c: 294:                     }
  8576                           
  8577                           
  8578                           ;executer.c: 295:                     LedBit[Led].Prog_State = 1;
  8579  020B  300B               	movlw	11
  8580  020C  00C7               	movwf	??_LedFlash
  8581  020D  0847               	movf	??_LedFlash,w
  8582  020E  00F2               	movwf	___bmul@multiplicand
  8583  020F  0846               	movf	LedFlash@Led,w
  8584  0210  25FE               	fcall	___bmul
  8585  0211  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8586  0212  0086               	movwf	6
  8587  0213  0187               	clrf	7
  8588  0214  0181               	clrf	1
  8589  0215  0A81               	incf	1,f
  8590                           
  8591                           ;executer.c: 296:                     ReturnVal = 1;
  8592  0216  01CA               	clrf	LedFlash@ReturnVal
  8593  0217  0ACA               	incf	LedFlash@ReturnVal,f
  8594                           
  8595                           ;executer.c: 297:             break;
  8596  0218  2A3D               	goto	l2716
  8597  0219                     l2710:
  8598  0219  300B               	movlw	11
  8599  021A  00C7               	movwf	??_LedFlash
  8600  021B  0847               	movf	??_LedFlash,w
  8601  021C  00F2               	movwf	___bmul@multiplicand
  8602  021D  0846               	movf	LedFlash@Led,w
  8603  021E  25FE               	fcall	___bmul
  8604  021F  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8605  0220  0086               	movwf	6
  8606  0221  0187               	clrf	7
  8607  0222  0181               	clrf	1
  8608                           
  8609                           ;executer.c: 300:         break;
  8610  0223  2A3D               	goto	l2716
  8611  0224                     l2714:
  8612  0224  300B               	movlw	11
  8613  0225  00C7               	movwf	??_LedFlash
  8614  0226  0847               	movf	??_LedFlash,w
  8615  0227  00F2               	movwf	___bmul@multiplicand
  8616  0228  0846               	movf	LedFlash@Led,w
  8617  0229  25FE               	fcall	___bmul
  8618  022A  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8619  022B  0086               	movwf	6
  8620  022C  0187               	clrf	7
  8621  022D  0801               	movf	1,w
  8622  022E  00C8               	movwf	??_LedFlash+1
  8623  022F  01C9               	clrf	??_LedFlash+2
  8624                           
  8625                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8626                           ; Switch size 1, requested type "simple"
  8627                           ; Number of cases is 1, Range of values is 0 to 0
  8628                           ; switch strategies available:
  8629                           ; Name         Instructions Cycles
  8630                           ; simple_byte            4     3 (average)
  8631                           ; direct_byte            8     6 (fixed)
  8632                           ; jumptable            260     6 (fixed)
  8633                           ;	Chosen strategy is simple_byte
  8634  0230  0849               	movf	??_LedFlash+2,w
  8635  0231  3A00               	xorlw	0	; case 0
  8636  0232  1903               	skipnz
  8637  0233  2A35               	goto	l2904
  8638  0234  2A19               	goto	l2710
  8639  0235                     l2904:
  8640                           
  8641                           ; Switch size 1, requested type "simple"
  8642                           ; Number of cases is 2, Range of values is 0 to 1
  8643                           ; switch strategies available:
  8644                           ; Name         Instructions Cycles
  8645                           ; simple_byte            7     4 (average)
  8646                           ; direct_byte           10     6 (fixed)
  8647                           ; jumptable            260     6 (fixed)
  8648                           ;	Chosen strategy is simple_byte
  8649  0235  0848               	movf	??_LedFlash+1,w
  8650  0236  3A00               	xorlw	0	; case 0
  8651  0237  1903               	skipnz
  8652  0238  29A2               	goto	l2694
  8653  0239  3A01               	xorlw	1	; case 1
  8654  023A  1903               	skipnz
  8655  023B  29B9               	goto	l2698
  8656  023C  2A19               	goto	l2710
  8657  023D                     l2716:
  8658                           
  8659                           ;executer.c: 303:     CalcPwm(Led);
  8660  023D  0846               	movf	LedFlash@Led,w
  8661  023E  24BE               	fcall	_CalcPwm
  8662                           
  8663                           ;executer.c: 304:     return(ReturnVal);
  8664  023F  0140               	movlb	0	; select bank0
  8665  0240  084A               	movf	LedFlash@ReturnVal,w
  8666  0241  0008               	return
  8667  0242                     __end_of_LedFlash:
  8668                           
  8669                           	psect	text32
  8670  0492                     __ptext32:	
  8671 ;; *************** function _LedOff *****************
  8672 ;; Defined at:
  8673 ;;		line 174 in file "executer.c"
  8674 ;; Parameters:    Size  Location     Type
  8675 ;;  Led             1    5[BANK0 ] unsigned char 
  8676 ;; Auto vars:     Size  Location     Type
  8677 ;;		None
  8678 ;; Return value:  Size  Location     Type
  8679 ;;                  1    wreg      unsigned char 
  8680 ;; Registers used:
  8681 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8682 ;; Tracked objects:
  8683 ;;		On entry : 3F/0
  8684 ;;		On exit  : 3E/6
  8685 ;;		Unchanged: 0/0
  8686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8687 ;;      Params:         0       1       0       0
  8688 ;;      Locals:         0       0       0       0
  8689 ;;      Temps:          0       1       0       0
  8690 ;;      Totals:         0       2       0       0
  8691 ;;Total ram usage:        2 bytes
  8692 ;; Hardware stack levels used:    1
  8693 ;; Hardware stack levels required when called:    8
  8694 ;; This function calls:
  8695 ;;		_CalcPwm
  8696 ;;		___bmul
  8697 ;; This function is called by:
  8698 ;;		_BATTxPROTECT
  8699 ;;		_RCSxLED
  8700 ;;		_EXECUTExEFFECT
  8701 ;; This function uses a non-reentrant model
  8702 ;;
  8703                           
  8704                           
  8705                           ;psect for function _LedOff
  8706  0492                     _LedOff:
  8707                           
  8708                           ;executer.c: 174: uint8_t LedOff(uint8_t Led);executer.c: 175: {;executer.c: 176:     Le
      +                          dBit[Led].Led = 0;
  8709                           
  8710                           ;incstack = 0
  8711                           ; Regs used in _LedOff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8712  0492  300B               	movlw	11
  8713  0493  00C7               	movwf	??_LedOff
  8714  0494  0847               	movf	??_LedOff,w
  8715  0495  00F2               	movwf	___bmul@multiplicand
  8716  0496  0846               	movf	LedOff@Led,w
  8717  0497  25FE               	fcall	___bmul
  8718  0498  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8719  0499  0086               	movwf	6
  8720  049A  0187               	clrf	7
  8721  049B  0181               	clrf	1
  8722                           
  8723                           ;executer.c: 177:     LedBit[Led].Speed = 0;
  8724  049C  300B               	movlw	11
  8725  049D  00C7               	movwf	??_LedOff
  8726  049E  0847               	movf	??_LedOff,w
  8727  049F  00F2               	movwf	___bmul@multiplicand
  8728  04A0  0846               	movf	LedOff@Led,w
  8729  04A1  25FE               	fcall	___bmul
  8730  04A2  3EA4               	addlw	(low ((_LedBit| 0+4)))& (0+255)
  8731  04A3  0086               	movwf	6
  8732  04A4  0187               	clrf	7
  8733  04A5  0181               	clrf	1
  8734                           
  8735                           ;executer.c: 178:     LedBit[Led].Prog_State = 0;
  8736  04A6  300B               	movlw	11
  8737  04A7  00C7               	movwf	??_LedOff
  8738  04A8  0847               	movf	??_LedOff,w
  8739  04A9  00F2               	movwf	___bmul@multiplicand
  8740  04AA  0846               	movf	LedOff@Led,w
  8741  04AB  25FE               	fcall	___bmul
  8742  04AC  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8743  04AD  0086               	movwf	6
  8744  04AE  0187               	clrf	7
  8745  04AF  0181               	clrf	1
  8746                           
  8747                           ;executer.c: 179:     LedBit[Led].Iteration = 0;
  8748  04B0  300B               	movlw	11
  8749  04B1  00C7               	movwf	??_LedOff
  8750  04B2  0847               	movf	??_LedOff,w
  8751  04B3  00F2               	movwf	___bmul@multiplicand
  8752  04B4  0846               	movf	LedOff@Led,w
  8753  04B5  25FE               	fcall	___bmul
  8754  04B6  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8755  04B7  0086               	movwf	6
  8756  04B8  0187               	clrf	7
  8757  04B9  0181               	clrf	1
  8758                           
  8759                           ;executer.c: 180:     CalcPwm(Led);
  8760  04BA  0846               	movf	LedOff@Led,w
  8761  04BB  24BE               	fcall	_CalcPwm
  8762                           
  8763                           ;executer.c: 181:     return(1);
  8764  04BC  3001               	movlw	1
  8765  04BD  0008               	return
  8766  04BE                     __end_of_LedOff:
  8767                           
  8768                           	psect	text33
  8769  0039                     __ptext33:	
  8770 ;; *************** function _LedSlFl *****************
  8771 ;; Defined at:
  8772 ;;		line 223 in file "executer.c"
  8773 ;; Parameters:    Size  Location     Type
  8774 ;;  Led             1    5[BANK0 ] unsigned char 
  8775 ;; Auto vars:     Size  Location     Type
  8776 ;;  ReturnVal       1    9[BANK0 ] unsigned char 
  8777 ;; Return value:  Size  Location     Type
  8778 ;;                  1    wreg      unsigned char 
  8779 ;; Registers used:
  8780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8781 ;; Tracked objects:
  8782 ;;		On entry : 3F/0
  8783 ;;		On exit  : 3F/0
  8784 ;;		Unchanged: 0/0
  8785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8786 ;;      Params:         0       1       0       0
  8787 ;;      Locals:         0       1       0       0
  8788 ;;      Temps:          0       3       0       0
  8789 ;;      Totals:         0       5       0       0
  8790 ;;Total ram usage:        5 bytes
  8791 ;; Hardware stack levels used:    1
  8792 ;; Hardware stack levels required when called:    8
  8793 ;; This function calls:
  8794 ;;		_CalcPwm
  8795 ;;		___bmul
  8796 ;; This function is called by:
  8797 ;;		_RCSxLED
  8798 ;;		_EXECUTExEFFECT
  8799 ;; This function uses a non-reentrant model
  8800 ;;
  8801                           
  8802                           
  8803                           ;psect for function _LedSlFl
  8804  0039                     _LedSlFl:
  8805                           
  8806                           ;executer.c: 223: uint8_t LedSlFl(uint8_t Led);executer.c: 224: {;executer.c: 225:     u
      +                          int8_t ReturnVal = 0;
  8807                           
  8808                           ;incstack = 0
  8809                           ; Regs used in _LedSlFl: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8810  0039  01CA               	clrf	LedSlFl@ReturnVal
  8811                           
  8812                           ;executer.c: 227:     switch(LedBit[Led].Prog_State){
  8813  003A  297F               	goto	l2680
  8814  003B                     l2640:
  8815  003B  300B               	movlw	11
  8816  003C  00C7               	movwf	??_LedSlFl
  8817  003D  0847               	movf	??_LedSlFl,w
  8818  003E  00F2               	movwf	___bmul@multiplicand
  8819  003F  0846               	movf	LedSlFl@Led,w
  8820  0040  25FE               	fcall	___bmul
  8821  0041  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8822  0042  0086               	movwf	6
  8823  0043  0187               	clrf	7
  8824  0044  0181               	clrf	1
  8825                           
  8826                           ;executer.c: 229:                     LedBit[Led].Prog_State = 1;
  8827  0045  300B               	movlw	11
  8828  0046  00C7               	movwf	??_LedSlFl
  8829  0047  0847               	movf	??_LedSlFl,w
  8830  0048  00F2               	movwf	___bmul@multiplicand
  8831  0049  0846               	movf	LedSlFl@Led,w
  8832  004A  25FE               	fcall	___bmul
  8833  004B  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8834  004C  0086               	movwf	6
  8835  004D  0187               	clrf	7
  8836  004E  0181               	clrf	1
  8837  004F  0A81               	incf	1,f
  8838                           
  8839                           ;executer.c: 230:                     ReturnVal = 0;
  8840  0050  01CA               	clrf	LedSlFl@ReturnVal
  8841                           
  8842                           ;executer.c: 231:             break;
  8843  0051  299B               	goto	l2682
  8844  0052                     l2644:
  8845  0052  3001               	movlw	1
  8846  0053  00C7               	movwf	??_LedSlFl
  8847  0054  300B               	movlw	11
  8848  0055  00C8               	movwf	??_LedSlFl+1
  8849  0056  0848               	movf	??_LedSlFl+1,w
  8850  0057  00F2               	movwf	___bmul@multiplicand
  8851  0058  0846               	movf	LedSlFl@Led,w
  8852  0059  25FE               	fcall	___bmul
  8853  005A  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8854  005B  0086               	movwf	6
  8855  005C  0187               	clrf	7
  8856  005D  0847               	movf	??_LedSlFl,w
  8857  005E  0781               	addwf	1,f
  8858                           
  8859                           ;executer.c: 234:                     if(LedBit[Led].Iteration > LedBit[Led].Speed){
  8860  005F  300B               	movlw	11
  8861  0060  00C7               	movwf	??_LedSlFl
  8862  0061  0847               	movf	??_LedSlFl,w
  8863  0062  00F2               	movwf	___bmul@multiplicand
  8864  0063  0846               	movf	LedSlFl@Led,w
  8865  0064  25FE               	fcall	___bmul
  8866  0065  3EA4               	addlw	(low ((_LedBit| 0+4)))& (0+255)
  8867  0066  0086               	movwf	6
  8868  0067  0187               	clrf	7
  8869  0068  300B               	movlw	11
  8870  0069  00C8               	movwf	??_LedSlFl+1
  8871  006A  0848               	movf	??_LedSlFl+1,w
  8872  006B  00F2               	movwf	___bmul@multiplicand
  8873  006C  0846               	movf	LedSlFl@Led,w
  8874  006D  25FE               	fcall	___bmul
  8875  006E  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8876  006F  0084               	movwf	4
  8877  0070  0185               	clrf	5
  8878  0071  0800               	movf	0,w
  8879  0072  0201               	subwf	1,w
  8880  0073  1803               	skipnc
  8881  0074  2895               	goto	l668
  8882                           
  8883                           ;executer.c: 235:                         LedBit[Led].Iteration = 0;
  8884  0075  300B               	movlw	11
  8885  0076  00C7               	movwf	??_LedSlFl
  8886  0077  0847               	movf	??_LedSlFl,w
  8887  0078  00F2               	movwf	___bmul@multiplicand
  8888  0079  0846               	movf	LedSlFl@Led,w
  8889  007A  25FE               	fcall	___bmul
  8890  007B  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8891  007C  0086               	movwf	6
  8892  007D  0187               	clrf	7
  8893  007E  0181               	clrf	1
  8894                           
  8895                           ;executer.c: 236:                         LedBit[Led].Led += LedBit[Led].StepSize;
  8896  007F  300B               	movlw	11
  8897  0080  00C7               	movwf	??_LedSlFl
  8898  0081  0847               	movf	??_LedSlFl,w
  8899  0082  00F2               	movwf	___bmul@multiplicand
  8900  0083  0846               	movf	LedSlFl@Led,w
  8901  0084  25FE               	fcall	___bmul
  8902  0085  3EA8               	addlw	(low ((_LedBit| 0+8)))& (0+255)
  8903  0086  0086               	movwf	6
  8904  0087  0187               	clrf	7
  8905  0088  0801               	movf	1,w
  8906  0089  00C8               	movwf	??_LedSlFl+1
  8907  008A  300B               	movlw	11
  8908  008B  00C9               	movwf	??_LedSlFl+2
  8909  008C  0849               	movf	??_LedSlFl+2,w
  8910  008D  00F2               	movwf	___bmul@multiplicand
  8911  008E  0846               	movf	LedSlFl@Led,w
  8912  008F  25FE               	fcall	___bmul
  8913  0090  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8914  0091  0086               	movwf	6
  8915  0092  0187               	clrf	7
  8916  0093  0848               	movf	??_LedSlFl+1,w
  8917  0094  0781               	addwf	1,f
  8918  0095                     l668:	
  8919                           ;executer.c: 237:                     }
  8920                           
  8921                           
  8922                           ;executer.c: 238:                     if(LedBit[Led].Led > MAX){
  8923  0095  300B               	movlw	11
  8924  0096  00C7               	movwf	??_LedSlFl
  8925  0097  0847               	movf	??_LedSlFl,w
  8926  0098  00F2               	movwf	___bmul@multiplicand
  8927  0099  0846               	movf	LedSlFl@Led,w
  8928  009A  25FE               	fcall	___bmul
  8929  009B  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8930  009C  0086               	movwf	6
  8931  009D  0187               	clrf	7
  8932  009E  0A01               	incf	1,w
  8933  009F  1D03               	btfss	3,2
  8934  00A0  28C5               	goto	l2652
  8935                           
  8936                           ;executer.c: 239:                         LedBit[Led].Led = MAX;
  8937  00A1  30FE               	movlw	254
  8938  00A2  00C7               	movwf	??_LedSlFl
  8939  00A3  300B               	movlw	11
  8940  00A4  00C8               	movwf	??_LedSlFl+1
  8941  00A5  0848               	movf	??_LedSlFl+1,w
  8942  00A6  00F2               	movwf	___bmul@multiplicand
  8943  00A7  0846               	movf	LedSlFl@Led,w
  8944  00A8  25FE               	fcall	___bmul
  8945  00A9  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8946  00AA  0086               	movwf	6
  8947  00AB  0187               	clrf	7
  8948  00AC  0847               	movf	??_LedSlFl,w
  8949  00AD  0081               	movwf	1
  8950                           
  8951                           ;executer.c: 240:                         LedBit[Led].Prog_State = 2;
  8952  00AE  3002               	movlw	2
  8953  00AF  00C7               	movwf	??_LedSlFl
  8954  00B0  300B               	movlw	11
  8955  00B1  00C8               	movwf	??_LedSlFl+1
  8956  00B2  0848               	movf	??_LedSlFl+1,w
  8957  00B3  00F2               	movwf	___bmul@multiplicand
  8958  00B4  0846               	movf	LedSlFl@Led,w
  8959  00B5  25FE               	fcall	___bmul
  8960  00B6  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8961  00B7  0086               	movwf	6
  8962  00B8  0187               	clrf	7
  8963  00B9  0847               	movf	??_LedSlFl,w
  8964  00BA  0081               	movwf	1
  8965  00BB                     L2:
  8966                           
  8967                           ;executer.c: 241:                         LedBit[Led].Iteration = 0;
  8968  00BB  300B               	movlw	11
  8969  00BC  00C7               	movwf	??_LedSlFl
  8970  00BD  0847               	movf	??_LedSlFl,w
  8971  00BE  00F2               	movwf	___bmul@multiplicand
  8972  00BF  0846               	movf	LedSlFl@Led,w
  8973  00C0  25FE               	fcall	___bmul
  8974  00C1  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8975  00C2  0086               	movwf	6
  8976  00C3  0187               	clrf	7
  8977  00C4  0181               	clrf	1
  8978  00C5                     l2652:
  8979                           
  8980                           ;executer.c: 243:                     ReturnVal = 1;
  8981  00C5  01CA               	clrf	LedSlFl@ReturnVal
  8982  00C6  0ACA               	incf	LedSlFl@ReturnVal,f
  8983                           
  8984                           ;executer.c: 244:             break;
  8985  00C7  299B               	goto	l2682
  8986  00C8                     l2654:
  8987  00C8  3001               	movlw	1
  8988  00C9  00C7               	movwf	??_LedSlFl
  8989  00CA  300B               	movlw	11
  8990  00CB  00C8               	movwf	??_LedSlFl+1
  8991  00CC  0848               	movf	??_LedSlFl+1,w
  8992  00CD  00F2               	movwf	___bmul@multiplicand
  8993  00CE  0846               	movf	LedSlFl@Led,w
  8994  00CF  25FE               	fcall	___bmul
  8995  00D0  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8996  00D1  0086               	movwf	6
  8997  00D2  0187               	clrf	7
  8998  00D3  0847               	movf	??_LedSlFl,w
  8999  00D4  0781               	addwf	1,f
  9000                           
  9001                           ;executer.c: 247:                     if(LedBit[Led].Iteration > LedBit[Led].Speed){
  9002  00D5  300B               	movlw	11
  9003  00D6  00C7               	movwf	??_LedSlFl
  9004  00D7  0847               	movf	??_LedSlFl,w
  9005  00D8  00F2               	movwf	___bmul@multiplicand
  9006  00D9  0846               	movf	LedSlFl@Led,w
  9007  00DA  25FE               	fcall	___bmul
  9008  00DB  3EA4               	addlw	(low ((_LedBit| 0+4)))& (0+255)
  9009  00DC  0086               	movwf	6
  9010  00DD  0187               	clrf	7
  9011  00DE  300B               	movlw	11
  9012  00DF  00C8               	movwf	??_LedSlFl+1
  9013  00E0  0848               	movf	??_LedSlFl+1,w
  9014  00E1  00F2               	movwf	___bmul@multiplicand
  9015  00E2  0846               	movf	LedSlFl@Led,w
  9016  00E3  25FE               	fcall	___bmul
  9017  00E4  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  9018  00E5  0084               	movwf	4
  9019  00E6  0185               	clrf	5
  9020  00E7  0800               	movf	0,w
  9021  00E8  0201               	subwf	1,w
  9022  00E9  1803               	skipnc
  9023  00EA  2909               	goto	l2662
  9024                           
  9025                           ;executer.c: 248:                         LedBit[Led].Iteration = 0;
  9026  00EB  300B               	movlw	11
  9027  00EC  00C7               	movwf	??_LedSlFl
  9028  00ED  0847               	movf	??_LedSlFl,w
  9029  00EE  00F2               	movwf	___bmul@multiplicand
  9030  00EF  0846               	movf	LedSlFl@Led,w
  9031  00F0  25FE               	fcall	___bmul
  9032  00F1  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  9033  00F2  0086               	movwf	6
  9034  00F3  0187               	clrf	7
  9035  00F4  0181               	clrf	1
  9036                           
  9037                           ;executer.c: 249:                         LedBit[Led].Led -= LedBit[Led].StepSize;
  9038  00F5  300B               	movlw	11
  9039  00F6  00C7               	movwf	??_LedSlFl
  9040  00F7  0847               	movf	??_LedSlFl,w
  9041  00F8  00F2               	movwf	___bmul@multiplicand
  9042  00F9  0846               	movf	LedSlFl@Led,w
  9043  00FA  25FE               	fcall	___bmul
  9044  00FB  3EA8               	addlw	(low ((_LedBit| 0+8)))& (0+255)
  9045  00FC  0086               	movwf	6
  9046  00FD  0187               	clrf	7
  9047  00FE  300B               	movlw	11
  9048  00FF  00C8               	movwf	??_LedSlFl+1
  9049  0100  0848               	movf	??_LedSlFl+1,w
  9050  0101  00F2               	movwf	___bmul@multiplicand
  9051  0102  0846               	movf	LedSlFl@Led,w
  9052  0103  25FE               	fcall	___bmul
  9053  0104  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  9054  0105  0084               	movwf	4
  9055  0106  0185               	clrf	5
  9056  0107  0801               	movf	1,w
  9057  0108  0280               	subwf	0,f
  9058  0109                     l2662:
  9059                           
  9060                           ;executer.c: 251:                     if((LedBit[Led].nominal != MAX) && (LedBit[Led].Le
      +                          d <= LedBit[Led].nominal)){
  9061  0109  300B               	movlw	11
  9062  010A  00C7               	movwf	??_LedSlFl
  9063  010B  0847               	movf	??_LedSlFl,w
  9064  010C  00F2               	movwf	___bmul@multiplicand
  9065  010D  0846               	movf	LedSlFl@Led,w
  9066  010E  25FE               	fcall	___bmul
  9067  010F  3EA5               	addlw	(low ((_LedBit| 0+5)))& (0+255)
  9068  0110  0086               	movwf	6
  9069  0111  0187               	clrf	7
  9070  0112  30FE               	movlw	254
  9071  0113  0601               	xorwf	1,w
  9072  0114  1903               	btfsc	3,2
  9073  0115  2943               	goto	l2668
  9074  0116  300B               	movlw	11
  9075  0117  00C7               	movwf	??_LedSlFl
  9076  0118  0847               	movf	??_LedSlFl,w
  9077  0119  00F2               	movwf	___bmul@multiplicand
  9078  011A  0846               	movf	LedSlFl@Led,w
  9079  011B  25FE               	fcall	___bmul
  9080  011C  3EA5               	addlw	(low ((_LedBit| 0+5)))& (0+255)
  9081  011D  0086               	movwf	6
  9082  011E  0187               	clrf	7
  9083  011F  300B               	movlw	11
  9084  0120  00C8               	movwf	??_LedSlFl+1
  9085  0121  0848               	movf	??_LedSlFl+1,w
  9086  0122  00F2               	movwf	___bmul@multiplicand
  9087  0123  0846               	movf	LedSlFl@Led,w
  9088  0124  25FE               	fcall	___bmul
  9089  0125  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  9090  0126  0084               	movwf	4
  9091  0127  0185               	clrf	5
  9092  0128  0800               	movf	0,w
  9093  0129  0201               	subwf	1,w
  9094  012A  1C03               	skipc
  9095  012B  2943               	goto	l2668
  9096                           
  9097                           ;executer.c: 252:                         LedBit[Led].Led = LedBit[Led].nominal;
  9098  012C  300B               	movlw	11
  9099  012D  00C7               	movwf	??_LedSlFl
  9100  012E  0847               	movf	??_LedSlFl,w
  9101  012F  00F2               	movwf	___bmul@multiplicand
  9102  0130  0846               	movf	LedSlFl@Led,w
  9103  0131  25FE               	fcall	___bmul
  9104  0132  3EA5               	addlw	(low ((_LedBit| 0+5)))& (0+255)
  9105  0133  0086               	movwf	6
  9106  0134  0187               	clrf	7
  9107  0135  0801               	movf	1,w
  9108  0136  00C8               	movwf	??_LedSlFl+1
  9109  0137  300B               	movlw	11
  9110  0138  00C9               	movwf	??_LedSlFl+2
  9111  0139  0849               	movf	??_LedSlFl+2,w
  9112  013A  00F2               	movwf	___bmul@multiplicand
  9113  013B  0846               	movf	LedSlFl@Led,w
  9114  013C  25FE               	fcall	___bmul
  9115  013D  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  9116  013E  0086               	movwf	6
  9117  013F  0187               	clrf	7
  9118  0140  0848               	movf	??_LedSlFl+1,w
  9119  0141  0081               	movwf	1
  9120  0142  2968               	goto	L4
  9121  0143                     l2668:	
  9122                           ;executer.c: 255:                     }
  9123                           
  9124                           ;executer.c: 254:                         LedBit[Led].Iteration = 0;
  9125                           
  9126                           ;executer.c: 253:                         LedBit[Led].Prog_State = 1;
  9127                           
  9128  0143  300B               	movlw	11
  9129  0144  00C7               	movwf	??_LedSlFl
  9130  0145  0847               	movf	??_LedSlFl,w
  9131  0146  00F2               	movwf	___bmul@multiplicand
  9132  0147  0846               	movf	LedSlFl@Led,w
  9133  0148  25FE               	fcall	___bmul
  9134  0149  3EA5               	addlw	(low ((_LedBit| 0+5)))& (0+255)
  9135  014A  0086               	movwf	6
  9136  014B  0187               	clrf	7
  9137  014C  30FE               	movlw	254
  9138  014D  0601               	xorwf	1,w
  9139  014E  1D03               	btfss	3,2
  9140  014F  28C5               	goto	l2652
  9141  0150  300B               	movlw	11
  9142  0151  00C7               	movwf	??_LedSlFl
  9143  0152  0847               	movf	??_LedSlFl,w
  9144  0153  00F2               	movwf	___bmul@multiplicand
  9145  0154  0846               	movf	LedSlFl@Led,w
  9146  0155  25FE               	fcall	___bmul
  9147  0156  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  9148  0157  0086               	movwf	6
  9149  0158  0187               	clrf	7
  9150  0159  3002               	movlw	2
  9151  015A  0201               	subwf	1,w
  9152  015B  1803               	skipnc
  9153  015C  28C5               	goto	l2652
  9154                           
  9155                           ;executer.c: 257:                         LedBit[Led].Led = MIN;
  9156  015D  300B               	movlw	11
  9157  015E  00C7               	movwf	??_LedSlFl
  9158  015F  0847               	movf	??_LedSlFl,w
  9159  0160  00F2               	movwf	___bmul@multiplicand
  9160  0161  0846               	movf	LedSlFl@Led,w
  9161  0162  25FE               	fcall	___bmul
  9162  0163  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  9163  0164  0086               	movwf	6
  9164  0165  0187               	clrf	7
  9165  0166  0181               	clrf	1
  9166  0167  0A81               	incf	1,f
  9167  0168                     L4:
  9168                           
  9169                           ;executer.c: 258:                         LedBit[Led].Prog_State = 1;
  9170  0168  300B               	movlw	11
  9171  0169  00C7               	movwf	??_LedSlFl
  9172  016A  0847               	movf	??_LedSlFl,w
  9173  016B  00F2               	movwf	___bmul@multiplicand
  9174  016C  0846               	movf	LedSlFl@Led,w
  9175  016D  25FE               	fcall	___bmul
  9176  016E  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  9177  016F  0086               	movwf	6
  9178  0170  0187               	clrf	7
  9179  0171  0181               	clrf	1
  9180  0172  0A81               	incf	1,f
  9181  0173  28BB               	goto	L2
  9182  0174                     l2676:	
  9183                           ;executer.c: 259:                         LedBit[Led].Iteration = 0;
  9184                           
  9185  0174  300B               	movlw	11
  9186  0175  00C7               	movwf	??_LedSlFl
  9187  0176  0847               	movf	??_LedSlFl,w
  9188  0177  00F2               	movwf	___bmul@multiplicand
  9189  0178  0846               	movf	LedSlFl@Led,w
  9190  0179  25FE               	fcall	___bmul
  9191  017A  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  9192  017B  0086               	movwf	6
  9193  017C  0187               	clrf	7
  9194  017D  0181               	clrf	1
  9195                           
  9196                           ;executer.c: 265:         break;
  9197  017E  299B               	goto	l2682
  9198  017F                     l2680:
  9199  017F  300B               	movlw	11
  9200  0180  00C7               	movwf	??_LedSlFl
  9201  0181  0847               	movf	??_LedSlFl,w
  9202  0182  00F2               	movwf	___bmul@multiplicand
  9203  0183  0846               	movf	LedSlFl@Led,w
  9204  0184  25FE               	fcall	___bmul
  9205  0185  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  9206  0186  0086               	movwf	6
  9207  0187  0187               	clrf	7
  9208  0188  0801               	movf	1,w
  9209  0189  00C8               	movwf	??_LedSlFl+1
  9210  018A  01C9               	clrf	??_LedSlFl+2
  9211                           
  9212                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9213                           ; Switch size 1, requested type "simple"
  9214                           ; Number of cases is 1, Range of values is 0 to 0
  9215                           ; switch strategies available:
  9216                           ; Name         Instructions Cycles
  9217                           ; simple_byte            4     3 (average)
  9218                           ; direct_byte            8     6 (fixed)
  9219                           ; jumptable            260     6 (fixed)
  9220                           ;	Chosen strategy is simple_byte
  9221  018B  0849               	movf	??_LedSlFl+2,w
  9222  018C  3A00               	xorlw	0	; case 0
  9223  018D  1903               	skipnz
  9224  018E  2990               	goto	l2906
  9225  018F  2974               	goto	l2676
  9226  0190                     l2906:
  9227                           
  9228                           ; Switch size 1, requested type "simple"
  9229                           ; Number of cases is 3, Range of values is 0 to 2
  9230                           ; switch strategies available:
  9231                           ; Name         Instructions Cycles
  9232                           ; simple_byte           10     6 (average)
  9233                           ; direct_byte           12     6 (fixed)
  9234                           ; jumptable            260     6 (fixed)
  9235                           ;	Chosen strategy is simple_byte
  9236  0190  0848               	movf	??_LedSlFl+1,w
  9237  0191  3A00               	xorlw	0	; case 0
  9238  0192  1903               	skipnz
  9239  0193  283B               	goto	l2640
  9240  0194  3A01               	xorlw	1	; case 1
  9241  0195  1903               	skipnz
  9242  0196  2852               	goto	l2644
  9243  0197  3A03               	xorlw	3	; case 2
  9244  0198  1903               	skipnz
  9245  0199  28C8               	goto	l2654
  9246  019A  2974               	goto	l2676
  9247  019B                     l2682:
  9248                           
  9249                           ;executer.c: 268:     CalcPwm(Led);
  9250  019B  0846               	movf	LedSlFl@Led,w
  9251  019C  24BE               	fcall	_CalcPwm
  9252                           
  9253                           ;executer.c: 269:     return(ReturnVal);
  9254  019D  0140               	movlb	0	; select bank0
  9255  019E  084A               	movf	LedSlFl@ReturnVal,w
  9256  019F  0008               	return
  9257  01A0                     __end_of_LedSlFl:
  9258                           
  9259                           	psect	text34
  9260  04BE                     __ptext34:	
  9261 ;; *************** function _CalcPwm *****************
  9262 ;; Defined at:
  9263 ;;		line 310 in file "executer.c"
  9264 ;; Parameters:    Size  Location     Type
  9265 ;;  Led             1    wreg     unsigned char 
  9266 ;; Auto vars:     Size  Location     Type
  9267 ;;  Led             1    4[BANK0 ] unsigned char 
  9268 ;; Return value:  Size  Location     Type
  9269 ;;                  1    wreg      void 
  9270 ;; Registers used:
  9271 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9272 ;; Tracked objects:
  9273 ;;		On entry : 3F/0
  9274 ;;		On exit  : 3E/6
  9275 ;;		Unchanged: 0/0
  9276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9277 ;;      Params:         0       0       0       0
  9278 ;;      Locals:         0       1       0       0
  9279 ;;      Temps:          0       4       0       0
  9280 ;;      Totals:         0       5       0       0
  9281 ;;Total ram usage:        5 bytes
  9282 ;; Hardware stack levels used:    1
  9283 ;; Hardware stack levels required when called:    7
  9284 ;; This function calls:
  9285 ;;		_PWM1_LoadDutyValue
  9286 ;;		_PWM2_LoadDutyValue
  9287 ;;		_PWM3_LoadDutyValue
  9288 ;;		_PWM4_LoadDutyValue
  9289 ;;		_PWM5_LoadDutyValue
  9290 ;;		_PWM6_LoadDutyValue
  9291 ;;		___bmul
  9292 ;; This function is called by:
  9293 ;;		_LedOff
  9294 ;;		_LedNom
  9295 ;;		_LedBrake
  9296 ;;		_LedSlFl
  9297 ;;		_LedFlash
  9298 ;; This function uses a non-reentrant model
  9299 ;;
  9300                           
  9301                           
  9302                           ;psect for function _CalcPwm
  9303  04BE                     _CalcPwm:
  9304                           
  9305                           ;incstack = 0
  9306                           ; Regs used in _CalcPwm: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9307                           ;CalcPwm@Led stored from wreg
  9308  04BE  00C5               	movwf	CalcPwm@Led
  9309                           
  9310                           ;executer.c: 311:     LedBit[Led].PWM((uint16_t)LedBit[Led].Led * 4);
  9311  04BF  300B               	movlw	11
  9312  04C0  00C1               	movwf	??_CalcPwm
  9313  04C1  0841               	movf	??_CalcPwm,w
  9314  04C2  00F2               	movwf	___bmul@multiplicand
  9315  04C3  0845               	movf	CalcPwm@Led,w
  9316  04C4  25FE               	fcall	___bmul
  9317  04C5  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  9318  04C6  0086               	movwf	6
  9319  04C7  0187               	clrf	7
  9320  04C8  0801               	movf	1,w
  9321  04C9  00C2               	movwf	??_CalcPwm+1
  9322  04CA  01C3               	clrf	??_CalcPwm+2
  9323  04CB  35C2               	lslf	??_CalcPwm+1,f
  9324  04CC  0DC3               	rlf	??_CalcPwm+2,f
  9325  04CD  35C2               	lslf	??_CalcPwm+1,f
  9326  04CE  0DC3               	rlf	??_CalcPwm+2,f
  9327  04CF  0842               	movf	??_CalcPwm+1,w
  9328  04D0  00F6               	movwf	PWM1_LoadDutyValue@dutyValue
  9329  04D1  0843               	movf	??_CalcPwm+2,w
  9330  04D2  00F7               	movwf	PWM1_LoadDutyValue@dutyValue+1
  9331  04D3  300B               	movlw	11
  9332  04D4  00C4               	movwf	??_CalcPwm+3
  9333  04D5  0844               	movf	??_CalcPwm+3,w
  9334  04D6  00F2               	movwf	___bmul@multiplicand
  9335  04D7  0845               	movf	CalcPwm@Led,w
  9336  04D8  25FE               	fcall	___bmul
  9337  04D9  3EA9               	addlw	(low ((_LedBit| 0+9)))& (0+255)
  9338  04DA  0086               	movwf	6
  9339  04DB  0187               	clrf	7
  9340  04DC  3F41               	moviw [1]fsr1
  9341  04DD  008A               	movwf	10
  9342  04DE  3F40               	moviw [0]fsr1
  9343  04DF  000A               	callw
  9344  04E0  3184               	pagesel	$
  9345  04E1  0008               	return
  9346  04E2                     __end_of_CalcPwm:
  9347                           
  9348                           	psect	text35
  9349  05FE                     __ptext35:	
  9350 ;; *************** function ___bmul *****************
  9351 ;; Defined at:
  9352 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul8.c"
  9353 ;; Parameters:    Size  Location     Type
  9354 ;;  multiplier      1    wreg     unsigned char 
  9355 ;;  multiplicand    1    2[COMMON] unsigned char 
  9356 ;; Auto vars:     Size  Location     Type
  9357 ;;  multiplier      1    5[COMMON] unsigned char 
  9358 ;;  product         1    4[COMMON] unsigned char 
  9359 ;; Return value:  Size  Location     Type
  9360 ;;                  1    wreg      unsigned char 
  9361 ;; Registers used:
  9362 ;;		wreg, status,2, status,0
  9363 ;; Tracked objects:
  9364 ;;		On entry : 3F/0
  9365 ;;		On exit  : 3F/0
  9366 ;;		Unchanged: 3F/0
  9367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9368 ;;      Params:         1       0       0       0
  9369 ;;      Locals:         2       0       0       0
  9370 ;;      Temps:          1       0       0       0
  9371 ;;      Totals:         4       0       0       0
  9372 ;;Total ram usage:        4 bytes
  9373 ;; Hardware stack levels used:    1
  9374 ;; Hardware stack levels required when called:    6
  9375 ;; This function calls:
  9376 ;;		Nothing
  9377 ;; This function is called by:
  9378 ;;		_EXECUTExEFFECT
  9379 ;;		_LedOff
  9380 ;;		_LedNom
  9381 ;;		_LedBrake
  9382 ;;		_LedSlFl
  9383 ;;		_LedFlash
  9384 ;;		_CalcPwm
  9385 ;; This function uses a non-reentrant model
  9386 ;;
  9387                           
  9388                           
  9389                           ;psect for function ___bmul
  9390  05FE                     ___bmul:
  9391                           
  9392                           ;incstack = 0
  9393                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9394                           ;___bmul@multiplier stored from wreg
  9395  05FE  00F5               	movwf	___bmul@multiplier
  9396  05FF  01F4               	clrf	___bmul@product
  9397  0600                     l2558:
  9398  0600  1C75               	btfss	___bmul@multiplier,0
  9399  0601  2E06               	goto	l2562
  9400  0602  0872               	movf	___bmul@multiplicand,w
  9401  0603  00F3               	movwf	??___bmul
  9402  0604  0873               	movf	??___bmul,w
  9403  0605  07F4               	addwf	___bmul@product,f
  9404  0606                     l2562:
  9405  0606  1003               	clrc
  9406  0607  0DF2               	rlf	___bmul@multiplicand,f
  9407  0608  1003               	clrc
  9408  0609  0CF5               	rrf	___bmul@multiplier,f
  9409  060A  0875               	movf	___bmul@multiplier,w
  9410  060B  1D03               	btfss	3,2
  9411  060C  2E00               	goto	l2558
  9412  060D  0874               	movf	___bmul@product,w
  9413  060E  0008               	return
  9414  060F                     __end_of___bmul:
  9415                           
  9416                           	psect	text36
  9417  0557                     __ptext36:	
  9418 ;; *************** function _PWM1_LoadDutyValue *****************
  9419 ;; Defined at:
  9420 ;;		line 80 in file "mcc_generated_files/pwm1.c"
  9421 ;; Parameters:    Size  Location     Type
  9422 ;;  dutyValue       2    6[COMMON] unsigned short 
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;		None
  9425 ;; Return value:  Size  Location     Type
  9426 ;;                  1    wreg      void 
  9427 ;; Registers used:
  9428 ;;		wreg
  9429 ;; Tracked objects:
  9430 ;;		On entry : 3F/0
  9431 ;;		On exit  : 3F/6
  9432 ;;		Unchanged: 0/0
  9433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9434 ;;      Params:         2       0       0       0
  9435 ;;      Locals:         0       0       0       0
  9436 ;;      Temps:          0       0       0       0
  9437 ;;      Totals:         2       0       0       0
  9438 ;;Total ram usage:        2 bytes
  9439 ;; Hardware stack levels used:    1
  9440 ;; Hardware stack levels required when called:    6
  9441 ;; This function calls:
  9442 ;;		Nothing
  9443 ;; This function is called by:
  9444 ;;		_CalcPwm
  9445 ;; This function uses a non-reentrant model
  9446 ;;
  9447                           
  9448                           
  9449                           ;psect for function _PWM1_LoadDutyValue
  9450  0557                     _PWM1_LoadDutyValue:
  9451                           
  9452                           ;mcc_generated_files/pwm1.c: 80: void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm1.c: 81: {;mcc_generated_files/pwm1.c: 82:     dutyValue &= 0x03FF;
  9453                           
  9454                           ;incstack = 0
  9455                           ; Regs used in _PWM1_LoadDutyValue: [wreg]
  9456  0557  30FF               	movlw	255
  9457  0558  05F6               	andwf	PWM1_LoadDutyValue@dutyValue,f
  9458  0559  3003               	movlw	3
  9459  055A  05F7               	andwf	PWM1_LoadDutyValue@dutyValue+1,f
  9460                           
  9461                           ;mcc_generated_files/pwm1.c: 85:     if(CCP1CONbits.CCP1FMT)
  9462  055B  0146               	movlb	6	; select bank6
  9463  055C  1E0E               	btfss	14,4	;volatile
  9464  055D  2D68               	goto	l2554
  9465                           
  9466                           ;mcc_generated_files/pwm1.c: 86:     {;mcc_generated_files/pwm1.c: 87:         dutyValue
      +                           <<= 6;
  9467  055E  3006               	movlw	6
  9468  055F                     u1125:
  9469  055F  35F6               	lslf	PWM1_LoadDutyValue@dutyValue,f
  9470  0560  0DF7               	rlf	PWM1_LoadDutyValue@dutyValue+1,f
  9471  0561  0B89               	decfsz	9,f
  9472  0562  2D5F               	goto	u1125
  9473                           
  9474                           ;mcc_generated_files/pwm1.c: 88:         CCPR1H = dutyValue >> 8;
  9475  0563  0877               	movf	PWM1_LoadDutyValue@dutyValue+1,w
  9476  0564  008D               	movwf	13	;volatile
  9477                           
  9478                           ;mcc_generated_files/pwm1.c: 89:         CCPR1L = dutyValue;
  9479  0565  0876               	movf	PWM1_LoadDutyValue@dutyValue,w
  9480  0566  008C               	movwf	12	;volatile
  9481                           
  9482                           ;mcc_generated_files/pwm1.c: 90:     }
  9483  0567  0008               	return
  9484  0568                     l2554:
  9485                           
  9486                           ;mcc_generated_files/pwm1.c: 92:     {;mcc_generated_files/pwm1.c: 93:         CCPR1H = 
      +                          dutyValue >> 8;
  9487  0568  0877               	movf	PWM1_LoadDutyValue@dutyValue+1,w
  9488  0569  008D               	movwf	13	;volatile
  9489                           
  9490                           ;mcc_generated_files/pwm1.c: 94:         CCPR1L = dutyValue;
  9491  056A  0876               	movf	PWM1_LoadDutyValue@dutyValue,w
  9492  056B  008C               	movwf	12	;volatile
  9493  056C  0008               	return
  9494  056D                     __end_of_PWM1_LoadDutyValue:
  9495                           
  9496                           	psect	text37
  9497  056D                     __ptext37:	
  9498 ;; *************** function _PWM2_LoadDutyValue *****************
  9499 ;; Defined at:
  9500 ;;		line 80 in file "mcc_generated_files/pwm2.c"
  9501 ;; Parameters:    Size  Location     Type
  9502 ;;  dutyValue       2    6[COMMON] unsigned short 
  9503 ;; Auto vars:     Size  Location     Type
  9504 ;;		None
  9505 ;; Return value:  Size  Location     Type
  9506 ;;                  1    wreg      void 
  9507 ;; Registers used:
  9508 ;;		wreg
  9509 ;; Tracked objects:
  9510 ;;		On entry : 3F/0
  9511 ;;		On exit  : 3F/6
  9512 ;;		Unchanged: 0/0
  9513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9514 ;;      Params:         2       0       0       0
  9515 ;;      Locals:         0       0       0       0
  9516 ;;      Temps:          0       0       0       0
  9517 ;;      Totals:         2       0       0       0
  9518 ;;Total ram usage:        2 bytes
  9519 ;; Hardware stack levels used:    1
  9520 ;; Hardware stack levels required when called:    6
  9521 ;; This function calls:
  9522 ;;		Nothing
  9523 ;; This function is called by:
  9524 ;;		_CalcPwm
  9525 ;; This function uses a non-reentrant model
  9526 ;;
  9527                           
  9528                           
  9529                           ;psect for function _PWM2_LoadDutyValue
  9530  056D                     _PWM2_LoadDutyValue:
  9531                           
  9532                           ;mcc_generated_files/pwm2.c: 80: void PWM2_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm2.c: 81: {;mcc_generated_files/pwm2.c: 82:     dutyValue &= 0x03FF;
  9533                           
  9534                           ;incstack = 0
  9535                           ; Regs used in _PWM2_LoadDutyValue: [wreg]
  9536  056D  30FF               	movlw	255
  9537  056E  05F6               	andwf	PWM2_LoadDutyValue@dutyValue,f
  9538  056F  3003               	movlw	3
  9539  0570  05F7               	andwf	PWM2_LoadDutyValue@dutyValue+1,f
  9540                           
  9541                           ;mcc_generated_files/pwm2.c: 85:     if(CCP2CONbits.CCP2FMT)
  9542  0571  0146               	movlb	6	; select bank6
  9543  0572  1E12               	btfss	18,4	;volatile
  9544  0573  2D7E               	goto	l2546
  9545                           
  9546                           ;mcc_generated_files/pwm2.c: 86:     {;mcc_generated_files/pwm2.c: 87:         dutyValue
      +                           <<= 6;
  9547  0574  3006               	movlw	6
  9548  0575                     u1105:
  9549  0575  35F6               	lslf	PWM2_LoadDutyValue@dutyValue,f
  9550  0576  0DF7               	rlf	PWM2_LoadDutyValue@dutyValue+1,f
  9551  0577  0B89               	decfsz	9,f
  9552  0578  2D75               	goto	u1105
  9553                           
  9554                           ;mcc_generated_files/pwm2.c: 88:         CCPR2H = dutyValue >> 8;
  9555  0579  0877               	movf	PWM2_LoadDutyValue@dutyValue+1,w
  9556  057A  0091               	movwf	17	;volatile
  9557                           
  9558                           ;mcc_generated_files/pwm2.c: 89:         CCPR2L = dutyValue;
  9559  057B  0876               	movf	PWM2_LoadDutyValue@dutyValue,w
  9560  057C  0090               	movwf	16	;volatile
  9561                           
  9562                           ;mcc_generated_files/pwm2.c: 90:     }
  9563  057D  0008               	return
  9564  057E                     l2546:
  9565                           
  9566                           ;mcc_generated_files/pwm2.c: 92:     {;mcc_generated_files/pwm2.c: 93:         CCPR2H = 
      +                          dutyValue >> 8;
  9567  057E  0877               	movf	PWM2_LoadDutyValue@dutyValue+1,w
  9568  057F  0091               	movwf	17	;volatile
  9569                           
  9570                           ;mcc_generated_files/pwm2.c: 94:         CCPR2L = dutyValue;
  9571  0580  0876               	movf	PWM2_LoadDutyValue@dutyValue,w
  9572  0581  0090               	movwf	16	;volatile
  9573  0582  0008               	return
  9574  0583                     __end_of_PWM2_LoadDutyValue:
  9575                           
  9576                           	psect	text38
  9577  0583                     __ptext38:	
  9578 ;; *************** function _PWM5_LoadDutyValue *****************
  9579 ;; Defined at:
  9580 ;;		line 72 in file "mcc_generated_files/pwm5.c"
  9581 ;; Parameters:    Size  Location     Type
  9582 ;;  dutyValue       2    6[COMMON] unsigned short 
  9583 ;; Auto vars:     Size  Location     Type
  9584 ;;		None
  9585 ;; Return value:  Size  Location     Type
  9586 ;;                  1    wreg      void 
  9587 ;; Registers used:
  9588 ;;		wreg, status,2, status,0
  9589 ;; Tracked objects:
  9590 ;;		On entry : 3F/0
  9591 ;;		On exit  : 3F/6
  9592 ;;		Unchanged: 0/0
  9593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9594 ;;      Params:         2       0       0       0
  9595 ;;      Locals:         0       0       0       0
  9596 ;;      Temps:          2       0       0       0
  9597 ;;      Totals:         4       0       0       0
  9598 ;;Total ram usage:        4 bytes
  9599 ;; Hardware stack levels used:    1
  9600 ;; Hardware stack levels required when called:    6
  9601 ;; This function calls:
  9602 ;;		Nothing
  9603 ;; This function is called by:
  9604 ;;		_CalcPwm
  9605 ;; This function uses a non-reentrant model
  9606 ;;
  9607                           
  9608                           
  9609                           ;psect for function _PWM5_LoadDutyValue
  9610  0583                     _PWM5_LoadDutyValue:
  9611                           
  9612                           ;mcc_generated_files/pwm5.c: 72:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 73:  {;mcc_generated_files/pwm5.c: 75:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9613                           
  9614                           ;incstack = 0
  9615                           ; Regs used in _PWM5_LoadDutyValue: [wreg+status,2+status,0]
  9616  0583  0877               	movf	PWM5_LoadDutyValue@dutyValue+1,w
  9617  0584  00F9               	movwf	??_PWM5_LoadDutyValue+1
  9618  0585  0876               	movf	PWM5_LoadDutyValue@dutyValue,w
  9619  0586  00F8               	movwf	??_PWM5_LoadDutyValue
  9620  0587  36F9               	lsrf	??_PWM5_LoadDutyValue+1,f
  9621  0588  0CF8               	rrf	??_PWM5_LoadDutyValue,f
  9622  0589  36F9               	lsrf	??_PWM5_LoadDutyValue+1,f
  9623  058A  0CF8               	rrf	??_PWM5_LoadDutyValue,f
  9624  058B  0878               	movf	??_PWM5_LoadDutyValue,w
  9625  058C  0146               	movlb	6	; select bank6
  9626  058D  009D               	movwf	29	;volatile
  9627                           
  9628                           ;mcc_generated_files/pwm5.c: 78:      PWM5DCL = (dutyValue & 0x0003)<<6;
  9629  058E  0876               	movf	PWM5_LoadDutyValue@dutyValue,w
  9630  058F  3903               	andlw	3
  9631  0590  00F8               	movwf	??_PWM5_LoadDutyValue
  9632  0591  3005               	movlw	5
  9633  0592                     u1085:
  9634  0592  35F8               	lslf	??_PWM5_LoadDutyValue,f
  9635  0593  3EFF               	addlw	-1
  9636  0594  1D03               	skipz
  9637  0595  2D92               	goto	u1085
  9638  0596  3578               	lslf	??_PWM5_LoadDutyValue,w
  9639  0597  009C               	movwf	28	;volatile
  9640  0598  0008               	return
  9641  0599                     __end_of_PWM5_LoadDutyValue:
  9642                           
  9643                           	psect	text39
  9644  0599                     __ptext39:	
  9645 ;; *************** function _PWM3_LoadDutyValue *****************
  9646 ;; Defined at:
  9647 ;;		line 72 in file "mcc_generated_files/pwm3.c"
  9648 ;; Parameters:    Size  Location     Type
  9649 ;;  dutyValue       2    6[COMMON] unsigned short 
  9650 ;; Auto vars:     Size  Location     Type
  9651 ;;		None
  9652 ;; Return value:  Size  Location     Type
  9653 ;;                  1    wreg      void 
  9654 ;; Registers used:
  9655 ;;		wreg, status,2, status,0
  9656 ;; Tracked objects:
  9657 ;;		On entry : 3F/0
  9658 ;;		On exit  : 3F/6
  9659 ;;		Unchanged: 0/0
  9660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9661 ;;      Params:         2       0       0       0
  9662 ;;      Locals:         0       0       0       0
  9663 ;;      Temps:          2       0       0       0
  9664 ;;      Totals:         4       0       0       0
  9665 ;;Total ram usage:        4 bytes
  9666 ;; Hardware stack levels used:    1
  9667 ;; Hardware stack levels required when called:    6
  9668 ;; This function calls:
  9669 ;;		Nothing
  9670 ;; This function is called by:
  9671 ;;		_CalcPwm
  9672 ;; This function uses a non-reentrant model
  9673 ;;
  9674                           
  9675                           
  9676                           ;psect for function _PWM3_LoadDutyValue
  9677  0599                     _PWM3_LoadDutyValue:
  9678                           
  9679                           ;mcc_generated_files/pwm3.c: 72:  void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm3.c: 73:  {;mcc_generated_files/pwm3.c: 75:      PWM3DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9680                           
  9681                           ;incstack = 0
  9682                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  9683  0599  0877               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  9684  059A  00F9               	movwf	??_PWM3_LoadDutyValue+1
  9685  059B  0876               	movf	PWM3_LoadDutyValue@dutyValue,w
  9686  059C  00F8               	movwf	??_PWM3_LoadDutyValue
  9687  059D  36F9               	lsrf	??_PWM3_LoadDutyValue+1,f
  9688  059E  0CF8               	rrf	??_PWM3_LoadDutyValue,f
  9689  059F  36F9               	lsrf	??_PWM3_LoadDutyValue+1,f
  9690  05A0  0CF8               	rrf	??_PWM3_LoadDutyValue,f
  9691  05A1  0878               	movf	??_PWM3_LoadDutyValue,w
  9692  05A2  0146               	movlb	6	; select bank6
  9693  05A3  0095               	movwf	21	;volatile
  9694                           
  9695                           ;mcc_generated_files/pwm3.c: 78:      PWM3DCL = (dutyValue & 0x0003)<<6;
  9696  05A4  0876               	movf	PWM3_LoadDutyValue@dutyValue,w
  9697  05A5  3903               	andlw	3
  9698  05A6  00F8               	movwf	??_PWM3_LoadDutyValue
  9699  05A7  3005               	movlw	5
  9700  05A8                     u1065:
  9701  05A8  35F8               	lslf	??_PWM3_LoadDutyValue,f
  9702  05A9  3EFF               	addlw	-1
  9703  05AA  1D03               	skipz
  9704  05AB  2DA8               	goto	u1065
  9705  05AC  3578               	lslf	??_PWM3_LoadDutyValue,w
  9706  05AD  0094               	movwf	20	;volatile
  9707  05AE  0008               	return
  9708  05AF                     __end_of_PWM3_LoadDutyValue:
  9709                           
  9710                           	psect	text40
  9711  05AF                     __ptext40:	
  9712 ;; *************** function _PWM4_LoadDutyValue *****************
  9713 ;; Defined at:
  9714 ;;		line 72 in file "mcc_generated_files/pwm4.c"
  9715 ;; Parameters:    Size  Location     Type
  9716 ;;  dutyValue       2    6[COMMON] unsigned short 
  9717 ;; Auto vars:     Size  Location     Type
  9718 ;;		None
  9719 ;; Return value:  Size  Location     Type
  9720 ;;                  1    wreg      void 
  9721 ;; Registers used:
  9722 ;;		wreg, status,2, status,0
  9723 ;; Tracked objects:
  9724 ;;		On entry : 3F/0
  9725 ;;		On exit  : 3F/6
  9726 ;;		Unchanged: 0/0
  9727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9728 ;;      Params:         2       0       0       0
  9729 ;;      Locals:         0       0       0       0
  9730 ;;      Temps:          2       0       0       0
  9731 ;;      Totals:         4       0       0       0
  9732 ;;Total ram usage:        4 bytes
  9733 ;; Hardware stack levels used:    1
  9734 ;; Hardware stack levels required when called:    6
  9735 ;; This function calls:
  9736 ;;		Nothing
  9737 ;; This function is called by:
  9738 ;;		_CalcPwm
  9739 ;; This function uses a non-reentrant model
  9740 ;;
  9741                           
  9742                           
  9743                           ;psect for function _PWM4_LoadDutyValue
  9744  05AF                     _PWM4_LoadDutyValue:
  9745                           
  9746                           ;mcc_generated_files/pwm4.c: 72:  void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm4.c: 73:  {;mcc_generated_files/pwm4.c: 75:      PWM4DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9747                           
  9748                           ;incstack = 0
  9749                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2+status,0]
  9750  05AF  0877               	movf	PWM4_LoadDutyValue@dutyValue+1,w
  9751  05B0  00F9               	movwf	??_PWM4_LoadDutyValue+1
  9752  05B1  0876               	movf	PWM4_LoadDutyValue@dutyValue,w
  9753  05B2  00F8               	movwf	??_PWM4_LoadDutyValue
  9754  05B3  36F9               	lsrf	??_PWM4_LoadDutyValue+1,f
  9755  05B4  0CF8               	rrf	??_PWM4_LoadDutyValue,f
  9756  05B5  36F9               	lsrf	??_PWM4_LoadDutyValue+1,f
  9757  05B6  0CF8               	rrf	??_PWM4_LoadDutyValue,f
  9758  05B7  0878               	movf	??_PWM4_LoadDutyValue,w
  9759  05B8  0146               	movlb	6	; select bank6
  9760  05B9  0099               	movwf	25	;volatile
  9761                           
  9762                           ;mcc_generated_files/pwm4.c: 78:      PWM4DCL = (dutyValue & 0x0003)<<6;
  9763  05BA  0876               	movf	PWM4_LoadDutyValue@dutyValue,w
  9764  05BB  3903               	andlw	3
  9765  05BC  00F8               	movwf	??_PWM4_LoadDutyValue
  9766  05BD  3005               	movlw	5
  9767  05BE                     u1055:
  9768  05BE  35F8               	lslf	??_PWM4_LoadDutyValue,f
  9769  05BF  3EFF               	addlw	-1
  9770  05C0  1D03               	skipz
  9771  05C1  2DBE               	goto	u1055
  9772  05C2  3578               	lslf	??_PWM4_LoadDutyValue,w
  9773  05C3  0098               	movwf	24	;volatile
  9774  05C4  0008               	return
  9775  05C5                     __end_of_PWM4_LoadDutyValue:
  9776                           
  9777                           	psect	text41
  9778  05C5                     __ptext41:	
  9779 ;; *************** function _PWM6_LoadDutyValue *****************
  9780 ;; Defined at:
  9781 ;;		line 72 in file "mcc_generated_files/pwm6.c"
  9782 ;; Parameters:    Size  Location     Type
  9783 ;;  dutyValue       2    6[COMMON] unsigned short 
  9784 ;; Auto vars:     Size  Location     Type
  9785 ;;		None
  9786 ;; Return value:  Size  Location     Type
  9787 ;;                  1    wreg      void 
  9788 ;; Registers used:
  9789 ;;		wreg, status,2, status,0
  9790 ;; Tracked objects:
  9791 ;;		On entry : 3F/0
  9792 ;;		On exit  : 3F/7
  9793 ;;		Unchanged: 0/0
  9794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9795 ;;      Params:         2       0       0       0
  9796 ;;      Locals:         0       0       0       0
  9797 ;;      Temps:          2       0       0       0
  9798 ;;      Totals:         4       0       0       0
  9799 ;;Total ram usage:        4 bytes
  9800 ;; Hardware stack levels used:    1
  9801 ;; Hardware stack levels required when called:    6
  9802 ;; This function calls:
  9803 ;;		Nothing
  9804 ;; This function is called by:
  9805 ;;		_CalcPwm
  9806 ;; This function uses a non-reentrant model
  9807 ;;
  9808                           
  9809                           
  9810                           ;psect for function _PWM6_LoadDutyValue
  9811  05C5                     _PWM6_LoadDutyValue:
  9812                           
  9813                           ;mcc_generated_files/pwm6.c: 72:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 73:  {;mcc_generated_files/pwm6.c: 75:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9814                           
  9815                           ;incstack = 0
  9816                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
  9817  05C5  0877               	movf	PWM6_LoadDutyValue@dutyValue+1,w
  9818  05C6  00F9               	movwf	??_PWM6_LoadDutyValue+1
  9819  05C7  0876               	movf	PWM6_LoadDutyValue@dutyValue,w
  9820  05C8  00F8               	movwf	??_PWM6_LoadDutyValue
  9821  05C9  36F9               	lsrf	??_PWM6_LoadDutyValue+1,f
  9822  05CA  0CF8               	rrf	??_PWM6_LoadDutyValue,f
  9823  05CB  36F9               	lsrf	??_PWM6_LoadDutyValue+1,f
  9824  05CC  0CF8               	rrf	??_PWM6_LoadDutyValue,f
  9825  05CD  0878               	movf	??_PWM6_LoadDutyValue,w
  9826  05CE  0147               	movlb	7	; select bank7
  9827  05CF  008D               	movwf	13	;volatile
  9828                           
  9829                           ;mcc_generated_files/pwm6.c: 78:      PWM6DCL = (dutyValue & 0x0003)<<6;
  9830  05D0  0876               	movf	PWM6_LoadDutyValue@dutyValue,w
  9831  05D1  3903               	andlw	3
  9832  05D2  00F8               	movwf	??_PWM6_LoadDutyValue
  9833  05D3  3005               	movlw	5
  9834  05D4                     u1075:
  9835  05D4  35F8               	lslf	??_PWM6_LoadDutyValue,f
  9836  05D5  3EFF               	addlw	-1
  9837  05D6  1D03               	skipz
  9838  05D7  2DD4               	goto	u1075
  9839  05D8  3578               	lslf	??_PWM6_LoadDutyValue,w
  9840  05D9  008C               	movwf	12	;volatile
  9841  05DA  0008               	return
  9842  05DB                     __end_of_PWM6_LoadDutyValue:
  9843                           
  9844                           	psect	text42
  9845  04E2                     __ptext42:	
  9846 ;; *************** function _BATTxPROTECT *****************
  9847 ;; Defined at:
  9848 ;;		line 47 in file "executer.c"
  9849 ;; Parameters:    Size  Location     Type
  9850 ;;		None
  9851 ;; Auto vars:     Size  Location     Type
  9852 ;;		None
  9853 ;; Return value:  Size  Location     Type
  9854 ;;                  1    wreg      void 
  9855 ;; Registers used:
  9856 ;;		wreg
  9857 ;; Tracked objects:
  9858 ;;		On entry : 3F/0
  9859 ;;		On exit  : 3F/1
  9860 ;;		Unchanged: 0/0
  9861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9862 ;;      Params:         0       0       0       0
  9863 ;;      Locals:         0       0       0       0
  9864 ;;      Temps:          1       0       0       0
  9865 ;;      Totals:         1       0       0       0
  9866 ;;Total ram usage:        1 bytes
  9867 ;; Hardware stack levels used:    1
  9868 ;; Hardware stack levels required when called:    6
  9869 ;; This function calls:
  9870 ;;		Nothing
  9871 ;; This function is called by:
  9872 ;;		_main
  9873 ;; This function uses a non-reentrant model
  9874 ;;
  9875                           
  9876                           
  9877                           ;psect for function _BATTxPROTECT
  9878  04E2                     _BATTxPROTECT:
  9879                           
  9880                           ;incstack = 0
  9881                           ; Regs used in _BATTxPROTECT: [wreg]
  9882                           ;executer.c: 49:     do { LATCbits.LATC1 = 0; } while(0);
  9883  04E2  109A               	bcf	26,1	;volatile
  9884                           
  9885                           ;executer.c: 51:     do { TRISCbits.TRISC0 = 1; } while(0);
  9886  04E3  1414               	bsf	20,0	;volatile
  9887                           
  9888                           ;executer.c: 53:     LedBit[LedBackLeft].Prog = LedOff;
  9889  04E4  3092               	movlw	low _LedOff
  9890  04E5  0141               	movlb	1	; select bank1
  9891  04E6  00B8               	movwf	(low ((_LedBit| 0+24)))^(0+128)
  9892  04E7  3004               	movlw	high _LedOff
  9893  04E8  00B9               	movwf	((low ((_LedBit| 0+24)))^(0+128)+1)
  9894                           
  9895                           ;executer.c: 57:     LedBit[LedBackRight].Prog = LedOff;
  9896  04E9  3092               	movlw	low _LedOff
  9897  04EA  00C3               	movwf	(low ((_LedBit| 0+35)))^(0+128)
  9898  04EB  3004               	movlw	high _LedOff
  9899  04EC  00C4               	movwf	((low ((_LedBit| 0+35)))^(0+128)+1)
  9900                           
  9901                           ;executer.c: 61:     LedBit[LedFlashLeft].Prog = LedFlash;
  9902  04ED  30A0               	movlw	low _LedFlash
  9903  04EE  00A2               	movwf	(low ((_LedBit| 0+2)))^(0+128)
  9904  04EF  3001               	movlw	high _LedFlash
  9905  04F0  00A3               	movwf	((low ((_LedBit| 0+2)))^(0+128)+1)
  9906                           
  9907                           ;executer.c: 62:     LedBit[LedFlashLeft].Led = MAX;
  9908  04F1  30FE               	movlw	254
  9909  04F2  00F2               	movwf	??_BATTxPROTECT
  9910  04F3  0872               	movf	??_BATTxPROTECT,w
  9911  04F4  00A1               	movwf	(_LedBit^(0+128)+1)
  9912                           
  9913                           ;executer.c: 63:     LedBit[LedFlashLeft].Speed = 10;
  9914  04F5  300A               	movlw	10
  9915  04F6  00F2               	movwf	??_BATTxPROTECT
  9916  04F7  0872               	movf	??_BATTxPROTECT,w
  9917  04F8  00A4               	movwf	(_LedBit^(0+128)+4)
  9918                           
  9919                           ;executer.c: 65:     LedBit[LedFlashRight].Prog = LedOff;
  9920  04F9  3092               	movlw	low _LedOff
  9921  04FA  00AD               	movwf	(low ((_LedBit| 0+13)))^(0+128)
  9922  04FB  3004               	movlw	high _LedOff
  9923  04FC  00AE               	movwf	((low ((_LedBit| 0+13)))^(0+128)+1)
  9924                           
  9925                           ;executer.c: 69:     LedBit[LedFrontLeft].Prog = LedOff;
  9926  04FD  3092               	movlw	low _LedOff
  9927  04FE  00CE               	movwf	(low ((_LedBit| 0+46)))^(0+128)
  9928  04FF  3004               	movlw	high _LedOff
  9929  0500  00CF               	movwf	((low ((_LedBit| 0+46)))^(0+128)+1)
  9930                           
  9931                           ;executer.c: 73:     LedBit[LedFrontRight].Prog = LedOff;
  9932  0501  3092               	movlw	low _LedOff
  9933  0502  00D9               	movwf	(low ((_LedBit| 0+57)))^(0+128)
  9934  0503  3004               	movlw	high _LedOff
  9935  0504  00DA               	movwf	((low ((_LedBit| 0+57)))^(0+128)+1)
  9936  0505  0008               	return
  9937  0506                     __end_of_BATTxPROTECT:
  9938                           
  9939                           	psect	text43
  9940  072B                     __ptext43:	
  9941 ;; *************** function _ADC_StartConversion *****************
  9942 ;; Defined at:
  9943 ;;		line 96 in file "mcc_generated_files/adc.c"
  9944 ;; Parameters:    Size  Location     Type
  9945 ;;		None
  9946 ;; Auto vars:     Size  Location     Type
  9947 ;;		None
  9948 ;; Return value:  Size  Location     Type
  9949 ;;                  1    wreg      void 
  9950 ;; Registers used:
  9951 ;;		None
  9952 ;; Tracked objects:
  9953 ;;		On entry : 3F/0
  9954 ;;		On exit  : 3F/1
  9955 ;;		Unchanged: 0/0
  9956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9957 ;;      Params:         0       0       0       0
  9958 ;;      Locals:         0       0       0       0
  9959 ;;      Temps:          0       0       0       0
  9960 ;;      Totals:         0       0       0       0
  9961 ;;Total ram usage:        0 bytes
  9962 ;; Hardware stack levels used:    1
  9963 ;; Hardware stack levels required when called:    6
  9964 ;; This function calls:
  9965 ;;		Nothing
  9966 ;; This function is called by:
  9967 ;;		_main
  9968 ;; This function uses a non-reentrant model
  9969 ;;
  9970                           
  9971                           
  9972                           ;psect for function _ADC_StartConversion
  9973  072B                     _ADC_StartConversion:
  9974                           
  9975                           ;mcc_generated_files/adc.c: 99:     ADCON0bits.GOnDONE = 1;
  9976                           
  9977                           ;incstack = 0
  9978                           ; Regs used in _ADC_StartConversion: []
  9979  072B  0141               	movlb	1	; select bank1
  9980  072C  149D               	bsf	29,1	;volatile
  9981  072D  0008               	return
  9982  072E                     __end_of_ADC_StartConversion:
  9983                           
  9984                           	psect	text44
  9985  066A                     __ptext44:	
  9986 ;; *************** function _ADC_SelectChannel *****************
  9987 ;; Defined at:
  9988 ;;		line 88 in file "mcc_generated_files/adc.c"
  9989 ;; Parameters:    Size  Location     Type
  9990 ;;  channel         1    wreg     enum E6234
  9991 ;; Auto vars:     Size  Location     Type
  9992 ;;  channel         1    3[COMMON] enum E6234
  9993 ;; Return value:  Size  Location     Type
  9994 ;;                  1    wreg      void 
  9995 ;; Registers used:
  9996 ;;		wreg, status,2, status,0
  9997 ;; Tracked objects:
  9998 ;;		On entry : 3F/0
  9999 ;;		On exit  : 3F/1
 10000 ;;		Unchanged: 0/0
 10001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10002 ;;      Params:         0       0       0       0
 10003 ;;      Locals:         1       0       0       0
 10004 ;;      Temps:          1       0       0       0
 10005 ;;      Totals:         2       0       0       0
 10006 ;;Total ram usage:        2 bytes
 10007 ;; Hardware stack levels used:    1
 10008 ;; Hardware stack levels required when called:    6
 10009 ;; This function calls:
 10010 ;;		Nothing
 10011 ;; This function is called by:
 10012 ;;		_main
 10013 ;; This function uses a non-reentrant model
 10014 ;;
 10015                           
 10016                           
 10017                           ;psect for function _ADC_SelectChannel
 10018  066A                     _ADC_SelectChannel:
 10019                           
 10020                           ;incstack = 0
 10021                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 10022                           ;ADC_SelectChannel@channel stored from wreg
 10023  066A  00F3               	movwf	ADC_SelectChannel@channel
 10024                           
 10025                           ;mcc_generated_files/adc.c: 88: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 89: {;mcc_generated_files/adc.c: 91:     ADCON0bits.CHS = channel;
 10026  066B  0873               	movf	ADC_SelectChannel@channel,w
 10027  066C  00F2               	movwf	??_ADC_SelectChannel
 10028  066D  0DF2               	rlf	??_ADC_SelectChannel,f
 10029  066E  0DF2               	rlf	??_ADC_SelectChannel,f
 10030  066F  0141               	movlb	1	; select bank1
 10031  0670  081D               	movf	29,w	;volatile
 10032  0671  0672               	xorwf	??_ADC_SelectChannel,w
 10033  0672  3903               	andlw	-253
 10034  0673  0672               	xorwf	??_ADC_SelectChannel,w
 10035  0674  009D               	movwf	29	;volatile
 10036                           
 10037                           ;mcc_generated_files/adc.c: 93:     ADCON0bits.ADON = 1;
 10038  0675  141D               	bsf	29,0	;volatile
 10039  0676  0008               	return
 10040  0677                     __end_of_ADC_SelectChannel:
 10041                           
 10042                           	psect	text45
 10043  06DE                     __ptext45:	
 10044 ;; *************** function _ADC_IsConversionDone *****************
 10045 ;; Defined at:
 10046 ;;		line 103 in file "mcc_generated_files/adc.c"
 10047 ;; Parameters:    Size  Location     Type
 10048 ;;		None
 10049 ;; Auto vars:     Size  Location     Type
 10050 ;;		None
 10051 ;; Return value:  Size  Location     Type
 10052 ;;                  1    wreg      _Bool 
 10053 ;; Registers used:
 10054 ;;		wreg, status,0
 10055 ;; Tracked objects:
 10056 ;;		On entry : 3F/0
 10057 ;;		On exit  : 3F/1
 10058 ;;		Unchanged: 0/0
 10059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10060 ;;      Params:         0       0       0       0
 10061 ;;      Locals:         0       0       0       0
 10062 ;;      Temps:          0       0       0       0
 10063 ;;      Totals:         0       0       0       0
 10064 ;;Total ram usage:        0 bytes
 10065 ;; Hardware stack levels used:    1
 10066 ;; Hardware stack levels required when called:    6
 10067 ;; This function calls:
 10068 ;;		Nothing
 10069 ;; This function is called by:
 10070 ;;		_main
 10071 ;; This function uses a non-reentrant model
 10072 ;;
 10073                           
 10074                           
 10075                           ;psect for function _ADC_IsConversionDone
 10076  06DE                     _ADC_IsConversionDone:
 10077                           
 10078                           ;mcc_generated_files/adc.c: 106:    return ((_Bool)(!ADCON0bits.GOnDONE));
 10079                           
 10080                           ;incstack = 0
 10081                           ; Regs used in _ADC_IsConversionDone: [wreg+status,0]
 10082  06DE  1003               	clrc
 10083  06DF  0141               	movlb	1	; select bank1
 10084  06E0  1C9D               	btfss	29,1	;volatile
 10085  06E1  1403               	setc
 10086  06E2  3000               	movlw	0
 10087  06E3  3D09               	addwfc	9,w
 10088  06E4  0008               	return
 10089  06E5                     __end_of_ADC_IsConversionDone:
 10090                           
 10091                           	psect	text46
 10092  0719                     __ptext46:	
 10093 ;; *************** function _ADC_GetConversionResult *****************
 10094 ;; Defined at:
 10095 ;;		line 109 in file "mcc_generated_files/adc.c"
 10096 ;; Parameters:    Size  Location     Type
 10097 ;;		None
 10098 ;; Auto vars:     Size  Location     Type
 10099 ;;		None
 10100 ;; Return value:  Size  Location     Type
 10101 ;;                  2    2[COMMON] unsigned short 
 10102 ;; Registers used:
 10103 ;;		wreg
 10104 ;; Tracked objects:
 10105 ;;		On entry : 3F/1
 10106 ;;		On exit  : 3F/1
 10107 ;;		Unchanged: 0/0
 10108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10109 ;;      Params:         2       0       0       0
 10110 ;;      Locals:         0       0       0       0
 10111 ;;      Temps:          0       0       0       0
 10112 ;;      Totals:         2       0       0       0
 10113 ;;Total ram usage:        2 bytes
 10114 ;; Hardware stack levels used:    1
 10115 ;; Hardware stack levels required when called:    6
 10116 ;; This function calls:
 10117 ;;		Nothing
 10118 ;; This function is called by:
 10119 ;;		_main
 10120 ;; This function uses a non-reentrant model
 10121 ;;
 10122                           
 10123                           
 10124                           ;psect for function _ADC_GetConversionResult
 10125  0719                     _ADC_GetConversionResult:
 10126                           
 10127                           ;mcc_generated_files/adc.c: 112:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 10128                           
 10129                           ;incstack = 0
 10130                           ; Regs used in _ADC_GetConversionResult: [wreg]
 10131  0719  081C               	movf	28,w	;volatile
 10132  071A  00F3               	movwf	?_ADC_GetConversionResult+1
 10133  071B  081B               	movf	27,w	;volatile
 10134  071C  00F2               	movwf	?_ADC_GetConversionResult
 10135  071D  0008               	return
 10136  071E                     __end_of_ADC_GetConversionResult:
 10137                           
 10138                           	psect	intentry
 10139  0004                     __pintentry:	
 10140 ;; *************** function _INTERRUPT_InterruptManager *****************
 10141 ;; Defined at:
 10142 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10143 ;; Parameters:    Size  Location     Type
 10144 ;;		None
 10145 ;; Auto vars:     Size  Location     Type
 10146 ;;		None
 10147 ;; Return value:  Size  Location     Type
 10148 ;;                  1    wreg      void 
 10149 ;; Registers used:
 10150 ;;		wreg, status,2, status,0, pclath, cstack
 10151 ;; Tracked objects:
 10152 ;;		On entry : 0/0
 10153 ;;		On exit  : 0/0
 10154 ;;		Unchanged: 0/0
 10155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10156 ;;      Params:         0       0       0       0
 10157 ;;      Locals:         0       0       0       0
 10158 ;;      Temps:          0       0       0       0
 10159 ;;      Totals:         0       0       0       0
 10160 ;;Total ram usage:        0 bytes
 10161 ;; Hardware stack levels used:    1
 10162 ;; Hardware stack levels required when called:    5
 10163 ;; This function calls:
 10164 ;;		_PIN_MANAGER_IOC
 10165 ;;		_TMR0_ISR
 10166 ;;		_TMR1_ISR
 10167 ;; This function is called by:
 10168 ;;		Interrupt level 1
 10169 ;; This function uses a non-reentrant model
 10170 ;;
 10171                           
 10172  0004                     _INTERRUPT_InterruptManager:
 10173                           
 10174                           ;incstack = 0
 10175  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10176                           
 10177                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 10178  0005  3180               	pagesel	$
 10179                           
 10180                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 10181  0006  014E               	movlb	14	; select bank14
 10182  0007  1A96               	btfsc	22,5	;volatile
 10183  0008  1E8C               	btfss	12,5	;volatile
 10184  0009  280C               	goto	i1l371
 10185                           
 10186                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 10187  000A  260F               	fcall	_TMR0_ISR
 10188                           
 10189                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 10190  000B  2817               	goto	i1l379
 10191  000C                     i1l371:	
 10192                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.IOCIE == 1 && PIR0bit
      +                          s.IOCIF == 1)
 10193                           
 10194  000C  1A16               	btfsc	22,4	;volatile
 10195  000D  1E0C               	btfss	12,4	;volatile
 10196  000E  2811               	goto	i1l373
 10197                           
 10198                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         PIN_MANAGER_IOC();
 10199  000F  271E               	fcall	_PIN_MANAGER_IOC
 10200                           
 10201                           ;mcc_generated_files/interrupt_manager.c: 62:     }
 10202  0010  2817               	goto	i1l379
 10203  0011                     i1l373:	
 10204                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
 10205                           
 10206  0011  1B0B               	btfsc	11,6	;volatile
 10207                           
 10208                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 10209  0012  1C1A               	btfss	26,0	;volatile
 10210  0013  2817               	goto	i1l379
 10211  0014  1C10               	btfss	16,0	;volatile
 10212  0015  2817               	goto	i1l379
 10213                           
 10214                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR1_ISR();
 10215  0016  25DB               	fcall	_TMR1_ISR
 10216  0017                     i1l379:	
 10217                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 10218                           
 10219  0017  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10220  0018  0009               	retfie
 10221  0019                     __end_of_INTERRUPT_InterruptManager:
 10222                           
 10223                           	psect	text48
 10224  05DB                     __ptext48:	
 10225 ;; *************** function _TMR1_ISR *****************
 10226 ;; Defined at:
 10227 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 10228 ;; Parameters:    Size  Location     Type
 10229 ;;		None
 10230 ;; Auto vars:     Size  Location     Type
 10231 ;;		None
 10232 ;; Return value:  Size  Location     Type
 10233 ;;                  1    wreg      void 
 10234 ;; Registers used:
 10235 ;;		wreg, status,2, status,0, pclath, cstack
 10236 ;; Tracked objects:
 10237 ;;		On entry : 3F/E
 10238 ;;		On exit  : 0/0
 10239 ;;		Unchanged: 0/0
 10240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10241 ;;      Params:         0       0       0       0
 10242 ;;      Locals:         0       0       0       0
 10243 ;;      Temps:          0       0       0       0
 10244 ;;      Totals:         0       0       0       0
 10245 ;;Total ram usage:        0 bytes
 10246 ;; Hardware stack levels used:    1
 10247 ;; Hardware stack levels required when called:    1
 10248 ;; This function calls:
 10249 ;;		Absolute function
 10250 ;;		_TMR1_DefaultInterruptHandler
 10251 ;;		_TMR1_INT
 10252 ;;		_TMR1_WriteTimer
 10253 ;; This function is called by:
 10254 ;;		_INTERRUPT_InterruptManager
 10255 ;; This function uses a non-reentrant model
 10256 ;;
 10257                           
 10258                           
 10259                           ;psect for function _TMR1_ISR
 10260  05DB                     _TMR1_ISR:
 10261                           
 10262                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 10263                           
 10264                           ;incstack = 0
 10265                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 10266  05DB  1010               	bcf	16,0	;volatile
 10267                           
 10268                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 10269  05DC  0140               	movlb	0	; select bank0
 10270  05DD  082F               	movf	_timer1ReloadVal+1,w	;volatile
 10271  05DE  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 10272  05DF  082E               	movf	_timer1ReloadVal,w	;volatile
 10273  05E0  00F0               	movwf	TMR1_WriteTimer@timerVal
 10274  05E1  2640               	fcall	_TMR1_WriteTimer
 10275                           
 10276                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 10277  05E2  0140               	movlb	0	; select bank0
 10278  05E3  082C               	movf	_TMR1_InterruptHandler,w
 10279  05E4  042D               	iorwf	_TMR1_InterruptHandler+1,w
 10280  05E5  1903               	btfsc	3,2
 10281  05E6  0008               	return
 10282                           
 10283                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 10284  05E7  082D               	movf	_TMR1_InterruptHandler+1,w
 10285  05E8  008A               	movwf	10
 10286  05E9  082C               	movf	_TMR1_InterruptHandler,w
 10287  05EA  000A               	callw
 10288  05EB  3185               	pagesel	$
 10289  05EC  0008               	return
 10290  05ED                     __end_of_TMR1_ISR:
 10291                           
 10292                           	psect	text49
 10293  0734                     __ptext49:	
 10294 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 10295 ;; Defined at:
 10296 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 10297 ;; Parameters:    Size  Location     Type
 10298 ;;		None
 10299 ;; Auto vars:     Size  Location     Type
 10300 ;;		None
 10301 ;; Return value:  Size  Location     Type
 10302 ;;                  1    wreg      void 
 10303 ;; Registers used:
 10304 ;;		None
 10305 ;; Tracked objects:
 10306 ;;		On entry : 3F/0
 10307 ;;		On exit  : 3F/0
 10308 ;;		Unchanged: 3F/0
 10309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10310 ;;      Params:         0       0       0       0
 10311 ;;      Locals:         0       0       0       0
 10312 ;;      Temps:          0       0       0       0
 10313 ;;      Totals:         0       0       0       0
 10314 ;;Total ram usage:        0 bytes
 10315 ;; Hardware stack levels used:    1
 10316 ;; This function calls:
 10317 ;;		Nothing
 10318 ;; This function is called by:
 10319 ;;		_TMR1_Initialize
 10320 ;;		_TMR1_ISR
 10321 ;; This function uses a non-reentrant model
 10322 ;;
 10323                           
 10324                           
 10325                           ;psect for function _TMR1_DefaultInterruptHandler
 10326  0734                     _TMR1_DefaultInterruptHandler:
 10327                           
 10328                           ;incstack = 0
 10329                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 10330  0734  0008               	return
 10331  0735                     __end_of_TMR1_DefaultInterruptHandler:
 10332                           
 10333                           	psect	text50
 10334  072E                     __ptext50:	
 10335 ;; *************** function _TMR1_INT *****************
 10336 ;; Defined at:
 10337 ;;		line 170 in file "Main.c"
 10338 ;; Parameters:    Size  Location     Type
 10339 ;;		None
 10340 ;; Auto vars:     Size  Location     Type
 10341 ;;		None
 10342 ;; Return value:  Size  Location     Type
 10343 ;;                  1    wreg      void 
 10344 ;; Registers used:
 10345 ;;		None
 10346 ;; Tracked objects:
 10347 ;;		On entry : 3F/0
 10348 ;;		On exit  : 3F/0
 10349 ;;		Unchanged: 0/0
 10350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10351 ;;      Params:         0       0       0       0
 10352 ;;      Locals:         0       0       0       0
 10353 ;;      Temps:          0       0       0       0
 10354 ;;      Totals:         0       0       0       0
 10355 ;;Total ram usage:        0 bytes
 10356 ;; Hardware stack levels used:    1
 10357 ;; This function calls:
 10358 ;;		Nothing
 10359 ;; This function is called by:
 10360 ;;		_main
 10361 ;;		_TMR1_ISR
 10362 ;; This function uses a non-reentrant model
 10363 ;;
 10364                           
 10365                           
 10366                           ;psect for function _TMR1_INT
 10367  072E                     _TMR1_INT:
 10368                           
 10369                           ;Main.c: 172:     UpdateVbatt = 1;
 10370                           
 10371                           ;incstack = 0
 10372                           ; Regs used in _TMR1_INT: []
 10373  072E  01BA               	clrf	_UpdateVbatt
 10374  072F  0ABA               	incf	_UpdateVbatt,f
 10375  0730  0008               	return
 10376  0731                     __end_of_TMR1_INT:
 10377                           
 10378                           	psect	text51
 10379  060F                     __ptext51:	
 10380 ;; *************** function _TMR0_ISR *****************
 10381 ;; Defined at:
 10382 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 10383 ;; Parameters:    Size  Location     Type
 10384 ;;		None
 10385 ;; Auto vars:     Size  Location     Type
 10386 ;;		None
 10387 ;; Return value:  Size  Location     Type
 10388 ;;                  1    wreg      void 
 10389 ;; Registers used:
 10390 ;;		wreg, status,2, status,0, pclath, cstack
 10391 ;; Tracked objects:
 10392 ;;		On entry : 3F/E
 10393 ;;		On exit  : 0/0
 10394 ;;		Unchanged: 0/0
 10395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10396 ;;      Params:         0       0       0       0
 10397 ;;      Locals:         0       0       0       0
 10398 ;;      Temps:          0       0       0       0
 10399 ;;      Totals:         0       0       0       0
 10400 ;;Total ram usage:        0 bytes
 10401 ;; Hardware stack levels used:    1
 10402 ;; Hardware stack levels required when called:    1
 10403 ;; This function calls:
 10404 ;;		Absolute function
 10405 ;;		_TMR0_DefaultInterruptHandler
 10406 ;;		_TMR0_INT
 10407 ;; This function is called by:
 10408 ;;		_INTERRUPT_InterruptManager
 10409 ;; This function uses a non-reentrant model
 10410 ;;
 10411                           
 10412                           
 10413                           ;psect for function _TMR0_ISR
 10414  060F                     _TMR0_ISR:
 10415                           
 10416                           ;mcc_generated_files/tmr0.c: 137:     PIR0bits.TMR0IF = 0;
 10417                           
 10418                           ;incstack = 0
 10419                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 10420  060F  128C               	bcf	12,5	;volatile
 10421                           
 10422                           ;mcc_generated_files/tmr0.c: 139:     TMR0H = timer0ReloadVal16bit >> 8;
 10423  0610  087B               	movf	_timer0ReloadVal16bit+1,w	;volatile
 10424  0611  014B               	movlb	11	; select bank11
 10425  0612  009D               	movwf	29	;volatile
 10426                           
 10427                           ;mcc_generated_files/tmr0.c: 140:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 10428  0613  087A               	movf	_timer0ReloadVal16bit,w	;volatile
 10429  0614  009C               	movwf	28	;volatile
 10430                           
 10431                           ;mcc_generated_files/tmr0.c: 142:     if(TMR0_InterruptHandler)
 10432  0615  0140               	movlb	0	; select bank0
 10433  0616  0830               	movf	_TMR0_InterruptHandler,w
 10434  0617  0431               	iorwf	_TMR0_InterruptHandler+1,w
 10435  0618  1903               	btfsc	3,2
 10436  0619  0008               	return
 10437                           
 10438                           ;mcc_generated_files/tmr0.c: 143:     {;mcc_generated_files/tmr0.c: 144:         TMR0_In
      +                          terruptHandler();
 10439  061A  0831               	movf	_TMR0_InterruptHandler+1,w
 10440  061B  008A               	movwf	10
 10441  061C  0830               	movf	_TMR0_InterruptHandler,w
 10442  061D  000A               	callw
 10443  061E  3186               	pagesel	$
 10444  061F  0008               	return
 10445  0620                     __end_of_TMR0_ISR:
 10446                           
 10447                           	psect	text52
 10448  0735                     __ptext52:	
 10449 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 10450 ;; Defined at:
 10451 ;;		line 155 in file "mcc_generated_files/tmr0.c"
 10452 ;; Parameters:    Size  Location     Type
 10453 ;;		None
 10454 ;; Auto vars:     Size  Location     Type
 10455 ;;		None
 10456 ;; Return value:  Size  Location     Type
 10457 ;;                  1    wreg      void 
 10458 ;; Registers used:
 10459 ;;		None
 10460 ;; Tracked objects:
 10461 ;;		On entry : 3F/0
 10462 ;;		On exit  : 3F/0
 10463 ;;		Unchanged: 3F/0
 10464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10465 ;;      Params:         0       0       0       0
 10466 ;;      Locals:         0       0       0       0
 10467 ;;      Temps:          0       0       0       0
 10468 ;;      Totals:         0       0       0       0
 10469 ;;Total ram usage:        0 bytes
 10470 ;; Hardware stack levels used:    1
 10471 ;; This function calls:
 10472 ;;		Nothing
 10473 ;; This function is called by:
 10474 ;;		_TMR0_Initialize
 10475 ;;		_TMR0_ISR
 10476 ;; This function uses a non-reentrant model
 10477 ;;
 10478                           
 10479                           
 10480                           ;psect for function _TMR0_DefaultInterruptHandler
 10481  0735                     _TMR0_DefaultInterruptHandler:
 10482                           
 10483                           ;incstack = 0
 10484                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 10485  0735  0008               	return
 10486  0736                     __end_of_TMR0_DefaultInterruptHandler:
 10487                           
 10488                           	psect	text53
 10489  0731                     __ptext53:	
 10490 ;; *************** function _TMR0_INT *****************
 10491 ;; Defined at:
 10492 ;;		line 165 in file "Main.c"
 10493 ;; Parameters:    Size  Location     Type
 10494 ;;		None
 10495 ;; Auto vars:     Size  Location     Type
 10496 ;;		None
 10497 ;; Return value:  Size  Location     Type
 10498 ;;                  1    wreg      void 
 10499 ;; Registers used:
 10500 ;;		None
 10501 ;; Tracked objects:
 10502 ;;		On entry : 3F/0
 10503 ;;		On exit  : 3F/0
 10504 ;;		Unchanged: 0/0
 10505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10506 ;;      Params:         0       0       0       0
 10507 ;;      Locals:         0       0       0       0
 10508 ;;      Temps:          0       0       0       0
 10509 ;;      Totals:         0       0       0       0
 10510 ;;Total ram usage:        0 bytes
 10511 ;; Hardware stack levels used:    1
 10512 ;; This function calls:
 10513 ;;		Nothing
 10514 ;; This function is called by:
 10515 ;;		_main
 10516 ;;		_TMR0_ISR
 10517 ;; This function uses a non-reentrant model
 10518 ;;
 10519                           
 10520                           
 10521                           ;psect for function _TMR0_INT
 10522  0731                     _TMR0_INT:
 10523                           
 10524                           ;Main.c: 167:     UpdateLeds = 1;
 10525                           
 10526                           ;incstack = 0
 10527                           ; Regs used in _TMR0_INT: []
 10528  0731  01BC               	clrf	_UpdateLeds
 10529  0732  0ABC               	incf	_UpdateLeds,f
 10530  0733  0008               	return
 10531  0734                     __end_of_TMR0_INT:
 10532                           
 10533                           	psect	text54
 10534  071E                     __ptext54:	
 10535 ;; *************** function _PIN_MANAGER_IOC *****************
 10536 ;; Defined at:
 10537 ;;		line 132 in file "mcc_generated_files/pin_manager.c"
 10538 ;; Parameters:    Size  Location     Type
 10539 ;;		None
 10540 ;; Auto vars:     Size  Location     Type
 10541 ;;		None
 10542 ;; Return value:  Size  Location     Type
 10543 ;;                  1    wreg      void 
 10544 ;; Registers used:
 10545 ;;		wreg, status,2, status,0, pclath, cstack
 10546 ;; Tracked objects:
 10547 ;;		On entry : 3F/E
 10548 ;;		On exit  : 3F/3E
 10549 ;;		Unchanged: 0/0
 10550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10551 ;;      Params:         0       0       0       0
 10552 ;;      Locals:         0       0       0       0
 10553 ;;      Temps:          0       0       0       0
 10554 ;;      Totals:         0       0       0       0
 10555 ;;Total ram usage:        0 bytes
 10556 ;; Hardware stack levels used:    1
 10557 ;; Hardware stack levels required when called:    4
 10558 ;; This function calls:
 10559 ;;		_IOCAF3_ISR
 10560 ;; This function is called by:
 10561 ;;		_INTERRUPT_InterruptManager
 10562 ;; This function uses a non-reentrant model
 10563 ;;
 10564                           
 10565                           
 10566                           ;psect for function _PIN_MANAGER_IOC
 10567  071E                     _PIN_MANAGER_IOC:
 10568                           
 10569                           ;mcc_generated_files/pin_manager.c: 135:     if(IOCAFbits.IOCAF3 == 1)
 10570                           
 10571                           ;incstack = 0
 10572                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 10573  071E  017E               	movlb	62	; select bank62
 10574  071F  1DBF               	btfss	63,3	;volatile
 10575  0720  0008               	return
 10576                           
 10577                           ;mcc_generated_files/pin_manager.c: 136:     {;mcc_generated_files/pin_manager.c: 137:  
      +                                 IOCAF3_ISR();
 10578  0721  2677               	fcall	_IOCAF3_ISR
 10579  0722  0008               	return
 10580  0723                     __end_of_PIN_MANAGER_IOC:
 10581                           
 10582                           	psect	text55
 10583  0677                     __ptext55:	
 10584 ;; *************** function _IOCAF3_ISR *****************
 10585 ;; Defined at:
 10586 ;;		line 144 in file "mcc_generated_files/pin_manager.c"
 10587 ;; Parameters:    Size  Location     Type
 10588 ;;		None
 10589 ;; Auto vars:     Size  Location     Type
 10590 ;;		None
 10591 ;; Return value:  Size  Location     Type
 10592 ;;                  1    wreg      void 
 10593 ;; Registers used:
 10594 ;;		wreg, status,2, status,0, pclath, cstack
 10595 ;; Tracked objects:
 10596 ;;		On entry : 3F/3E
 10597 ;;		On exit  : 3F/3E
 10598 ;;		Unchanged: 0/0
 10599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10600 ;;      Params:         0       0       0       0
 10601 ;;      Locals:         0       0       0       0
 10602 ;;      Temps:          0       0       0       0
 10603 ;;      Totals:         0       0       0       0
 10604 ;;Total ram usage:        0 bytes
 10605 ;; Hardware stack levels used:    1
 10606 ;; Hardware stack levels required when called:    3
 10607 ;; This function calls:
 10608 ;;		Absolute function
 10609 ;;		_IOCAF3_DefaultInterruptHandler
 10610 ;;		_RCS_INT
 10611 ;; This function is called by:
 10612 ;;		_PIN_MANAGER_IOC
 10613 ;; This function uses a non-reentrant model
 10614 ;;
 10615                           
 10616                           
 10617                           ;psect for function _IOCAF3_ISR
 10618  0677                     _IOCAF3_ISR:
 10619                           
 10620                           ;mcc_generated_files/pin_manager.c: 149:     if(IOCAF3_InterruptHandler)
 10621                           
 10622                           ;incstack = 0
 10623                           ; Regs used in _IOCAF3_ISR: [wreg+status,2+status,0+pclath+cstack]
 10624  0677  0140               	movlb	0	; select bank0
 10625  0678  0864               	movf	_IOCAF3_InterruptHandler,w
 10626  0679  0465               	iorwf	_IOCAF3_InterruptHandler+1,w
 10627  067A  1903               	btfsc	3,2
 10628  067B  2E81               	goto	i1l2088
 10629                           
 10630                           ;mcc_generated_files/pin_manager.c: 150:     {;mcc_generated_files/pin_manager.c: 151:  
      +                                 IOCAF3_InterruptHandler();
 10631  067C  0865               	movf	_IOCAF3_InterruptHandler+1,w
 10632  067D  008A               	movwf	10
 10633  067E  0864               	movf	_IOCAF3_InterruptHandler,w
 10634  067F  000A               	callw
 10635  0680  3186               	pagesel	$
 10636  0681                     i1l2088:
 10637                           
 10638                           ;mcc_generated_files/pin_manager.c: 153:     IOCAFbits.IOCAF3 = 0;
 10639  0681  017E               	movlb	62	; select bank62
 10640  0682  11BF               	bcf	63,3	;volatile
 10641  0683  0008               	return
 10642  0684                     __end_of_IOCAF3_ISR:
 10643                           
 10644                           	psect	text56
 10645  0736                     __ptext56:	
 10646 ;; *************** function _IOCAF3_DefaultInterruptHandler *****************
 10647 ;; Defined at:
 10648 ;;		line 166 in file "mcc_generated_files/pin_manager.c"
 10649 ;; Parameters:    Size  Location     Type
 10650 ;;		None
 10651 ;; Auto vars:     Size  Location     Type
 10652 ;;		None
 10653 ;; Return value:  Size  Location     Type
 10654 ;;                  1    wreg      void 
 10655 ;; Registers used:
 10656 ;;		None
 10657 ;; Tracked objects:
 10658 ;;		On entry : 3F/0
 10659 ;;		On exit  : 3F/0
 10660 ;;		Unchanged: 3F/0
 10661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10662 ;;      Params:         0       0       0       0
 10663 ;;      Locals:         0       0       0       0
 10664 ;;      Temps:          0       0       0       0
 10665 ;;      Totals:         0       0       0       0
 10666 ;;Total ram usage:        0 bytes
 10667 ;; Hardware stack levels used:    1
 10668 ;; This function calls:
 10669 ;;		Nothing
 10670 ;; This function is called by:
 10671 ;;		_PIN_MANAGER_Initialize
 10672 ;;		_IOCAF3_ISR
 10673 ;; This function uses a non-reentrant model
 10674 ;;
 10675                           
 10676                           
 10677                           ;psect for function _IOCAF3_DefaultInterruptHandler
 10678  0736                     _IOCAF3_DefaultInterruptHandler:
 10679                           
 10680                           ;incstack = 0
 10681                           ; Regs used in _IOCAF3_DefaultInterruptHandler: []
 10682  0736  0008               	return
 10683  0737                     __end_of_IOCAF3_DefaultInterruptHandler:
 10684                           
 10685                           	psect	text57
 10686  0727                     __ptext57:	
 10687 ;; *************** function _RCS_INT *****************
 10688 ;; Defined at:
 10689 ;;		line 178 in file "Main.c"
 10690 ;; Parameters:    Size  Location     Type
 10691 ;;		None
 10692 ;; Auto vars:     Size  Location     Type
 10693 ;;		None
 10694 ;; Return value:  Size  Location     Type
 10695 ;;                  1    wreg      void 
 10696 ;; Registers used:
 10697 ;;		wreg, status,2, status,0, pclath, cstack
 10698 ;; Tracked objects:
 10699 ;;		On entry : 3F/0
 10700 ;;		On exit  : 3F/4
 10701 ;;		Unchanged: 0/0
 10702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10703 ;;      Params:         0       0       0       0
 10704 ;;      Locals:         0       0       0       0
 10705 ;;      Temps:          0       0       0       0
 10706 ;;      Totals:         0       0       0       0
 10707 ;;Total ram usage:        0 bytes
 10708 ;; Hardware stack levels used:    1
 10709 ;; Hardware stack levels required when called:    2
 10710 ;; This function calls:
 10711 ;;		_TMR1_Reload
 10712 ;; This function is called by:
 10713 ;;		_main
 10714 ;;		_IOCAF3_ISR
 10715 ;; This function uses a non-reentrant model
 10716 ;;
 10717                           
 10718                           
 10719                           ;psect for function _RCS_INT
 10720  0727                     _RCS_INT:
 10721                           
 10722                           ;Main.c: 181:     UpdateRcs = 1;
 10723                           
 10724                           ;incstack = 0
 10725                           ; Regs used in _RCS_INT: [wreg+status,2+status,0+pclath+cstack]
 10726  0727  01BB               	clrf	_UpdateRcs
 10727  0728  0ABB               	incf	_UpdateRcs,f
 10728                           
 10729                           ;Main.c: 183:     TMR1_Reload();
 10730  0729  2709               	fcall	_TMR1_Reload
 10731  072A  0008               	return
 10732  072B                     __end_of_RCS_INT:
 10733                           
 10734                           	psect	text58
 10735  0709                     __ptext58:	
 10736 ;; *************** function _TMR1_Reload *****************
 10737 ;; Defined at:
 10738 ;;		line 149 in file "mcc_generated_files/tmr1.c"
 10739 ;; Parameters:    Size  Location     Type
 10740 ;;		None
 10741 ;; Auto vars:     Size  Location     Type
 10742 ;;		None
 10743 ;; Return value:  Size  Location     Type
 10744 ;;                  1    wreg      void 
 10745 ;; Registers used:
 10746 ;;		wreg, status,2, status,0, pclath, cstack
 10747 ;; Tracked objects:
 10748 ;;		On entry : 3F/0
 10749 ;;		On exit  : 3F/4
 10750 ;;		Unchanged: 0/0
 10751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10752 ;;      Params:         0       0       0       0
 10753 ;;      Locals:         0       0       0       0
 10754 ;;      Temps:          0       0       0       0
 10755 ;;      Totals:         0       0       0       0
 10756 ;;Total ram usage:        0 bytes
 10757 ;; Hardware stack levels used:    1
 10758 ;; Hardware stack levels required when called:    1
 10759 ;; This function calls:
 10760 ;;		_TMR1_WriteTimer
 10761 ;; This function is called by:
 10762 ;;		_RCS_INT
 10763 ;; This function uses a non-reentrant model
 10764 ;;
 10765                           
 10766                           
 10767                           ;psect for function _TMR1_Reload
 10768  0709                     _TMR1_Reload:
 10769                           
 10770                           ;mcc_generated_files/tmr1.c: 151:     TMR1_WriteTimer(timer1ReloadVal);
 10771                           
 10772                           ;incstack = 0
 10773                           ; Regs used in _TMR1_Reload: [wreg+status,2+status,0+pclath+cstack]
 10774  0709  082F               	movf	_timer1ReloadVal+1,w	;volatile
 10775  070A  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 10776  070B  082E               	movf	_timer1ReloadVal,w	;volatile
 10777  070C  00F0               	movwf	TMR1_WriteTimer@timerVal
 10778  070D  2640               	fcall	_TMR1_WriteTimer
 10779  070E  0008               	return
 10780  070F                     __end_of_TMR1_Reload:
 10781                           
 10782                           	psect	text59
 10783  0640                     __ptext59:	
 10784 ;; *************** function _TMR1_WriteTimer *****************
 10785 ;; Defined at:
 10786 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 10787 ;; Parameters:    Size  Location     Type
 10788 ;;  timerVal        2    0[COMMON] unsigned short 
 10789 ;; Auto vars:     Size  Location     Type
 10790 ;;		None
 10791 ;; Return value:  Size  Location     Type
 10792 ;;                  1    wreg      void 
 10793 ;; Registers used:
 10794 ;;		wreg
 10795 ;; Tracked objects:
 10796 ;;		On entry : 3F/0
 10797 ;;		On exit  : 3F/4
 10798 ;;		Unchanged: 0/0
 10799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10800 ;;      Params:         2       0       0       0
 10801 ;;      Locals:         0       0       0       0
 10802 ;;      Temps:          0       0       0       0
 10803 ;;      Totals:         2       0       0       0
 10804 ;;Total ram usage:        2 bytes
 10805 ;; Hardware stack levels used:    1
 10806 ;; This function calls:
 10807 ;;		Nothing
 10808 ;; This function is called by:
 10809 ;;		_TMR1_Reload
 10810 ;;		_TMR1_ISR
 10811 ;; This function uses a non-reentrant model
 10812 ;;
 10813                           
 10814                           
 10815                           ;psect for function _TMR1_WriteTimer
 10816  0640                     _TMR1_WriteTimer:
 10817                           
 10818                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 10819                           
 10820                           ;incstack = 0
 10821                           ; Regs used in _TMR1_WriteTimer: [wreg]
 10822  0640  0144               	movlb	4	; select bank4
 10823  0641  1D0E               	btfss	14,2	;volatile
 10824  0642  2E4A               	goto	i1l1934
 10825                           
 10826                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 10827  0643  100E               	bcf	14,0	;volatile
 10828                           
 10829                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (uint8_t)(timerVal >> 8);
 10830  0644  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 10831  0645  008D               	movwf	13	;volatile
 10832                           
 10833                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = (uint8_t)timerVal;
 10834  0646  0870               	movf	TMR1_WriteTimer@timerVal,w
 10835  0647  008C               	movwf	12	;volatile
 10836                           
 10837                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 10838  0648  140E               	bsf	14,0	;volatile
 10839                           
 10840                           ;mcc_generated_files/tmr1.c: 140:     }
 10841  0649  0008               	return
 10842  064A                     i1l1934:
 10843                           
 10844                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 10845  064A  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 10846  064B  008D               	movwf	13	;volatile
 10847                           
 10848                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = (uint8_t)timerVal;
 10849  064C  0870               	movf	TMR1_WriteTimer@timerVal,w
 10850  064D  008C               	movwf	12	;volatile
 10851  064E  0008               	return
 10852  064F                     __end_of_TMR1_WriteTimer:
 10853  007E                     btemp	set	126	;btemp
 10854  007E                     int$flags	set	126
 10855  007E                     wtemp0	set	126
 10856                           
 10857                           	psect	idloc
 10858                           
 10859                           ;Config register IDLOC0 @ 0x8000
 10860                           ;	unspecified, using default values
 10861  8000                     	org	32768
 10862  8000  3FFF               	dw	16383
 10863                           
 10864                           ;Config register IDLOC1 @ 0x8001
 10865                           ;	unspecified, using default values
 10866  8001                     	org	32769
 10867  8001  3FFF               	dw	16383
 10868                           
 10869                           ;Config register IDLOC2 @ 0x8002
 10870                           ;	unspecified, using default values
 10871  8002                     	org	32770
 10872  8002  3FFF               	dw	16383
 10873                           
 10874                           ;Config register IDLOC3 @ 0x8003
 10875                           ;	unspecified, using default values
 10876  8003                     	org	32771
 10877  8003  3FFF               	dw	16383
 10878                           
 10879                           	psect	config
 10880                           
 10881                           ;Config register CONFIG1 @ 0x8007
 10882                           ;	External Oscillator mode selection bits
 10883                           ;	FEXTOSC = OFF, Oscillator not enabled
 10884                           ;	Power-up default value for COSC bits
 10885                           ;	RSTOSC = HFINTPLL, HFINTOSC with 2x PLL, with OSCFRQ = 16 MHz and CDIV = 1:1 (FOSC = 3
      +                          2 MHz)
 10886                           ;	Clock Out Enable bit
 10887                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 10888                           ;	Clock Switch Enable bit
 10889                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 10890                           ;	Fail-Safe Clock Monitor Enable bit
 10891                           ;	FCMEN = OFF, FSCM timer disabled
 10892  8007                     	org	32775
 10893  8007  1F9C               	dw	8092
 10894                           
 10895                           ;Config register CONFIG2 @ 0x8008
 10896                           ;	Master Clear Enable bit
 10897                           ;	MCLRE = OFF, MCLR pin function is port defined function
 10898                           ;	Power-up Timer Enable bit
 10899                           ;	PWRTE = OFF, PWRT disabled
 10900                           ;	Low-Power BOR enable bit
 10901                           ;	LPBOREN = OFF, ULPBOR disabled
 10902                           ;	Brown-out reset enable bits
 10903                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 10904                           ;	Brown-out Reset Voltage Selection
 10905                           ;	BORV = HI, Brown-out Reset Voltage (VBOR) is set to 2.7V
 10906                           ;	Zero-cross detect disable
 10907                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 10908                           ;	Peripheral Pin Select one-way control
 10909                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 10910                           ;	Stack Overflow/Underflow Reset Enable bit
 10911                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 10912  8008                     	org	32776
 10913  8008  3DFE               	dw	15870
 10914                           
 10915                           ;Config register CONFIG3 @ 0x8009
 10916                           ;	WDT Period Select bits
 10917                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10918                           ;	WDT operating mode
 10919                           ;	WDTE = ON, WDT enabled regardless of sleep; SWDTEN ignored
 10920                           ;	WDT Window Select bits
 10921                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 10922                           ;	WDT input clock selector
 10923                           ;	WDTCCS = SC, Software Control
 10924  8009                     	org	32777
 10925  8009  3FFF               	dw	16383
 10926                           
 10927                           ;Config register CONFIG4 @ 0x800A
 10928                           ;	Boot Block Size Selection bits
 10929                           ;	BBSIZE = BB512, 512 words boot block size
 10930                           ;	Boot Block Enable bit
 10931                           ;	BBEN = OFF, Boot Block disabled
 10932                           ;	SAF Enable bit
 10933                           ;	SAFEN = OFF, SAF disabled
 10934                           ;	Application Block Write Protection bit
 10935                           ;	WRTAPP = OFF, Application Block not write protected
 10936                           ;	Boot Block Write Protection bit
 10937                           ;	WRTB = OFF, Boot Block not write protected
 10938                           ;	Configuration Register Write Protection bit
 10939                           ;	WRTC = OFF, Configuration Register not write protected
 10940                           ;	Storage Area Flash Write Protection bit
 10941                           ;	WRTSAF = OFF, SAF not write protected
 10942                           ;	Low Voltage Programming Enable bit
 10943                           ;	LVP = OFF, High Voltage on MCLR/Vpp must be used for programming
 10944  800A                     	org	32778
 10945  800A  1FFF               	dw	8191
 10946                           
 10947                           ;Config register CONFIG5 @ 0x800B
 10948                           ;	UserNVM Program memory code protection bit
 10949                           ;	CP = OFF, UserNVM code protection disabled
 10950  800B                     	org	32779
 10951  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        82
    BSS         35
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     19      70
    BANK1            80      0      66
    BANK2            80      0       0

Pointer List with Targets:

    EXECUTExEFFECT$2042	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> LedBrake(), LedSlFl(), LedNom(), LedFlash(), 
		 -> LedOff(), 

    EXECUTExEFFECT$2037	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> LedBrake(), LedSlFl(), LedNom(), LedFlash(), 
		 -> LedOff(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    S1113$PWM	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> PWM1_LoadDutyValue(), PWM2_LoadDutyValue(), PWM5_LoadDutyValue(), PWM6_LoadDutyValue(), 
		 -> PWM3_LoadDutyValue(), PWM4_LoadDutyValue(), 

    LedBit.PWM	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> PWM1_LoadDutyValue(), PWM2_LoadDutyValue(), PWM5_LoadDutyValue(), PWM6_LoadDutyValue(), 
		 -> PWM3_LoadDutyValue(), PWM4_LoadDutyValue(), 

    S1113$Prog	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> LedBrake(), LedSlFl(), LedNom(), LedFlash(), 
		 -> LedOff(), 

    LedBit.Prog	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> LedBrake(), LedSlFl(), LedNom(), LedFlash(), 
		 -> LedOff(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_INT(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_INT(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_INT(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_INT(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCAF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> RCS_INT(), IOCAF3_DefaultInterruptHandler(), 

    IOCAF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> RCS_INT(), Absolute function(), IOCAF3_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF3_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _rand->___lmul
    _CalcPwm->_PWM3_LoadDutyValue
    _CalcPwm->_PWM4_LoadDutyValue
    _CalcPwm->_PWM5_LoadDutyValue
    _CalcPwm->_PWM6_LoadDutyValue
    _PWM6_LoadDutyValue->___bmul
    _PWM5_LoadDutyValue->___bmul
    _PWM4_LoadDutyValue->___bmul
    _PWM3_LoadDutyValue->___bmul
    _PWM2_LoadDutyValue->___bmul
    _PWM1_LoadDutyValue->___bmul

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer
    _TMR1_Reload->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_EXECUTExEFFECT
    _INITxEXECUTER->_RCSxLED
    _RCSxLED->_rand
    _rand->___lmul
    _EXECUTExEFFECT->_LedFlash
    _EXECUTExEFFECT->_LedSlFl
    _LedSlFl->_CalcPwm
    _LedOff->_CalcPwm
    _LedNom->_CalcPwm
    _LedFlash->_CalcPwm
    _LedBrake->_CalcPwm

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   31803
                                             16 BANK0      3     3      0
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                  _ADC_SelectChannel
                _ADC_StartConversion
                       _BATTxPROTECT
                     _EXECUTExEFFECT
                      _INITxEXECUTER
         _IOCAF3_SetInterruptHandler
                            _RCSxLED
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     816
                     _ADC_Initialize
                 _EUSART1_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
         _IOCAF3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF3_SetInterruptHandler                           2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INITxEXECUTER                                        0     0      0     586
                            _RCSxLED
                               _rand
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RCSxLED                                              1     1      0     244
                                             10 BANK0      1     1      0
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 6     4      2     244
                                              4 BANK0      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     244
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _EXECUTExEFFECT                                       6     6      0   29514
                                             10 BANK0      6     6      0
                           _LedBrake *
                           _LedFlash *
                             _LedNom *
                             _LedOff *
                            _LedSlFl *
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LedSlFl                                              5     4      1    6095
                                              5 BANK0      5     4      1
                            _CalcPwm
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LedOff                                               2     1      1    5184
                                              5 BANK0      2     1      1
                            _CalcPwm
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LedNom                                               4     3      1    5215
                                              5 BANK0      4     3      1
                            _CalcPwm
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LedFlash                                             5     4      1    5472
                                              5 BANK0      5     4      1
                            _CalcPwm
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LedBrake                                             3     2      1    5156
                                              5 BANK0      3     2      1
                            _CalcPwm
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) _CalcPwm                                              5     5      0    2838
                                              0 BANK0      5     5      0
                 _PWM1_LoadDutyValue *
                 _PWM2_LoadDutyValue *
                 _PWM3_LoadDutyValue *
                 _PWM4_LoadDutyValue *
                 _PWM5_LoadDutyValue *
                 _PWM6_LoadDutyValue *
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1    2191
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2      62
                                              6 COMMON     4     2      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM5_LoadDutyValue                                   4     2      2      62
                                              6 COMMON     4     2      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM4_LoadDutyValue                                   4     2      2      62
                                              6 COMMON     4     2      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM3_LoadDutyValue                                   4     2      2      62
                                              6 COMMON     4     2      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM2_LoadDutyValue                                   2     0      2     136
                                              6 COMMON     2     0      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM1_LoadDutyValue                                   2     0      2     201
                                              6 COMMON     2     0      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _BATTxPROTECT                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversionResult                              2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0     484
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     242
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                           _TMR1_INT *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_INT                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _TMR0_INT *
 ---------------------------------------------------------------------------------
 (7) _TMR0_INT                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _PIN_MANAGER_IOC                                      0     0      0     242
                         _IOCAF3_ISR
 ---------------------------------------------------------------------------------
 (7) _IOCAF3_ISR                                           0     0      0     242
                   Absolute function *
     _IOCAF3_DefaultInterruptHandler *
                            _RCS_INT *
 ---------------------------------------------------------------------------------
 (8) _RCS_INT                                              0     0      0     242
                        _TMR1_Reload
 ---------------------------------------------------------------------------------
 (9) _TMR1_Reload                                          0     0      0     242
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     242
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _IOCAF3_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversionResult
   _ADC_IsConversionDone
   _ADC_SelectChannel
   _ADC_StartConversion
   _BATTxPROTECT
   _EXECUTExEFFECT
     _LedBrake *
       _CalcPwm
         _PWM1_LoadDutyValue *
           ___bmul (ARG)
         _PWM2_LoadDutyValue *
           ___bmul (ARG)
         _PWM3_LoadDutyValue *
           ___bmul (ARG)
         _PWM4_LoadDutyValue *
           ___bmul (ARG)
         _PWM5_LoadDutyValue *
           ___bmul (ARG)
         _PWM6_LoadDutyValue *
           ___bmul (ARG)
         ___bmul *
       ___bmul
     _LedFlash *
       _CalcPwm
         _PWM1_LoadDutyValue *
           ___bmul (ARG)
         _PWM2_LoadDutyValue *
           ___bmul (ARG)
         _PWM3_LoadDutyValue *
           ___bmul (ARG)
         _PWM4_LoadDutyValue *
           ___bmul (ARG)
         _PWM5_LoadDutyValue *
           ___bmul (ARG)
         _PWM6_LoadDutyValue *
           ___bmul (ARG)
         ___bmul *
       ___bmul
     _LedNom *
       _CalcPwm
         _PWM1_LoadDutyValue *
           ___bmul (ARG)
         _PWM2_LoadDutyValue *
           ___bmul (ARG)
         _PWM3_LoadDutyValue *
           ___bmul (ARG)
         _PWM4_LoadDutyValue *
           ___bmul (ARG)
         _PWM5_LoadDutyValue *
           ___bmul (ARG)
         _PWM6_LoadDutyValue *
           ___bmul (ARG)
         ___bmul *
       ___bmul
     _LedOff *
       _CalcPwm
         _PWM1_LoadDutyValue *
           ___bmul (ARG)
         _PWM2_LoadDutyValue *
           ___bmul (ARG)
         _PWM3_LoadDutyValue *
           ___bmul (ARG)
         _PWM4_LoadDutyValue *
           ___bmul (ARG)
         _PWM5_LoadDutyValue *
           ___bmul (ARG)
         _PWM6_LoadDutyValue *
           ___bmul (ARG)
         ___bmul *
       ___bmul
     _LedSlFl *
       _CalcPwm
         _PWM1_LoadDutyValue *
           ___bmul (ARG)
         _PWM2_LoadDutyValue *
           ___bmul (ARG)
         _PWM3_LoadDutyValue *
           ___bmul (ARG)
         _PWM4_LoadDutyValue *
           ___bmul (ARG)
         _PWM5_LoadDutyValue *
           ___bmul (ARG)
         _PWM6_LoadDutyValue *
           ___bmul (ARG)
         ___bmul *
       ___bmul
     ___bmul *
   _INITxEXECUTER
     _RCSxLED
       _rand
         ___lmul
     _rand
       ___lmul
     _srand
   _IOCAF3_SetInterruptHandler
   _RCSxLED
     _rand
       ___lmul
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF3_SetInterruptHandler
     _PMD_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
   _TMR0_SetInterruptHandler
   _TMR1_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCAF3_ISR
       Absolute function(Fake) *
       _IOCAF3_DefaultInterruptHandler *
       _RCS_INT *
         _TMR1_Reload
           _TMR1_WriteTimer
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _TMR0_INT *
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_INT *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      46       5       87.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      42       7       82.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
ABS                  0      0      94      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      94      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Dec 22 00:02:28 2022

                                ___bmul@product 0074                          __end_of_FVR_Initialize 0727  
                   __size_of_PWM6_LoadDutyValue 0016                                             l306 068D  
                          __end_of_BATTxPROTECT 0506                                             l567 02D5  
                                           l683 020B                                             l668 0095  
                                           u635 0447                                             u645 044E  
                               _timer1ReloadVal 002E                         __size_of_PMD_Initialize 000D  
                               _TMR2_Initialize 064F                                 _PWM4_Initialize 06D7  
                                           wreg 0009                                            l2612 0327  
                                          l2710 0219                                            l2640 003B  
                                          l2616 032B                                            l2546 057E  
                                          l2554 0568                                            l2562 0606  
                                          l2706 01FE                                            l2714 0224  
                                          l2618 034D                                            l2810 02B9  
                                          l2652 00C5                                            l2644 0052  
                                          l2716 023D                                            l2812 02BA  
                                          l2558 0600                                            l2662 0109  
                                          l2654 00C8                                            l2734 0466  
                                          l2902 02C4                                            l2680 017F  
                                          l2904 0235                                            l2816 02BC  
                                          l2760 0257                                            l2906 0190  
                                          l2682 019B                                            l2746 048F  
                                          l2818 02CC                                            l2676 0174  
                                          l2668 0143                                            l2748 0490  
                                          l1964 043C                                            l2694 01A2  
                                          l2782 0271                                            l2774 0268  
                                          l2766 0260                                            l1968 0446  
                                          l2698 01B9                                            l2778 026C  
                                          l2798 028E                         __end_of_PWM1_Initialize 06D0  
                                          u1105 0575                                            u1125 055F  
                                          u1055 05BE                                            u1065 05A8  
                                          u1075 05D4                                            u1155 0429  
                                          u1085 0592                                            _LATA 0018  
                                          _LATC 001A                                            _T2PR 028D  
                                          _PMD0 0796                                            _PMD1 0797  
                                          _PMD2 0798                                            _PMD3 0799  
                                          _PMD4 079A                                            _PMD5 079B  
                                          _PLLR 4480                                            _WPUA 1F39  
                                          _WPUC 1F4F                                 __end_of_RCS_INT 072B  
                               ?_EXECUTExEFFECT 0070                                 __end_of_RCSxLED 0353  
                                          _main 0242                                            _rand 0403  
                                          _seed 003D                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                                            btemp 007E  
                               __end_of_CalcPwm 04E2                                            start 0019  
                               _PWM5_Initialize 06D0                                 __end_of_LedSlFl 01A0  
                    ??_TMR1_SetInterruptHandler 0074                               ___bmul@multiplier 0075  
                    __end_of_PWM5_LoadDutyValue 0599                         __end_of_PWM2_Initialize 06C8  
                       __end_of_TMR0_Initialize 0557                  ??_TMR0_DefaultInterruptHandler 0070  
                               ?_FVR_Initialize 0070                  __size_of_OSCILLATOR_Initialize 000C  
                           __size_of_IOCAF3_ISR 000D                   __end_of_OSCILLATOR_Initialize 0690  
                                         _ADACT 009F                                           ?_main 0070  
                                         ?_rand 0045                                           _T1CLK 0211  
                                         _T1CON 020E                                           _T2CON 028E  
                                         _T2HLT 028F                                           _T2TMR 028C  
                                         _T2RST 0291                                           i1l371 000C  
                                         i1l373 0011                                           i1l379 0017  
                                         _OSCEN 0891                              _PWM4_LoadDutyValue 05AF  
                                         _TMR0H 059D                                           _TMR1H 020D  
                                         _TMR0L 059C                                           _TMR1L 020C  
                                         _TRISA 0012                                           _TRISC 0014  
                                   _BattProtect 0039                __size_of_ADC_GetConversionResult 0005  
             __size_of_TMR0_SetInterruptHandler 0006                                 _PWM6_Initialize 06B0  
                           ___lmul@multiplicand 0076                       ?_TMR0_SetInterruptHandler 0072  
                              __end_of_TMR0_INT 0734                                __end_of_TMR0_ISR 0620  
                              __end_of_TMR1_INT 0731                                __end_of_TMR1_ISR 05ED  
                       __end_of_PIN_MANAGER_IOC 0723                             ?_PWM4_LoadDutyValue 0076  
                                         _srand 06A6                                           main@i 0053  
                       __end_of_PWM3_Initialize 06C0                         __end_of_TMR1_Initialize 0524  
                                         pclath 000A                                           status 0003  
                        __size_of_INITxEXECUTER 000C                                           wtemp0 007E  
            _EUSART1_DefaultFramingErrorHandler 0000                                 _TMR1_WriteTimer 0640  
                              __end_of_LedBrake 05FE                                __end_of_LedFlash 0242  
                               __initialization 001A                      __end_of_EUSART1_Initialize 0540  
                                  __end_of_main 02D7                                    __end_of_rand 0434  
                          ??_PWM4_LoadDutyValue 0078                         __end_of_PWM4_Initialize 06DE  
                       __end_of_TMR2_Initialize 065D                     ?_INTERRUPT_InterruptManager 0070  
                                        ??_main 0051                                          ??_rand 0047  
                 __size_of_ADC_IsConversionDone 0007                                       ??_RCS_INT 0072  
                  ??_IOCAF3_SetInterruptHandler 0074                                       ??_RCSxLED 004B  
                                        _ADCON0 009D                                          _ADCON1 009E  
                                        _ADRESH 009C                                          _ADRESL 009B  
                                        _CCPR1H 030D                                          _CCPR2H 0311  
                                        _CCPR1L 030C                                          _CCPR2L 0310  
                                        ?_srand 0072                                          _ANSELA 1F38  
                                        _ANSELC 1F4E                                          _T0CON0 059E  
                                        _T0CON1 059F                                          _T1GATE 0210  
                                        _T1GCON 020F                                       ??_CalcPwm 0041  
                                        _RA2PPS 1F12                                          _RA4PPS 1F14  
                                        _RA5PPS 1F15                                          _RC1STA 011D  
                                        _RC2PPS 1F22                                          _RC3PPS 1F23  
                       TMR1_WriteTimer@timerVal 0070                                          _RC4PPS 1F24  
                              ?_PWM1_Initialize 0070                                          _RC5PPS 1F25  
                                        _ODCONA 1F3A                                          _ODCONC 1F50  
                                        i1l2088 0681                         __end_of_PWM5_Initialize 06D7  
                                        i1l1934 064A                                          _INLVLA 1F3C  
                                        _INLVLC 1F52                                          _FVRCON 090C  
                                        _OSCFRQ 0893                                       ??_LedSlFl 0047  
                                        _TX1STA 011E                                          _LedBit 00A0  
                                        _LedOff 0492                                          _LedNom 0395  
                                        _Random 0026            __end_of_TMR1_DefaultInterruptHandler 0735  
         __size_of_TMR1_DefaultInterruptHandler 0001                    _TMR1_DefaultInterruptHandler 0734  
                                        ___bmul 05FE                                          ___lmul 0434  
                   __size_of_PWM3_LoadDutyValue 0016                                    ?_TMR1_Reload 0070  
                         __size_of_BATTxPROTECT 0024                        ?_EUSART1_SetErrorHandler 0072  
                              ?_TMR0_Initialize 0070                                ?_PWM2_Initialize 0070  
                       __end_of_PWM6_Initialize 06B8             __size_of_IOCAF3_SetInterruptHandler 0006  
                                 _INITxEXECUTER 0690                ??_EUSART1_SetOverrunErrorHandler 0074  
               ?_EUSART1_SetOverrunErrorHandler 0072                                LedSlFl@ReturnVal 004A  
                                _PMD_Initialize 065D                                      _UpdateLeds 003C  
                                        srand@s 0072        TMR1_SetInterruptHandler@InterruptHandler 0072  
      TMR0_SetInterruptHandler@InterruptHandler 0072      IOCAF3_SetInterruptHandler@InterruptHandler 0072  
                              ?_PIN_MANAGER_IOC 0070                         __end_of_TMR1_WriteTimer 064F  
                                  ??_IOCAF3_ISR 0072                                ?_PWM3_Initialize 0070  
                              ?_TMR1_Initialize 0070                                      _pAdcResult 0036  
                             _SYSTEM_Initialize 0630                         __end_of__initialization 0036  
                            ?_SYSTEM_Initialize 0070                                    _BATTxPROTECT 04E2  
                    __end_of_PWM2_LoadDutyValue 0583                     PWM1_LoadDutyValue@dutyValue 0076  
                           ___bmul@multiplicand 0072                    __size_of_ADC_StartConversion 0003  
                                __pcstackCOMMON 0070                                    __pidataBANK0 0620  
                                  __pidataBANK1 0353                             ??_SYSTEM_Initialize 0074  
                                     ?_TMR0_INT 0070                                       ?_TMR0_ISR 0070  
                                     ?_TMR1_INT 0070                                       ?_TMR1_ISR 0070  
                 ?_TMR1_DefaultInterruptHandler 0070                                   __end_of_srand 06B0  
                            _PWM1_LoadDutyValue 0557                                ?_PWM4_Initialize 0070  
                              ?_TMR2_Initialize 0070                                  ?_INITxEXECUTER 0070  
                        __end_of_PMD_Initialize 066A                              __end_of_IOCAF3_ISR 0684  
                   PWM4_LoadDutyValue@dutyValue 0076                         _ADC_GetConversionResult 0719  
                           ?_PWM1_LoadDutyValue 0076                                       ?_LedBrake 0046  
                                     ?_LedFlash 0046                                ??_EXECUTExEFFECT 004B  
                     __end_of_SYSTEM_Initialize 0640                                         ??_srand 0074  
                                    __pbssBANK0 0020                                ?_PWM5_Initialize 0070  
                                       ?_LedOff 0046                                         ?_LedNom 0046  
                          ??_PWM1_LoadDutyValue 0078                 __end_of_EUSART1_SetErrorHandler 0719  
                              ??_FVR_Initialize 0072                                      __pmaintext 0242  
                                       ?___bmul 0072                __end_of_TMR0_SetInterruptHandler 06FD  
                                       ?___lmul 0072                                      ??_TMR0_INT 0070  
                                    ??_TMR0_ISR 0070                                      ??_TMR1_INT 0070  
                                    ??_TMR1_ISR 0072                      __end_of_PWM6_LoadDutyValue 05DB  
                                    __pintentry 0004                                         _CCP1CON 030E  
                                       _CCP2CON 0312                                  ___lmul@product 0041  
                              ?_PWM6_Initialize 0070                                 ?_PMD_Initialize 0070  
                       __size_of_ADC_Initialize 000A          __end_of_EUSART1_SetFramingErrorHandler 0709  
       __size_of_EUSART1_SetFramingErrorHandler 0006                  _EUSART1_SetFramingErrorHandler 0703  
                            _PWM5_LoadDutyValue 0583                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B              __end_of_IOCAF3_SetInterruptHandler 0703  
                    _IOCAF3_SetInterruptHandler 06FD                                         _OSCCON1 088D  
                                       _OSCCON3 088F                                         _OSCSTAT 0890  
                                    ??_LedBrake 0047                                         _RCS_INT 0727  
                                       _OSCTUNE 0892                                         _PWM3DCH 0315  
                                       _PWM3DCL 0314                                         _PWM4DCH 0319  
                                       _PWM4DCL 0318                                         _PWM5DCH 031D  
                                    ??_LedFlash 0047                                         _PWM5DCL 031C  
                                       _PWM6DCH 038D                                         _PWM3CON 0316  
                                       _PWM6DCL 038C                                         _PWM4CON 031A  
                                       _PWM5CON 031E                                         _PWM6CON 038E  
                                       _SLRCONA 1F3B                                         _SLRCONC 1F51  
                                       _RCSxLED 02D7                                ?_TMR1_WriteTimer 0070  
                                       _CalcPwm 04BE                             ?_PWM5_LoadDutyValue 0076  
                                       _CarrOff 0038                                         _LedSlFl 0039  
                               __size_of_LedOff 002C                                 __size_of_LedNom 0038  
                          _ADC_InterruptHandler 0032                                 __size_of___bmul 0011  
                               __size_of___lmul 002F                                 ??_INITxEXECUTER 007A  
                             LedFlash@ReturnVal 004A                            ??_PWM5_LoadDutyValue 0078  
                     ??_ADC_GetConversionResult 0074                            __size_of_TMR1_Reload 0006  
                                       __ptext1 0630                                         __ptext2 064F  
                                       __ptext3 0506                                         __ptext4 06F1  
                                       __ptext5 0540                                         __ptext6 06F7  
                                       __ptext7 06B0                                         __ptext8 06D0  
                                       __ptext9 06D7                  ??_TMR1_DefaultInterruptHandler 0070  
                                     _T1CONbits 020E                           _OSCILLATOR_Initialize 0684  
             __size_of_TMR1_SetInterruptHandler 0006                              _EUSART1_Initialize 0524  
                      ??_PIN_MANAGER_Initialize 0074                       ?_TMR1_SetInterruptHandler 0072  
                                     _IOCAFbits 1F3F                                       _IOCANbits 1F3E  
                                     _IOCAPbits 1F3D                      __size_of_SYSTEM_Initialize 0010  
                                       clrloop0 06EC                            end_of_initialization 0036  
                           ?_EUSART1_Initialize 0070                                         init_ram 06E5  
                   _EUSART1_OverrunErrorHandler 0022                                         initloop 06E6  
                                   _UpdateVbatt 003A                    __end_of_ADC_IsConversionDone 06E5  
                                     LedOff@Led 0046                                       LedNom@Led 0046  
                   __size_of_PWM4_LoadDutyValue 0016                            ??_EUSART1_Initialize 0074  
                      _TMR0_SetInterruptHandler 06F7                                       _PORTAbits 000C  
                                     _AdcResult 0054                                       _TRISCbits 0014  
                           _ADC_StartConversion 072B                __size_of_EUSART1_SetErrorHandler 0005  
                                   _CCP1CONbits 030E                                     _CCP2CONbits 0312  
                    __end_of_PWM3_LoadDutyValue 05AF                                  __end_of_LedOff 04BE  
                      __size_of_PWM1_Initialize 0008                                  __end_of_LedNom 03CD  
                          ?_ADC_StartConversion 0070                            _timer0ReloadVal16bit 007A  
                                __end_of___bmul 060F                                  __end_of___lmul 0463  
                             __size_of_TMR0_INT 0003                               __size_of_TMR0_ISR 0011  
                             __size_of_TMR1_INT 0003                               __size_of_TMR1_ISR 0012  
                            _PWM2_LoadDutyValue 056D                                  _ADC_Initialize 069C  
                        ?_OSCILLATOR_Initialize 0070                             _EXECUTExEFFECT$2042 004D  
                           start_initialization 001A                        __size_of_PWM2_Initialize 0008  
                      __size_of_TMR0_Initialize 0017                             ?_PWM2_LoadDutyValue 0076  
               __size_of_PIN_MANAGER_Initialize 0036                               __size_of_LedBrake 0011  
                             __size_of_LedFlash 00A2                                        ??_LedOff 0047  
                                      ??_LedNom 0047                        __size_of_PIN_MANAGER_IOC 0005  
                         ??_ADC_StartConversion 0072                            ??_PWM2_LoadDutyValue 0078  
                      __size_of_PWM3_Initialize 0008                        __size_of_TMR1_Initialize 001E  
                                      ??___bmul 0073                     PWM2_LoadDutyValue@dutyValue 0076  
                              ??_PMD_Initialize 0072                                        ??___lmul 007A  
                                     _ReturnVal 0035                          __end_of_ADC_Initialize 06A6  
                                   __pdataBANK0 0054                                     __pdataBANK1 00A0  
                                     _UpdateRcs 003B                     PWM5_LoadDutyValue@dutyValue 0076  
                                   __pbssCOMMON 007A                                       ___latbits 0000  
                                 __pcstackBANK0 0041                            _ADC_IsConversionDone 06DE  
                   ?_IOCAF3_SetInterruptHandler 0072                              _PWM6_LoadDutyValue 05C5  
                      __size_of_PWM4_Initialize 0007                        __size_of_TMR2_Initialize 000E  
                                      ?_RCS_INT 0070                                        ?_RCSxLED 0070  
              ??_IOCAF3_DefaultInterruptHandler 0070                 ?_IOCAF3_DefaultInterruptHandler 0070  
                                      ?_CalcPwm 0070                ??_EUSART1_SetFramingErrorHandler 0074  
               ?_EUSART1_SetFramingErrorHandler 0072                             ?_PWM6_LoadDutyValue 0076  
                                      ?_LedSlFl 0046                           _TMR0_InterruptHandler 0030  
                                     __pnvBANK0 0064                     __size_of_PWM1_LoadDutyValue 0016  
                        _PIN_MANAGER_Initialize 03CD                        __size_of_PWM5_Initialize 0007  
                             _ADC_SelectChannel 066A                __end_of_TMR1_SetInterruptHandler 06F7  
                               ?_ADC_Initialize 0070                              ?_ADC_SelectChannel 0070  
                          ??_PWM6_LoadDutyValue 0078                               ??_PWM1_Initialize 0072  
                  ??_INTERRUPT_InterruptManager 0072                                        _ADACTPPS 1EC3  
                                      _BAUD1CON 011F              _EUSART1_DefaultOverrunErrorHandler 0000  
                           ??_ADC_SelectChannel 0072                            _EUSART1_ErrorHandler 0020  
                         ?_ADC_IsConversionDone 0070                         _EUSART1_SetErrorHandler 0714  
                      __size_of_PWM6_Initialize 0008                                        _T2CLKCON 0290  
                                __size_of_srand 000A                                 _AdcResultSample 002A  
                             ??_TMR0_Initialize 0074                               ??_PWM2_Initialize 0072  
       EUSART1_SetErrorHandler@interruptHandler 0072                                        _LATCbits 001A  
                                     clear_ram0 06EB                                        _PIE0bits 0716  
                                      _PIE4bits 071A                         __size_of_EXECUTExEFFECT 002F  
                     __end_of_ADC_SelectChannel 0677                        __size_of_TMR1_WriteTimer 000F  
           __size_of_INTERRUPT_InterruptManager 0015                      ??_TMR0_SetInterruptHandler 0074  
                                      _PIR0bits 070C                                        _PIR4bits 0710  
                                      _RX1DTPPS 1ECB                                   ??_TMR1_Reload 0072  
                                      _TMR0_INT 0731                                        _TMR0_ISR 060F  
                                      _TMR1_INT 072E                                        _TMR1_ISR 05DB  
                             ??_PIN_MANAGER_IOC 0072                     __size_of_PWM5_LoadDutyValue 0016  
                         __end_of_INITxEXECUTER 069C                                        _AdcState 0037  
                             ??_TMR1_Initialize 0074                               ??_PWM3_Initialize 0072  
                                    _ADCON0bits 009D                        ADC_SelectChannel@channel 0073  
                       __size_of_FVR_Initialize 0004                                        _LedBrake 05ED  
                                      _LedFlash 01A0                                __size_of_RCS_INT 0004  
                             ___lmul@multiplier 0072                                __size_of_RCSxLED 007C  
                               EXECUTExEFFECT@x 0050                                __size_of_CalcPwm 0024  
                             ??_PWM4_Initialize 0072                               ??_TMR2_Initialize 0072  
                                 ?_BATTxPROTECT 0070                                __size_of_LedSlFl 0167  
                    __end_of_PWM4_LoadDutyValue 05C5                        ?_ADC_GetConversionResult 0072  
                       ??_OSCILLATOR_Initialize 0072                     __size_of_EUSART1_Initialize 001C  
                                    CalcPwm@Led 0045                               ??_PWM5_Initialize 0072  
                      _TMR1_SetInterruptHandler 06F1                              _PWM3_LoadDutyValue 0599  
                           __end_of_TMR1_Reload 070F                           _TMR1_InterruptHandler 002C  
                     ??_EUSART1_SetErrorHandler 0074                          ??_ADC_IsConversionDone 0072  
                   _EUSART1_DefaultErrorHandler 0000                                        __ptext10 06B8  
                                      __ptext11 06C0                                        __ptext20 0703  
                                      __ptext12 06C8                                        __ptext21 0714  
                                      __ptext13 065D                                        __ptext30 0395  
                                      __ptext22 069C                                        __ptext14 03CD  
                                      __ptext31 01A0                                        __ptext23 0690  
                                      __ptext15 06FD                                        __ptext40 05AF  
                                      __ptext32 0492                                        __ptext24 06A6  
                                      __ptext16 0684                                        __ptext41 05C5  
                                      __ptext33 0039                                        __ptext25 02D7  
                                      __ptext17 0723                                        __ptext50 072E  
                                      __ptext42 04E2                                        __ptext34 04BE  
                                      __ptext26 0403                                        __ptext18 0524  
                                      __ptext51 060F                                        __ptext43 072B  
                                      __ptext35 05FE                                        __ptext27 0434  
                                      __ptext19 070F                                        __ptext52 0735  
                                      __ptext44 066A                                        __ptext36 0557  
                                      __ptext28 0463                                        __ptext53 0731  
                                      __ptext45 06DE                                        __ptext37 056D  
                                      __ptext29 05ED                                        __ptext54 071E  
                                      __ptext46 0719                                        __ptext38 0583  
                                      __ptext55 0677                                        __ptext39 0599  
                                      __ptext56 0736                                        __ptext48 05DB  
                                      __ptext57 0727                                        __ptext49 0734  
                                      __ptext58 0709                             ?_PWM3_LoadDutyValue 0076  
                                      __ptext59 0640                                      _IOCAF3_ISR 0677  
                                ??_BATTxPROTECT 0072                               ??_PWM6_Initialize 0072  
                                 __size_of_main 0095                                   __size_of_rand 0031  
                                   LedBrake@Led 0046            __end_of_TMR0_DefaultInterruptHandler 0736  
         __size_of_TMR0_DefaultInterruptHandler 0001                    _TMR0_DefaultInterruptHandler 0735  
                    __size_of_ADC_SelectChannel 000D                                     LedFlash@Led 0046  
EUSART1_SetOverrunErrorHandler@interruptHandler 0072                            ??_PWM3_LoadDutyValue 0078  
                                      int$flags 007E              __end_of_INTERRUPT_InterruptManager 0019  
                    _INTERRUPT_InterruptManager 0004                               ??_TMR1_WriteTimer 0072  
                   _EUSART1_FramingErrorHandler 0024                                      _INTCONbits 000B  
                      EXECUTExEFFECT@ReturnData 004F                                        intlevel1 0000  
                   __end_of_ADC_StartConversion 072E                         ?_PIN_MANAGER_Initialize 0070  
               __end_of_ADC_GetConversionResult 071E          __end_of_EUSART1_SetOverrunErrorHandler 0714  
       __size_of_EUSART1_SetOverrunErrorHandler 0005                  _EUSART1_SetOverrunErrorHandler 070F  
                                _EXECUTExEFFECT 0463                                 _PWM1_Initialize 06C8  
                              ??_ADC_Initialize 0072                   ?_TMR0_DefaultInterruptHandler 0070  
                   __size_of_PWM2_LoadDutyValue 0016          __end_of_IOCAF3_DefaultInterruptHandler 0737  
       __size_of_IOCAF3_DefaultInterruptHandler 0001                  _IOCAF3_DefaultInterruptHandler 0736  
                                   _TMR1_Reload 0709                                      LedSlFl@Led 0046  
EUSART1_SetFramingErrorHandler@interruptHandler 0072                     PWM3_LoadDutyValue@dutyValue 0076  
                            _eusart1RxLastError 0034                                  _FVR_Initialize 0723  
                               _TMR0_Initialize 0540                                 _PWM2_Initialize 06C0  
                                  _AdcResultAvg 0028                     PWM6_LoadDutyValue@dutyValue 0076  
                                   ?_IOCAF3_ISR 0070                  __end_of_PIN_MANAGER_Initialize 0403  
                        __end_of_EXECUTExEFFECT 0492                      __end_of_PWM1_LoadDutyValue 056D  
                               _PIN_MANAGER_IOC 071E                         _IOCAF3_InterruptHandler 0064  
                               _TMR1_Initialize 0506                                 _PWM3_Initialize 06B8  
