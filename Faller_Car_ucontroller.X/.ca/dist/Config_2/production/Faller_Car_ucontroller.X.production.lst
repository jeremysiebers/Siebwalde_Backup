

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Dec 21 23:34:01 2022

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og9 
     1                           	processor	16F15323
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	intentry,global,class=CODE,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,delta=2
    64                           	psect	text48,local,class=CODE,merge=1,delta=2
    65                           	psect	text49,local,class=CODE,merge=1,delta=2
    66                           	psect	text50,local,class=CODE,merge=1,delta=2
    67                           	psect	text51,local,class=CODE,merge=1,delta=2
    68                           	psect	text52,local,class=CODE,merge=1,delta=2
    69                           	psect	text53,local,class=CODE,merge=1,delta=2
    70                           	psect	text54,local,class=CODE,merge=1,delta=2
    71                           	psect	text55,local,class=CODE,merge=1,delta=2
    72                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    73                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    74                           	dabs	1,0x7E,2
    75  0000                     
    76                           ; Generated 19/07/2022 GMT
    77                           ; 
    78                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution. Publication is not required when
    92                           ;        this file is used in an embedded application.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC16F15323 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000E                     	;# 
   124  0012                     	;# 
   125  0014                     	;# 
   126  0018                     	;# 
   127  001A                     	;# 
   128  009B                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0119                     	;# 
   135  0119                     	;# 
   136  0119                     	;# 
   137  011A                     	;# 
   138  011A                     	;# 
   139  011A                     	;# 
   140  011B                     	;# 
   141  011B                     	;# 
   142  011B                     	;# 
   143  011B                     	;# 
   144  011B                     	;# 
   145  011C                     	;# 
   146  011C                     	;# 
   147  011C                     	;# 
   148  011D                     	;# 
   149  011D                     	;# 
   150  011D                     	;# 
   151  011E                     	;# 
   152  011E                     	;# 
   153  011E                     	;# 
   154  011F                     	;# 
   155  011F                     	;# 
   156  011F                     	;# 
   157  011F                     	;# 
   158  011F                     	;# 
   159  018C                     	;# 
   160  018D                     	;# 
   161  018E                     	;# 
   162  018F                     	;# 
   163  0190                     	;# 
   164  0191                     	;# 
   165  0192                     	;# 
   166  020C                     	;# 
   167  020C                     	;# 
   168  020D                     	;# 
   169  020E                     	;# 
   170  020F                     	;# 
   171  020F                     	;# 
   172  0210                     	;# 
   173  0210                     	;# 
   174  0211                     	;# 
   175  0211                     	;# 
   176  028C                     	;# 
   177  028C                     	;# 
   178  028D                     	;# 
   179  028D                     	;# 
   180  028E                     	;# 
   181  028F                     	;# 
   182  0290                     	;# 
   183  0291                     	;# 
   184  030C                     	;# 
   185  030C                     	;# 
   186  030D                     	;# 
   187  030E                     	;# 
   188  030F                     	;# 
   189  0310                     	;# 
   190  0310                     	;# 
   191  0311                     	;# 
   192  0312                     	;# 
   193  0313                     	;# 
   194  0314                     	;# 
   195  0314                     	;# 
   196  0315                     	;# 
   197  0316                     	;# 
   198  0318                     	;# 
   199  0318                     	;# 
   200  0319                     	;# 
   201  031A                     	;# 
   202  031C                     	;# 
   203  031C                     	;# 
   204  031D                     	;# 
   205  031E                     	;# 
   206  038C                     	;# 
   207  038C                     	;# 
   208  038D                     	;# 
   209  038E                     	;# 
   210  058C                     	;# 
   211  058C                     	;# 
   212  058D                     	;# 
   213  058E                     	;# 
   214  058F                     	;# 
   215  058F                     	;# 
   216  0590                     	;# 
   217  0591                     	;# 
   218  0592                     	;# 
   219  0593                     	;# 
   220  059C                     	;# 
   221  059C                     	;# 
   222  059D                     	;# 
   223  059D                     	;# 
   224  059E                     	;# 
   225  059F                     	;# 
   226  060C                     	;# 
   227  060D                     	;# 
   228  060E                     	;# 
   229  060F                     	;# 
   230  0610                     	;# 
   231  0611                     	;# 
   232  0612                     	;# 
   233  0613                     	;# 
   234  0614                     	;# 
   235  070C                     	;# 
   236  070D                     	;# 
   237  070E                     	;# 
   238  070F                     	;# 
   239  0710                     	;# 
   240  0711                     	;# 
   241  0712                     	;# 
   242  0713                     	;# 
   243  0716                     	;# 
   244  0717                     	;# 
   245  0718                     	;# 
   246  0719                     	;# 
   247  071A                     	;# 
   248  071B                     	;# 
   249  071C                     	;# 
   250  071D                     	;# 
   251  0796                     	;# 
   252  0797                     	;# 
   253  0798                     	;# 
   254  0799                     	;# 
   255  079A                     	;# 
   256  079B                     	;# 
   257  080C                     	;# 
   258  080D                     	;# 
   259  080E                     	;# 
   260  080F                     	;# 
   261  0810                     	;# 
   262  0811                     	;# 
   263  0812                     	;# 
   264  0813                     	;# 
   265  0814                     	;# 
   266  081A                     	;# 
   267  081A                     	;# 
   268  081B                     	;# 
   269  081C                     	;# 
   270  081C                     	;# 
   271  081D                     	;# 
   272  081E                     	;# 
   273  081F                     	;# 
   274  088C                     	;# 
   275  088D                     	;# 
   276  088E                     	;# 
   277  088F                     	;# 
   278  0890                     	;# 
   279  0891                     	;# 
   280  0892                     	;# 
   281  0893                     	;# 
   282  0895                     	;# 
   283  0896                     	;# 
   284  090C                     	;# 
   285  090E                     	;# 
   286  090F                     	;# 
   287  091F                     	;# 
   288  098F                     	;# 
   289  098F                     	;# 
   290  0990                     	;# 
   291  0991                     	;# 
   292  0992                     	;# 
   293  0993                     	;# 
   294  0994                     	;# 
   295  0995                     	;# 
   296  0996                     	;# 
   297  0997                     	;# 
   298  1E0F                     	;# 
   299  1E10                     	;# 
   300  1E11                     	;# 
   301  1E12                     	;# 
   302  1E13                     	;# 
   303  1E14                     	;# 
   304  1E15                     	;# 
   305  1E16                     	;# 
   306  1E17                     	;# 
   307  1E18                     	;# 
   308  1E19                     	;# 
   309  1E1A                     	;# 
   310  1E1B                     	;# 
   311  1E1C                     	;# 
   312  1E1D                     	;# 
   313  1E1E                     	;# 
   314  1E1F                     	;# 
   315  1E20                     	;# 
   316  1E21                     	;# 
   317  1E22                     	;# 
   318  1E23                     	;# 
   319  1E24                     	;# 
   320  1E25                     	;# 
   321  1E26                     	;# 
   322  1E27                     	;# 
   323  1E28                     	;# 
   324  1E29                     	;# 
   325  1E2A                     	;# 
   326  1E2B                     	;# 
   327  1E2C                     	;# 
   328  1E2D                     	;# 
   329  1E2E                     	;# 
   330  1E2F                     	;# 
   331  1E30                     	;# 
   332  1E31                     	;# 
   333  1E32                     	;# 
   334  1E33                     	;# 
   335  1E34                     	;# 
   336  1E35                     	;# 
   337  1E36                     	;# 
   338  1E37                     	;# 
   339  1E8F                     	;# 
   340  1E90                     	;# 
   341  1E91                     	;# 
   342  1E92                     	;# 
   343  1E93                     	;# 
   344  1E9C                     	;# 
   345  1EA1                     	;# 
   346  1EA2                     	;# 
   347  1EB1                     	;# 
   348  1EBB                     	;# 
   349  1EBC                     	;# 
   350  1EBD                     	;# 
   351  1EBE                     	;# 
   352  1EC3                     	;# 
   353  1EC5                     	;# 
   354  1EC6                     	;# 
   355  1EC7                     	;# 
   356  1ECB                     	;# 
   357  1ECC                     	;# 
   358  1F10                     	;# 
   359  1F11                     	;# 
   360  1F12                     	;# 
   361  1F13                     	;# 
   362  1F14                     	;# 
   363  1F15                     	;# 
   364  1F20                     	;# 
   365  1F21                     	;# 
   366  1F22                     	;# 
   367  1F23                     	;# 
   368  1F24                     	;# 
   369  1F25                     	;# 
   370  1F38                     	;# 
   371  1F39                     	;# 
   372  1F3A                     	;# 
   373  1F3B                     	;# 
   374  1F3C                     	;# 
   375  1F3D                     	;# 
   376  1F3E                     	;# 
   377  1F3F                     	;# 
   378  1F4E                     	;# 
   379  1F4F                     	;# 
   380  1F50                     	;# 
   381  1F51                     	;# 
   382  1F52                     	;# 
   383  1F53                     	;# 
   384  1F54                     	;# 
   385  1F55                     	;# 
   386  1FE4                     	;# 
   387  1FE5                     	;# 
   388  1FE6                     	;# 
   389  1FE7                     	;# 
   390  1FE8                     	;# 
   391  1FE8                     	;# 
   392  1FE9                     	;# 
   393  1FEA                     	;# 
   394  1FEA                     	;# 
   395  1FEB                     	;# 
   396  1FED                     	;# 
   397  1FEE                     	;# 
   398  1FEF                     	;# 
   399  0000                     	;# 
   400  0001                     	;# 
   401  0002                     	;# 
   402  0003                     	;# 
   403  0004                     	;# 
   404  0005                     	;# 
   405  0006                     	;# 
   406  0007                     	;# 
   407  0008                     	;# 
   408  0009                     	;# 
   409  000A                     	;# 
   410  000B                     	;# 
   411  000C                     	;# 
   412  000E                     	;# 
   413  0012                     	;# 
   414  0014                     	;# 
   415  0018                     	;# 
   416  001A                     	;# 
   417  009B                     	;# 
   418  009B                     	;# 
   419  009C                     	;# 
   420  009D                     	;# 
   421  009E                     	;# 
   422  009F                     	;# 
   423  0119                     	;# 
   424  0119                     	;# 
   425  0119                     	;# 
   426  011A                     	;# 
   427  011A                     	;# 
   428  011A                     	;# 
   429  011B                     	;# 
   430  011B                     	;# 
   431  011B                     	;# 
   432  011B                     	;# 
   433  011B                     	;# 
   434  011C                     	;# 
   435  011C                     	;# 
   436  011C                     	;# 
   437  011D                     	;# 
   438  011D                     	;# 
   439  011D                     	;# 
   440  011E                     	;# 
   441  011E                     	;# 
   442  011E                     	;# 
   443  011F                     	;# 
   444  011F                     	;# 
   445  011F                     	;# 
   446  011F                     	;# 
   447  011F                     	;# 
   448  018C                     	;# 
   449  018D                     	;# 
   450  018E                     	;# 
   451  018F                     	;# 
   452  0190                     	;# 
   453  0191                     	;# 
   454  0192                     	;# 
   455  020C                     	;# 
   456  020C                     	;# 
   457  020D                     	;# 
   458  020E                     	;# 
   459  020F                     	;# 
   460  020F                     	;# 
   461  0210                     	;# 
   462  0210                     	;# 
   463  0211                     	;# 
   464  0211                     	;# 
   465  028C                     	;# 
   466  028C                     	;# 
   467  028D                     	;# 
   468  028D                     	;# 
   469  028E                     	;# 
   470  028F                     	;# 
   471  0290                     	;# 
   472  0291                     	;# 
   473  030C                     	;# 
   474  030C                     	;# 
   475  030D                     	;# 
   476  030E                     	;# 
   477  030F                     	;# 
   478  0310                     	;# 
   479  0310                     	;# 
   480  0311                     	;# 
   481  0312                     	;# 
   482  0313                     	;# 
   483  0314                     	;# 
   484  0314                     	;# 
   485  0315                     	;# 
   486  0316                     	;# 
   487  0318                     	;# 
   488  0318                     	;# 
   489  0319                     	;# 
   490  031A                     	;# 
   491  031C                     	;# 
   492  031C                     	;# 
   493  031D                     	;# 
   494  031E                     	;# 
   495  038C                     	;# 
   496  038C                     	;# 
   497  038D                     	;# 
   498  038E                     	;# 
   499  058C                     	;# 
   500  058C                     	;# 
   501  058D                     	;# 
   502  058E                     	;# 
   503  058F                     	;# 
   504  058F                     	;# 
   505  0590                     	;# 
   506  0591                     	;# 
   507  0592                     	;# 
   508  0593                     	;# 
   509  059C                     	;# 
   510  059C                     	;# 
   511  059D                     	;# 
   512  059D                     	;# 
   513  059E                     	;# 
   514  059F                     	;# 
   515  060C                     	;# 
   516  060D                     	;# 
   517  060E                     	;# 
   518  060F                     	;# 
   519  0610                     	;# 
   520  0611                     	;# 
   521  0612                     	;# 
   522  0613                     	;# 
   523  0614                     	;# 
   524  070C                     	;# 
   525  070D                     	;# 
   526  070E                     	;# 
   527  070F                     	;# 
   528  0710                     	;# 
   529  0711                     	;# 
   530  0712                     	;# 
   531  0713                     	;# 
   532  0716                     	;# 
   533  0717                     	;# 
   534  0718                     	;# 
   535  0719                     	;# 
   536  071A                     	;# 
   537  071B                     	;# 
   538  071C                     	;# 
   539  071D                     	;# 
   540  0796                     	;# 
   541  0797                     	;# 
   542  0798                     	;# 
   543  0799                     	;# 
   544  079A                     	;# 
   545  079B                     	;# 
   546  080C                     	;# 
   547  080D                     	;# 
   548  080E                     	;# 
   549  080F                     	;# 
   550  0810                     	;# 
   551  0811                     	;# 
   552  0812                     	;# 
   553  0813                     	;# 
   554  0814                     	;# 
   555  081A                     	;# 
   556  081A                     	;# 
   557  081B                     	;# 
   558  081C                     	;# 
   559  081C                     	;# 
   560  081D                     	;# 
   561  081E                     	;# 
   562  081F                     	;# 
   563  088C                     	;# 
   564  088D                     	;# 
   565  088E                     	;# 
   566  088F                     	;# 
   567  0890                     	;# 
   568  0891                     	;# 
   569  0892                     	;# 
   570  0893                     	;# 
   571  0895                     	;# 
   572  0896                     	;# 
   573  090C                     	;# 
   574  090E                     	;# 
   575  090F                     	;# 
   576  091F                     	;# 
   577  098F                     	;# 
   578  098F                     	;# 
   579  0990                     	;# 
   580  0991                     	;# 
   581  0992                     	;# 
   582  0993                     	;# 
   583  0994                     	;# 
   584  0995                     	;# 
   585  0996                     	;# 
   586  0997                     	;# 
   587  1E0F                     	;# 
   588  1E10                     	;# 
   589  1E11                     	;# 
   590  1E12                     	;# 
   591  1E13                     	;# 
   592  1E14                     	;# 
   593  1E15                     	;# 
   594  1E16                     	;# 
   595  1E17                     	;# 
   596  1E18                     	;# 
   597  1E19                     	;# 
   598  1E1A                     	;# 
   599  1E1B                     	;# 
   600  1E1C                     	;# 
   601  1E1D                     	;# 
   602  1E1E                     	;# 
   603  1E1F                     	;# 
   604  1E20                     	;# 
   605  1E21                     	;# 
   606  1E22                     	;# 
   607  1E23                     	;# 
   608  1E24                     	;# 
   609  1E25                     	;# 
   610  1E26                     	;# 
   611  1E27                     	;# 
   612  1E28                     	;# 
   613  1E29                     	;# 
   614  1E2A                     	;# 
   615  1E2B                     	;# 
   616  1E2C                     	;# 
   617  1E2D                     	;# 
   618  1E2E                     	;# 
   619  1E2F                     	;# 
   620  1E30                     	;# 
   621  1E31                     	;# 
   622  1E32                     	;# 
   623  1E33                     	;# 
   624  1E34                     	;# 
   625  1E35                     	;# 
   626  1E36                     	;# 
   627  1E37                     	;# 
   628  1E8F                     	;# 
   629  1E90                     	;# 
   630  1E91                     	;# 
   631  1E92                     	;# 
   632  1E93                     	;# 
   633  1E9C                     	;# 
   634  1EA1                     	;# 
   635  1EA2                     	;# 
   636  1EB1                     	;# 
   637  1EBB                     	;# 
   638  1EBC                     	;# 
   639  1EBD                     	;# 
   640  1EBE                     	;# 
   641  1EC3                     	;# 
   642  1EC5                     	;# 
   643  1EC6                     	;# 
   644  1EC7                     	;# 
   645  1ECB                     	;# 
   646  1ECC                     	;# 
   647  1F10                     	;# 
   648  1F11                     	;# 
   649  1F12                     	;# 
   650  1F13                     	;# 
   651  1F14                     	;# 
   652  1F15                     	;# 
   653  1F20                     	;# 
   654  1F21                     	;# 
   655  1F22                     	;# 
   656  1F23                     	;# 
   657  1F24                     	;# 
   658  1F25                     	;# 
   659  1F38                     	;# 
   660  1F39                     	;# 
   661  1F3A                     	;# 
   662  1F3B                     	;# 
   663  1F3C                     	;# 
   664  1F3D                     	;# 
   665  1F3E                     	;# 
   666  1F3F                     	;# 
   667  1F4E                     	;# 
   668  1F4F                     	;# 
   669  1F50                     	;# 
   670  1F51                     	;# 
   671  1F52                     	;# 
   672  1F53                     	;# 
   673  1F54                     	;# 
   674  1F55                     	;# 
   675  1FE4                     	;# 
   676  1FE5                     	;# 
   677  1FE6                     	;# 
   678  1FE7                     	;# 
   679  1FE8                     	;# 
   680  1FE8                     	;# 
   681  1FE9                     	;# 
   682  1FEA                     	;# 
   683  1FEA                     	;# 
   684  1FEB                     	;# 
   685  1FED                     	;# 
   686  1FEE                     	;# 
   687  1FEF                     	;# 
   688  0000                     	;# 
   689  0001                     	;# 
   690  0002                     	;# 
   691  0003                     	;# 
   692  0004                     	;# 
   693  0005                     	;# 
   694  0006                     	;# 
   695  0007                     	;# 
   696  0008                     	;# 
   697  0009                     	;# 
   698  000A                     	;# 
   699  000B                     	;# 
   700  000C                     	;# 
   701  000E                     	;# 
   702  0012                     	;# 
   703  0014                     	;# 
   704  0018                     	;# 
   705  001A                     	;# 
   706  009B                     	;# 
   707  009B                     	;# 
   708  009C                     	;# 
   709  009D                     	;# 
   710  009E                     	;# 
   711  009F                     	;# 
   712  0119                     	;# 
   713  0119                     	;# 
   714  0119                     	;# 
   715  011A                     	;# 
   716  011A                     	;# 
   717  011A                     	;# 
   718  011B                     	;# 
   719  011B                     	;# 
   720  011B                     	;# 
   721  011B                     	;# 
   722  011B                     	;# 
   723  011C                     	;# 
   724  011C                     	;# 
   725  011C                     	;# 
   726  011D                     	;# 
   727  011D                     	;# 
   728  011D                     	;# 
   729  011E                     	;# 
   730  011E                     	;# 
   731  011E                     	;# 
   732  011F                     	;# 
   733  011F                     	;# 
   734  011F                     	;# 
   735  011F                     	;# 
   736  011F                     	;# 
   737  018C                     	;# 
   738  018D                     	;# 
   739  018E                     	;# 
   740  018F                     	;# 
   741  0190                     	;# 
   742  0191                     	;# 
   743  0192                     	;# 
   744  020C                     	;# 
   745  020C                     	;# 
   746  020D                     	;# 
   747  020E                     	;# 
   748  020F                     	;# 
   749  020F                     	;# 
   750  0210                     	;# 
   751  0210                     	;# 
   752  0211                     	;# 
   753  0211                     	;# 
   754  028C                     	;# 
   755  028C                     	;# 
   756  028D                     	;# 
   757  028D                     	;# 
   758  028E                     	;# 
   759  028F                     	;# 
   760  0290                     	;# 
   761  0291                     	;# 
   762  030C                     	;# 
   763  030C                     	;# 
   764  030D                     	;# 
   765  030E                     	;# 
   766  030F                     	;# 
   767  0310                     	;# 
   768  0310                     	;# 
   769  0311                     	;# 
   770  0312                     	;# 
   771  0313                     	;# 
   772  0314                     	;# 
   773  0314                     	;# 
   774  0315                     	;# 
   775  0316                     	;# 
   776  0318                     	;# 
   777  0318                     	;# 
   778  0319                     	;# 
   779  031A                     	;# 
   780  031C                     	;# 
   781  031C                     	;# 
   782  031D                     	;# 
   783  031E                     	;# 
   784  038C                     	;# 
   785  038C                     	;# 
   786  038D                     	;# 
   787  038E                     	;# 
   788  058C                     	;# 
   789  058C                     	;# 
   790  058D                     	;# 
   791  058E                     	;# 
   792  058F                     	;# 
   793  058F                     	;# 
   794  0590                     	;# 
   795  0591                     	;# 
   796  0592                     	;# 
   797  0593                     	;# 
   798  059C                     	;# 
   799  059C                     	;# 
   800  059D                     	;# 
   801  059D                     	;# 
   802  059E                     	;# 
   803  059F                     	;# 
   804  060C                     	;# 
   805  060D                     	;# 
   806  060E                     	;# 
   807  060F                     	;# 
   808  0610                     	;# 
   809  0611                     	;# 
   810  0612                     	;# 
   811  0613                     	;# 
   812  0614                     	;# 
   813  070C                     	;# 
   814  070D                     	;# 
   815  070E                     	;# 
   816  070F                     	;# 
   817  0710                     	;# 
   818  0711                     	;# 
   819  0712                     	;# 
   820  0713                     	;# 
   821  0716                     	;# 
   822  0717                     	;# 
   823  0718                     	;# 
   824  0719                     	;# 
   825  071A                     	;# 
   826  071B                     	;# 
   827  071C                     	;# 
   828  071D                     	;# 
   829  0796                     	;# 
   830  0797                     	;# 
   831  0798                     	;# 
   832  0799                     	;# 
   833  079A                     	;# 
   834  079B                     	;# 
   835  080C                     	;# 
   836  080D                     	;# 
   837  080E                     	;# 
   838  080F                     	;# 
   839  0810                     	;# 
   840  0811                     	;# 
   841  0812                     	;# 
   842  0813                     	;# 
   843  0814                     	;# 
   844  081A                     	;# 
   845  081A                     	;# 
   846  081B                     	;# 
   847  081C                     	;# 
   848  081C                     	;# 
   849  081D                     	;# 
   850  081E                     	;# 
   851  081F                     	;# 
   852  088C                     	;# 
   853  088D                     	;# 
   854  088E                     	;# 
   855  088F                     	;# 
   856  0890                     	;# 
   857  0891                     	;# 
   858  0892                     	;# 
   859  0893                     	;# 
   860  0895                     	;# 
   861  0896                     	;# 
   862  090C                     	;# 
   863  090E                     	;# 
   864  090F                     	;# 
   865  091F                     	;# 
   866  098F                     	;# 
   867  098F                     	;# 
   868  0990                     	;# 
   869  0991                     	;# 
   870  0992                     	;# 
   871  0993                     	;# 
   872  0994                     	;# 
   873  0995                     	;# 
   874  0996                     	;# 
   875  0997                     	;# 
   876  1E0F                     	;# 
   877  1E10                     	;# 
   878  1E11                     	;# 
   879  1E12                     	;# 
   880  1E13                     	;# 
   881  1E14                     	;# 
   882  1E15                     	;# 
   883  1E16                     	;# 
   884  1E17                     	;# 
   885  1E18                     	;# 
   886  1E19                     	;# 
   887  1E1A                     	;# 
   888  1E1B                     	;# 
   889  1E1C                     	;# 
   890  1E1D                     	;# 
   891  1E1E                     	;# 
   892  1E1F                     	;# 
   893  1E20                     	;# 
   894  1E21                     	;# 
   895  1E22                     	;# 
   896  1E23                     	;# 
   897  1E24                     	;# 
   898  1E25                     	;# 
   899  1E26                     	;# 
   900  1E27                     	;# 
   901  1E28                     	;# 
   902  1E29                     	;# 
   903  1E2A                     	;# 
   904  1E2B                     	;# 
   905  1E2C                     	;# 
   906  1E2D                     	;# 
   907  1E2E                     	;# 
   908  1E2F                     	;# 
   909  1E30                     	;# 
   910  1E31                     	;# 
   911  1E32                     	;# 
   912  1E33                     	;# 
   913  1E34                     	;# 
   914  1E35                     	;# 
   915  1E36                     	;# 
   916  1E37                     	;# 
   917  1E8F                     	;# 
   918  1E90                     	;# 
   919  1E91                     	;# 
   920  1E92                     	;# 
   921  1E93                     	;# 
   922  1E9C                     	;# 
   923  1EA1                     	;# 
   924  1EA2                     	;# 
   925  1EB1                     	;# 
   926  1EBB                     	;# 
   927  1EBC                     	;# 
   928  1EBD                     	;# 
   929  1EBE                     	;# 
   930  1EC3                     	;# 
   931  1EC5                     	;# 
   932  1EC6                     	;# 
   933  1EC7                     	;# 
   934  1ECB                     	;# 
   935  1ECC                     	;# 
   936  1F10                     	;# 
   937  1F11                     	;# 
   938  1F12                     	;# 
   939  1F13                     	;# 
   940  1F14                     	;# 
   941  1F15                     	;# 
   942  1F20                     	;# 
   943  1F21                     	;# 
   944  1F22                     	;# 
   945  1F23                     	;# 
   946  1F24                     	;# 
   947  1F25                     	;# 
   948  1F38                     	;# 
   949  1F39                     	;# 
   950  1F3A                     	;# 
   951  1F3B                     	;# 
   952  1F3C                     	;# 
   953  1F3D                     	;# 
   954  1F3E                     	;# 
   955  1F3F                     	;# 
   956  1F4E                     	;# 
   957  1F4F                     	;# 
   958  1F50                     	;# 
   959  1F51                     	;# 
   960  1F52                     	;# 
   961  1F53                     	;# 
   962  1F54                     	;# 
   963  1F55                     	;# 
   964  1FE4                     	;# 
   965  1FE5                     	;# 
   966  1FE6                     	;# 
   967  1FE7                     	;# 
   968  1FE8                     	;# 
   969  1FE8                     	;# 
   970  1FE9                     	;# 
   971  1FEA                     	;# 
   972  1FEA                     	;# 
   973  1FEB                     	;# 
   974  1FED                     	;# 
   975  1FEE                     	;# 
   976  1FEF                     	;# 
   977  0000                     	;# 
   978  0001                     	;# 
   979  0002                     	;# 
   980  0003                     	;# 
   981  0004                     	;# 
   982  0005                     	;# 
   983  0006                     	;# 
   984  0007                     	;# 
   985  0008                     	;# 
   986  0009                     	;# 
   987  000A                     	;# 
   988  000B                     	;# 
   989  000C                     	;# 
   990  000E                     	;# 
   991  0012                     	;# 
   992  0014                     	;# 
   993  0018                     	;# 
   994  001A                     	;# 
   995  009B                     	;# 
   996  009B                     	;# 
   997  009C                     	;# 
   998  009D                     	;# 
   999  009E                     	;# 
  1000  009F                     	;# 
  1001  0119                     	;# 
  1002  0119                     	;# 
  1003  0119                     	;# 
  1004  011A                     	;# 
  1005  011A                     	;# 
  1006  011A                     	;# 
  1007  011B                     	;# 
  1008  011B                     	;# 
  1009  011B                     	;# 
  1010  011B                     	;# 
  1011  011B                     	;# 
  1012  011C                     	;# 
  1013  011C                     	;# 
  1014  011C                     	;# 
  1015  011D                     	;# 
  1016  011D                     	;# 
  1017  011D                     	;# 
  1018  011E                     	;# 
  1019  011E                     	;# 
  1020  011E                     	;# 
  1021  011F                     	;# 
  1022  011F                     	;# 
  1023  011F                     	;# 
  1024  011F                     	;# 
  1025  011F                     	;# 
  1026  018C                     	;# 
  1027  018D                     	;# 
  1028  018E                     	;# 
  1029  018F                     	;# 
  1030  0190                     	;# 
  1031  0191                     	;# 
  1032  0192                     	;# 
  1033  020C                     	;# 
  1034  020C                     	;# 
  1035  020D                     	;# 
  1036  020E                     	;# 
  1037  020F                     	;# 
  1038  020F                     	;# 
  1039  0210                     	;# 
  1040  0210                     	;# 
  1041  0211                     	;# 
  1042  0211                     	;# 
  1043  028C                     	;# 
  1044  028C                     	;# 
  1045  028D                     	;# 
  1046  028D                     	;# 
  1047  028E                     	;# 
  1048  028F                     	;# 
  1049  0290                     	;# 
  1050  0291                     	;# 
  1051  030C                     	;# 
  1052  030C                     	;# 
  1053  030D                     	;# 
  1054  030E                     	;# 
  1055  030F                     	;# 
  1056  0310                     	;# 
  1057  0310                     	;# 
  1058  0311                     	;# 
  1059  0312                     	;# 
  1060  0313                     	;# 
  1061  0314                     	;# 
  1062  0314                     	;# 
  1063  0315                     	;# 
  1064  0316                     	;# 
  1065  0318                     	;# 
  1066  0318                     	;# 
  1067  0319                     	;# 
  1068  031A                     	;# 
  1069  031C                     	;# 
  1070  031C                     	;# 
  1071  031D                     	;# 
  1072  031E                     	;# 
  1073  038C                     	;# 
  1074  038C                     	;# 
  1075  038D                     	;# 
  1076  038E                     	;# 
  1077  058C                     	;# 
  1078  058C                     	;# 
  1079  058D                     	;# 
  1080  058E                     	;# 
  1081  058F                     	;# 
  1082  058F                     	;# 
  1083  0590                     	;# 
  1084  0591                     	;# 
  1085  0592                     	;# 
  1086  0593                     	;# 
  1087  059C                     	;# 
  1088  059C                     	;# 
  1089  059D                     	;# 
  1090  059D                     	;# 
  1091  059E                     	;# 
  1092  059F                     	;# 
  1093  060C                     	;# 
  1094  060D                     	;# 
  1095  060E                     	;# 
  1096  060F                     	;# 
  1097  0610                     	;# 
  1098  0611                     	;# 
  1099  0612                     	;# 
  1100  0613                     	;# 
  1101  0614                     	;# 
  1102  070C                     	;# 
  1103  070D                     	;# 
  1104  070E                     	;# 
  1105  070F                     	;# 
  1106  0710                     	;# 
  1107  0711                     	;# 
  1108  0712                     	;# 
  1109  0713                     	;# 
  1110  0716                     	;# 
  1111  0717                     	;# 
  1112  0718                     	;# 
  1113  0719                     	;# 
  1114  071A                     	;# 
  1115  071B                     	;# 
  1116  071C                     	;# 
  1117  071D                     	;# 
  1118  0796                     	;# 
  1119  0797                     	;# 
  1120  0798                     	;# 
  1121  0799                     	;# 
  1122  079A                     	;# 
  1123  079B                     	;# 
  1124  080C                     	;# 
  1125  080D                     	;# 
  1126  080E                     	;# 
  1127  080F                     	;# 
  1128  0810                     	;# 
  1129  0811                     	;# 
  1130  0812                     	;# 
  1131  0813                     	;# 
  1132  0814                     	;# 
  1133  081A                     	;# 
  1134  081A                     	;# 
  1135  081B                     	;# 
  1136  081C                     	;# 
  1137  081C                     	;# 
  1138  081D                     	;# 
  1139  081E                     	;# 
  1140  081F                     	;# 
  1141  088C                     	;# 
  1142  088D                     	;# 
  1143  088E                     	;# 
  1144  088F                     	;# 
  1145  0890                     	;# 
  1146  0891                     	;# 
  1147  0892                     	;# 
  1148  0893                     	;# 
  1149  0895                     	;# 
  1150  0896                     	;# 
  1151  090C                     	;# 
  1152  090E                     	;# 
  1153  090F                     	;# 
  1154  091F                     	;# 
  1155  098F                     	;# 
  1156  098F                     	;# 
  1157  0990                     	;# 
  1158  0991                     	;# 
  1159  0992                     	;# 
  1160  0993                     	;# 
  1161  0994                     	;# 
  1162  0995                     	;# 
  1163  0996                     	;# 
  1164  0997                     	;# 
  1165  1E0F                     	;# 
  1166  1E10                     	;# 
  1167  1E11                     	;# 
  1168  1E12                     	;# 
  1169  1E13                     	;# 
  1170  1E14                     	;# 
  1171  1E15                     	;# 
  1172  1E16                     	;# 
  1173  1E17                     	;# 
  1174  1E18                     	;# 
  1175  1E19                     	;# 
  1176  1E1A                     	;# 
  1177  1E1B                     	;# 
  1178  1E1C                     	;# 
  1179  1E1D                     	;# 
  1180  1E1E                     	;# 
  1181  1E1F                     	;# 
  1182  1E20                     	;# 
  1183  1E21                     	;# 
  1184  1E22                     	;# 
  1185  1E23                     	;# 
  1186  1E24                     	;# 
  1187  1E25                     	;# 
  1188  1E26                     	;# 
  1189  1E27                     	;# 
  1190  1E28                     	;# 
  1191  1E29                     	;# 
  1192  1E2A                     	;# 
  1193  1E2B                     	;# 
  1194  1E2C                     	;# 
  1195  1E2D                     	;# 
  1196  1E2E                     	;# 
  1197  1E2F                     	;# 
  1198  1E30                     	;# 
  1199  1E31                     	;# 
  1200  1E32                     	;# 
  1201  1E33                     	;# 
  1202  1E34                     	;# 
  1203  1E35                     	;# 
  1204  1E36                     	;# 
  1205  1E37                     	;# 
  1206  1E8F                     	;# 
  1207  1E90                     	;# 
  1208  1E91                     	;# 
  1209  1E92                     	;# 
  1210  1E93                     	;# 
  1211  1E9C                     	;# 
  1212  1EA1                     	;# 
  1213  1EA2                     	;# 
  1214  1EB1                     	;# 
  1215  1EBB                     	;# 
  1216  1EBC                     	;# 
  1217  1EBD                     	;# 
  1218  1EBE                     	;# 
  1219  1EC3                     	;# 
  1220  1EC5                     	;# 
  1221  1EC6                     	;# 
  1222  1EC7                     	;# 
  1223  1ECB                     	;# 
  1224  1ECC                     	;# 
  1225  1F10                     	;# 
  1226  1F11                     	;# 
  1227  1F12                     	;# 
  1228  1F13                     	;# 
  1229  1F14                     	;# 
  1230  1F15                     	;# 
  1231  1F20                     	;# 
  1232  1F21                     	;# 
  1233  1F22                     	;# 
  1234  1F23                     	;# 
  1235  1F24                     	;# 
  1236  1F25                     	;# 
  1237  1F38                     	;# 
  1238  1F39                     	;# 
  1239  1F3A                     	;# 
  1240  1F3B                     	;# 
  1241  1F3C                     	;# 
  1242  1F3D                     	;# 
  1243  1F3E                     	;# 
  1244  1F3F                     	;# 
  1245  1F4E                     	;# 
  1246  1F4F                     	;# 
  1247  1F50                     	;# 
  1248  1F51                     	;# 
  1249  1F52                     	;# 
  1250  1F53                     	;# 
  1251  1F54                     	;# 
  1252  1F55                     	;# 
  1253  1FE4                     	;# 
  1254  1FE5                     	;# 
  1255  1FE6                     	;# 
  1256  1FE7                     	;# 
  1257  1FE8                     	;# 
  1258  1FE8                     	;# 
  1259  1FE9                     	;# 
  1260  1FEA                     	;# 
  1261  1FEA                     	;# 
  1262  1FEB                     	;# 
  1263  1FED                     	;# 
  1264  1FEE                     	;# 
  1265  1FEF                     	;# 
  1266  0000                     	;# 
  1267  0001                     	;# 
  1268  0002                     	;# 
  1269  0003                     	;# 
  1270  0004                     	;# 
  1271  0005                     	;# 
  1272  0006                     	;# 
  1273  0007                     	;# 
  1274  0008                     	;# 
  1275  0009                     	;# 
  1276  000A                     	;# 
  1277  000B                     	;# 
  1278  000C                     	;# 
  1279  000E                     	;# 
  1280  0012                     	;# 
  1281  0014                     	;# 
  1282  0018                     	;# 
  1283  001A                     	;# 
  1284  009B                     	;# 
  1285  009B                     	;# 
  1286  009C                     	;# 
  1287  009D                     	;# 
  1288  009E                     	;# 
  1289  009F                     	;# 
  1290  0119                     	;# 
  1291  0119                     	;# 
  1292  0119                     	;# 
  1293  011A                     	;# 
  1294  011A                     	;# 
  1295  011A                     	;# 
  1296  011B                     	;# 
  1297  011B                     	;# 
  1298  011B                     	;# 
  1299  011B                     	;# 
  1300  011B                     	;# 
  1301  011C                     	;# 
  1302  011C                     	;# 
  1303  011C                     	;# 
  1304  011D                     	;# 
  1305  011D                     	;# 
  1306  011D                     	;# 
  1307  011E                     	;# 
  1308  011E                     	;# 
  1309  011E                     	;# 
  1310  011F                     	;# 
  1311  011F                     	;# 
  1312  011F                     	;# 
  1313  011F                     	;# 
  1314  011F                     	;# 
  1315  018C                     	;# 
  1316  018D                     	;# 
  1317  018E                     	;# 
  1318  018F                     	;# 
  1319  0190                     	;# 
  1320  0191                     	;# 
  1321  0192                     	;# 
  1322  020C                     	;# 
  1323  020C                     	;# 
  1324  020D                     	;# 
  1325  020E                     	;# 
  1326  020F                     	;# 
  1327  020F                     	;# 
  1328  0210                     	;# 
  1329  0210                     	;# 
  1330  0211                     	;# 
  1331  0211                     	;# 
  1332  028C                     	;# 
  1333  028C                     	;# 
  1334  028D                     	;# 
  1335  028D                     	;# 
  1336  028E                     	;# 
  1337  028F                     	;# 
  1338  0290                     	;# 
  1339  0291                     	;# 
  1340  030C                     	;# 
  1341  030C                     	;# 
  1342  030D                     	;# 
  1343  030E                     	;# 
  1344  030F                     	;# 
  1345  0310                     	;# 
  1346  0310                     	;# 
  1347  0311                     	;# 
  1348  0312                     	;# 
  1349  0313                     	;# 
  1350  0314                     	;# 
  1351  0314                     	;# 
  1352  0315                     	;# 
  1353  0316                     	;# 
  1354  0318                     	;# 
  1355  0318                     	;# 
  1356  0319                     	;# 
  1357  031A                     	;# 
  1358  031C                     	;# 
  1359  031C                     	;# 
  1360  031D                     	;# 
  1361  031E                     	;# 
  1362  038C                     	;# 
  1363  038C                     	;# 
  1364  038D                     	;# 
  1365  038E                     	;# 
  1366  058C                     	;# 
  1367  058C                     	;# 
  1368  058D                     	;# 
  1369  058E                     	;# 
  1370  058F                     	;# 
  1371  058F                     	;# 
  1372  0590                     	;# 
  1373  0591                     	;# 
  1374  0592                     	;# 
  1375  0593                     	;# 
  1376  059C                     	;# 
  1377  059C                     	;# 
  1378  059D                     	;# 
  1379  059D                     	;# 
  1380  059E                     	;# 
  1381  059F                     	;# 
  1382  060C                     	;# 
  1383  060D                     	;# 
  1384  060E                     	;# 
  1385  060F                     	;# 
  1386  0610                     	;# 
  1387  0611                     	;# 
  1388  0612                     	;# 
  1389  0613                     	;# 
  1390  0614                     	;# 
  1391  070C                     	;# 
  1392  070D                     	;# 
  1393  070E                     	;# 
  1394  070F                     	;# 
  1395  0710                     	;# 
  1396  0711                     	;# 
  1397  0712                     	;# 
  1398  0713                     	;# 
  1399  0716                     	;# 
  1400  0717                     	;# 
  1401  0718                     	;# 
  1402  0719                     	;# 
  1403  071A                     	;# 
  1404  071B                     	;# 
  1405  071C                     	;# 
  1406  071D                     	;# 
  1407  0796                     	;# 
  1408  0797                     	;# 
  1409  0798                     	;# 
  1410  0799                     	;# 
  1411  079A                     	;# 
  1412  079B                     	;# 
  1413  080C                     	;# 
  1414  080D                     	;# 
  1415  080E                     	;# 
  1416  080F                     	;# 
  1417  0810                     	;# 
  1418  0811                     	;# 
  1419  0812                     	;# 
  1420  0813                     	;# 
  1421  0814                     	;# 
  1422  081A                     	;# 
  1423  081A                     	;# 
  1424  081B                     	;# 
  1425  081C                     	;# 
  1426  081C                     	;# 
  1427  081D                     	;# 
  1428  081E                     	;# 
  1429  081F                     	;# 
  1430  088C                     	;# 
  1431  088D                     	;# 
  1432  088E                     	;# 
  1433  088F                     	;# 
  1434  0890                     	;# 
  1435  0891                     	;# 
  1436  0892                     	;# 
  1437  0893                     	;# 
  1438  0895                     	;# 
  1439  0896                     	;# 
  1440  090C                     	;# 
  1441  090E                     	;# 
  1442  090F                     	;# 
  1443  091F                     	;# 
  1444  098F                     	;# 
  1445  098F                     	;# 
  1446  0990                     	;# 
  1447  0991                     	;# 
  1448  0992                     	;# 
  1449  0993                     	;# 
  1450  0994                     	;# 
  1451  0995                     	;# 
  1452  0996                     	;# 
  1453  0997                     	;# 
  1454  1E0F                     	;# 
  1455  1E10                     	;# 
  1456  1E11                     	;# 
  1457  1E12                     	;# 
  1458  1E13                     	;# 
  1459  1E14                     	;# 
  1460  1E15                     	;# 
  1461  1E16                     	;# 
  1462  1E17                     	;# 
  1463  1E18                     	;# 
  1464  1E19                     	;# 
  1465  1E1A                     	;# 
  1466  1E1B                     	;# 
  1467  1E1C                     	;# 
  1468  1E1D                     	;# 
  1469  1E1E                     	;# 
  1470  1E1F                     	;# 
  1471  1E20                     	;# 
  1472  1E21                     	;# 
  1473  1E22                     	;# 
  1474  1E23                     	;# 
  1475  1E24                     	;# 
  1476  1E25                     	;# 
  1477  1E26                     	;# 
  1478  1E27                     	;# 
  1479  1E28                     	;# 
  1480  1E29                     	;# 
  1481  1E2A                     	;# 
  1482  1E2B                     	;# 
  1483  1E2C                     	;# 
  1484  1E2D                     	;# 
  1485  1E2E                     	;# 
  1486  1E2F                     	;# 
  1487  1E30                     	;# 
  1488  1E31                     	;# 
  1489  1E32                     	;# 
  1490  1E33                     	;# 
  1491  1E34                     	;# 
  1492  1E35                     	;# 
  1493  1E36                     	;# 
  1494  1E37                     	;# 
  1495  1E8F                     	;# 
  1496  1E90                     	;# 
  1497  1E91                     	;# 
  1498  1E92                     	;# 
  1499  1E93                     	;# 
  1500  1E9C                     	;# 
  1501  1EA1                     	;# 
  1502  1EA2                     	;# 
  1503  1EB1                     	;# 
  1504  1EBB                     	;# 
  1505  1EBC                     	;# 
  1506  1EBD                     	;# 
  1507  1EBE                     	;# 
  1508  1EC3                     	;# 
  1509  1EC5                     	;# 
  1510  1EC6                     	;# 
  1511  1EC7                     	;# 
  1512  1ECB                     	;# 
  1513  1ECC                     	;# 
  1514  1F10                     	;# 
  1515  1F11                     	;# 
  1516  1F12                     	;# 
  1517  1F13                     	;# 
  1518  1F14                     	;# 
  1519  1F15                     	;# 
  1520  1F20                     	;# 
  1521  1F21                     	;# 
  1522  1F22                     	;# 
  1523  1F23                     	;# 
  1524  1F24                     	;# 
  1525  1F25                     	;# 
  1526  1F38                     	;# 
  1527  1F39                     	;# 
  1528  1F3A                     	;# 
  1529  1F3B                     	;# 
  1530  1F3C                     	;# 
  1531  1F3D                     	;# 
  1532  1F3E                     	;# 
  1533  1F3F                     	;# 
  1534  1F4E                     	;# 
  1535  1F4F                     	;# 
  1536  1F50                     	;# 
  1537  1F51                     	;# 
  1538  1F52                     	;# 
  1539  1F53                     	;# 
  1540  1F54                     	;# 
  1541  1F55                     	;# 
  1542  1FE4                     	;# 
  1543  1FE5                     	;# 
  1544  1FE6                     	;# 
  1545  1FE7                     	;# 
  1546  1FE8                     	;# 
  1547  1FE8                     	;# 
  1548  1FE9                     	;# 
  1549  1FEA                     	;# 
  1550  1FEA                     	;# 
  1551  1FEB                     	;# 
  1552  1FED                     	;# 
  1553  1FEE                     	;# 
  1554  1FEF                     	;# 
  1555  0000                     	;# 
  1556  0001                     	;# 
  1557  0002                     	;# 
  1558  0003                     	;# 
  1559  0004                     	;# 
  1560  0005                     	;# 
  1561  0006                     	;# 
  1562  0007                     	;# 
  1563  0008                     	;# 
  1564  0009                     	;# 
  1565  000A                     	;# 
  1566  000B                     	;# 
  1567  000C                     	;# 
  1568  000E                     	;# 
  1569  0012                     	;# 
  1570  0014                     	;# 
  1571  0018                     	;# 
  1572  001A                     	;# 
  1573  009B                     	;# 
  1574  009B                     	;# 
  1575  009C                     	;# 
  1576  009D                     	;# 
  1577  009E                     	;# 
  1578  009F                     	;# 
  1579  0119                     	;# 
  1580  0119                     	;# 
  1581  0119                     	;# 
  1582  011A                     	;# 
  1583  011A                     	;# 
  1584  011A                     	;# 
  1585  011B                     	;# 
  1586  011B                     	;# 
  1587  011B                     	;# 
  1588  011B                     	;# 
  1589  011B                     	;# 
  1590  011C                     	;# 
  1591  011C                     	;# 
  1592  011C                     	;# 
  1593  011D                     	;# 
  1594  011D                     	;# 
  1595  011D                     	;# 
  1596  011E                     	;# 
  1597  011E                     	;# 
  1598  011E                     	;# 
  1599  011F                     	;# 
  1600  011F                     	;# 
  1601  011F                     	;# 
  1602  011F                     	;# 
  1603  011F                     	;# 
  1604  018C                     	;# 
  1605  018D                     	;# 
  1606  018E                     	;# 
  1607  018F                     	;# 
  1608  0190                     	;# 
  1609  0191                     	;# 
  1610  0192                     	;# 
  1611  020C                     	;# 
  1612  020C                     	;# 
  1613  020D                     	;# 
  1614  020E                     	;# 
  1615  020F                     	;# 
  1616  020F                     	;# 
  1617  0210                     	;# 
  1618  0210                     	;# 
  1619  0211                     	;# 
  1620  0211                     	;# 
  1621  028C                     	;# 
  1622  028C                     	;# 
  1623  028D                     	;# 
  1624  028D                     	;# 
  1625  028E                     	;# 
  1626  028F                     	;# 
  1627  0290                     	;# 
  1628  0291                     	;# 
  1629  030C                     	;# 
  1630  030C                     	;# 
  1631  030D                     	;# 
  1632  030E                     	;# 
  1633  030F                     	;# 
  1634  0310                     	;# 
  1635  0310                     	;# 
  1636  0311                     	;# 
  1637  0312                     	;# 
  1638  0313                     	;# 
  1639  0314                     	;# 
  1640  0314                     	;# 
  1641  0315                     	;# 
  1642  0316                     	;# 
  1643  0318                     	;# 
  1644  0318                     	;# 
  1645  0319                     	;# 
  1646  031A                     	;# 
  1647  031C                     	;# 
  1648  031C                     	;# 
  1649  031D                     	;# 
  1650  031E                     	;# 
  1651  038C                     	;# 
  1652  038C                     	;# 
  1653  038D                     	;# 
  1654  038E                     	;# 
  1655  058C                     	;# 
  1656  058C                     	;# 
  1657  058D                     	;# 
  1658  058E                     	;# 
  1659  058F                     	;# 
  1660  058F                     	;# 
  1661  0590                     	;# 
  1662  0591                     	;# 
  1663  0592                     	;# 
  1664  0593                     	;# 
  1665  059C                     	;# 
  1666  059C                     	;# 
  1667  059D                     	;# 
  1668  059D                     	;# 
  1669  059E                     	;# 
  1670  059F                     	;# 
  1671  060C                     	;# 
  1672  060D                     	;# 
  1673  060E                     	;# 
  1674  060F                     	;# 
  1675  0610                     	;# 
  1676  0611                     	;# 
  1677  0612                     	;# 
  1678  0613                     	;# 
  1679  0614                     	;# 
  1680  070C                     	;# 
  1681  070D                     	;# 
  1682  070E                     	;# 
  1683  070F                     	;# 
  1684  0710                     	;# 
  1685  0711                     	;# 
  1686  0712                     	;# 
  1687  0713                     	;# 
  1688  0716                     	;# 
  1689  0717                     	;# 
  1690  0718                     	;# 
  1691  0719                     	;# 
  1692  071A                     	;# 
  1693  071B                     	;# 
  1694  071C                     	;# 
  1695  071D                     	;# 
  1696  0796                     	;# 
  1697  0797                     	;# 
  1698  0798                     	;# 
  1699  0799                     	;# 
  1700  079A                     	;# 
  1701  079B                     	;# 
  1702  080C                     	;# 
  1703  080D                     	;# 
  1704  080E                     	;# 
  1705  080F                     	;# 
  1706  0810                     	;# 
  1707  0811                     	;# 
  1708  0812                     	;# 
  1709  0813                     	;# 
  1710  0814                     	;# 
  1711  081A                     	;# 
  1712  081A                     	;# 
  1713  081B                     	;# 
  1714  081C                     	;# 
  1715  081C                     	;# 
  1716  081D                     	;# 
  1717  081E                     	;# 
  1718  081F                     	;# 
  1719  088C                     	;# 
  1720  088D                     	;# 
  1721  088E                     	;# 
  1722  088F                     	;# 
  1723  0890                     	;# 
  1724  0891                     	;# 
  1725  0892                     	;# 
  1726  0893                     	;# 
  1727  0895                     	;# 
  1728  0896                     	;# 
  1729  090C                     	;# 
  1730  090E                     	;# 
  1731  090F                     	;# 
  1732  091F                     	;# 
  1733  098F                     	;# 
  1734  098F                     	;# 
  1735  0990                     	;# 
  1736  0991                     	;# 
  1737  0992                     	;# 
  1738  0993                     	;# 
  1739  0994                     	;# 
  1740  0995                     	;# 
  1741  0996                     	;# 
  1742  0997                     	;# 
  1743  1E0F                     	;# 
  1744  1E10                     	;# 
  1745  1E11                     	;# 
  1746  1E12                     	;# 
  1747  1E13                     	;# 
  1748  1E14                     	;# 
  1749  1E15                     	;# 
  1750  1E16                     	;# 
  1751  1E17                     	;# 
  1752  1E18                     	;# 
  1753  1E19                     	;# 
  1754  1E1A                     	;# 
  1755  1E1B                     	;# 
  1756  1E1C                     	;# 
  1757  1E1D                     	;# 
  1758  1E1E                     	;# 
  1759  1E1F                     	;# 
  1760  1E20                     	;# 
  1761  1E21                     	;# 
  1762  1E22                     	;# 
  1763  1E23                     	;# 
  1764  1E24                     	;# 
  1765  1E25                     	;# 
  1766  1E26                     	;# 
  1767  1E27                     	;# 
  1768  1E28                     	;# 
  1769  1E29                     	;# 
  1770  1E2A                     	;# 
  1771  1E2B                     	;# 
  1772  1E2C                     	;# 
  1773  1E2D                     	;# 
  1774  1E2E                     	;# 
  1775  1E2F                     	;# 
  1776  1E30                     	;# 
  1777  1E31                     	;# 
  1778  1E32                     	;# 
  1779  1E33                     	;# 
  1780  1E34                     	;# 
  1781  1E35                     	;# 
  1782  1E36                     	;# 
  1783  1E37                     	;# 
  1784  1E8F                     	;# 
  1785  1E90                     	;# 
  1786  1E91                     	;# 
  1787  1E92                     	;# 
  1788  1E93                     	;# 
  1789  1E9C                     	;# 
  1790  1EA1                     	;# 
  1791  1EA2                     	;# 
  1792  1EB1                     	;# 
  1793  1EBB                     	;# 
  1794  1EBC                     	;# 
  1795  1EBD                     	;# 
  1796  1EBE                     	;# 
  1797  1EC3                     	;# 
  1798  1EC5                     	;# 
  1799  1EC6                     	;# 
  1800  1EC7                     	;# 
  1801  1ECB                     	;# 
  1802  1ECC                     	;# 
  1803  1F10                     	;# 
  1804  1F11                     	;# 
  1805  1F12                     	;# 
  1806  1F13                     	;# 
  1807  1F14                     	;# 
  1808  1F15                     	;# 
  1809  1F20                     	;# 
  1810  1F21                     	;# 
  1811  1F22                     	;# 
  1812  1F23                     	;# 
  1813  1F24                     	;# 
  1814  1F25                     	;# 
  1815  1F38                     	;# 
  1816  1F39                     	;# 
  1817  1F3A                     	;# 
  1818  1F3B                     	;# 
  1819  1F3C                     	;# 
  1820  1F3D                     	;# 
  1821  1F3E                     	;# 
  1822  1F3F                     	;# 
  1823  1F4E                     	;# 
  1824  1F4F                     	;# 
  1825  1F50                     	;# 
  1826  1F51                     	;# 
  1827  1F52                     	;# 
  1828  1F53                     	;# 
  1829  1F54                     	;# 
  1830  1F55                     	;# 
  1831  1FE4                     	;# 
  1832  1FE5                     	;# 
  1833  1FE6                     	;# 
  1834  1FE7                     	;# 
  1835  1FE8                     	;# 
  1836  1FE8                     	;# 
  1837  1FE9                     	;# 
  1838  1FEA                     	;# 
  1839  1FEA                     	;# 
  1840  1FEB                     	;# 
  1841  1FED                     	;# 
  1842  1FEE                     	;# 
  1843  1FEF                     	;# 
  1844  0000                     	;# 
  1845  0001                     	;# 
  1846  0002                     	;# 
  1847  0003                     	;# 
  1848  0004                     	;# 
  1849  0005                     	;# 
  1850  0006                     	;# 
  1851  0007                     	;# 
  1852  0008                     	;# 
  1853  0009                     	;# 
  1854  000A                     	;# 
  1855  000B                     	;# 
  1856  000C                     	;# 
  1857  000E                     	;# 
  1858  0012                     	;# 
  1859  0014                     	;# 
  1860  0018                     	;# 
  1861  001A                     	;# 
  1862  009B                     	;# 
  1863  009B                     	;# 
  1864  009C                     	;# 
  1865  009D                     	;# 
  1866  009E                     	;# 
  1867  009F                     	;# 
  1868  0119                     	;# 
  1869  0119                     	;# 
  1870  0119                     	;# 
  1871  011A                     	;# 
  1872  011A                     	;# 
  1873  011A                     	;# 
  1874  011B                     	;# 
  1875  011B                     	;# 
  1876  011B                     	;# 
  1877  011B                     	;# 
  1878  011B                     	;# 
  1879  011C                     	;# 
  1880  011C                     	;# 
  1881  011C                     	;# 
  1882  011D                     	;# 
  1883  011D                     	;# 
  1884  011D                     	;# 
  1885  011E                     	;# 
  1886  011E                     	;# 
  1887  011E                     	;# 
  1888  011F                     	;# 
  1889  011F                     	;# 
  1890  011F                     	;# 
  1891  011F                     	;# 
  1892  011F                     	;# 
  1893  018C                     	;# 
  1894  018D                     	;# 
  1895  018E                     	;# 
  1896  018F                     	;# 
  1897  0190                     	;# 
  1898  0191                     	;# 
  1899  0192                     	;# 
  1900  020C                     	;# 
  1901  020C                     	;# 
  1902  020D                     	;# 
  1903  020E                     	;# 
  1904  020F                     	;# 
  1905  020F                     	;# 
  1906  0210                     	;# 
  1907  0210                     	;# 
  1908  0211                     	;# 
  1909  0211                     	;# 
  1910  028C                     	;# 
  1911  028C                     	;# 
  1912  028D                     	;# 
  1913  028D                     	;# 
  1914  028E                     	;# 
  1915  028F                     	;# 
  1916  0290                     	;# 
  1917  0291                     	;# 
  1918  030C                     	;# 
  1919  030C                     	;# 
  1920  030D                     	;# 
  1921  030E                     	;# 
  1922  030F                     	;# 
  1923  0310                     	;# 
  1924  0310                     	;# 
  1925  0311                     	;# 
  1926  0312                     	;# 
  1927  0313                     	;# 
  1928  0314                     	;# 
  1929  0314                     	;# 
  1930  0315                     	;# 
  1931  0316                     	;# 
  1932  0318                     	;# 
  1933  0318                     	;# 
  1934  0319                     	;# 
  1935  031A                     	;# 
  1936  031C                     	;# 
  1937  031C                     	;# 
  1938  031D                     	;# 
  1939  031E                     	;# 
  1940  038C                     	;# 
  1941  038C                     	;# 
  1942  038D                     	;# 
  1943  038E                     	;# 
  1944  058C                     	;# 
  1945  058C                     	;# 
  1946  058D                     	;# 
  1947  058E                     	;# 
  1948  058F                     	;# 
  1949  058F                     	;# 
  1950  0590                     	;# 
  1951  0591                     	;# 
  1952  0592                     	;# 
  1953  0593                     	;# 
  1954  059C                     	;# 
  1955  059C                     	;# 
  1956  059D                     	;# 
  1957  059D                     	;# 
  1958  059E                     	;# 
  1959  059F                     	;# 
  1960  060C                     	;# 
  1961  060D                     	;# 
  1962  060E                     	;# 
  1963  060F                     	;# 
  1964  0610                     	;# 
  1965  0611                     	;# 
  1966  0612                     	;# 
  1967  0613                     	;# 
  1968  0614                     	;# 
  1969  070C                     	;# 
  1970  070D                     	;# 
  1971  070E                     	;# 
  1972  070F                     	;# 
  1973  0710                     	;# 
  1974  0711                     	;# 
  1975  0712                     	;# 
  1976  0713                     	;# 
  1977  0716                     	;# 
  1978  0717                     	;# 
  1979  0718                     	;# 
  1980  0719                     	;# 
  1981  071A                     	;# 
  1982  071B                     	;# 
  1983  071C                     	;# 
  1984  071D                     	;# 
  1985  0796                     	;# 
  1986  0797                     	;# 
  1987  0798                     	;# 
  1988  0799                     	;# 
  1989  079A                     	;# 
  1990  079B                     	;# 
  1991  080C                     	;# 
  1992  080D                     	;# 
  1993  080E                     	;# 
  1994  080F                     	;# 
  1995  0810                     	;# 
  1996  0811                     	;# 
  1997  0812                     	;# 
  1998  0813                     	;# 
  1999  0814                     	;# 
  2000  081A                     	;# 
  2001  081A                     	;# 
  2002  081B                     	;# 
  2003  081C                     	;# 
  2004  081C                     	;# 
  2005  081D                     	;# 
  2006  081E                     	;# 
  2007  081F                     	;# 
  2008  088C                     	;# 
  2009  088D                     	;# 
  2010  088E                     	;# 
  2011  088F                     	;# 
  2012  0890                     	;# 
  2013  0891                     	;# 
  2014  0892                     	;# 
  2015  0893                     	;# 
  2016  0895                     	;# 
  2017  0896                     	;# 
  2018  090C                     	;# 
  2019  090E                     	;# 
  2020  090F                     	;# 
  2021  091F                     	;# 
  2022  098F                     	;# 
  2023  098F                     	;# 
  2024  0990                     	;# 
  2025  0991                     	;# 
  2026  0992                     	;# 
  2027  0993                     	;# 
  2028  0994                     	;# 
  2029  0995                     	;# 
  2030  0996                     	;# 
  2031  0997                     	;# 
  2032  1E0F                     	;# 
  2033  1E10                     	;# 
  2034  1E11                     	;# 
  2035  1E12                     	;# 
  2036  1E13                     	;# 
  2037  1E14                     	;# 
  2038  1E15                     	;# 
  2039  1E16                     	;# 
  2040  1E17                     	;# 
  2041  1E18                     	;# 
  2042  1E19                     	;# 
  2043  1E1A                     	;# 
  2044  1E1B                     	;# 
  2045  1E1C                     	;# 
  2046  1E1D                     	;# 
  2047  1E1E                     	;# 
  2048  1E1F                     	;# 
  2049  1E20                     	;# 
  2050  1E21                     	;# 
  2051  1E22                     	;# 
  2052  1E23                     	;# 
  2053  1E24                     	;# 
  2054  1E25                     	;# 
  2055  1E26                     	;# 
  2056  1E27                     	;# 
  2057  1E28                     	;# 
  2058  1E29                     	;# 
  2059  1E2A                     	;# 
  2060  1E2B                     	;# 
  2061  1E2C                     	;# 
  2062  1E2D                     	;# 
  2063  1E2E                     	;# 
  2064  1E2F                     	;# 
  2065  1E30                     	;# 
  2066  1E31                     	;# 
  2067  1E32                     	;# 
  2068  1E33                     	;# 
  2069  1E34                     	;# 
  2070  1E35                     	;# 
  2071  1E36                     	;# 
  2072  1E37                     	;# 
  2073  1E8F                     	;# 
  2074  1E90                     	;# 
  2075  1E91                     	;# 
  2076  1E92                     	;# 
  2077  1E93                     	;# 
  2078  1E9C                     	;# 
  2079  1EA1                     	;# 
  2080  1EA2                     	;# 
  2081  1EB1                     	;# 
  2082  1EBB                     	;# 
  2083  1EBC                     	;# 
  2084  1EBD                     	;# 
  2085  1EBE                     	;# 
  2086  1EC3                     	;# 
  2087  1EC5                     	;# 
  2088  1EC6                     	;# 
  2089  1EC7                     	;# 
  2090  1ECB                     	;# 
  2091  1ECC                     	;# 
  2092  1F10                     	;# 
  2093  1F11                     	;# 
  2094  1F12                     	;# 
  2095  1F13                     	;# 
  2096  1F14                     	;# 
  2097  1F15                     	;# 
  2098  1F20                     	;# 
  2099  1F21                     	;# 
  2100  1F22                     	;# 
  2101  1F23                     	;# 
  2102  1F24                     	;# 
  2103  1F25                     	;# 
  2104  1F38                     	;# 
  2105  1F39                     	;# 
  2106  1F3A                     	;# 
  2107  1F3B                     	;# 
  2108  1F3C                     	;# 
  2109  1F3D                     	;# 
  2110  1F3E                     	;# 
  2111  1F3F                     	;# 
  2112  1F4E                     	;# 
  2113  1F4F                     	;# 
  2114  1F50                     	;# 
  2115  1F51                     	;# 
  2116  1F52                     	;# 
  2117  1F53                     	;# 
  2118  1F54                     	;# 
  2119  1F55                     	;# 
  2120  1FE4                     	;# 
  2121  1FE5                     	;# 
  2122  1FE6                     	;# 
  2123  1FE7                     	;# 
  2124  1FE8                     	;# 
  2125  1FE8                     	;# 
  2126  1FE9                     	;# 
  2127  1FEA                     	;# 
  2128  1FEA                     	;# 
  2129  1FEB                     	;# 
  2130  1FED                     	;# 
  2131  1FEE                     	;# 
  2132  1FEF                     	;# 
  2133  0000                     	;# 
  2134  0001                     	;# 
  2135  0002                     	;# 
  2136  0003                     	;# 
  2137  0004                     	;# 
  2138  0005                     	;# 
  2139  0006                     	;# 
  2140  0007                     	;# 
  2141  0008                     	;# 
  2142  0009                     	;# 
  2143  000A                     	;# 
  2144  000B                     	;# 
  2145  000C                     	;# 
  2146  000E                     	;# 
  2147  0012                     	;# 
  2148  0014                     	;# 
  2149  0018                     	;# 
  2150  001A                     	;# 
  2151  009B                     	;# 
  2152  009B                     	;# 
  2153  009C                     	;# 
  2154  009D                     	;# 
  2155  009E                     	;# 
  2156  009F                     	;# 
  2157  0119                     	;# 
  2158  0119                     	;# 
  2159  0119                     	;# 
  2160  011A                     	;# 
  2161  011A                     	;# 
  2162  011A                     	;# 
  2163  011B                     	;# 
  2164  011B                     	;# 
  2165  011B                     	;# 
  2166  011B                     	;# 
  2167  011B                     	;# 
  2168  011C                     	;# 
  2169  011C                     	;# 
  2170  011C                     	;# 
  2171  011D                     	;# 
  2172  011D                     	;# 
  2173  011D                     	;# 
  2174  011E                     	;# 
  2175  011E                     	;# 
  2176  011E                     	;# 
  2177  011F                     	;# 
  2178  011F                     	;# 
  2179  011F                     	;# 
  2180  011F                     	;# 
  2181  011F                     	;# 
  2182  018C                     	;# 
  2183  018D                     	;# 
  2184  018E                     	;# 
  2185  018F                     	;# 
  2186  0190                     	;# 
  2187  0191                     	;# 
  2188  0192                     	;# 
  2189  020C                     	;# 
  2190  020C                     	;# 
  2191  020D                     	;# 
  2192  020E                     	;# 
  2193  020F                     	;# 
  2194  020F                     	;# 
  2195  0210                     	;# 
  2196  0210                     	;# 
  2197  0211                     	;# 
  2198  0211                     	;# 
  2199  028C                     	;# 
  2200  028C                     	;# 
  2201  028D                     	;# 
  2202  028D                     	;# 
  2203  028E                     	;# 
  2204  028F                     	;# 
  2205  0290                     	;# 
  2206  0291                     	;# 
  2207  030C                     	;# 
  2208  030C                     	;# 
  2209  030D                     	;# 
  2210  030E                     	;# 
  2211  030F                     	;# 
  2212  0310                     	;# 
  2213  0310                     	;# 
  2214  0311                     	;# 
  2215  0312                     	;# 
  2216  0313                     	;# 
  2217  0314                     	;# 
  2218  0314                     	;# 
  2219  0315                     	;# 
  2220  0316                     	;# 
  2221  0318                     	;# 
  2222  0318                     	;# 
  2223  0319                     	;# 
  2224  031A                     	;# 
  2225  031C                     	;# 
  2226  031C                     	;# 
  2227  031D                     	;# 
  2228  031E                     	;# 
  2229  038C                     	;# 
  2230  038C                     	;# 
  2231  038D                     	;# 
  2232  038E                     	;# 
  2233  058C                     	;# 
  2234  058C                     	;# 
  2235  058D                     	;# 
  2236  058E                     	;# 
  2237  058F                     	;# 
  2238  058F                     	;# 
  2239  0590                     	;# 
  2240  0591                     	;# 
  2241  0592                     	;# 
  2242  0593                     	;# 
  2243  059C                     	;# 
  2244  059C                     	;# 
  2245  059D                     	;# 
  2246  059D                     	;# 
  2247  059E                     	;# 
  2248  059F                     	;# 
  2249  060C                     	;# 
  2250  060D                     	;# 
  2251  060E                     	;# 
  2252  060F                     	;# 
  2253  0610                     	;# 
  2254  0611                     	;# 
  2255  0612                     	;# 
  2256  0613                     	;# 
  2257  0614                     	;# 
  2258  070C                     	;# 
  2259  070D                     	;# 
  2260  070E                     	;# 
  2261  070F                     	;# 
  2262  0710                     	;# 
  2263  0711                     	;# 
  2264  0712                     	;# 
  2265  0713                     	;# 
  2266  0716                     	;# 
  2267  0717                     	;# 
  2268  0718                     	;# 
  2269  0719                     	;# 
  2270  071A                     	;# 
  2271  071B                     	;# 
  2272  071C                     	;# 
  2273  071D                     	;# 
  2274  0796                     	;# 
  2275  0797                     	;# 
  2276  0798                     	;# 
  2277  0799                     	;# 
  2278  079A                     	;# 
  2279  079B                     	;# 
  2280  080C                     	;# 
  2281  080D                     	;# 
  2282  080E                     	;# 
  2283  080F                     	;# 
  2284  0810                     	;# 
  2285  0811                     	;# 
  2286  0812                     	;# 
  2287  0813                     	;# 
  2288  0814                     	;# 
  2289  081A                     	;# 
  2290  081A                     	;# 
  2291  081B                     	;# 
  2292  081C                     	;# 
  2293  081C                     	;# 
  2294  081D                     	;# 
  2295  081E                     	;# 
  2296  081F                     	;# 
  2297  088C                     	;# 
  2298  088D                     	;# 
  2299  088E                     	;# 
  2300  088F                     	;# 
  2301  0890                     	;# 
  2302  0891                     	;# 
  2303  0892                     	;# 
  2304  0893                     	;# 
  2305  0895                     	;# 
  2306  0896                     	;# 
  2307  090C                     	;# 
  2308  090E                     	;# 
  2309  090F                     	;# 
  2310  091F                     	;# 
  2311  098F                     	;# 
  2312  098F                     	;# 
  2313  0990                     	;# 
  2314  0991                     	;# 
  2315  0992                     	;# 
  2316  0993                     	;# 
  2317  0994                     	;# 
  2318  0995                     	;# 
  2319  0996                     	;# 
  2320  0997                     	;# 
  2321  1E0F                     	;# 
  2322  1E10                     	;# 
  2323  1E11                     	;# 
  2324  1E12                     	;# 
  2325  1E13                     	;# 
  2326  1E14                     	;# 
  2327  1E15                     	;# 
  2328  1E16                     	;# 
  2329  1E17                     	;# 
  2330  1E18                     	;# 
  2331  1E19                     	;# 
  2332  1E1A                     	;# 
  2333  1E1B                     	;# 
  2334  1E1C                     	;# 
  2335  1E1D                     	;# 
  2336  1E1E                     	;# 
  2337  1E1F                     	;# 
  2338  1E20                     	;# 
  2339  1E21                     	;# 
  2340  1E22                     	;# 
  2341  1E23                     	;# 
  2342  1E24                     	;# 
  2343  1E25                     	;# 
  2344  1E26                     	;# 
  2345  1E27                     	;# 
  2346  1E28                     	;# 
  2347  1E29                     	;# 
  2348  1E2A                     	;# 
  2349  1E2B                     	;# 
  2350  1E2C                     	;# 
  2351  1E2D                     	;# 
  2352  1E2E                     	;# 
  2353  1E2F                     	;# 
  2354  1E30                     	;# 
  2355  1E31                     	;# 
  2356  1E32                     	;# 
  2357  1E33                     	;# 
  2358  1E34                     	;# 
  2359  1E35                     	;# 
  2360  1E36                     	;# 
  2361  1E37                     	;# 
  2362  1E8F                     	;# 
  2363  1E90                     	;# 
  2364  1E91                     	;# 
  2365  1E92                     	;# 
  2366  1E93                     	;# 
  2367  1E9C                     	;# 
  2368  1EA1                     	;# 
  2369  1EA2                     	;# 
  2370  1EB1                     	;# 
  2371  1EBB                     	;# 
  2372  1EBC                     	;# 
  2373  1EBD                     	;# 
  2374  1EBE                     	;# 
  2375  1EC3                     	;# 
  2376  1EC5                     	;# 
  2377  1EC6                     	;# 
  2378  1EC7                     	;# 
  2379  1ECB                     	;# 
  2380  1ECC                     	;# 
  2381  1F10                     	;# 
  2382  1F11                     	;# 
  2383  1F12                     	;# 
  2384  1F13                     	;# 
  2385  1F14                     	;# 
  2386  1F15                     	;# 
  2387  1F20                     	;# 
  2388  1F21                     	;# 
  2389  1F22                     	;# 
  2390  1F23                     	;# 
  2391  1F24                     	;# 
  2392  1F25                     	;# 
  2393  1F38                     	;# 
  2394  1F39                     	;# 
  2395  1F3A                     	;# 
  2396  1F3B                     	;# 
  2397  1F3C                     	;# 
  2398  1F3D                     	;# 
  2399  1F3E                     	;# 
  2400  1F3F                     	;# 
  2401  1F4E                     	;# 
  2402  1F4F                     	;# 
  2403  1F50                     	;# 
  2404  1F51                     	;# 
  2405  1F52                     	;# 
  2406  1F53                     	;# 
  2407  1F54                     	;# 
  2408  1F55                     	;# 
  2409  1FE4                     	;# 
  2410  1FE5                     	;# 
  2411  1FE6                     	;# 
  2412  1FE7                     	;# 
  2413  1FE8                     	;# 
  2414  1FE8                     	;# 
  2415  1FE9                     	;# 
  2416  1FEA                     	;# 
  2417  1FEA                     	;# 
  2418  1FEB                     	;# 
  2419  1FED                     	;# 
  2420  1FEE                     	;# 
  2421  1FEF                     	;# 
  2422  0000                     	;# 
  2423  0001                     	;# 
  2424  0002                     	;# 
  2425  0003                     	;# 
  2426  0004                     	;# 
  2427  0005                     	;# 
  2428  0006                     	;# 
  2429  0007                     	;# 
  2430  0008                     	;# 
  2431  0009                     	;# 
  2432  000A                     	;# 
  2433  000B                     	;# 
  2434  000C                     	;# 
  2435  000E                     	;# 
  2436  0012                     	;# 
  2437  0014                     	;# 
  2438  0018                     	;# 
  2439  001A                     	;# 
  2440  009B                     	;# 
  2441  009B                     	;# 
  2442  009C                     	;# 
  2443  009D                     	;# 
  2444  009E                     	;# 
  2445  009F                     	;# 
  2446  0119                     	;# 
  2447  0119                     	;# 
  2448  0119                     	;# 
  2449  011A                     	;# 
  2450  011A                     	;# 
  2451  011A                     	;# 
  2452  011B                     	;# 
  2453  011B                     	;# 
  2454  011B                     	;# 
  2455  011B                     	;# 
  2456  011B                     	;# 
  2457  011C                     	;# 
  2458  011C                     	;# 
  2459  011C                     	;# 
  2460  011D                     	;# 
  2461  011D                     	;# 
  2462  011D                     	;# 
  2463  011E                     	;# 
  2464  011E                     	;# 
  2465  011E                     	;# 
  2466  011F                     	;# 
  2467  011F                     	;# 
  2468  011F                     	;# 
  2469  011F                     	;# 
  2470  011F                     	;# 
  2471  018C                     	;# 
  2472  018D                     	;# 
  2473  018E                     	;# 
  2474  018F                     	;# 
  2475  0190                     	;# 
  2476  0191                     	;# 
  2477  0192                     	;# 
  2478  020C                     	;# 
  2479  020C                     	;# 
  2480  020D                     	;# 
  2481  020E                     	;# 
  2482  020F                     	;# 
  2483  020F                     	;# 
  2484  0210                     	;# 
  2485  0210                     	;# 
  2486  0211                     	;# 
  2487  0211                     	;# 
  2488  028C                     	;# 
  2489  028C                     	;# 
  2490  028D                     	;# 
  2491  028D                     	;# 
  2492  028E                     	;# 
  2493  028F                     	;# 
  2494  0290                     	;# 
  2495  0291                     	;# 
  2496  030C                     	;# 
  2497  030C                     	;# 
  2498  030D                     	;# 
  2499  030E                     	;# 
  2500  030F                     	;# 
  2501  0310                     	;# 
  2502  0310                     	;# 
  2503  0311                     	;# 
  2504  0312                     	;# 
  2505  0313                     	;# 
  2506  0314                     	;# 
  2507  0314                     	;# 
  2508  0315                     	;# 
  2509  0316                     	;# 
  2510  0318                     	;# 
  2511  0318                     	;# 
  2512  0319                     	;# 
  2513  031A                     	;# 
  2514  031C                     	;# 
  2515  031C                     	;# 
  2516  031D                     	;# 
  2517  031E                     	;# 
  2518  038C                     	;# 
  2519  038C                     	;# 
  2520  038D                     	;# 
  2521  038E                     	;# 
  2522  058C                     	;# 
  2523  058C                     	;# 
  2524  058D                     	;# 
  2525  058E                     	;# 
  2526  058F                     	;# 
  2527  058F                     	;# 
  2528  0590                     	;# 
  2529  0591                     	;# 
  2530  0592                     	;# 
  2531  0593                     	;# 
  2532  059C                     	;# 
  2533  059C                     	;# 
  2534  059D                     	;# 
  2535  059D                     	;# 
  2536  059E                     	;# 
  2537  059F                     	;# 
  2538  060C                     	;# 
  2539  060D                     	;# 
  2540  060E                     	;# 
  2541  060F                     	;# 
  2542  0610                     	;# 
  2543  0611                     	;# 
  2544  0612                     	;# 
  2545  0613                     	;# 
  2546  0614                     	;# 
  2547  070C                     	;# 
  2548  070D                     	;# 
  2549  070E                     	;# 
  2550  070F                     	;# 
  2551  0710                     	;# 
  2552  0711                     	;# 
  2553  0712                     	;# 
  2554  0713                     	;# 
  2555  0716                     	;# 
  2556  0717                     	;# 
  2557  0718                     	;# 
  2558  0719                     	;# 
  2559  071A                     	;# 
  2560  071B                     	;# 
  2561  071C                     	;# 
  2562  071D                     	;# 
  2563  0796                     	;# 
  2564  0797                     	;# 
  2565  0798                     	;# 
  2566  0799                     	;# 
  2567  079A                     	;# 
  2568  079B                     	;# 
  2569  080C                     	;# 
  2570  080D                     	;# 
  2571  080E                     	;# 
  2572  080F                     	;# 
  2573  0810                     	;# 
  2574  0811                     	;# 
  2575  0812                     	;# 
  2576  0813                     	;# 
  2577  0814                     	;# 
  2578  081A                     	;# 
  2579  081A                     	;# 
  2580  081B                     	;# 
  2581  081C                     	;# 
  2582  081C                     	;# 
  2583  081D                     	;# 
  2584  081E                     	;# 
  2585  081F                     	;# 
  2586  088C                     	;# 
  2587  088D                     	;# 
  2588  088E                     	;# 
  2589  088F                     	;# 
  2590  0890                     	;# 
  2591  0891                     	;# 
  2592  0892                     	;# 
  2593  0893                     	;# 
  2594  0895                     	;# 
  2595  0896                     	;# 
  2596  090C                     	;# 
  2597  090E                     	;# 
  2598  090F                     	;# 
  2599  091F                     	;# 
  2600  098F                     	;# 
  2601  098F                     	;# 
  2602  0990                     	;# 
  2603  0991                     	;# 
  2604  0992                     	;# 
  2605  0993                     	;# 
  2606  0994                     	;# 
  2607  0995                     	;# 
  2608  0996                     	;# 
  2609  0997                     	;# 
  2610  1E0F                     	;# 
  2611  1E10                     	;# 
  2612  1E11                     	;# 
  2613  1E12                     	;# 
  2614  1E13                     	;# 
  2615  1E14                     	;# 
  2616  1E15                     	;# 
  2617  1E16                     	;# 
  2618  1E17                     	;# 
  2619  1E18                     	;# 
  2620  1E19                     	;# 
  2621  1E1A                     	;# 
  2622  1E1B                     	;# 
  2623  1E1C                     	;# 
  2624  1E1D                     	;# 
  2625  1E1E                     	;# 
  2626  1E1F                     	;# 
  2627  1E20                     	;# 
  2628  1E21                     	;# 
  2629  1E22                     	;# 
  2630  1E23                     	;# 
  2631  1E24                     	;# 
  2632  1E25                     	;# 
  2633  1E26                     	;# 
  2634  1E27                     	;# 
  2635  1E28                     	;# 
  2636  1E29                     	;# 
  2637  1E2A                     	;# 
  2638  1E2B                     	;# 
  2639  1E2C                     	;# 
  2640  1E2D                     	;# 
  2641  1E2E                     	;# 
  2642  1E2F                     	;# 
  2643  1E30                     	;# 
  2644  1E31                     	;# 
  2645  1E32                     	;# 
  2646  1E33                     	;# 
  2647  1E34                     	;# 
  2648  1E35                     	;# 
  2649  1E36                     	;# 
  2650  1E37                     	;# 
  2651  1E8F                     	;# 
  2652  1E90                     	;# 
  2653  1E91                     	;# 
  2654  1E92                     	;# 
  2655  1E93                     	;# 
  2656  1E9C                     	;# 
  2657  1EA1                     	;# 
  2658  1EA2                     	;# 
  2659  1EB1                     	;# 
  2660  1EBB                     	;# 
  2661  1EBC                     	;# 
  2662  1EBD                     	;# 
  2663  1EBE                     	;# 
  2664  1EC3                     	;# 
  2665  1EC5                     	;# 
  2666  1EC6                     	;# 
  2667  1EC7                     	;# 
  2668  1ECB                     	;# 
  2669  1ECC                     	;# 
  2670  1F10                     	;# 
  2671  1F11                     	;# 
  2672  1F12                     	;# 
  2673  1F13                     	;# 
  2674  1F14                     	;# 
  2675  1F15                     	;# 
  2676  1F20                     	;# 
  2677  1F21                     	;# 
  2678  1F22                     	;# 
  2679  1F23                     	;# 
  2680  1F24                     	;# 
  2681  1F25                     	;# 
  2682  1F38                     	;# 
  2683  1F39                     	;# 
  2684  1F3A                     	;# 
  2685  1F3B                     	;# 
  2686  1F3C                     	;# 
  2687  1F3D                     	;# 
  2688  1F3E                     	;# 
  2689  1F3F                     	;# 
  2690  1F4E                     	;# 
  2691  1F4F                     	;# 
  2692  1F50                     	;# 
  2693  1F51                     	;# 
  2694  1F52                     	;# 
  2695  1F53                     	;# 
  2696  1F54                     	;# 
  2697  1F55                     	;# 
  2698  1FE4                     	;# 
  2699  1FE5                     	;# 
  2700  1FE6                     	;# 
  2701  1FE7                     	;# 
  2702  1FE8                     	;# 
  2703  1FE8                     	;# 
  2704  1FE9                     	;# 
  2705  1FEA                     	;# 
  2706  1FEA                     	;# 
  2707  1FEB                     	;# 
  2708  1FED                     	;# 
  2709  1FEE                     	;# 
  2710  1FEF                     	;# 
  2711  0000                     	;# 
  2712  0001                     	;# 
  2713  0002                     	;# 
  2714  0003                     	;# 
  2715  0004                     	;# 
  2716  0005                     	;# 
  2717  0006                     	;# 
  2718  0007                     	;# 
  2719  0008                     	;# 
  2720  0009                     	;# 
  2721  000A                     	;# 
  2722  000B                     	;# 
  2723  000C                     	;# 
  2724  000E                     	;# 
  2725  0012                     	;# 
  2726  0014                     	;# 
  2727  0018                     	;# 
  2728  001A                     	;# 
  2729  009B                     	;# 
  2730  009B                     	;# 
  2731  009C                     	;# 
  2732  009D                     	;# 
  2733  009E                     	;# 
  2734  009F                     	;# 
  2735  0119                     	;# 
  2736  0119                     	;# 
  2737  0119                     	;# 
  2738  011A                     	;# 
  2739  011A                     	;# 
  2740  011A                     	;# 
  2741  011B                     	;# 
  2742  011B                     	;# 
  2743  011B                     	;# 
  2744  011B                     	;# 
  2745  011B                     	;# 
  2746  011C                     	;# 
  2747  011C                     	;# 
  2748  011C                     	;# 
  2749  011D                     	;# 
  2750  011D                     	;# 
  2751  011D                     	;# 
  2752  011E                     	;# 
  2753  011E                     	;# 
  2754  011E                     	;# 
  2755  011F                     	;# 
  2756  011F                     	;# 
  2757  011F                     	;# 
  2758  011F                     	;# 
  2759  011F                     	;# 
  2760  018C                     	;# 
  2761  018D                     	;# 
  2762  018E                     	;# 
  2763  018F                     	;# 
  2764  0190                     	;# 
  2765  0191                     	;# 
  2766  0192                     	;# 
  2767  020C                     	;# 
  2768  020C                     	;# 
  2769  020D                     	;# 
  2770  020E                     	;# 
  2771  020F                     	;# 
  2772  020F                     	;# 
  2773  0210                     	;# 
  2774  0210                     	;# 
  2775  0211                     	;# 
  2776  0211                     	;# 
  2777  028C                     	;# 
  2778  028C                     	;# 
  2779  028D                     	;# 
  2780  028D                     	;# 
  2781  028E                     	;# 
  2782  028F                     	;# 
  2783  0290                     	;# 
  2784  0291                     	;# 
  2785  030C                     	;# 
  2786  030C                     	;# 
  2787  030D                     	;# 
  2788  030E                     	;# 
  2789  030F                     	;# 
  2790  0310                     	;# 
  2791  0310                     	;# 
  2792  0311                     	;# 
  2793  0312                     	;# 
  2794  0313                     	;# 
  2795  0314                     	;# 
  2796  0314                     	;# 
  2797  0315                     	;# 
  2798  0316                     	;# 
  2799  0318                     	;# 
  2800  0318                     	;# 
  2801  0319                     	;# 
  2802  031A                     	;# 
  2803  031C                     	;# 
  2804  031C                     	;# 
  2805  031D                     	;# 
  2806  031E                     	;# 
  2807  038C                     	;# 
  2808  038C                     	;# 
  2809  038D                     	;# 
  2810  038E                     	;# 
  2811  058C                     	;# 
  2812  058C                     	;# 
  2813  058D                     	;# 
  2814  058E                     	;# 
  2815  058F                     	;# 
  2816  058F                     	;# 
  2817  0590                     	;# 
  2818  0591                     	;# 
  2819  0592                     	;# 
  2820  0593                     	;# 
  2821  059C                     	;# 
  2822  059C                     	;# 
  2823  059D                     	;# 
  2824  059D                     	;# 
  2825  059E                     	;# 
  2826  059F                     	;# 
  2827  060C                     	;# 
  2828  060D                     	;# 
  2829  060E                     	;# 
  2830  060F                     	;# 
  2831  0610                     	;# 
  2832  0611                     	;# 
  2833  0612                     	;# 
  2834  0613                     	;# 
  2835  0614                     	;# 
  2836  070C                     	;# 
  2837  070D                     	;# 
  2838  070E                     	;# 
  2839  070F                     	;# 
  2840  0710                     	;# 
  2841  0711                     	;# 
  2842  0712                     	;# 
  2843  0713                     	;# 
  2844  0716                     	;# 
  2845  0717                     	;# 
  2846  0718                     	;# 
  2847  0719                     	;# 
  2848  071A                     	;# 
  2849  071B                     	;# 
  2850  071C                     	;# 
  2851  071D                     	;# 
  2852  0796                     	;# 
  2853  0797                     	;# 
  2854  0798                     	;# 
  2855  0799                     	;# 
  2856  079A                     	;# 
  2857  079B                     	;# 
  2858  080C                     	;# 
  2859  080D                     	;# 
  2860  080E                     	;# 
  2861  080F                     	;# 
  2862  0810                     	;# 
  2863  0811                     	;# 
  2864  0812                     	;# 
  2865  0813                     	;# 
  2866  0814                     	;# 
  2867  081A                     	;# 
  2868  081A                     	;# 
  2869  081B                     	;# 
  2870  081C                     	;# 
  2871  081C                     	;# 
  2872  081D                     	;# 
  2873  081E                     	;# 
  2874  081F                     	;# 
  2875  088C                     	;# 
  2876  088D                     	;# 
  2877  088E                     	;# 
  2878  088F                     	;# 
  2879  0890                     	;# 
  2880  0891                     	;# 
  2881  0892                     	;# 
  2882  0893                     	;# 
  2883  0895                     	;# 
  2884  0896                     	;# 
  2885  090C                     	;# 
  2886  090E                     	;# 
  2887  090F                     	;# 
  2888  091F                     	;# 
  2889  098F                     	;# 
  2890  098F                     	;# 
  2891  0990                     	;# 
  2892  0991                     	;# 
  2893  0992                     	;# 
  2894  0993                     	;# 
  2895  0994                     	;# 
  2896  0995                     	;# 
  2897  0996                     	;# 
  2898  0997                     	;# 
  2899  1E0F                     	;# 
  2900  1E10                     	;# 
  2901  1E11                     	;# 
  2902  1E12                     	;# 
  2903  1E13                     	;# 
  2904  1E14                     	;# 
  2905  1E15                     	;# 
  2906  1E16                     	;# 
  2907  1E17                     	;# 
  2908  1E18                     	;# 
  2909  1E19                     	;# 
  2910  1E1A                     	;# 
  2911  1E1B                     	;# 
  2912  1E1C                     	;# 
  2913  1E1D                     	;# 
  2914  1E1E                     	;# 
  2915  1E1F                     	;# 
  2916  1E20                     	;# 
  2917  1E21                     	;# 
  2918  1E22                     	;# 
  2919  1E23                     	;# 
  2920  1E24                     	;# 
  2921  1E25                     	;# 
  2922  1E26                     	;# 
  2923  1E27                     	;# 
  2924  1E28                     	;# 
  2925  1E29                     	;# 
  2926  1E2A                     	;# 
  2927  1E2B                     	;# 
  2928  1E2C                     	;# 
  2929  1E2D                     	;# 
  2930  1E2E                     	;# 
  2931  1E2F                     	;# 
  2932  1E30                     	;# 
  2933  1E31                     	;# 
  2934  1E32                     	;# 
  2935  1E33                     	;# 
  2936  1E34                     	;# 
  2937  1E35                     	;# 
  2938  1E36                     	;# 
  2939  1E37                     	;# 
  2940  1E8F                     	;# 
  2941  1E90                     	;# 
  2942  1E91                     	;# 
  2943  1E92                     	;# 
  2944  1E93                     	;# 
  2945  1E9C                     	;# 
  2946  1EA1                     	;# 
  2947  1EA2                     	;# 
  2948  1EB1                     	;# 
  2949  1EBB                     	;# 
  2950  1EBC                     	;# 
  2951  1EBD                     	;# 
  2952  1EBE                     	;# 
  2953  1EC3                     	;# 
  2954  1EC5                     	;# 
  2955  1EC6                     	;# 
  2956  1EC7                     	;# 
  2957  1ECB                     	;# 
  2958  1ECC                     	;# 
  2959  1F10                     	;# 
  2960  1F11                     	;# 
  2961  1F12                     	;# 
  2962  1F13                     	;# 
  2963  1F14                     	;# 
  2964  1F15                     	;# 
  2965  1F20                     	;# 
  2966  1F21                     	;# 
  2967  1F22                     	;# 
  2968  1F23                     	;# 
  2969  1F24                     	;# 
  2970  1F25                     	;# 
  2971  1F38                     	;# 
  2972  1F39                     	;# 
  2973  1F3A                     	;# 
  2974  1F3B                     	;# 
  2975  1F3C                     	;# 
  2976  1F3D                     	;# 
  2977  1F3E                     	;# 
  2978  1F3F                     	;# 
  2979  1F4E                     	;# 
  2980  1F4F                     	;# 
  2981  1F50                     	;# 
  2982  1F51                     	;# 
  2983  1F52                     	;# 
  2984  1F53                     	;# 
  2985  1F54                     	;# 
  2986  1F55                     	;# 
  2987  1FE4                     	;# 
  2988  1FE5                     	;# 
  2989  1FE6                     	;# 
  2990  1FE7                     	;# 
  2991  1FE8                     	;# 
  2992  1FE8                     	;# 
  2993  1FE9                     	;# 
  2994  1FEA                     	;# 
  2995  1FEA                     	;# 
  2996  1FEB                     	;# 
  2997  1FED                     	;# 
  2998  1FEE                     	;# 
  2999  1FEF                     	;# 
  3000  0000                     	;# 
  3001  0001                     	;# 
  3002  0002                     	;# 
  3003  0003                     	;# 
  3004  0004                     	;# 
  3005  0005                     	;# 
  3006  0006                     	;# 
  3007  0007                     	;# 
  3008  0008                     	;# 
  3009  0009                     	;# 
  3010  000A                     	;# 
  3011  000B                     	;# 
  3012  000C                     	;# 
  3013  000E                     	;# 
  3014  0012                     	;# 
  3015  0014                     	;# 
  3016  0018                     	;# 
  3017  001A                     	;# 
  3018  009B                     	;# 
  3019  009B                     	;# 
  3020  009C                     	;# 
  3021  009D                     	;# 
  3022  009E                     	;# 
  3023  009F                     	;# 
  3024  0119                     	;# 
  3025  0119                     	;# 
  3026  0119                     	;# 
  3027  011A                     	;# 
  3028  011A                     	;# 
  3029  011A                     	;# 
  3030  011B                     	;# 
  3031  011B                     	;# 
  3032  011B                     	;# 
  3033  011B                     	;# 
  3034  011B                     	;# 
  3035  011C                     	;# 
  3036  011C                     	;# 
  3037  011C                     	;# 
  3038  011D                     	;# 
  3039  011D                     	;# 
  3040  011D                     	;# 
  3041  011E                     	;# 
  3042  011E                     	;# 
  3043  011E                     	;# 
  3044  011F                     	;# 
  3045  011F                     	;# 
  3046  011F                     	;# 
  3047  011F                     	;# 
  3048  011F                     	;# 
  3049  018C                     	;# 
  3050  018D                     	;# 
  3051  018E                     	;# 
  3052  018F                     	;# 
  3053  0190                     	;# 
  3054  0191                     	;# 
  3055  0192                     	;# 
  3056  020C                     	;# 
  3057  020C                     	;# 
  3058  020D                     	;# 
  3059  020E                     	;# 
  3060  020F                     	;# 
  3061  020F                     	;# 
  3062  0210                     	;# 
  3063  0210                     	;# 
  3064  0211                     	;# 
  3065  0211                     	;# 
  3066  028C                     	;# 
  3067  028C                     	;# 
  3068  028D                     	;# 
  3069  028D                     	;# 
  3070  028E                     	;# 
  3071  028F                     	;# 
  3072  0290                     	;# 
  3073  0291                     	;# 
  3074  030C                     	;# 
  3075  030C                     	;# 
  3076  030D                     	;# 
  3077  030E                     	;# 
  3078  030F                     	;# 
  3079  0310                     	;# 
  3080  0310                     	;# 
  3081  0311                     	;# 
  3082  0312                     	;# 
  3083  0313                     	;# 
  3084  0314                     	;# 
  3085  0314                     	;# 
  3086  0315                     	;# 
  3087  0316                     	;# 
  3088  0318                     	;# 
  3089  0318                     	;# 
  3090  0319                     	;# 
  3091  031A                     	;# 
  3092  031C                     	;# 
  3093  031C                     	;# 
  3094  031D                     	;# 
  3095  031E                     	;# 
  3096  038C                     	;# 
  3097  038C                     	;# 
  3098  038D                     	;# 
  3099  038E                     	;# 
  3100  058C                     	;# 
  3101  058C                     	;# 
  3102  058D                     	;# 
  3103  058E                     	;# 
  3104  058F                     	;# 
  3105  058F                     	;# 
  3106  0590                     	;# 
  3107  0591                     	;# 
  3108  0592                     	;# 
  3109  0593                     	;# 
  3110  059C                     	;# 
  3111  059C                     	;# 
  3112  059D                     	;# 
  3113  059D                     	;# 
  3114  059E                     	;# 
  3115  059F                     	;# 
  3116  060C                     	;# 
  3117  060D                     	;# 
  3118  060E                     	;# 
  3119  060F                     	;# 
  3120  0610                     	;# 
  3121  0611                     	;# 
  3122  0612                     	;# 
  3123  0613                     	;# 
  3124  0614                     	;# 
  3125  070C                     	;# 
  3126  070D                     	;# 
  3127  070E                     	;# 
  3128  070F                     	;# 
  3129  0710                     	;# 
  3130  0711                     	;# 
  3131  0712                     	;# 
  3132  0713                     	;# 
  3133  0716                     	;# 
  3134  0717                     	;# 
  3135  0718                     	;# 
  3136  0719                     	;# 
  3137  071A                     	;# 
  3138  071B                     	;# 
  3139  071C                     	;# 
  3140  071D                     	;# 
  3141  0796                     	;# 
  3142  0797                     	;# 
  3143  0798                     	;# 
  3144  0799                     	;# 
  3145  079A                     	;# 
  3146  079B                     	;# 
  3147  080C                     	;# 
  3148  080D                     	;# 
  3149  080E                     	;# 
  3150  080F                     	;# 
  3151  0810                     	;# 
  3152  0811                     	;# 
  3153  0812                     	;# 
  3154  0813                     	;# 
  3155  0814                     	;# 
  3156  081A                     	;# 
  3157  081A                     	;# 
  3158  081B                     	;# 
  3159  081C                     	;# 
  3160  081C                     	;# 
  3161  081D                     	;# 
  3162  081E                     	;# 
  3163  081F                     	;# 
  3164  088C                     	;# 
  3165  088D                     	;# 
  3166  088E                     	;# 
  3167  088F                     	;# 
  3168  0890                     	;# 
  3169  0891                     	;# 
  3170  0892                     	;# 
  3171  0893                     	;# 
  3172  0895                     	;# 
  3173  0896                     	;# 
  3174  090C                     	;# 
  3175  090E                     	;# 
  3176  090F                     	;# 
  3177  091F                     	;# 
  3178  098F                     	;# 
  3179  098F                     	;# 
  3180  0990                     	;# 
  3181  0991                     	;# 
  3182  0992                     	;# 
  3183  0993                     	;# 
  3184  0994                     	;# 
  3185  0995                     	;# 
  3186  0996                     	;# 
  3187  0997                     	;# 
  3188  1E0F                     	;# 
  3189  1E10                     	;# 
  3190  1E11                     	;# 
  3191  1E12                     	;# 
  3192  1E13                     	;# 
  3193  1E14                     	;# 
  3194  1E15                     	;# 
  3195  1E16                     	;# 
  3196  1E17                     	;# 
  3197  1E18                     	;# 
  3198  1E19                     	;# 
  3199  1E1A                     	;# 
  3200  1E1B                     	;# 
  3201  1E1C                     	;# 
  3202  1E1D                     	;# 
  3203  1E1E                     	;# 
  3204  1E1F                     	;# 
  3205  1E20                     	;# 
  3206  1E21                     	;# 
  3207  1E22                     	;# 
  3208  1E23                     	;# 
  3209  1E24                     	;# 
  3210  1E25                     	;# 
  3211  1E26                     	;# 
  3212  1E27                     	;# 
  3213  1E28                     	;# 
  3214  1E29                     	;# 
  3215  1E2A                     	;# 
  3216  1E2B                     	;# 
  3217  1E2C                     	;# 
  3218  1E2D                     	;# 
  3219  1E2E                     	;# 
  3220  1E2F                     	;# 
  3221  1E30                     	;# 
  3222  1E31                     	;# 
  3223  1E32                     	;# 
  3224  1E33                     	;# 
  3225  1E34                     	;# 
  3226  1E35                     	;# 
  3227  1E36                     	;# 
  3228  1E37                     	;# 
  3229  1E8F                     	;# 
  3230  1E90                     	;# 
  3231  1E91                     	;# 
  3232  1E92                     	;# 
  3233  1E93                     	;# 
  3234  1E9C                     	;# 
  3235  1EA1                     	;# 
  3236  1EA2                     	;# 
  3237  1EB1                     	;# 
  3238  1EBB                     	;# 
  3239  1EBC                     	;# 
  3240  1EBD                     	;# 
  3241  1EBE                     	;# 
  3242  1EC3                     	;# 
  3243  1EC5                     	;# 
  3244  1EC6                     	;# 
  3245  1EC7                     	;# 
  3246  1ECB                     	;# 
  3247  1ECC                     	;# 
  3248  1F10                     	;# 
  3249  1F11                     	;# 
  3250  1F12                     	;# 
  3251  1F13                     	;# 
  3252  1F14                     	;# 
  3253  1F15                     	;# 
  3254  1F20                     	;# 
  3255  1F21                     	;# 
  3256  1F22                     	;# 
  3257  1F23                     	;# 
  3258  1F24                     	;# 
  3259  1F25                     	;# 
  3260  1F38                     	;# 
  3261  1F39                     	;# 
  3262  1F3A                     	;# 
  3263  1F3B                     	;# 
  3264  1F3C                     	;# 
  3265  1F3D                     	;# 
  3266  1F3E                     	;# 
  3267  1F3F                     	;# 
  3268  1F4E                     	;# 
  3269  1F4F                     	;# 
  3270  1F50                     	;# 
  3271  1F51                     	;# 
  3272  1F52                     	;# 
  3273  1F53                     	;# 
  3274  1F54                     	;# 
  3275  1F55                     	;# 
  3276  1FE4                     	;# 
  3277  1FE5                     	;# 
  3278  1FE6                     	;# 
  3279  1FE7                     	;# 
  3280  1FE8                     	;# 
  3281  1FE8                     	;# 
  3282  1FE9                     	;# 
  3283  1FEA                     	;# 
  3284  1FEA                     	;# 
  3285  1FEB                     	;# 
  3286  1FED                     	;# 
  3287  1FEE                     	;# 
  3288  1FEF                     	;# 
  3289  0000                     	;# 
  3290  0001                     	;# 
  3291  0002                     	;# 
  3292  0003                     	;# 
  3293  0004                     	;# 
  3294  0005                     	;# 
  3295  0006                     	;# 
  3296  0007                     	;# 
  3297  0008                     	;# 
  3298  0009                     	;# 
  3299  000A                     	;# 
  3300  000B                     	;# 
  3301  000C                     	;# 
  3302  000E                     	;# 
  3303  0012                     	;# 
  3304  0014                     	;# 
  3305  0018                     	;# 
  3306  001A                     	;# 
  3307  009B                     	;# 
  3308  009B                     	;# 
  3309  009C                     	;# 
  3310  009D                     	;# 
  3311  009E                     	;# 
  3312  009F                     	;# 
  3313  0119                     	;# 
  3314  0119                     	;# 
  3315  0119                     	;# 
  3316  011A                     	;# 
  3317  011A                     	;# 
  3318  011A                     	;# 
  3319  011B                     	;# 
  3320  011B                     	;# 
  3321  011B                     	;# 
  3322  011B                     	;# 
  3323  011B                     	;# 
  3324  011C                     	;# 
  3325  011C                     	;# 
  3326  011C                     	;# 
  3327  011D                     	;# 
  3328  011D                     	;# 
  3329  011D                     	;# 
  3330  011E                     	;# 
  3331  011E                     	;# 
  3332  011E                     	;# 
  3333  011F                     	;# 
  3334  011F                     	;# 
  3335  011F                     	;# 
  3336  011F                     	;# 
  3337  011F                     	;# 
  3338  018C                     	;# 
  3339  018D                     	;# 
  3340  018E                     	;# 
  3341  018F                     	;# 
  3342  0190                     	;# 
  3343  0191                     	;# 
  3344  0192                     	;# 
  3345  020C                     	;# 
  3346  020C                     	;# 
  3347  020D                     	;# 
  3348  020E                     	;# 
  3349  020F                     	;# 
  3350  020F                     	;# 
  3351  0210                     	;# 
  3352  0210                     	;# 
  3353  0211                     	;# 
  3354  0211                     	;# 
  3355  028C                     	;# 
  3356  028C                     	;# 
  3357  028D                     	;# 
  3358  028D                     	;# 
  3359  028E                     	;# 
  3360  028F                     	;# 
  3361  0290                     	;# 
  3362  0291                     	;# 
  3363  030C                     	;# 
  3364  030C                     	;# 
  3365  030D                     	;# 
  3366  030E                     	;# 
  3367  030F                     	;# 
  3368  0310                     	;# 
  3369  0310                     	;# 
  3370  0311                     	;# 
  3371  0312                     	;# 
  3372  0313                     	;# 
  3373  0314                     	;# 
  3374  0314                     	;# 
  3375  0315                     	;# 
  3376  0316                     	;# 
  3377  0318                     	;# 
  3378  0318                     	;# 
  3379  0319                     	;# 
  3380  031A                     	;# 
  3381  031C                     	;# 
  3382  031C                     	;# 
  3383  031D                     	;# 
  3384  031E                     	;# 
  3385  038C                     	;# 
  3386  038C                     	;# 
  3387  038D                     	;# 
  3388  038E                     	;# 
  3389  058C                     	;# 
  3390  058C                     	;# 
  3391  058D                     	;# 
  3392  058E                     	;# 
  3393  058F                     	;# 
  3394  058F                     	;# 
  3395  0590                     	;# 
  3396  0591                     	;# 
  3397  0592                     	;# 
  3398  0593                     	;# 
  3399  059C                     	;# 
  3400  059C                     	;# 
  3401  059D                     	;# 
  3402  059D                     	;# 
  3403  059E                     	;# 
  3404  059F                     	;# 
  3405  060C                     	;# 
  3406  060D                     	;# 
  3407  060E                     	;# 
  3408  060F                     	;# 
  3409  0610                     	;# 
  3410  0611                     	;# 
  3411  0612                     	;# 
  3412  0613                     	;# 
  3413  0614                     	;# 
  3414  070C                     	;# 
  3415  070D                     	;# 
  3416  070E                     	;# 
  3417  070F                     	;# 
  3418  0710                     	;# 
  3419  0711                     	;# 
  3420  0712                     	;# 
  3421  0713                     	;# 
  3422  0716                     	;# 
  3423  0717                     	;# 
  3424  0718                     	;# 
  3425  0719                     	;# 
  3426  071A                     	;# 
  3427  071B                     	;# 
  3428  071C                     	;# 
  3429  071D                     	;# 
  3430  0796                     	;# 
  3431  0797                     	;# 
  3432  0798                     	;# 
  3433  0799                     	;# 
  3434  079A                     	;# 
  3435  079B                     	;# 
  3436  080C                     	;# 
  3437  080D                     	;# 
  3438  080E                     	;# 
  3439  080F                     	;# 
  3440  0810                     	;# 
  3441  0811                     	;# 
  3442  0812                     	;# 
  3443  0813                     	;# 
  3444  0814                     	;# 
  3445  081A                     	;# 
  3446  081A                     	;# 
  3447  081B                     	;# 
  3448  081C                     	;# 
  3449  081C                     	;# 
  3450  081D                     	;# 
  3451  081E                     	;# 
  3452  081F                     	;# 
  3453  088C                     	;# 
  3454  088D                     	;# 
  3455  088E                     	;# 
  3456  088F                     	;# 
  3457  0890                     	;# 
  3458  0891                     	;# 
  3459  0892                     	;# 
  3460  0893                     	;# 
  3461  0895                     	;# 
  3462  0896                     	;# 
  3463  090C                     	;# 
  3464  090E                     	;# 
  3465  090F                     	;# 
  3466  091F                     	;# 
  3467  098F                     	;# 
  3468  098F                     	;# 
  3469  0990                     	;# 
  3470  0991                     	;# 
  3471  0992                     	;# 
  3472  0993                     	;# 
  3473  0994                     	;# 
  3474  0995                     	;# 
  3475  0996                     	;# 
  3476  0997                     	;# 
  3477  1E0F                     	;# 
  3478  1E10                     	;# 
  3479  1E11                     	;# 
  3480  1E12                     	;# 
  3481  1E13                     	;# 
  3482  1E14                     	;# 
  3483  1E15                     	;# 
  3484  1E16                     	;# 
  3485  1E17                     	;# 
  3486  1E18                     	;# 
  3487  1E19                     	;# 
  3488  1E1A                     	;# 
  3489  1E1B                     	;# 
  3490  1E1C                     	;# 
  3491  1E1D                     	;# 
  3492  1E1E                     	;# 
  3493  1E1F                     	;# 
  3494  1E20                     	;# 
  3495  1E21                     	;# 
  3496  1E22                     	;# 
  3497  1E23                     	;# 
  3498  1E24                     	;# 
  3499  1E25                     	;# 
  3500  1E26                     	;# 
  3501  1E27                     	;# 
  3502  1E28                     	;# 
  3503  1E29                     	;# 
  3504  1E2A                     	;# 
  3505  1E2B                     	;# 
  3506  1E2C                     	;# 
  3507  1E2D                     	;# 
  3508  1E2E                     	;# 
  3509  1E2F                     	;# 
  3510  1E30                     	;# 
  3511  1E31                     	;# 
  3512  1E32                     	;# 
  3513  1E33                     	;# 
  3514  1E34                     	;# 
  3515  1E35                     	;# 
  3516  1E36                     	;# 
  3517  1E37                     	;# 
  3518  1E8F                     	;# 
  3519  1E90                     	;# 
  3520  1E91                     	;# 
  3521  1E92                     	;# 
  3522  1E93                     	;# 
  3523  1E9C                     	;# 
  3524  1EA1                     	;# 
  3525  1EA2                     	;# 
  3526  1EB1                     	;# 
  3527  1EBB                     	;# 
  3528  1EBC                     	;# 
  3529  1EBD                     	;# 
  3530  1EBE                     	;# 
  3531  1EC3                     	;# 
  3532  1EC5                     	;# 
  3533  1EC6                     	;# 
  3534  1EC7                     	;# 
  3535  1ECB                     	;# 
  3536  1ECC                     	;# 
  3537  1F10                     	;# 
  3538  1F11                     	;# 
  3539  1F12                     	;# 
  3540  1F13                     	;# 
  3541  1F14                     	;# 
  3542  1F15                     	;# 
  3543  1F20                     	;# 
  3544  1F21                     	;# 
  3545  1F22                     	;# 
  3546  1F23                     	;# 
  3547  1F24                     	;# 
  3548  1F25                     	;# 
  3549  1F38                     	;# 
  3550  1F39                     	;# 
  3551  1F3A                     	;# 
  3552  1F3B                     	;# 
  3553  1F3C                     	;# 
  3554  1F3D                     	;# 
  3555  1F3E                     	;# 
  3556  1F3F                     	;# 
  3557  1F4E                     	;# 
  3558  1F4F                     	;# 
  3559  1F50                     	;# 
  3560  1F51                     	;# 
  3561  1F52                     	;# 
  3562  1F53                     	;# 
  3563  1F54                     	;# 
  3564  1F55                     	;# 
  3565  1FE4                     	;# 
  3566  1FE5                     	;# 
  3567  1FE6                     	;# 
  3568  1FE7                     	;# 
  3569  1FE8                     	;# 
  3570  1FE8                     	;# 
  3571  1FE9                     	;# 
  3572  1FEA                     	;# 
  3573  1FEA                     	;# 
  3574  1FEB                     	;# 
  3575  1FED                     	;# 
  3576  1FEE                     	;# 
  3577  1FEF                     	;# 
  3578  0000                     	;# 
  3579  0001                     	;# 
  3580  0002                     	;# 
  3581  0003                     	;# 
  3582  0004                     	;# 
  3583  0005                     	;# 
  3584  0006                     	;# 
  3585  0007                     	;# 
  3586  0008                     	;# 
  3587  0009                     	;# 
  3588  000A                     	;# 
  3589  000B                     	;# 
  3590  000C                     	;# 
  3591  000E                     	;# 
  3592  0012                     	;# 
  3593  0014                     	;# 
  3594  0018                     	;# 
  3595  001A                     	;# 
  3596  009B                     	;# 
  3597  009B                     	;# 
  3598  009C                     	;# 
  3599  009D                     	;# 
  3600  009E                     	;# 
  3601  009F                     	;# 
  3602  0119                     	;# 
  3603  0119                     	;# 
  3604  0119                     	;# 
  3605  011A                     	;# 
  3606  011A                     	;# 
  3607  011A                     	;# 
  3608  011B                     	;# 
  3609  011B                     	;# 
  3610  011B                     	;# 
  3611  011B                     	;# 
  3612  011B                     	;# 
  3613  011C                     	;# 
  3614  011C                     	;# 
  3615  011C                     	;# 
  3616  011D                     	;# 
  3617  011D                     	;# 
  3618  011D                     	;# 
  3619  011E                     	;# 
  3620  011E                     	;# 
  3621  011E                     	;# 
  3622  011F                     	;# 
  3623  011F                     	;# 
  3624  011F                     	;# 
  3625  011F                     	;# 
  3626  011F                     	;# 
  3627  018C                     	;# 
  3628  018D                     	;# 
  3629  018E                     	;# 
  3630  018F                     	;# 
  3631  0190                     	;# 
  3632  0191                     	;# 
  3633  0192                     	;# 
  3634  020C                     	;# 
  3635  020C                     	;# 
  3636  020D                     	;# 
  3637  020E                     	;# 
  3638  020F                     	;# 
  3639  020F                     	;# 
  3640  0210                     	;# 
  3641  0210                     	;# 
  3642  0211                     	;# 
  3643  0211                     	;# 
  3644  028C                     	;# 
  3645  028C                     	;# 
  3646  028D                     	;# 
  3647  028D                     	;# 
  3648  028E                     	;# 
  3649  028F                     	;# 
  3650  0290                     	;# 
  3651  0291                     	;# 
  3652  030C                     	;# 
  3653  030C                     	;# 
  3654  030D                     	;# 
  3655  030E                     	;# 
  3656  030F                     	;# 
  3657  0310                     	;# 
  3658  0310                     	;# 
  3659  0311                     	;# 
  3660  0312                     	;# 
  3661  0313                     	;# 
  3662  0314                     	;# 
  3663  0314                     	;# 
  3664  0315                     	;# 
  3665  0316                     	;# 
  3666  0318                     	;# 
  3667  0318                     	;# 
  3668  0319                     	;# 
  3669  031A                     	;# 
  3670  031C                     	;# 
  3671  031C                     	;# 
  3672  031D                     	;# 
  3673  031E                     	;# 
  3674  038C                     	;# 
  3675  038C                     	;# 
  3676  038D                     	;# 
  3677  038E                     	;# 
  3678  058C                     	;# 
  3679  058C                     	;# 
  3680  058D                     	;# 
  3681  058E                     	;# 
  3682  058F                     	;# 
  3683  058F                     	;# 
  3684  0590                     	;# 
  3685  0591                     	;# 
  3686  0592                     	;# 
  3687  0593                     	;# 
  3688  059C                     	;# 
  3689  059C                     	;# 
  3690  059D                     	;# 
  3691  059D                     	;# 
  3692  059E                     	;# 
  3693  059F                     	;# 
  3694  060C                     	;# 
  3695  060D                     	;# 
  3696  060E                     	;# 
  3697  060F                     	;# 
  3698  0610                     	;# 
  3699  0611                     	;# 
  3700  0612                     	;# 
  3701  0613                     	;# 
  3702  0614                     	;# 
  3703  070C                     	;# 
  3704  070D                     	;# 
  3705  070E                     	;# 
  3706  070F                     	;# 
  3707  0710                     	;# 
  3708  0711                     	;# 
  3709  0712                     	;# 
  3710  0713                     	;# 
  3711  0716                     	;# 
  3712  0717                     	;# 
  3713  0718                     	;# 
  3714  0719                     	;# 
  3715  071A                     	;# 
  3716  071B                     	;# 
  3717  071C                     	;# 
  3718  071D                     	;# 
  3719  0796                     	;# 
  3720  0797                     	;# 
  3721  0798                     	;# 
  3722  0799                     	;# 
  3723  079A                     	;# 
  3724  079B                     	;# 
  3725  080C                     	;# 
  3726  080D                     	;# 
  3727  080E                     	;# 
  3728  080F                     	;# 
  3729  0810                     	;# 
  3730  0811                     	;# 
  3731  0812                     	;# 
  3732  0813                     	;# 
  3733  0814                     	;# 
  3734  081A                     	;# 
  3735  081A                     	;# 
  3736  081B                     	;# 
  3737  081C                     	;# 
  3738  081C                     	;# 
  3739  081D                     	;# 
  3740  081E                     	;# 
  3741  081F                     	;# 
  3742  088C                     	;# 
  3743  088D                     	;# 
  3744  088E                     	;# 
  3745  088F                     	;# 
  3746  0890                     	;# 
  3747  0891                     	;# 
  3748  0892                     	;# 
  3749  0893                     	;# 
  3750  0895                     	;# 
  3751  0896                     	;# 
  3752  090C                     	;# 
  3753  090E                     	;# 
  3754  090F                     	;# 
  3755  091F                     	;# 
  3756  098F                     	;# 
  3757  098F                     	;# 
  3758  0990                     	;# 
  3759  0991                     	;# 
  3760  0992                     	;# 
  3761  0993                     	;# 
  3762  0994                     	;# 
  3763  0995                     	;# 
  3764  0996                     	;# 
  3765  0997                     	;# 
  3766  1E0F                     	;# 
  3767  1E10                     	;# 
  3768  1E11                     	;# 
  3769  1E12                     	;# 
  3770  1E13                     	;# 
  3771  1E14                     	;# 
  3772  1E15                     	;# 
  3773  1E16                     	;# 
  3774  1E17                     	;# 
  3775  1E18                     	;# 
  3776  1E19                     	;# 
  3777  1E1A                     	;# 
  3778  1E1B                     	;# 
  3779  1E1C                     	;# 
  3780  1E1D                     	;# 
  3781  1E1E                     	;# 
  3782  1E1F                     	;# 
  3783  1E20                     	;# 
  3784  1E21                     	;# 
  3785  1E22                     	;# 
  3786  1E23                     	;# 
  3787  1E24                     	;# 
  3788  1E25                     	;# 
  3789  1E26                     	;# 
  3790  1E27                     	;# 
  3791  1E28                     	;# 
  3792  1E29                     	;# 
  3793  1E2A                     	;# 
  3794  1E2B                     	;# 
  3795  1E2C                     	;# 
  3796  1E2D                     	;# 
  3797  1E2E                     	;# 
  3798  1E2F                     	;# 
  3799  1E30                     	;# 
  3800  1E31                     	;# 
  3801  1E32                     	;# 
  3802  1E33                     	;# 
  3803  1E34                     	;# 
  3804  1E35                     	;# 
  3805  1E36                     	;# 
  3806  1E37                     	;# 
  3807  1E8F                     	;# 
  3808  1E90                     	;# 
  3809  1E91                     	;# 
  3810  1E92                     	;# 
  3811  1E93                     	;# 
  3812  1E9C                     	;# 
  3813  1EA1                     	;# 
  3814  1EA2                     	;# 
  3815  1EB1                     	;# 
  3816  1EBB                     	;# 
  3817  1EBC                     	;# 
  3818  1EBD                     	;# 
  3819  1EBE                     	;# 
  3820  1EC3                     	;# 
  3821  1EC5                     	;# 
  3822  1EC6                     	;# 
  3823  1EC7                     	;# 
  3824  1ECB                     	;# 
  3825  1ECC                     	;# 
  3826  1F10                     	;# 
  3827  1F11                     	;# 
  3828  1F12                     	;# 
  3829  1F13                     	;# 
  3830  1F14                     	;# 
  3831  1F15                     	;# 
  3832  1F20                     	;# 
  3833  1F21                     	;# 
  3834  1F22                     	;# 
  3835  1F23                     	;# 
  3836  1F24                     	;# 
  3837  1F25                     	;# 
  3838  1F38                     	;# 
  3839  1F39                     	;# 
  3840  1F3A                     	;# 
  3841  1F3B                     	;# 
  3842  1F3C                     	;# 
  3843  1F3D                     	;# 
  3844  1F3E                     	;# 
  3845  1F3F                     	;# 
  3846  1F4E                     	;# 
  3847  1F4F                     	;# 
  3848  1F50                     	;# 
  3849  1F51                     	;# 
  3850  1F52                     	;# 
  3851  1F53                     	;# 
  3852  1F54                     	;# 
  3853  1F55                     	;# 
  3854  1FE4                     	;# 
  3855  1FE5                     	;# 
  3856  1FE6                     	;# 
  3857  1FE7                     	;# 
  3858  1FE8                     	;# 
  3859  1FE8                     	;# 
  3860  1FE9                     	;# 
  3861  1FEA                     	;# 
  3862  1FEA                     	;# 
  3863  1FEB                     	;# 
  3864  1FED                     	;# 
  3865  1FEE                     	;# 
  3866  1FEF                     	;# 
  3867  0000                     	;# 
  3868  0001                     	;# 
  3869  0002                     	;# 
  3870  0003                     	;# 
  3871  0004                     	;# 
  3872  0005                     	;# 
  3873  0006                     	;# 
  3874  0007                     	;# 
  3875  0008                     	;# 
  3876  0009                     	;# 
  3877  000A                     	;# 
  3878  000B                     	;# 
  3879  000C                     	;# 
  3880  000E                     	;# 
  3881  0012                     	;# 
  3882  0014                     	;# 
  3883  0018                     	;# 
  3884  001A                     	;# 
  3885  009B                     	;# 
  3886  009B                     	;# 
  3887  009C                     	;# 
  3888  009D                     	;# 
  3889  009E                     	;# 
  3890  009F                     	;# 
  3891  0119                     	;# 
  3892  0119                     	;# 
  3893  0119                     	;# 
  3894  011A                     	;# 
  3895  011A                     	;# 
  3896  011A                     	;# 
  3897  011B                     	;# 
  3898  011B                     	;# 
  3899  011B                     	;# 
  3900  011B                     	;# 
  3901  011B                     	;# 
  3902  011C                     	;# 
  3903  011C                     	;# 
  3904  011C                     	;# 
  3905  011D                     	;# 
  3906  011D                     	;# 
  3907  011D                     	;# 
  3908  011E                     	;# 
  3909  011E                     	;# 
  3910  011E                     	;# 
  3911  011F                     	;# 
  3912  011F                     	;# 
  3913  011F                     	;# 
  3914  011F                     	;# 
  3915  011F                     	;# 
  3916  018C                     	;# 
  3917  018D                     	;# 
  3918  018E                     	;# 
  3919  018F                     	;# 
  3920  0190                     	;# 
  3921  0191                     	;# 
  3922  0192                     	;# 
  3923  020C                     	;# 
  3924  020C                     	;# 
  3925  020D                     	;# 
  3926  020E                     	;# 
  3927  020F                     	;# 
  3928  020F                     	;# 
  3929  0210                     	;# 
  3930  0210                     	;# 
  3931  0211                     	;# 
  3932  0211                     	;# 
  3933  028C                     	;# 
  3934  028C                     	;# 
  3935  028D                     	;# 
  3936  028D                     	;# 
  3937  028E                     	;# 
  3938  028F                     	;# 
  3939  0290                     	;# 
  3940  0291                     	;# 
  3941  030C                     	;# 
  3942  030C                     	;# 
  3943  030D                     	;# 
  3944  030E                     	;# 
  3945  030F                     	;# 
  3946  0310                     	;# 
  3947  0310                     	;# 
  3948  0311                     	;# 
  3949  0312                     	;# 
  3950  0313                     	;# 
  3951  0314                     	;# 
  3952  0314                     	;# 
  3953  0315                     	;# 
  3954  0316                     	;# 
  3955  0318                     	;# 
  3956  0318                     	;# 
  3957  0319                     	;# 
  3958  031A                     	;# 
  3959  031C                     	;# 
  3960  031C                     	;# 
  3961  031D                     	;# 
  3962  031E                     	;# 
  3963  038C                     	;# 
  3964  038C                     	;# 
  3965  038D                     	;# 
  3966  038E                     	;# 
  3967  058C                     	;# 
  3968  058C                     	;# 
  3969  058D                     	;# 
  3970  058E                     	;# 
  3971  058F                     	;# 
  3972  058F                     	;# 
  3973  0590                     	;# 
  3974  0591                     	;# 
  3975  0592                     	;# 
  3976  0593                     	;# 
  3977  059C                     	;# 
  3978  059C                     	;# 
  3979  059D                     	;# 
  3980  059D                     	;# 
  3981  059E                     	;# 
  3982  059F                     	;# 
  3983  060C                     	;# 
  3984  060D                     	;# 
  3985  060E                     	;# 
  3986  060F                     	;# 
  3987  0610                     	;# 
  3988  0611                     	;# 
  3989  0612                     	;# 
  3990  0613                     	;# 
  3991  0614                     	;# 
  3992  070C                     	;# 
  3993  070D                     	;# 
  3994  070E                     	;# 
  3995  070F                     	;# 
  3996  0710                     	;# 
  3997  0711                     	;# 
  3998  0712                     	;# 
  3999  0713                     	;# 
  4000  0716                     	;# 
  4001  0717                     	;# 
  4002  0718                     	;# 
  4003  0719                     	;# 
  4004  071A                     	;# 
  4005  071B                     	;# 
  4006  071C                     	;# 
  4007  071D                     	;# 
  4008  0796                     	;# 
  4009  0797                     	;# 
  4010  0798                     	;# 
  4011  0799                     	;# 
  4012  079A                     	;# 
  4013  079B                     	;# 
  4014  080C                     	;# 
  4015  080D                     	;# 
  4016  080E                     	;# 
  4017  080F                     	;# 
  4018  0810                     	;# 
  4019  0811                     	;# 
  4020  0812                     	;# 
  4021  0813                     	;# 
  4022  0814                     	;# 
  4023  081A                     	;# 
  4024  081A                     	;# 
  4025  081B                     	;# 
  4026  081C                     	;# 
  4027  081C                     	;# 
  4028  081D                     	;# 
  4029  081E                     	;# 
  4030  081F                     	;# 
  4031  088C                     	;# 
  4032  088D                     	;# 
  4033  088E                     	;# 
  4034  088F                     	;# 
  4035  0890                     	;# 
  4036  0891                     	;# 
  4037  0892                     	;# 
  4038  0893                     	;# 
  4039  0895                     	;# 
  4040  0896                     	;# 
  4041  090C                     	;# 
  4042  090E                     	;# 
  4043  090F                     	;# 
  4044  091F                     	;# 
  4045  098F                     	;# 
  4046  098F                     	;# 
  4047  0990                     	;# 
  4048  0991                     	;# 
  4049  0992                     	;# 
  4050  0993                     	;# 
  4051  0994                     	;# 
  4052  0995                     	;# 
  4053  0996                     	;# 
  4054  0997                     	;# 
  4055  1E0F                     	;# 
  4056  1E10                     	;# 
  4057  1E11                     	;# 
  4058  1E12                     	;# 
  4059  1E13                     	;# 
  4060  1E14                     	;# 
  4061  1E15                     	;# 
  4062  1E16                     	;# 
  4063  1E17                     	;# 
  4064  1E18                     	;# 
  4065  1E19                     	;# 
  4066  1E1A                     	;# 
  4067  1E1B                     	;# 
  4068  1E1C                     	;# 
  4069  1E1D                     	;# 
  4070  1E1E                     	;# 
  4071  1E1F                     	;# 
  4072  1E20                     	;# 
  4073  1E21                     	;# 
  4074  1E22                     	;# 
  4075  1E23                     	;# 
  4076  1E24                     	;# 
  4077  1E25                     	;# 
  4078  1E26                     	;# 
  4079  1E27                     	;# 
  4080  1E28                     	;# 
  4081  1E29                     	;# 
  4082  1E2A                     	;# 
  4083  1E2B                     	;# 
  4084  1E2C                     	;# 
  4085  1E2D                     	;# 
  4086  1E2E                     	;# 
  4087  1E2F                     	;# 
  4088  1E30                     	;# 
  4089  1E31                     	;# 
  4090  1E32                     	;# 
  4091  1E33                     	;# 
  4092  1E34                     	;# 
  4093  1E35                     	;# 
  4094  1E36                     	;# 
  4095  1E37                     	;# 
  4096  1E8F                     	;# 
  4097  1E90                     	;# 
  4098  1E91                     	;# 
  4099  1E92                     	;# 
  4100  1E93                     	;# 
  4101  1E9C                     	;# 
  4102  1EA1                     	;# 
  4103  1EA2                     	;# 
  4104  1EB1                     	;# 
  4105  1EBB                     	;# 
  4106  1EBC                     	;# 
  4107  1EBD                     	;# 
  4108  1EBE                     	;# 
  4109  1EC3                     	;# 
  4110  1EC5                     	;# 
  4111  1EC6                     	;# 
  4112  1EC7                     	;# 
  4113  1ECB                     	;# 
  4114  1ECC                     	;# 
  4115  1F10                     	;# 
  4116  1F11                     	;# 
  4117  1F12                     	;# 
  4118  1F13                     	;# 
  4119  1F14                     	;# 
  4120  1F15                     	;# 
  4121  1F20                     	;# 
  4122  1F21                     	;# 
  4123  1F22                     	;# 
  4124  1F23                     	;# 
  4125  1F24                     	;# 
  4126  1F25                     	;# 
  4127  1F38                     	;# 
  4128  1F39                     	;# 
  4129  1F3A                     	;# 
  4130  1F3B                     	;# 
  4131  1F3C                     	;# 
  4132  1F3D                     	;# 
  4133  1F3E                     	;# 
  4134  1F3F                     	;# 
  4135  1F4E                     	;# 
  4136  1F4F                     	;# 
  4137  1F50                     	;# 
  4138  1F51                     	;# 
  4139  1F52                     	;# 
  4140  1F53                     	;# 
  4141  1F54                     	;# 
  4142  1F55                     	;# 
  4143  1FE4                     	;# 
  4144  1FE5                     	;# 
  4145  1FE6                     	;# 
  4146  1FE7                     	;# 
  4147  1FE8                     	;# 
  4148  1FE8                     	;# 
  4149  1FE9                     	;# 
  4150  1FEA                     	;# 
  4151  1FEA                     	;# 
  4152  1FEB                     	;# 
  4153  1FED                     	;# 
  4154  1FEE                     	;# 
  4155  1FEF                     	;# 
  4156  0000                     	;# 
  4157  0001                     	;# 
  4158  0002                     	;# 
  4159  0003                     	;# 
  4160  0004                     	;# 
  4161  0005                     	;# 
  4162  0006                     	;# 
  4163  0007                     	;# 
  4164  0008                     	;# 
  4165  0009                     	;# 
  4166  000A                     	;# 
  4167  000B                     	;# 
  4168  000C                     	;# 
  4169  000E                     	;# 
  4170  0012                     	;# 
  4171  0014                     	;# 
  4172  0018                     	;# 
  4173  001A                     	;# 
  4174  009B                     	;# 
  4175  009B                     	;# 
  4176  009C                     	;# 
  4177  009D                     	;# 
  4178  009E                     	;# 
  4179  009F                     	;# 
  4180  0119                     	;# 
  4181  0119                     	;# 
  4182  0119                     	;# 
  4183  011A                     	;# 
  4184  011A                     	;# 
  4185  011A                     	;# 
  4186  011B                     	;# 
  4187  011B                     	;# 
  4188  011B                     	;# 
  4189  011B                     	;# 
  4190  011B                     	;# 
  4191  011C                     	;# 
  4192  011C                     	;# 
  4193  011C                     	;# 
  4194  011D                     	;# 
  4195  011D                     	;# 
  4196  011D                     	;# 
  4197  011E                     	;# 
  4198  011E                     	;# 
  4199  011E                     	;# 
  4200  011F                     	;# 
  4201  011F                     	;# 
  4202  011F                     	;# 
  4203  011F                     	;# 
  4204  011F                     	;# 
  4205  018C                     	;# 
  4206  018D                     	;# 
  4207  018E                     	;# 
  4208  018F                     	;# 
  4209  0190                     	;# 
  4210  0191                     	;# 
  4211  0192                     	;# 
  4212  020C                     	;# 
  4213  020C                     	;# 
  4214  020D                     	;# 
  4215  020E                     	;# 
  4216  020F                     	;# 
  4217  020F                     	;# 
  4218  0210                     	;# 
  4219  0210                     	;# 
  4220  0211                     	;# 
  4221  0211                     	;# 
  4222  028C                     	;# 
  4223  028C                     	;# 
  4224  028D                     	;# 
  4225  028D                     	;# 
  4226  028E                     	;# 
  4227  028F                     	;# 
  4228  0290                     	;# 
  4229  0291                     	;# 
  4230  030C                     	;# 
  4231  030C                     	;# 
  4232  030D                     	;# 
  4233  030E                     	;# 
  4234  030F                     	;# 
  4235  0310                     	;# 
  4236  0310                     	;# 
  4237  0311                     	;# 
  4238  0312                     	;# 
  4239  0313                     	;# 
  4240  0314                     	;# 
  4241  0314                     	;# 
  4242  0315                     	;# 
  4243  0316                     	;# 
  4244  0318                     	;# 
  4245  0318                     	;# 
  4246  0319                     	;# 
  4247  031A                     	;# 
  4248  031C                     	;# 
  4249  031C                     	;# 
  4250  031D                     	;# 
  4251  031E                     	;# 
  4252  038C                     	;# 
  4253  038C                     	;# 
  4254  038D                     	;# 
  4255  038E                     	;# 
  4256  058C                     	;# 
  4257  058C                     	;# 
  4258  058D                     	;# 
  4259  058E                     	;# 
  4260  058F                     	;# 
  4261  058F                     	;# 
  4262  0590                     	;# 
  4263  0591                     	;# 
  4264  0592                     	;# 
  4265  0593                     	;# 
  4266  059C                     	;# 
  4267  059C                     	;# 
  4268  059D                     	;# 
  4269  059D                     	;# 
  4270  059E                     	;# 
  4271  059F                     	;# 
  4272  060C                     	;# 
  4273  060D                     	;# 
  4274  060E                     	;# 
  4275  060F                     	;# 
  4276  0610                     	;# 
  4277  0611                     	;# 
  4278  0612                     	;# 
  4279  0613                     	;# 
  4280  0614                     	;# 
  4281  070C                     	;# 
  4282  070D                     	;# 
  4283  070E                     	;# 
  4284  070F                     	;# 
  4285  0710                     	;# 
  4286  0711                     	;# 
  4287  0712                     	;# 
  4288  0713                     	;# 
  4289  0716                     	;# 
  4290  0717                     	;# 
  4291  0718                     	;# 
  4292  0719                     	;# 
  4293  071A                     	;# 
  4294  071B                     	;# 
  4295  071C                     	;# 
  4296  071D                     	;# 
  4297  0796                     	;# 
  4298  0797                     	;# 
  4299  0798                     	;# 
  4300  0799                     	;# 
  4301  079A                     	;# 
  4302  079B                     	;# 
  4303  080C                     	;# 
  4304  080D                     	;# 
  4305  080E                     	;# 
  4306  080F                     	;# 
  4307  0810                     	;# 
  4308  0811                     	;# 
  4309  0812                     	;# 
  4310  0813                     	;# 
  4311  0814                     	;# 
  4312  081A                     	;# 
  4313  081A                     	;# 
  4314  081B                     	;# 
  4315  081C                     	;# 
  4316  081C                     	;# 
  4317  081D                     	;# 
  4318  081E                     	;# 
  4319  081F                     	;# 
  4320  088C                     	;# 
  4321  088D                     	;# 
  4322  088E                     	;# 
  4323  088F                     	;# 
  4324  0890                     	;# 
  4325  0891                     	;# 
  4326  0892                     	;# 
  4327  0893                     	;# 
  4328  0895                     	;# 
  4329  0896                     	;# 
  4330  090C                     	;# 
  4331  090E                     	;# 
  4332  090F                     	;# 
  4333  091F                     	;# 
  4334  098F                     	;# 
  4335  098F                     	;# 
  4336  0990                     	;# 
  4337  0991                     	;# 
  4338  0992                     	;# 
  4339  0993                     	;# 
  4340  0994                     	;# 
  4341  0995                     	;# 
  4342  0996                     	;# 
  4343  0997                     	;# 
  4344  1E0F                     	;# 
  4345  1E10                     	;# 
  4346  1E11                     	;# 
  4347  1E12                     	;# 
  4348  1E13                     	;# 
  4349  1E14                     	;# 
  4350  1E15                     	;# 
  4351  1E16                     	;# 
  4352  1E17                     	;# 
  4353  1E18                     	;# 
  4354  1E19                     	;# 
  4355  1E1A                     	;# 
  4356  1E1B                     	;# 
  4357  1E1C                     	;# 
  4358  1E1D                     	;# 
  4359  1E1E                     	;# 
  4360  1E1F                     	;# 
  4361  1E20                     	;# 
  4362  1E21                     	;# 
  4363  1E22                     	;# 
  4364  1E23                     	;# 
  4365  1E24                     	;# 
  4366  1E25                     	;# 
  4367  1E26                     	;# 
  4368  1E27                     	;# 
  4369  1E28                     	;# 
  4370  1E29                     	;# 
  4371  1E2A                     	;# 
  4372  1E2B                     	;# 
  4373  1E2C                     	;# 
  4374  1E2D                     	;# 
  4375  1E2E                     	;# 
  4376  1E2F                     	;# 
  4377  1E30                     	;# 
  4378  1E31                     	;# 
  4379  1E32                     	;# 
  4380  1E33                     	;# 
  4381  1E34                     	;# 
  4382  1E35                     	;# 
  4383  1E36                     	;# 
  4384  1E37                     	;# 
  4385  1E8F                     	;# 
  4386  1E90                     	;# 
  4387  1E91                     	;# 
  4388  1E92                     	;# 
  4389  1E93                     	;# 
  4390  1E9C                     	;# 
  4391  1EA1                     	;# 
  4392  1EA2                     	;# 
  4393  1EB1                     	;# 
  4394  1EBB                     	;# 
  4395  1EBC                     	;# 
  4396  1EBD                     	;# 
  4397  1EBE                     	;# 
  4398  1EC3                     	;# 
  4399  1EC5                     	;# 
  4400  1EC6                     	;# 
  4401  1EC7                     	;# 
  4402  1ECB                     	;# 
  4403  1ECC                     	;# 
  4404  1F10                     	;# 
  4405  1F11                     	;# 
  4406  1F12                     	;# 
  4407  1F13                     	;# 
  4408  1F14                     	;# 
  4409  1F15                     	;# 
  4410  1F20                     	;# 
  4411  1F21                     	;# 
  4412  1F22                     	;# 
  4413  1F23                     	;# 
  4414  1F24                     	;# 
  4415  1F25                     	;# 
  4416  1F38                     	;# 
  4417  1F39                     	;# 
  4418  1F3A                     	;# 
  4419  1F3B                     	;# 
  4420  1F3C                     	;# 
  4421  1F3D                     	;# 
  4422  1F3E                     	;# 
  4423  1F3F                     	;# 
  4424  1F4E                     	;# 
  4425  1F4F                     	;# 
  4426  1F50                     	;# 
  4427  1F51                     	;# 
  4428  1F52                     	;# 
  4429  1F53                     	;# 
  4430  1F54                     	;# 
  4431  1F55                     	;# 
  4432  1FE4                     	;# 
  4433  1FE5                     	;# 
  4434  1FE6                     	;# 
  4435  1FE7                     	;# 
  4436  1FE8                     	;# 
  4437  1FE8                     	;# 
  4438  1FE9                     	;# 
  4439  1FEA                     	;# 
  4440  1FEA                     	;# 
  4441  1FEB                     	;# 
  4442  1FED                     	;# 
  4443  1FEE                     	;# 
  4444  1FEF                     	;# 
  4445  0000                     	;# 
  4446  0001                     	;# 
  4447  0002                     	;# 
  4448  0003                     	;# 
  4449  0004                     	;# 
  4450  0005                     	;# 
  4451  0006                     	;# 
  4452  0007                     	;# 
  4453  0008                     	;# 
  4454  0009                     	;# 
  4455  000A                     	;# 
  4456  000B                     	;# 
  4457  000C                     	;# 
  4458  000E                     	;# 
  4459  0012                     	;# 
  4460  0014                     	;# 
  4461  0018                     	;# 
  4462  001A                     	;# 
  4463  009B                     	;# 
  4464  009B                     	;# 
  4465  009C                     	;# 
  4466  009D                     	;# 
  4467  009E                     	;# 
  4468  009F                     	;# 
  4469  0119                     	;# 
  4470  0119                     	;# 
  4471  0119                     	;# 
  4472  011A                     	;# 
  4473  011A                     	;# 
  4474  011A                     	;# 
  4475  011B                     	;# 
  4476  011B                     	;# 
  4477  011B                     	;# 
  4478  011B                     	;# 
  4479  011B                     	;# 
  4480  011C                     	;# 
  4481  011C                     	;# 
  4482  011C                     	;# 
  4483  011D                     	;# 
  4484  011D                     	;# 
  4485  011D                     	;# 
  4486  011E                     	;# 
  4487  011E                     	;# 
  4488  011E                     	;# 
  4489  011F                     	;# 
  4490  011F                     	;# 
  4491  011F                     	;# 
  4492  011F                     	;# 
  4493  011F                     	;# 
  4494  018C                     	;# 
  4495  018D                     	;# 
  4496  018E                     	;# 
  4497  018F                     	;# 
  4498  0190                     	;# 
  4499  0191                     	;# 
  4500  0192                     	;# 
  4501  020C                     	;# 
  4502  020C                     	;# 
  4503  020D                     	;# 
  4504  020E                     	;# 
  4505  020F                     	;# 
  4506  020F                     	;# 
  4507  0210                     	;# 
  4508  0210                     	;# 
  4509  0211                     	;# 
  4510  0211                     	;# 
  4511  028C                     	;# 
  4512  028C                     	;# 
  4513  028D                     	;# 
  4514  028D                     	;# 
  4515  028E                     	;# 
  4516  028F                     	;# 
  4517  0290                     	;# 
  4518  0291                     	;# 
  4519  030C                     	;# 
  4520  030C                     	;# 
  4521  030D                     	;# 
  4522  030E                     	;# 
  4523  030F                     	;# 
  4524  0310                     	;# 
  4525  0310                     	;# 
  4526  0311                     	;# 
  4527  0312                     	;# 
  4528  0313                     	;# 
  4529  0314                     	;# 
  4530  0314                     	;# 
  4531  0315                     	;# 
  4532  0316                     	;# 
  4533  0318                     	;# 
  4534  0318                     	;# 
  4535  0319                     	;# 
  4536  031A                     	;# 
  4537  031C                     	;# 
  4538  031C                     	;# 
  4539  031D                     	;# 
  4540  031E                     	;# 
  4541  038C                     	;# 
  4542  038C                     	;# 
  4543  038D                     	;# 
  4544  038E                     	;# 
  4545  058C                     	;# 
  4546  058C                     	;# 
  4547  058D                     	;# 
  4548  058E                     	;# 
  4549  058F                     	;# 
  4550  058F                     	;# 
  4551  0590                     	;# 
  4552  0591                     	;# 
  4553  0592                     	;# 
  4554  0593                     	;# 
  4555  059C                     	;# 
  4556  059C                     	;# 
  4557  059D                     	;# 
  4558  059D                     	;# 
  4559  059E                     	;# 
  4560  059F                     	;# 
  4561  060C                     	;# 
  4562  060D                     	;# 
  4563  060E                     	;# 
  4564  060F                     	;# 
  4565  0610                     	;# 
  4566  0611                     	;# 
  4567  0612                     	;# 
  4568  0613                     	;# 
  4569  0614                     	;# 
  4570  070C                     	;# 
  4571  070D                     	;# 
  4572  070E                     	;# 
  4573  070F                     	;# 
  4574  0710                     	;# 
  4575  0711                     	;# 
  4576  0712                     	;# 
  4577  0713                     	;# 
  4578  0716                     	;# 
  4579  0717                     	;# 
  4580  0718                     	;# 
  4581  0719                     	;# 
  4582  071A                     	;# 
  4583  071B                     	;# 
  4584  071C                     	;# 
  4585  071D                     	;# 
  4586  0796                     	;# 
  4587  0797                     	;# 
  4588  0798                     	;# 
  4589  0799                     	;# 
  4590  079A                     	;# 
  4591  079B                     	;# 
  4592  080C                     	;# 
  4593  080D                     	;# 
  4594  080E                     	;# 
  4595  080F                     	;# 
  4596  0810                     	;# 
  4597  0811                     	;# 
  4598  0812                     	;# 
  4599  0813                     	;# 
  4600  0814                     	;# 
  4601  081A                     	;# 
  4602  081A                     	;# 
  4603  081B                     	;# 
  4604  081C                     	;# 
  4605  081C                     	;# 
  4606  081D                     	;# 
  4607  081E                     	;# 
  4608  081F                     	;# 
  4609  088C                     	;# 
  4610  088D                     	;# 
  4611  088E                     	;# 
  4612  088F                     	;# 
  4613  0890                     	;# 
  4614  0891                     	;# 
  4615  0892                     	;# 
  4616  0893                     	;# 
  4617  0895                     	;# 
  4618  0896                     	;# 
  4619  090C                     	;# 
  4620  090E                     	;# 
  4621  090F                     	;# 
  4622  091F                     	;# 
  4623  098F                     	;# 
  4624  098F                     	;# 
  4625  0990                     	;# 
  4626  0991                     	;# 
  4627  0992                     	;# 
  4628  0993                     	;# 
  4629  0994                     	;# 
  4630  0995                     	;# 
  4631  0996                     	;# 
  4632  0997                     	;# 
  4633  1E0F                     	;# 
  4634  1E10                     	;# 
  4635  1E11                     	;# 
  4636  1E12                     	;# 
  4637  1E13                     	;# 
  4638  1E14                     	;# 
  4639  1E15                     	;# 
  4640  1E16                     	;# 
  4641  1E17                     	;# 
  4642  1E18                     	;# 
  4643  1E19                     	;# 
  4644  1E1A                     	;# 
  4645  1E1B                     	;# 
  4646  1E1C                     	;# 
  4647  1E1D                     	;# 
  4648  1E1E                     	;# 
  4649  1E1F                     	;# 
  4650  1E20                     	;# 
  4651  1E21                     	;# 
  4652  1E22                     	;# 
  4653  1E23                     	;# 
  4654  1E24                     	;# 
  4655  1E25                     	;# 
  4656  1E26                     	;# 
  4657  1E27                     	;# 
  4658  1E28                     	;# 
  4659  1E29                     	;# 
  4660  1E2A                     	;# 
  4661  1E2B                     	;# 
  4662  1E2C                     	;# 
  4663  1E2D                     	;# 
  4664  1E2E                     	;# 
  4665  1E2F                     	;# 
  4666  1E30                     	;# 
  4667  1E31                     	;# 
  4668  1E32                     	;# 
  4669  1E33                     	;# 
  4670  1E34                     	;# 
  4671  1E35                     	;# 
  4672  1E36                     	;# 
  4673  1E37                     	;# 
  4674  1E8F                     	;# 
  4675  1E90                     	;# 
  4676  1E91                     	;# 
  4677  1E92                     	;# 
  4678  1E93                     	;# 
  4679  1E9C                     	;# 
  4680  1EA1                     	;# 
  4681  1EA2                     	;# 
  4682  1EB1                     	;# 
  4683  1EBB                     	;# 
  4684  1EBC                     	;# 
  4685  1EBD                     	;# 
  4686  1EBE                     	;# 
  4687  1EC3                     	;# 
  4688  1EC5                     	;# 
  4689  1EC6                     	;# 
  4690  1EC7                     	;# 
  4691  1ECB                     	;# 
  4692  1ECC                     	;# 
  4693  1F10                     	;# 
  4694  1F11                     	;# 
  4695  1F12                     	;# 
  4696  1F13                     	;# 
  4697  1F14                     	;# 
  4698  1F15                     	;# 
  4699  1F20                     	;# 
  4700  1F21                     	;# 
  4701  1F22                     	;# 
  4702  1F23                     	;# 
  4703  1F24                     	;# 
  4704  1F25                     	;# 
  4705  1F38                     	;# 
  4706  1F39                     	;# 
  4707  1F3A                     	;# 
  4708  1F3B                     	;# 
  4709  1F3C                     	;# 
  4710  1F3D                     	;# 
  4711  1F3E                     	;# 
  4712  1F3F                     	;# 
  4713  1F4E                     	;# 
  4714  1F4F                     	;# 
  4715  1F50                     	;# 
  4716  1F51                     	;# 
  4717  1F52                     	;# 
  4718  1F53                     	;# 
  4719  1F54                     	;# 
  4720  1F55                     	;# 
  4721  1FE4                     	;# 
  4722  1FE5                     	;# 
  4723  1FE6                     	;# 
  4724  1FE7                     	;# 
  4725  1FE8                     	;# 
  4726  1FE8                     	;# 
  4727  1FE9                     	;# 
  4728  1FEA                     	;# 
  4729  1FEA                     	;# 
  4730  1FEB                     	;# 
  4731  1FED                     	;# 
  4732  1FEE                     	;# 
  4733  1FEF                     	;# 
  4734                           
  4735                           	psect	idataBANK0
  4736  0600                     __pidataBANK0:
  4737                           
  4738                           ;initializer for _AdcResult
  4739  0600  34FF               	retlw	255
  4740  0601  3403               	retlw	3
  4741  0602  34FF               	retlw	255
  4742  0603  3403               	retlw	3
  4743  0604  34FF               	retlw	255
  4744  0605  3403               	retlw	3
  4745  0606  34FF               	retlw	255
  4746  0607  3403               	retlw	3
  4747  0608  34FF               	retlw	255
  4748  0609  3403               	retlw	3
  4749  060A  34FF               	retlw	255
  4750  060B  3403               	retlw	3
  4751  060C  34FF               	retlw	255
  4752  060D  3403               	retlw	3
  4753  060E  34FF               	retlw	255
  4754  060F  3403               	retlw	3
  4755                           
  4756                           	psect	idataBANK1
  4757  0353                     __pidataBANK1:
  4758                           
  4759                           ;initializer for _LedBit
  4760  0353  3400               	retlw	0
  4761  0354  3400               	retlw	0
  4762  0355  348E               	retlw	low _LedOff
  4763  0356  3404               	retlw	high _LedOff
  4764  0357  3400               	retlw	0
  4765  0358  34FE               	retlw	254
  4766  0359  3400               	retlw	0
  4767  035A  3400               	retlw	0
  4768  035B  3401               	retlw	1
  4769  035C  3437               	retlw	low _PWM1_LoadDutyValue
  4770  035D  3405               	retlw	high _PWM1_LoadDutyValue
  4771  035E  3401               	retlw	1
  4772  035F  3400               	retlw	0
  4773  0360  348E               	retlw	low _LedOff
  4774  0361  3404               	retlw	high _LedOff
  4775  0362  3400               	retlw	0
  4776  0363  34FE               	retlw	254
  4777  0364  3400               	retlw	0
  4778  0365  3400               	retlw	0
  4779  0366  3401               	retlw	1
  4780  0367  344D               	retlw	low _PWM2_LoadDutyValue
  4781  0368  3405               	retlw	high _PWM2_LoadDutyValue
  4782  0369  3402               	retlw	2
  4783  036A  3400               	retlw	0
  4784  036B  348E               	retlw	low _LedOff
  4785  036C  3404               	retlw	high _LedOff
  4786  036D  3400               	retlw	0
  4787  036E  3419               	retlw	25
  4788  036F  3400               	retlw	0
  4789  0370  3400               	retlw	0
  4790  0371  3401               	retlw	1
  4791  0372  3479               	retlw	low _PWM3_LoadDutyValue
  4792  0373  3405               	retlw	high _PWM3_LoadDutyValue
  4793  0374  3403               	retlw	3
  4794  0375  3400               	retlw	0
  4795  0376  348E               	retlw	low _LedOff
  4796  0377  3404               	retlw	high _LedOff
  4797  0378  3400               	retlw	0
  4798  0379  3419               	retlw	25
  4799  037A  3400               	retlw	0
  4800  037B  3400               	retlw	0
  4801  037C  3401               	retlw	1
  4802  037D  348F               	retlw	low _PWM4_LoadDutyValue
  4803  037E  3405               	retlw	high _PWM4_LoadDutyValue
  4804  037F  3404               	retlw	4
  4805  0380  3400               	retlw	0
  4806  0381  348E               	retlw	low _LedOff
  4807  0382  3404               	retlw	high _LedOff
  4808  0383  3400               	retlw	0
  4809  0384  3450               	retlw	80
  4810  0385  3400               	retlw	0
  4811  0386  3400               	retlw	0
  4812  0387  3401               	retlw	1
  4813  0388  3463               	retlw	low _PWM5_LoadDutyValue
  4814  0389  3405               	retlw	high _PWM5_LoadDutyValue
  4815  038A  3405               	retlw	5
  4816  038B  3400               	retlw	0
  4817  038C  348E               	retlw	low _LedOff
  4818  038D  3404               	retlw	high _LedOff
  4819  038E  3400               	retlw	0
  4820  038F  3450               	retlw	80
  4821  0390  3400               	retlw	0
  4822  0391  3400               	retlw	0
  4823  0392  3401               	retlw	1
  4824  0393  34A5               	retlw	low _PWM6_LoadDutyValue
  4825  0394  3405               	retlw	high _PWM6_LoadDutyValue
  4826                           
  4827                           	psect	nvBANK0
  4828  005D                     __pnvBANK0:
  4829  005D                     _IOCCF1_InterruptHandler:
  4830  005D                     	ds	2
  4831  000E                     _PORTCbits	set	14
  4832  0012                     _TRISAbits	set	18
  4833  0018                     _LATAbits	set	24
  4834  000B                     _INTCONbits	set	11
  4835  0014                     _TRISC	set	20
  4836  0012                     _TRISA	set	18
  4837  001A                     _LATC	set	26
  4838  0018                     _LATA	set	24
  4839  009D                     _ADCON0bits	set	157
  4840  009D                     _ADCON0	set	157
  4841  009C                     _ADRESH	set	156
  4842  009B                     _ADRESL	set	155
  4843  009F                     _ADACT	set	159
  4844  009E                     _ADCON1	set	158
  4845  020E                     _T1CONbits	set	526
  4846  020E                     _T1CON	set	526
  4847  020C                     _TMR1L	set	524
  4848  020D                     _TMR1H	set	525
  4849  0211                     _T1CLK	set	529
  4850  0210                     _T1GATE	set	528
  4851  020F                     _T1GCON	set	527
  4852  028E                     _T2CON	set	654
  4853  028C                     _T2TMR	set	652
  4854  028D                     _T2PR	set	653
  4855  0291                     _T2RST	set	657
  4856  028F                     _T2HLT	set	655
  4857  0290                     _T2CLKCON	set	656
  4858  030E                     _CCP1CONbits	set	782
  4859  030C                     _CCPR1L	set	780
  4860  030D                     _CCPR1H	set	781
  4861  030E                     _CCP1CON	set	782
  4862  0312                     _CCP2CONbits	set	786
  4863  0310                     _CCPR2L	set	784
  4864  0311                     _CCPR2H	set	785
  4865  0312                     _CCP2CON	set	786
  4866  031C                     _PWM5DCL	set	796
  4867  031D                     _PWM5DCH	set	797
  4868  031E                     _PWM5CON	set	798
  4869  0314                     _PWM3DCL	set	788
  4870  0315                     _PWM3DCH	set	789
  4871  0316                     _PWM3CON	set	790
  4872  0318                     _PWM4DCL	set	792
  4873  0319                     _PWM4DCH	set	793
  4874  031A                     _PWM4CON	set	794
  4875  038C                     _PWM6DCL	set	908
  4876  038D                     _PWM6DCH	set	909
  4877  038E                     _PWM6CON	set	910
  4878  059E                     _T0CON0	set	1438
  4879  059C                     _TMR0L	set	1436
  4880  059D                     _TMR0H	set	1437
  4881  059F                     _T0CON1	set	1439
  4882  071A                     _PIE4bits	set	1818
  4883  070C                     _PIR0bits	set	1804
  4884  0716                     _PIE0bits	set	1814
  4885  0710                     _PIR4bits	set	1808
  4886  079B                     _PMD5	set	1947
  4887  079A                     _PMD4	set	1946
  4888  0799                     _PMD3	set	1945
  4889  0798                     _PMD2	set	1944
  4890  0797                     _PMD1	set	1943
  4891  0796                     _PMD0	set	1942
  4892  0892                     _OSCTUNE	set	2194
  4893  0890                     _OSCSTAT	set	2192
  4894  0893                     _OSCFRQ	set	2195
  4895  0891                     _OSCEN	set	2193
  4896  088F                     _OSCCON3	set	2191
  4897  088D                     _OSCCON1	set	2189
  4898  4480                     _PLLR	set	17536
  4899  090C                     _FVRCON	set	2316
  4900  1EC3                     _ADACTPPS	set	7875
  4901  1F25                     _RC5PPS	set	7973
  4902  1F22                     _RC2PPS	set	7970
  4903  1F15                     _RA5PPS	set	7957
  4904  1F24                     _RC4PPS	set	7972
  4905  1F23                     _RC3PPS	set	7971
  4906  1F14                     _RA4PPS	set	7956
  4907  1F53                     _IOCCPbits	set	8019
  4908  1F54                     _IOCCNbits	set	8020
  4909  1F55                     _IOCCFbits	set	8021
  4910  1F52                     _INLVLC	set	8018
  4911  1F3C                     _INLVLA	set	7996
  4912  1F51                     _SLRCONC	set	8017
  4913  1F3B                     _SLRCONA	set	7995
  4914  1F50                     _ODCONC	set	8016
  4915  1F3A                     _ODCONA	set	7994
  4916  1F4F                     _WPUC	set	8015
  4917  1F39                     _WPUA	set	7993
  4918  1F38                     _ANSELA	set	7992
  4919  1F4E                     _ANSELC	set	8014
  4920                           
  4921                           	psect	cinit
  4922  001A                     start_initialization:	
  4923                           ; #config settings
  4924                           
  4925  001A                     __initialization:
  4926                           
  4927                           ; Initialize objects allocated to BANK0
  4928  001A  3000               	movlw	low __pidataBANK0
  4929  001B  0084               	movwf	4
  4930  001C  3086               	movlw	(high __pidataBANK0)| (0+128)
  4931  001D  0085               	movwf	5
  4932  001E  304D               	movlw	low __pdataBANK0
  4933  001F  0086               	movwf	6
  4934  0020  3000               	movlw	high __pdataBANK0
  4935  0021  0087               	movwf	7
  4936  0022  3010               	movlw	16
  4937  0023  26C3               	fcall	init_ram
  4938                           
  4939                           ; Initialize objects allocated to BANK1
  4940  0024  3053               	movlw	low __pidataBANK1
  4941  0025  0084               	movwf	4
  4942  0026  3083               	movlw	(high __pidataBANK1)| (0+128)
  4943  0027  0085               	movwf	5
  4944  0028  30A0               	movlw	low __pdataBANK1
  4945  0029  0086               	movwf	6
  4946  002A  3000               	movlw	high __pdataBANK1
  4947  002B  0087               	movwf	7
  4948  002C  3042               	movlw	66
  4949  002D  26C3               	fcall	init_ram
  4950                           
  4951                           ; Clear objects allocated to COMMON
  4952  002E  01FA               	clrf	__pbssCOMMON& (0+127)
  4953  002F  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  4954                           
  4955                           ; Clear objects allocated to BANK0
  4956  0030  3020               	movlw	low __pbssBANK0
  4957  0031  0084               	movwf	4
  4958  0032  3000               	movlw	high __pbssBANK0
  4959  0033  0085               	movwf	5
  4960  0034  301A               	movlw	26
  4961  0035  26C9               	fcall	clear_ram0
  4962  0036                     end_of_initialization:	
  4963                           ;End of C runtime variable initialization code
  4964                           
  4965  0036                     __end_of__initialization:
  4966  0036  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4967  0037  0140               	movlb	0
  4968  0038  2A42               	ljmp	_main	;jump to C main() function
  4969                           
  4970                           	psect	bssCOMMON
  4971  007A                     __pbssCOMMON:
  4972  007A                     _timer0ReloadVal16bit:
  4973  007A                     	ds	2
  4974                           
  4975                           	psect	bssBANK0
  4976  0020                     __pbssBANK0:
  4977  0020                     _Random:
  4978  0020                     	ds	2
  4979  0022                     _AdcResultAvg:
  4980  0022                     	ds	2
  4981  0024                     _AdcResultSample:
  4982  0024                     	ds	2
  4983  0026                     _TMR1_InterruptHandler:
  4984  0026                     	ds	2
  4985  0028                     _timer1ReloadVal:
  4986  0028                     	ds	2
  4987  002A                     _TMR0_InterruptHandler:
  4988  002A                     	ds	2
  4989  002C                     _ADC_InterruptHandler:
  4990  002C                     	ds	2
  4991  002E                     _ReturnVal:
  4992  002E                     	ds	1
  4993  002F                     _pAdcResult:
  4994  002F                     	ds	1
  4995  0030                     _AdcState:
  4996  0030                     	ds	1
  4997  0031                     _CarrOff:
  4998  0031                     	ds	1
  4999  0032                     _BattProtect:
  5000  0032                     	ds	1
  5001  0033                     _UpdateVbatt:
  5002  0033                     	ds	1
  5003  0034                     _UpdateRcs:
  5004  0034                     	ds	1
  5005  0035                     _UpdateLeds:
  5006  0035                     	ds	1
  5007  0036                     _seed:
  5008  0036                     	ds	4
  5009                           
  5010                           	psect	dataBANK0
  5011  004D                     __pdataBANK0:
  5012  004D                     _AdcResult:
  5013  004D                     	ds	16
  5014                           
  5015                           	psect	dataBANK1
  5016  00A0                     __pdataBANK1:
  5017  00A0                     _LedBit:
  5018  00A0                     	ds	66
  5019                           
  5020                           	psect	inittext
  5021  06C3                     init_ram:
  5022  06C3  00FE               	movwf	126
  5023  06C4                     initloop:
  5024  06C4  0012               	moviw fsr0++
  5025  06C5  001E               	movwi fsr1++
  5026  06C6  0BFE               	decfsz	126,f
  5027  06C7  2EC4               	goto	initloop
  5028  06C8  3400               	retlw	0
  5029                           
  5030                           	psect	clrtext
  5031  06C9                     clear_ram0:	
  5032                           ;	Called with FSR0 containing the base address, and
  5033                           ;	WREG with the size to clear
  5034                           
  5035  06C9  0064               	clrwdt	;clear the watchdog before getting into this loop
  5036  06CA                     clrloop0:
  5037  06CA  0180               	clrf	0	;clear RAM location pointed to by FSR
  5038  06CB  3101               	addfsr 0,1
  5039  06CC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5040  06CD  2ECA               	goto	clrloop0	;have we reached the end yet?
  5041  06CE  3400               	retlw	0	;all done for this memory range, return
  5042                           
  5043                           	psect	cstackCOMMON
  5044  0070                     __pcstackCOMMON:
  5045  0070                     ?_IOCCF1_DefaultInterruptHandler:
  5046  0070                     ??_IOCCF1_DefaultInterruptHandler:	
  5047                           ; 1 bytes @ 0x0
  5048                           
  5049  0070                     ?_IOCCF1_ISR:	
  5050                           ; 1 bytes @ 0x0
  5051                           
  5052  0070                     ?_PMD_Initialize:	
  5053                           ; 1 bytes @ 0x0
  5054                           
  5055  0070                     ?_OSCILLATOR_Initialize:	
  5056                           ; 1 bytes @ 0x0
  5057                           
  5058  0070                     ?_PWM2_Initialize:	
  5059                           ; 1 bytes @ 0x0
  5060                           
  5061  0070                     ?_TMR0_Initialize:	
  5062                           ; 1 bytes @ 0x0
  5063                           
  5064  0070                     ?_PWM1_Initialize:	
  5065                           ; 1 bytes @ 0x0
  5066                           
  5067  0070                     ?_TMR1_Initialize:	
  5068                           ; 1 bytes @ 0x0
  5069                           
  5070  0070                     ?_TMR0_ISR:	
  5071                           ; 1 bytes @ 0x0
  5072                           
  5073  0070                     ??_TMR0_ISR:	
  5074                           ; 1 bytes @ 0x0
  5075                           
  5076  0070                     ?_TMR1_ISR:	
  5077                           ; 1 bytes @ 0x0
  5078                           
  5079  0070                     ?_TMR0_DefaultInterruptHandler:	
  5080                           ; 1 bytes @ 0x0
  5081                           
  5082  0070                     ??_TMR0_DefaultInterruptHandler:	
  5083                           ; 1 bytes @ 0x0
  5084                           
  5085  0070                     ?_TMR1_DefaultInterruptHandler:	
  5086                           ; 1 bytes @ 0x0
  5087                           
  5088  0070                     ??_TMR1_DefaultInterruptHandler:	
  5089                           ; 1 bytes @ 0x0
  5090                           
  5091  0070                     ?_TMR0_INT:	
  5092                           ; 1 bytes @ 0x0
  5093                           
  5094  0070                     ??_TMR0_INT:	
  5095                           ; 1 bytes @ 0x0
  5096                           
  5097  0070                     ?_TMR1_INT:	
  5098                           ; 1 bytes @ 0x0
  5099                           
  5100  0070                     ??_TMR1_INT:	
  5101                           ; 1 bytes @ 0x0
  5102                           
  5103  0070                     ?_RCS_INT:	
  5104                           ; 1 bytes @ 0x0
  5105                           
  5106  0070                     ?_INITxEXECUTER:	
  5107                           ; 1 bytes @ 0x0
  5108                           
  5109  0070                     ?_EXECUTExEFFECT:	
  5110                           ; 1 bytes @ 0x0
  5111                           
  5112  0070                     ?_RCSxLED:	
  5113                           ; 1 bytes @ 0x0
  5114                           
  5115  0070                     ?_BATTxPROTECT:	
  5116                           ; 1 bytes @ 0x0
  5117                           
  5118  0070                     ?_CalcPwm:	
  5119                           ; 1 bytes @ 0x0
  5120                           
  5121  0070                     ?_TMR2_Initialize:	
  5122                           ; 1 bytes @ 0x0
  5123                           
  5124  0070                     ?_ADC_Initialize:	
  5125                           ; 1 bytes @ 0x0
  5126                           
  5127  0070                     ?_ADC_SelectChannel:	
  5128                           ; 1 bytes @ 0x0
  5129                           
  5130  0070                     ?_ADC_StartConversion:	
  5131                           ; 1 bytes @ 0x0
  5132                           
  5133  0070                     ?_ADC_IsConversionDone:	
  5134                           ; 1 bytes @ 0x0
  5135                           
  5136  0070                     ?_PWM4_Initialize:	
  5137                           ; 1 bytes @ 0x0
  5138                           
  5139  0070                     ?_PWM3_Initialize:	
  5140                           ; 1 bytes @ 0x0
  5141                           
  5142  0070                     ?_PWM6_Initialize:	
  5143                           ; 1 bytes @ 0x0
  5144                           
  5145  0070                     ?_PWM5_Initialize:	
  5146                           ; 1 bytes @ 0x0
  5147                           
  5148  0070                     ?_FVR_Initialize:	
  5149                           ; 1 bytes @ 0x0
  5150                           
  5151  0070                     ?_PIN_MANAGER_Initialize:	
  5152                           ; 1 bytes @ 0x0
  5153                           
  5154  0070                     ?_PIN_MANAGER_IOC:	
  5155                           ; 1 bytes @ 0x0
  5156                           
  5157  0070                     ?_SYSTEM_Initialize:	
  5158                           ; 1 bytes @ 0x0
  5159                           
  5160  0070                     ?_INTERRUPT_InterruptManager:	
  5161                           ; 1 bytes @ 0x0
  5162                           
  5163  0070                     ?_TMR1_WriteTimer:	
  5164                           ; 1 bytes @ 0x0
  5165                           
  5166  0070                     ?_TMR1_Reload:	
  5167                           ; 1 bytes @ 0x0
  5168                           
  5169  0070                     ?_main:	
  5170                           ; 1 bytes @ 0x0
  5171                           
  5172  0070                     TMR1_WriteTimer@timerVal:	
  5173                           ; 1 bytes @ 0x0
  5174                           
  5175                           
  5176                           ; 2 bytes @ 0x0
  5177  0070                     	ds	2
  5178  0072                     ?_IOCCF1_SetInterruptHandler:
  5179  0072                     ??_IOCCF1_ISR:	
  5180                           ; 1 bytes @ 0x2
  5181                           
  5182  0072                     ??_PMD_Initialize:	
  5183                           ; 1 bytes @ 0x2
  5184                           
  5185  0072                     ??_OSCILLATOR_Initialize:	
  5186                           ; 1 bytes @ 0x2
  5187                           
  5188  0072                     ??_PWM2_Initialize:	
  5189                           ; 1 bytes @ 0x2
  5190                           
  5191  0072                     ??_PWM1_Initialize:	
  5192                           ; 1 bytes @ 0x2
  5193                           
  5194  0072                     ??_TMR1_ISR:	
  5195                           ; 1 bytes @ 0x2
  5196                           
  5197  0072                     ?_TMR0_SetInterruptHandler:	
  5198                           ; 1 bytes @ 0x2
  5199                           
  5200  0072                     ?_TMR1_SetInterruptHandler:	
  5201                           ; 1 bytes @ 0x2
  5202                           
  5203  0072                     ??_RCS_INT:	
  5204                           ; 1 bytes @ 0x2
  5205                           
  5206  0072                     ??_BATTxPROTECT:	
  5207                           ; 1 bytes @ 0x2
  5208                           
  5209  0072                     ?_srand:	
  5210                           ; 1 bytes @ 0x2
  5211                           
  5212  0072                     ??_TMR2_Initialize:	
  5213                           ; 1 bytes @ 0x2
  5214                           
  5215  0072                     ??_ADC_Initialize:	
  5216                           ; 1 bytes @ 0x2
  5217                           
  5218  0072                     ??_ADC_SelectChannel:	
  5219                           ; 1 bytes @ 0x2
  5220                           
  5221  0072                     ??_ADC_StartConversion:	
  5222                           ; 1 bytes @ 0x2
  5223                           
  5224  0072                     ??_ADC_IsConversionDone:	
  5225                           ; 1 bytes @ 0x2
  5226                           
  5227  0072                     ??_PWM4_Initialize:	
  5228                           ; 1 bytes @ 0x2
  5229                           
  5230  0072                     ??_PWM3_Initialize:	
  5231                           ; 1 bytes @ 0x2
  5232                           
  5233  0072                     ??_PWM6_Initialize:	
  5234                           ; 1 bytes @ 0x2
  5235                           
  5236  0072                     ??_PWM5_Initialize:	
  5237                           ; 1 bytes @ 0x2
  5238                           
  5239  0072                     ??_FVR_Initialize:	
  5240                           ; 1 bytes @ 0x2
  5241                           
  5242  0072                     ??_PIN_MANAGER_IOC:	
  5243                           ; 1 bytes @ 0x2
  5244                           
  5245  0072                     ??_INTERRUPT_InterruptManager:	
  5246                           ; 1 bytes @ 0x2
  5247                           
  5248  0072                     ??_TMR1_WriteTimer:	
  5249                           ; 1 bytes @ 0x2
  5250                           
  5251  0072                     ??_TMR1_Reload:	
  5252                           ; 1 bytes @ 0x2
  5253                           
  5254  0072                     ?___bmul:	
  5255                           ; 1 bytes @ 0x2
  5256                           
  5257  0072                     ?_ADC_GetConversionResult:	
  5258                           ; 1 bytes @ 0x2
  5259                           
  5260  0072                     ?___lmul:	
  5261                           ; 2 bytes @ 0x2
  5262                           
  5263  0072                     ___bmul@multiplicand:	
  5264                           ; 4 bytes @ 0x2
  5265                           
  5266  0072                     IOCCF1_SetInterruptHandler@InterruptHandler:	
  5267                           ; 1 bytes @ 0x2
  5268                           
  5269  0072                     TMR0_SetInterruptHandler@InterruptHandler:	
  5270                           ; 2 bytes @ 0x2
  5271                           
  5272  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  5273                           ; 2 bytes @ 0x2
  5274                           
  5275  0072                     srand@s:	
  5276                           ; 2 bytes @ 0x2
  5277                           
  5278  0072                     ___lmul@multiplier:	
  5279                           ; 2 bytes @ 0x2
  5280                           
  5281                           
  5282                           ; 4 bytes @ 0x2
  5283  0072                     	ds	1
  5284  0073                     ??___bmul:
  5285  0073                     ADC_SelectChannel@channel:	
  5286                           ; 1 bytes @ 0x3
  5287                           
  5288                           
  5289                           ; 1 bytes @ 0x3
  5290  0073                     	ds	1
  5291  0074                     ??_IOCCF1_SetInterruptHandler:
  5292  0074                     ??_TMR0_Initialize:	
  5293                           ; 1 bytes @ 0x4
  5294                           
  5295  0074                     ??_TMR1_Initialize:	
  5296                           ; 1 bytes @ 0x4
  5297                           
  5298  0074                     ??_TMR0_SetInterruptHandler:	
  5299                           ; 1 bytes @ 0x4
  5300                           
  5301  0074                     ??_TMR1_SetInterruptHandler:	
  5302                           ; 1 bytes @ 0x4
  5303                           
  5304  0074                     ??_srand:	
  5305                           ; 1 bytes @ 0x4
  5306                           
  5307  0074                     ??_ADC_GetConversionResult:	
  5308                           ; 1 bytes @ 0x4
  5309                           
  5310  0074                     ??_PIN_MANAGER_Initialize:	
  5311                           ; 1 bytes @ 0x4
  5312                           
  5313  0074                     ??_SYSTEM_Initialize:	
  5314                           ; 1 bytes @ 0x4
  5315                           
  5316  0074                     ___bmul@product:	
  5317                           ; 1 bytes @ 0x4
  5318                           
  5319                           
  5320                           ; 1 bytes @ 0x4
  5321  0074                     	ds	1
  5322  0075                     ___bmul@multiplier:
  5323                           
  5324                           ; 1 bytes @ 0x5
  5325  0075                     	ds	1
  5326  0076                     ?_PWM4_LoadDutyValue:
  5327  0076                     ?_PWM3_LoadDutyValue:	
  5328                           ; 1 bytes @ 0x6
  5329                           
  5330  0076                     ?_PWM6_LoadDutyValue:	
  5331                           ; 1 bytes @ 0x6
  5332                           
  5333  0076                     ?_PWM5_LoadDutyValue:	
  5334                           ; 1 bytes @ 0x6
  5335                           
  5336  0076                     ?_PWM2_LoadDutyValue:	
  5337                           ; 1 bytes @ 0x6
  5338                           
  5339  0076                     ?_PWM1_LoadDutyValue:	
  5340                           ; 1 bytes @ 0x6
  5341                           
  5342  0076                     PWM4_LoadDutyValue@dutyValue:	
  5343                           ; 1 bytes @ 0x6
  5344                           
  5345  0076                     PWM3_LoadDutyValue@dutyValue:	
  5346                           ; 2 bytes @ 0x6
  5347                           
  5348  0076                     PWM6_LoadDutyValue@dutyValue:	
  5349                           ; 2 bytes @ 0x6
  5350                           
  5351  0076                     PWM5_LoadDutyValue@dutyValue:	
  5352                           ; 2 bytes @ 0x6
  5353                           
  5354  0076                     PWM2_LoadDutyValue@dutyValue:	
  5355                           ; 2 bytes @ 0x6
  5356                           
  5357  0076                     PWM1_LoadDutyValue@dutyValue:	
  5358                           ; 2 bytes @ 0x6
  5359                           
  5360  0076                     ___lmul@multiplicand:	
  5361                           ; 2 bytes @ 0x6
  5362                           
  5363                           
  5364                           ; 4 bytes @ 0x6
  5365  0076                     	ds	2
  5366  0078                     ??_PWM4_LoadDutyValue:
  5367  0078                     ??_PWM3_LoadDutyValue:	
  5368                           ; 1 bytes @ 0x8
  5369                           
  5370  0078                     ??_PWM6_LoadDutyValue:	
  5371                           ; 1 bytes @ 0x8
  5372                           
  5373  0078                     ??_PWM5_LoadDutyValue:	
  5374                           ; 1 bytes @ 0x8
  5375                           
  5376  0078                     ??_PWM2_LoadDutyValue:	
  5377                           ; 1 bytes @ 0x8
  5378                           
  5379  0078                     ??_PWM1_LoadDutyValue:	
  5380                           ; 1 bytes @ 0x8
  5381                           
  5382                           
  5383                           ; 1 bytes @ 0x8
  5384  0078                     	ds	2
  5385  007A                     ??_INITxEXECUTER:
  5386  007A                     ??___lmul:	
  5387                           ; 1 bytes @ 0xA
  5388                           
  5389                           
  5390                           	psect	cstackBANK0
  5391  003A                     __pcstackBANK0:	
  5392                           ; 1 bytes @ 0xA
  5393                           
  5394  003A                     ??_CalcPwm:
  5395  003A                     ___lmul@product:	
  5396                           ; 1 bytes @ 0x0
  5397                           
  5398                           
  5399                           ; 4 bytes @ 0x0
  5400  003A                     	ds	4
  5401  003E                     ?_rand:
  5402  003E                     CalcPwm@Led:	
  5403                           ; 2 bytes @ 0x4
  5404                           
  5405                           
  5406                           ; 1 bytes @ 0x4
  5407  003E                     	ds	1
  5408  003F                     ?_LedOff:
  5409  003F                     ?_LedFlash:	
  5410                           ; 1 bytes @ 0x5
  5411                           
  5412  003F                     ?_LedNom:	
  5413                           ; 1 bytes @ 0x5
  5414                           
  5415  003F                     ?_LedSlFl:	
  5416                           ; 1 bytes @ 0x5
  5417                           
  5418  003F                     ?_LedBrake:	
  5419                           ; 1 bytes @ 0x5
  5420                           
  5421  003F                     LedOff@Led:	
  5422                           ; 1 bytes @ 0x5
  5423                           
  5424  003F                     LedNom@Led:	
  5425                           ; 1 bytes @ 0x5
  5426                           
  5427  003F                     LedBrake@Led:	
  5428                           ; 1 bytes @ 0x5
  5429                           
  5430  003F                     LedSlFl@Led:	
  5431                           ; 1 bytes @ 0x5
  5432                           
  5433  003F                     LedFlash@Led:	
  5434                           ; 1 bytes @ 0x5
  5435                           
  5436                           
  5437                           ; 1 bytes @ 0x5
  5438  003F                     	ds	1
  5439  0040                     ??_LedOff:
  5440  0040                     ??_rand:	
  5441                           ; 1 bytes @ 0x6
  5442                           
  5443  0040                     ??_LedFlash:	
  5444                           ; 1 bytes @ 0x6
  5445                           
  5446  0040                     ??_LedNom:	
  5447                           ; 1 bytes @ 0x6
  5448                           
  5449  0040                     ??_LedSlFl:	
  5450                           ; 1 bytes @ 0x6
  5451                           
  5452  0040                     ??_LedBrake:	
  5453                           ; 1 bytes @ 0x6
  5454                           
  5455                           
  5456                           ; 1 bytes @ 0x6
  5457  0040                     	ds	3
  5458  0043                     LedSlFl@ReturnVal:
  5459  0043                     LedFlash@ReturnVal:	
  5460                           ; 1 bytes @ 0x9
  5461                           
  5462                           
  5463                           ; 1 bytes @ 0x9
  5464  0043                     	ds	1
  5465  0044                     ??_EXECUTExEFFECT:
  5466  0044                     ??_RCSxLED:	
  5467                           ; 1 bytes @ 0xA
  5468                           
  5469                           
  5470                           ; 1 bytes @ 0xA
  5471  0044                     	ds	2
  5472  0046                     _EXECUTExEFFECT$1858:
  5473                           
  5474                           ; 2 bytes @ 0xC
  5475  0046                     	ds	2
  5476  0048                     EXECUTExEFFECT@ReturnData:
  5477                           
  5478                           ; 1 bytes @ 0xE
  5479  0048                     	ds	1
  5480  0049                     EXECUTExEFFECT@x:
  5481                           
  5482                           ; 1 bytes @ 0xF
  5483  0049                     	ds	1
  5484  004A                     ??_main:
  5485                           
  5486                           ; 1 bytes @ 0x10
  5487  004A                     	ds	2
  5488  004C                     main@i:
  5489                           
  5490                           ; 1 bytes @ 0x12
  5491  004C                     	ds	1
  5492                           
  5493                           	psect	maintext
  5494  0242                     __pmaintext:	
  5495 ;;
  5496 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5497 ;;
  5498 ;; *************** function _main *****************
  5499 ;; Defined at:
  5500 ;;		line 71 in file "Main.c"
  5501 ;; Parameters:    Size  Location     Type
  5502 ;;		None
  5503 ;; Auto vars:     Size  Location     Type
  5504 ;;  i               1   18[BANK0 ] unsigned char 
  5505 ;; Return value:  Size  Location     Type
  5506 ;;                  1    wreg      void 
  5507 ;; Registers used:
  5508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5509 ;; Tracked objects:
  5510 ;;		On entry : B3F/0
  5511 ;;		On exit  : 0/0
  5512 ;;		Unchanged: 0/0
  5513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5514 ;;      Params:         0       0       0       0
  5515 ;;      Locals:         0       1       0       0
  5516 ;;      Temps:          0       2       0       0
  5517 ;;      Totals:         0       3       0       0
  5518 ;;Total ram usage:        3 bytes
  5519 ;; Hardware stack levels required when called:   10
  5520 ;; This function calls:
  5521 ;;		_ADC_GetConversionResult
  5522 ;;		_ADC_IsConversionDone
  5523 ;;		_ADC_SelectChannel
  5524 ;;		_ADC_StartConversion
  5525 ;;		_BATTxPROTECT
  5526 ;;		_EXECUTExEFFECT
  5527 ;;		_INITxEXECUTER
  5528 ;;		_IOCCF1_SetInterruptHandler
  5529 ;;		_RCSxLED
  5530 ;;		_SYSTEM_Initialize
  5531 ;;		_TMR0_SetInterruptHandler
  5532 ;;		_TMR1_SetInterruptHandler
  5533 ;; This function is called by:
  5534 ;;		Startup code after reset
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538                           
  5539                           ;psect for function _main
  5540  0242                     _main:
  5541                           
  5542                           ;Main.c: 74:     SYSTEM_Initialize();
  5543                           
  5544                           ;incstack = 0
  5545                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5546  0242  2610               	fcall	_SYSTEM_Initialize
  5547                           
  5548                           ;Main.c: 80:     (INTCONbits.GIE = 1);
  5549  0243  178B               	bsf	11,7	;volatile
  5550                           
  5551                           ;Main.c: 83:     (INTCONbits.PEIE = 1);
  5552  0244  170B               	bsf	11,6	;volatile
  5553                           
  5554                           ;Main.c: 92:     TMR0_SetInterruptHandler(TMR0_INT);
  5555  0245  30FF               	movlw	low _TMR0_INT
  5556  0246  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  5557  0247  3006               	movlw	high _TMR0_INT
  5558  0248  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  5559  0249  26D5               	fcall	_TMR0_SetInterruptHandler
  5560                           
  5561                           ;Main.c: 93:     TMR1_SetInterruptHandler(TMR1_INT);
  5562  024A  30FC               	movlw	low _TMR1_INT
  5563  024B  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  5564  024C  3006               	movlw	high _TMR1_INT
  5565  024D  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  5566  024E  26CF               	fcall	_TMR1_SetInterruptHandler
  5567                           
  5568                           ;Main.c: 95:     IOCCF1_SetInterruptHandler(RCS_INT);
  5569  024F  30F5               	movlw	low _RCS_INT
  5570  0250  00F2               	movwf	IOCCF1_SetInterruptHandler@InterruptHandler
  5571  0251  3006               	movlw	high _RCS_INT
  5572  0252  00F3               	movwf	IOCCF1_SetInterruptHandler@InterruptHandler+1
  5573  0253  26DB               	fcall	_IOCCF1_SetInterruptHandler
  5574                           
  5575                           ;Main.c: 97:     ADC_SelectChannel(Vbatt);
  5576  0254  3010               	movlw	16
  5577  0255  2649               	fcall	_ADC_SelectChannel
  5578                           
  5579                           ;Main.c: 99:     INITxEXECUTER();
  5580  0256  266F               	fcall	_INITxEXECUTER
  5581  0257                     l2642:
  5582                           
  5583                           ;Main.c: 102:     {;Main.c: 104:         if(UpdateLeds){
  5584  0257  0140               	movlb	0	; select bank0
  5585  0258  0835               	movf	_UpdateLeds,w
  5586  0259  1903               	btfsc	3,2
  5587  025A  2A60               	goto	l2648
  5588                           
  5589                           ;Main.c: 105:             if (EXECUTExEFFECT() == 1 )
  5590  025B  245F               	fcall	_EXECUTExEFFECT
  5591  025C  3A01               	xorlw	1
  5592  025D  1D03               	skipz
  5593  025E  2A60               	goto	l2648
  5594                           
  5595                           ;Main.c: 106:             {;Main.c: 107:                 UpdateLeds = 0;
  5596  025F  01B5               	clrf	_UpdateLeds
  5597  0260                     l2648:
  5598                           
  5599                           ;Main.c: 112:         if(UpdateRcs && !CarrOff){
  5600  0260  0834               	movf	_UpdateRcs,w
  5601  0261  1903               	btfsc	3,2
  5602  0262  2A68               	goto	l2656
  5603  0263  0831               	movf	_CarrOff,w
  5604  0264  1D03               	btfss	3,2
  5605  0265  2A68               	goto	l2656
  5606                           
  5607                           ;Main.c: 113:             RCSxLED();
  5608  0266  22D7               	fcall	_RCSxLED
  5609                           
  5610                           ;Main.c: 114:             UpdateRcs = 0;
  5611  0267  01B4               	clrf	_UpdateRcs
  5612  0268                     l2656:
  5613                           
  5614                           ;Main.c: 118:         if(UpdateVbatt){
  5615  0268  0833               	movf	_UpdateVbatt,w
  5616  0269  1D03               	btfss	3,2
  5617  026A  2ABC               	goto	l2698
  5618  026B  2ACC               	goto	l2700
  5619  026C                     l2660:
  5620  026C  26F9               	fcall	_ADC_StartConversion
  5621                           
  5622                           ;Main.c: 121:                         AdcState = 1;
  5623  026D  0140               	movlb	0	; select bank0
  5624  026E  01B0               	clrf	_AdcState
  5625  026F  0AB0               	incf	_AdcState,f
  5626                           
  5627                           ;Main.c: 122:                     break;
  5628  0270  2ACC               	goto	l2700
  5629  0271                     l2664:
  5630  0271  26BC               	fcall	_ADC_IsConversionDone
  5631  0272  3A00               	xorlw	0
  5632  0273  1903               	skipnz
  5633  0274  2ACC               	goto	l2700
  5634                           
  5635                           ;Main.c: 124:                             AdcResultSample = ADC_GetConversionResult();
  5636  0275  26E7               	fcall	_ADC_GetConversionResult
  5637  0276  0873               	movf	?_ADC_GetConversionResult+1,w
  5638  0277  0140               	movlb	0	; select bank0
  5639  0278  00A5               	movwf	_AdcResultSample+1
  5640  0279  0872               	movf	?_ADC_GetConversionResult,w
  5641  027A  00A4               	movwf	_AdcResultSample
  5642                           
  5643                           ;Main.c: 125:                             AdcResult[pAdcResult] = AdcResultSample;
  5644  027B  352F               	lslf	_pAdcResult,w
  5645  027C  3E4D               	addlw	(low (_AdcResult| 0))& (0+255)
  5646  027D  0086               	movwf	6
  5647  027E  0187               	clrf	7
  5648  027F  0824               	movf	_AdcResultSample,w
  5649  0280  3FC0               	movwi [0]fsr1
  5650  0281  0825               	movf	_AdcResultSample+1,w
  5651  0282  3FC1               	movwi [1]fsr1
  5652                           
  5653                           ;Main.c: 127:                             pAdcResult++;
  5654  0283  3001               	movlw	1
  5655  0284  00CA               	movwf	??_main
  5656  0285  084A               	movf	??_main,w
  5657  0286  07AF               	addwf	_pAdcResult,f
  5658                           
  5659                           ;Main.c: 128:                             if(pAdcResult > (8 - 1)){
  5660  0287  3008               	movlw	8
  5661  0288  022F               	subwf	_pAdcResult,w
  5662  0289  1803               	btfsc	3,0
  5663                           
  5664                           ;Main.c: 129:                                 pAdcResult = 0;
  5665  028A  01AF               	clrf	_pAdcResult
  5666                           
  5667                           ;Main.c: 132:                             AdcResultAvg = 0;
  5668                           
  5669                           ;Main.c: 130:                             }
  5670  028B  01A2               	clrf	_AdcResultAvg
  5671  028C  01A3               	clrf	_AdcResultAvg+1
  5672                           
  5673                           ;Main.c: 133:                             for(uint8_t i=0; i < 8; i++){
  5674  028D  01CC               	clrf	main@i
  5675  028E                     l2680:
  5676                           
  5677                           ;Main.c: 134:                                 AdcResultAvg += AdcResult[i];
  5678  028E  354C               	lslf	main@i,w
  5679  028F  3E4D               	addlw	(low (_AdcResult| 0))& (0+255)
  5680  0290  0086               	movwf	6
  5681  0291  0187               	clrf	7
  5682  0292  3F40               	moviw [0]fsr1
  5683  0293  00CA               	movwf	??_main
  5684  0294  3F41               	moviw [1]fsr1
  5685  0295  00CB               	movwf	??_main+1
  5686  0296  084A               	movf	??_main,w
  5687  0297  07A2               	addwf	_AdcResultAvg,f
  5688  0298  084B               	movf	??_main+1,w
  5689  0299  3DA3               	addwfc	_AdcResultAvg+1,f
  5690                           
  5691                           ;Main.c: 135:                             };
  5692  029A  3001               	movlw	1
  5693  029B  00CA               	movwf	??_main
  5694  029C  084A               	movf	??_main,w
  5695  029D  07CC               	addwf	main@i,f
  5696  029E  3008               	movlw	8
  5697  029F  024C               	subwf	main@i,w
  5698  02A0  1C03               	skipc
  5699  02A1  2A8E               	goto	l2680
  5700                           
  5701                           ;Main.c: 137:                             AdcResultAvg = AdcResultAvg >> 3;
  5702  02A2  0823               	movf	_AdcResultAvg+1,w
  5703  02A3  00CB               	movwf	??_main+1
  5704  02A4  0822               	movf	_AdcResultAvg,w
  5705  02A5  00CA               	movwf	??_main
  5706  02A6  36CB               	lsrf	??_main+1,f
  5707  02A7  0CCA               	rrf	??_main,f
  5708  02A8  36CB               	lsrf	??_main+1,f
  5709  02A9  0CCA               	rrf	??_main,f
  5710  02AA  36CB               	lsrf	??_main+1,f
  5711  02AB  0CCA               	rrf	??_main,f
  5712  02AC  084A               	movf	??_main,w
  5713  02AD  00A2               	movwf	_AdcResultAvg
  5714  02AE  084B               	movf	??_main+1,w
  5715  02AF  00A3               	movwf	_AdcResultAvg+1
  5716                           
  5717                           ;Main.c: 138:                             if (AdcResultAvg < 800){
  5718  02B0  3003               	movlw	3
  5719  02B1  0223               	subwf	_AdcResultAvg+1,w
  5720  02B2  3020               	movlw	32
  5721  02B3  1903               	skipnz
  5722  02B4  0222               	subwf	_AdcResultAvg,w
  5723  02B5  1803               	skipnc
  5724  02B6  2AB9               	goto	l2692
  5725                           
  5726                           ;Main.c: 139:                                BattProtect = 1;
  5727  02B7  01B2               	clrf	_BattProtect
  5728  02B8  0AB2               	incf	_BattProtect,f
  5729  02B9                     l2692:
  5730                           
  5731                           ;Main.c: 141:                             UpdateVbatt = 0;
  5732  02B9  01B3               	clrf	_UpdateVbatt
  5733  02BA                     l2694:	
  5734                           ;Main.c: 142:                             AdcState = 0;
  5735                           
  5736  02BA  01B0               	clrf	_AdcState
  5737                           
  5738                           ;Main.c: 147:                     break;
  5739  02BB  2ACC               	goto	l2700
  5740  02BC                     l2698:
  5741  02BC  0830               	movf	_AdcState,w
  5742  02BD  00CA               	movwf	??_main
  5743  02BE  01CB               	clrf	??_main+1
  5744                           
  5745                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5746                           ; Switch size 1, requested type "simple"
  5747                           ; Number of cases is 1, Range of values is 0 to 0
  5748                           ; switch strategies available:
  5749                           ; Name         Instructions Cycles
  5750                           ; simple_byte            4     3 (average)
  5751                           ; direct_byte            8     6 (fixed)
  5752                           ; jumptable            260     6 (fixed)
  5753                           ;	Chosen strategy is simple_byte
  5754  02BF  084B               	movf	??_main+1,w
  5755  02C0  3A00               	xorlw	0	; case 0
  5756  02C1  1903               	skipnz
  5757  02C2  2AC4               	goto	l2784
  5758  02C3  2ABA               	goto	l2694
  5759  02C4                     l2784:
  5760                           
  5761                           ; Switch size 1, requested type "simple"
  5762                           ; Number of cases is 2, Range of values is 0 to 1
  5763                           ; switch strategies available:
  5764                           ; Name         Instructions Cycles
  5765                           ; simple_byte            7     4 (average)
  5766                           ; direct_byte           10     6 (fixed)
  5767                           ; jumptable            260     6 (fixed)
  5768                           ;	Chosen strategy is simple_byte
  5769  02C4  084A               	movf	??_main,w
  5770  02C5  3A00               	xorlw	0	; case 0
  5771  02C6  1903               	skipnz
  5772  02C7  2A6C               	goto	l2660
  5773  02C8  3A01               	xorlw	1	; case 1
  5774  02C9  1903               	skipnz
  5775  02CA  2A71               	goto	l2664
  5776  02CB  2ABA               	goto	l2694
  5777  02CC                     l2700:
  5778                           
  5779                           ;Main.c: 151:         if(BattProtect){
  5780  02CC  0140               	movlb	0	; select bank0
  5781  02CD  0832               	movf	_BattProtect,w
  5782  02CE  1903               	btfsc	3,2
  5783  02CF  2AD5               	goto	l561
  5784                           
  5785                           ;Main.c: 153:             BATTxPROTECT();
  5786  02D0  24DE               	fcall	_BATTxPROTECT
  5787                           
  5788                           ;Main.c: 154:             BattProtect = 0;
  5789  02D1  0140               	movlb	0	; select bank0
  5790  02D2  01B2               	clrf	_BattProtect
  5791                           
  5792                           ;Main.c: 156:             CarrOff = 1;
  5793  02D3  01B1               	clrf	_CarrOff
  5794  02D4  0AB1               	incf	_CarrOff,f
  5795  02D5                     l561:	
  5796                           ;Main.c: 157:         }
  5797                           
  5798  02D5  0064               	clrwdt	;# 
  5799  02D6  2A57               	goto	l2642
  5800  02D7                     __end_of_main:
  5801                           
  5802                           	psect	text1
  5803  0610                     __ptext1:	
  5804 ;; *************** function _SYSTEM_Initialize *****************
  5805 ;; Defined at:
  5806 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5807 ;; Parameters:    Size  Location     Type
  5808 ;;		None
  5809 ;; Auto vars:     Size  Location     Type
  5810 ;;		None
  5811 ;; Return value:  Size  Location     Type
  5812 ;;                  1    wreg      void 
  5813 ;; Registers used:
  5814 ;;		wreg, status,2, status,0, pclath, cstack
  5815 ;; Tracked objects:
  5816 ;;		On entry : B3F/0
  5817 ;;		On exit  : 3F/4
  5818 ;;		Unchanged: 0/0
  5819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5820 ;;      Params:         0       0       0       0
  5821 ;;      Locals:         0       0       0       0
  5822 ;;      Temps:          0       0       0       0
  5823 ;;      Totals:         0       0       0       0
  5824 ;;Total ram usage:        0 bytes
  5825 ;; Hardware stack levels used:    1
  5826 ;; Hardware stack levels required when called:    8
  5827 ;; This function calls:
  5828 ;;		_ADC_Initialize
  5829 ;;		_FVR_Initialize
  5830 ;;		_OSCILLATOR_Initialize
  5831 ;;		_PIN_MANAGER_Initialize
  5832 ;;		_PMD_Initialize
  5833 ;;		_PWM1_Initialize
  5834 ;;		_PWM2_Initialize
  5835 ;;		_PWM3_Initialize
  5836 ;;		_PWM4_Initialize
  5837 ;;		_PWM5_Initialize
  5838 ;;		_PWM6_Initialize
  5839 ;;		_TMR0_Initialize
  5840 ;;		_TMR1_Initialize
  5841 ;;		_TMR2_Initialize
  5842 ;; This function is called by:
  5843 ;;		_main
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           
  5848                           ;psect for function _SYSTEM_Initialize
  5849  0610                     _SYSTEM_Initialize:
  5850                           
  5851                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  5852                           
  5853                           ;incstack = 0
  5854                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5855  0610  263C               	fcall	_PMD_Initialize
  5856                           
  5857                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  5858  0611  23CD               	fcall	_PIN_MANAGER_Initialize
  5859                           
  5860                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  5861  0612  2663               	fcall	_OSCILLATOR_Initialize
  5862                           
  5863                           ;mcc_generated_files/mcc.c: 55:     FVR_Initialize();
  5864  0613  26F1               	fcall	_FVR_Initialize
  5865                           
  5866                           ;mcc_generated_files/mcc.c: 56:     PWM2_Initialize();
  5867  0614  269E               	fcall	_PWM2_Initialize
  5868                           
  5869                           ;mcc_generated_files/mcc.c: 57:     PWM4_Initialize();
  5870  0615  26B5               	fcall	_PWM4_Initialize
  5871                           
  5872                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  5873  0616  262E               	fcall	_TMR2_Initialize
  5874                           
  5875                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  5876  0617  2520               	fcall	_TMR0_Initialize
  5877                           
  5878                           ;mcc_generated_files/mcc.c: 60:     PWM6_Initialize();
  5879  0618  268E               	fcall	_PWM6_Initialize
  5880                           
  5881                           ;mcc_generated_files/mcc.c: 61:     PWM1_Initialize();
  5882  0619  26A6               	fcall	_PWM1_Initialize
  5883                           
  5884                           ;mcc_generated_files/mcc.c: 62:     ADC_Initialize();
  5885  061A  2685               	fcall	_ADC_Initialize
  5886                           
  5887                           ;mcc_generated_files/mcc.c: 63:     PWM3_Initialize();
  5888  061B  2696               	fcall	_PWM3_Initialize
  5889                           
  5890                           ;mcc_generated_files/mcc.c: 64:     PWM5_Initialize();
  5891  061C  26AE               	fcall	_PWM5_Initialize
  5892                           
  5893                           ;mcc_generated_files/mcc.c: 65:     TMR1_Initialize();
  5894  061D  2502               	fcall	_TMR1_Initialize
  5895  061E  0008               	return
  5896  061F                     __end_of_SYSTEM_Initialize:
  5897                           
  5898                           	psect	text2
  5899  062E                     __ptext2:	
  5900 ;; *************** function _TMR2_Initialize *****************
  5901 ;; Defined at:
  5902 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  5903 ;; Parameters:    Size  Location     Type
  5904 ;;		None
  5905 ;; Auto vars:     Size  Location     Type
  5906 ;;		None
  5907 ;; Return value:  Size  Location     Type
  5908 ;;                  1    wreg      void 
  5909 ;; Registers used:
  5910 ;;		wreg, status,2
  5911 ;; Tracked objects:
  5912 ;;		On entry : 3F/6
  5913 ;;		On exit  : 3F/5
  5914 ;;		Unchanged: 0/0
  5915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5916 ;;      Params:         0       0       0       0
  5917 ;;      Locals:         0       0       0       0
  5918 ;;      Temps:          0       0       0       0
  5919 ;;      Totals:         0       0       0       0
  5920 ;;Total ram usage:        0 bytes
  5921 ;; Hardware stack levels used:    1
  5922 ;; Hardware stack levels required when called:    6
  5923 ;; This function calls:
  5924 ;;		Nothing
  5925 ;; This function is called by:
  5926 ;;		_SYSTEM_Initialize
  5927 ;; This function uses a non-reentrant model
  5928 ;;
  5929                           
  5930                           
  5931                           ;psect for function _TMR2_Initialize
  5932  062E                     _TMR2_Initialize:
  5933                           
  5934                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
  5935                           
  5936                           ;incstack = 0
  5937                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  5938  062E  3001               	movlw	1
  5939  062F  0145               	movlb	5	; select bank5
  5940  0630  0090               	movwf	16	;volatile
  5941                           
  5942                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  5943  0631  018F               	clrf	15	;volatile
  5944                           
  5945                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  5946  0632  0191               	clrf	17	;volatile
  5947                           
  5948                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
  5949  0633  30FF               	movlw	255
  5950  0634  008D               	movwf	13	;volatile
  5951                           
  5952                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  5953  0635  018C               	clrf	12	;volatile
  5954                           
  5955                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  5956  0636  014E               	movlb	14	; select bank14
  5957  0637  1090               	bcf	16,1	;volatile
  5958                           
  5959                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0x80;
  5960  0638  3080               	movlw	128
  5961  0639  0145               	movlb	5	; select bank5
  5962  063A  008E               	movwf	14	;volatile
  5963  063B  0008               	return
  5964  063C                     __end_of_TMR2_Initialize:
  5965                           
  5966                           	psect	text3
  5967  0502                     __ptext3:	
  5968 ;; *************** function _TMR1_Initialize *****************
  5969 ;; Defined at:
  5970 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;		None
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;		None
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  1    wreg      void 
  5977 ;; Registers used:
  5978 ;;		wreg, status,2, status,0, pclath, cstack
  5979 ;; Tracked objects:
  5980 ;;		On entry : 3F/6
  5981 ;;		On exit  : 3F/4
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5984 ;;      Params:         0       0       0       0
  5985 ;;      Locals:         0       0       0       0
  5986 ;;      Temps:          0       0       0       0
  5987 ;;      Totals:         0       0       0       0
  5988 ;;Total ram usage:        0 bytes
  5989 ;; Hardware stack levels used:    1
  5990 ;; Hardware stack levels required when called:    7
  5991 ;; This function calls:
  5992 ;;		_TMR1_SetInterruptHandler
  5993 ;; This function is called by:
  5994 ;;		_SYSTEM_Initialize
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998                           
  5999                           ;psect for function _TMR1_Initialize
  6000  0502                     _TMR1_Initialize:
  6001                           
  6002                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  6003                           
  6004                           ;incstack = 0
  6005                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6006  0502  0144               	movlb	4	; select bank4
  6007  0503  018F               	clrf	15	;volatile
  6008                           
  6009                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
  6010  0504  0190               	clrf	16	;volatile
  6011                           
  6012                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x09;
  6013  0505  3009               	movlw	9
  6014  0506  0091               	movwf	17	;volatile
  6015                           
  6016                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xF6;
  6017  0507  30F6               	movlw	246
  6018  0508  008D               	movwf	13	;volatile
  6019                           
  6020                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0x3C;
  6021  0509  303C               	movlw	60
  6022  050A  008C               	movwf	12	;volatile
  6023                           
  6024                           ;mcc_generated_files/tmr1.c: 84:     PIR4bits.TMR1IF = 0;
  6025  050B  014E               	movlb	14	; select bank14
  6026  050C  1010               	bcf	16,0	;volatile
  6027                           
  6028                           ;mcc_generated_files/tmr1.c: 87:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  6029  050D  0144               	movlb	4	; select bank4
  6030  050E  080D               	movf	13,w	;volatile
  6031  050F  0140               	movlb	0	; select bank0
  6032  0510  00A9               	movwf	_timer1ReloadVal+1	;volatile
  6033  0511  0144               	movlb	4	; select bank4
  6034  0512  080C               	movf	12,w	;volatile
  6035  0513  0140               	movlb	0	; select bank0
  6036  0514  00A8               	movwf	_timer1ReloadVal	;volatile
  6037                           
  6038                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
  6039  0515  014E               	movlb	14	; select bank14
  6040  0516  141A               	bsf	26,0	;volatile
  6041                           
  6042                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  6043  0517  3002               	movlw	low _TMR1_DefaultInterruptHandler
  6044  0518  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  6045  0519  3007               	movlw	high _TMR1_DefaultInterruptHandler
  6046  051A  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  6047  051B  26CF               	fcall	_TMR1_SetInterruptHandler
  6048                           
  6049                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x11;
  6050  051C  3011               	movlw	17
  6051  051D  0144               	movlb	4	; select bank4
  6052  051E  008E               	movwf	14	;volatile
  6053  051F  0008               	return
  6054  0520                     __end_of_TMR1_Initialize:
  6055                           
  6056                           	psect	text4
  6057  06CF                     __ptext4:	
  6058 ;; *************** function _TMR1_SetInterruptHandler *****************
  6059 ;; Defined at:
  6060 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  6061 ;; Parameters:    Size  Location     Type
  6062 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  6063 ;;		 -> TMR1_INT(1), TMR1_DefaultInterruptHandler(1), 
  6064 ;; Auto vars:     Size  Location     Type
  6065 ;;		None
  6066 ;; Return value:  Size  Location     Type
  6067 ;;                  1    wreg      void 
  6068 ;; Registers used:
  6069 ;;		wreg
  6070 ;; Tracked objects:
  6071 ;;		On entry : 31/0
  6072 ;;		On exit  : 3F/0
  6073 ;;		Unchanged: 0/0
  6074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6075 ;;      Params:         2       0       0       0
  6076 ;;      Locals:         0       0       0       0
  6077 ;;      Temps:          0       0       0       0
  6078 ;;      Totals:         2       0       0       0
  6079 ;;Total ram usage:        2 bytes
  6080 ;; Hardware stack levels used:    1
  6081 ;; Hardware stack levels required when called:    6
  6082 ;; This function calls:
  6083 ;;		Nothing
  6084 ;; This function is called by:
  6085 ;;		_TMR1_Initialize
  6086 ;;		_main
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089                           
  6090                           
  6091                           ;psect for function _TMR1_SetInterruptHandler
  6092  06CF                     _TMR1_SetInterruptHandler:
  6093                           
  6094                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  6095                           
  6096                           ;incstack = 0
  6097                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  6098  06CF  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  6099  06D0  0140               	movlb	0	; select bank0
  6100  06D1  00A7               	movwf	_TMR1_InterruptHandler+1
  6101  06D2  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  6102  06D3  00A6               	movwf	_TMR1_InterruptHandler
  6103  06D4  0008               	return
  6104  06D5                     __end_of_TMR1_SetInterruptHandler:
  6105                           
  6106                           	psect	text5
  6107  0520                     __ptext5:	
  6108 ;; *************** function _TMR0_Initialize *****************
  6109 ;; Defined at:
  6110 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;		None
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;		None
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  1    wreg      void 
  6117 ;; Registers used:
  6118 ;;		wreg, status,2, status,0, pclath, cstack
  6119 ;; Tracked objects:
  6120 ;;		On entry : 3F/5
  6121 ;;		On exit  : 3F/B
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6124 ;;      Params:         0       0       0       0
  6125 ;;      Locals:         0       0       0       0
  6126 ;;      Temps:          0       0       0       0
  6127 ;;      Totals:         0       0       0       0
  6128 ;;Total ram usage:        0 bytes
  6129 ;; Hardware stack levels used:    1
  6130 ;; Hardware stack levels required when called:    7
  6131 ;; This function calls:
  6132 ;;		_TMR0_SetInterruptHandler
  6133 ;; This function is called by:
  6134 ;;		_SYSTEM_Initialize
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           
  6138                           
  6139                           ;psect for function _TMR0_Initialize
  6140  0520                     _TMR0_Initialize:
  6141                           
  6142                           ;mcc_generated_files/tmr0.c: 71:     T0CON1 = 0x40;
  6143                           
  6144                           ;incstack = 0
  6145                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6146  0520  3040               	movlw	64
  6147  0521  014B               	movlb	11	; select bank11
  6148  0522  009F               	movwf	31	;volatile
  6149                           
  6150                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0xF0;
  6151  0523  30F0               	movlw	240
  6152  0524  009D               	movwf	29	;volatile
  6153                           
  6154                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0x60;
  6155  0525  3060               	movlw	96
  6156  0526  009C               	movwf	28	;volatile
  6157                           
  6158                           ;mcc_generated_files/tmr0.c: 80:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  6159  0527  081D               	movf	29,w	;volatile
  6160  0528  00FB               	movwf	_timer0ReloadVal16bit+1	;volatile
  6161  0529  081C               	movf	28,w	;volatile
  6162  052A  00FA               	movwf	_timer0ReloadVal16bit	;volatile
  6163                           
  6164                           ;mcc_generated_files/tmr0.c: 83:     PIR0bits.TMR0IF = 0;
  6165  052B  014E               	movlb	14	; select bank14
  6166  052C  128C               	bcf	12,5	;volatile
  6167                           
  6168                           ;mcc_generated_files/tmr0.c: 86:     PIE0bits.TMR0IE = 1;
  6169  052D  1696               	bsf	22,5	;volatile
  6170                           
  6171                           ;mcc_generated_files/tmr0.c: 89:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  6172  052E  3003               	movlw	low _TMR0_DefaultInterruptHandler
  6173  052F  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  6174  0530  3007               	movlw	high _TMR0_DefaultInterruptHandler
  6175  0531  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  6176  0532  26D5               	fcall	_TMR0_SetInterruptHandler
  6177                           
  6178                           ;mcc_generated_files/tmr0.c: 92:     T0CON0 = 0x90;
  6179  0533  3090               	movlw	144
  6180  0534  014B               	movlb	11	; select bank11
  6181  0535  009E               	movwf	30	;volatile
  6182  0536  0008               	return
  6183  0537                     __end_of_TMR0_Initialize:
  6184                           
  6185                           	psect	text6
  6186  06D5                     __ptext6:	
  6187 ;; *************** function _TMR0_SetInterruptHandler *****************
  6188 ;; Defined at:
  6189 ;;		line 151 in file "mcc_generated_files/tmr0.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  6192 ;;		 -> TMR0_INT(1), TMR0_DefaultInterruptHandler(1), 
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;		None
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  1    wreg      void 
  6197 ;; Registers used:
  6198 ;;		wreg
  6199 ;; Tracked objects:
  6200 ;;		On entry : 35/4
  6201 ;;		On exit  : 3F/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6204 ;;      Params:         2       0       0       0
  6205 ;;      Locals:         0       0       0       0
  6206 ;;      Temps:          0       0       0       0
  6207 ;;      Totals:         2       0       0       0
  6208 ;;Total ram usage:        2 bytes
  6209 ;; Hardware stack levels used:    1
  6210 ;; Hardware stack levels required when called:    6
  6211 ;; This function calls:
  6212 ;;		Nothing
  6213 ;; This function is called by:
  6214 ;;		_TMR0_Initialize
  6215 ;;		_main
  6216 ;; This function uses a non-reentrant model
  6217 ;;
  6218                           
  6219                           
  6220                           ;psect for function _TMR0_SetInterruptHandler
  6221  06D5                     _TMR0_SetInterruptHandler:
  6222                           
  6223                           ;mcc_generated_files/tmr0.c: 152:     TMR0_InterruptHandler = InterruptHandler;
  6224                           
  6225                           ;incstack = 0
  6226                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  6227  06D5  0873               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  6228  06D6  0140               	movlb	0	; select bank0
  6229  06D7  00AB               	movwf	_TMR0_InterruptHandler+1
  6230  06D8  0872               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  6231  06D9  00AA               	movwf	_TMR0_InterruptHandler
  6232  06DA  0008               	return
  6233  06DB                     __end_of_TMR0_SetInterruptHandler:
  6234                           
  6235                           	psect	text7
  6236  068E                     __ptext7:	
  6237 ;; *************** function _PWM6_Initialize *****************
  6238 ;; Defined at:
  6239 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  6240 ;; Parameters:    Size  Location     Type
  6241 ;;		None
  6242 ;; Auto vars:     Size  Location     Type
  6243 ;;		None
  6244 ;; Return value:  Size  Location     Type
  6245 ;;                  1    wreg      void 
  6246 ;; Registers used:
  6247 ;;		wreg
  6248 ;; Tracked objects:
  6249 ;;		On entry : 3F/B
  6250 ;;		On exit  : 3F/7
  6251 ;;		Unchanged: 0/0
  6252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6253 ;;      Params:         0       0       0       0
  6254 ;;      Locals:         0       0       0       0
  6255 ;;      Temps:          0       0       0       0
  6256 ;;      Totals:         0       0       0       0
  6257 ;;Total ram usage:        0 bytes
  6258 ;; Hardware stack levels used:    1
  6259 ;; Hardware stack levels required when called:    6
  6260 ;; This function calls:
  6261 ;;		Nothing
  6262 ;; This function is called by:
  6263 ;;		_SYSTEM_Initialize
  6264 ;; This function uses a non-reentrant model
  6265 ;;
  6266                           
  6267                           
  6268                           ;psect for function _PWM6_Initialize
  6269  068E                     _PWM6_Initialize:
  6270                           
  6271                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
  6272                           
  6273                           ;incstack = 0
  6274                           ; Regs used in _PWM6_Initialize: [wreg]
  6275  068E  3080               	movlw	128
  6276  068F  0147               	movlb	7	; select bank7
  6277  0690  008E               	movwf	14	;volatile
  6278                           
  6279                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x7F;
  6280  0691  307F               	movlw	127
  6281  0692  008D               	movwf	13	;volatile
  6282                           
  6283                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0xC0;
  6284  0693  30C0               	movlw	192
  6285  0694  008C               	movwf	12	;volatile
  6286  0695  0008               	return
  6287  0696                     __end_of_PWM6_Initialize:
  6288                           
  6289                           	psect	text8
  6290  06AE                     __ptext8:	
  6291 ;; *************** function _PWM5_Initialize *****************
  6292 ;; Defined at:
  6293 ;;		line 58 in file "mcc_generated_files/pwm5.c"
  6294 ;; Parameters:    Size  Location     Type
  6295 ;;		None
  6296 ;; Auto vars:     Size  Location     Type
  6297 ;;		None
  6298 ;; Return value:  Size  Location     Type
  6299 ;;                  1    wreg      void 
  6300 ;; Registers used:
  6301 ;;		wreg
  6302 ;; Tracked objects:
  6303 ;;		On entry : 3F/6
  6304 ;;		On exit  : 3F/6
  6305 ;;		Unchanged: 0/0
  6306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6307 ;;      Params:         0       0       0       0
  6308 ;;      Locals:         0       0       0       0
  6309 ;;      Temps:          0       0       0       0
  6310 ;;      Totals:         0       0       0       0
  6311 ;;Total ram usage:        0 bytes
  6312 ;; Hardware stack levels used:    1
  6313 ;; Hardware stack levels required when called:    6
  6314 ;; This function calls:
  6315 ;;		Nothing
  6316 ;; This function is called by:
  6317 ;;		_SYSTEM_Initialize
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           
  6322                           ;psect for function _PWM5_Initialize
  6323  06AE                     _PWM5_Initialize:
  6324                           
  6325                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
  6326                           
  6327                           ;incstack = 0
  6328                           ; Regs used in _PWM5_Initialize: [wreg]
  6329  06AE  3080               	movlw	128
  6330  06AF  009E               	movwf	30	;volatile
  6331                           
  6332                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x7F;
  6333  06B0  307F               	movlw	127
  6334  06B1  009D               	movwf	29	;volatile
  6335                           
  6336                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0xC0;
  6337  06B2  30C0               	movlw	192
  6338  06B3  009C               	movwf	28	;volatile
  6339  06B4  0008               	return
  6340  06B5                     __end_of_PWM5_Initialize:
  6341                           
  6342                           	psect	text9
  6343  06B5                     __ptext9:	
  6344 ;; *************** function _PWM4_Initialize *****************
  6345 ;; Defined at:
  6346 ;;		line 58 in file "mcc_generated_files/pwm4.c"
  6347 ;; Parameters:    Size  Location     Type
  6348 ;;		None
  6349 ;; Auto vars:     Size  Location     Type
  6350 ;;		None
  6351 ;; Return value:  Size  Location     Type
  6352 ;;                  1    wreg      void 
  6353 ;; Registers used:
  6354 ;;		wreg
  6355 ;; Tracked objects:
  6356 ;;		On entry : 3F/6
  6357 ;;		On exit  : 3F/6
  6358 ;;		Unchanged: 0/0
  6359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6360 ;;      Params:         0       0       0       0
  6361 ;;      Locals:         0       0       0       0
  6362 ;;      Temps:          0       0       0       0
  6363 ;;      Totals:         0       0       0       0
  6364 ;;Total ram usage:        0 bytes
  6365 ;; Hardware stack levels used:    1
  6366 ;; Hardware stack levels required when called:    6
  6367 ;; This function calls:
  6368 ;;		Nothing
  6369 ;; This function is called by:
  6370 ;;		_SYSTEM_Initialize
  6371 ;; This function uses a non-reentrant model
  6372 ;;
  6373                           
  6374                           
  6375                           ;psect for function _PWM4_Initialize
  6376  06B5                     _PWM4_Initialize:
  6377                           
  6378                           ;mcc_generated_files/pwm4.c: 62:     PWM4CON = 0x80;
  6379                           
  6380                           ;incstack = 0
  6381                           ; Regs used in _PWM4_Initialize: [wreg]
  6382  06B5  3080               	movlw	128
  6383  06B6  009A               	movwf	26	;volatile
  6384                           
  6385                           ;mcc_generated_files/pwm4.c: 65:     PWM4DCH = 0x7F;
  6386  06B7  307F               	movlw	127
  6387  06B8  0099               	movwf	25	;volatile
  6388                           
  6389                           ;mcc_generated_files/pwm4.c: 68:     PWM4DCL = 0xC0;
  6390  06B9  30C0               	movlw	192
  6391  06BA  0098               	movwf	24	;volatile
  6392  06BB  0008               	return
  6393  06BC                     __end_of_PWM4_Initialize:
  6394                           
  6395                           	psect	text10
  6396  0696                     __ptext10:	
  6397 ;; *************** function _PWM3_Initialize *****************
  6398 ;; Defined at:
  6399 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  6400 ;; Parameters:    Size  Location     Type
  6401 ;;		None
  6402 ;; Auto vars:     Size  Location     Type
  6403 ;;		None
  6404 ;; Return value:  Size  Location     Type
  6405 ;;                  1    wreg      void 
  6406 ;; Registers used:
  6407 ;;		wreg
  6408 ;; Tracked objects:
  6409 ;;		On entry : 3F/1
  6410 ;;		On exit  : 3F/6
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6413 ;;      Params:         0       0       0       0
  6414 ;;      Locals:         0       0       0       0
  6415 ;;      Temps:          0       0       0       0
  6416 ;;      Totals:         0       0       0       0
  6417 ;;Total ram usage:        0 bytes
  6418 ;; Hardware stack levels used:    1
  6419 ;; Hardware stack levels required when called:    6
  6420 ;; This function calls:
  6421 ;;		Nothing
  6422 ;; This function is called by:
  6423 ;;		_SYSTEM_Initialize
  6424 ;; This function uses a non-reentrant model
  6425 ;;
  6426                           
  6427                           
  6428                           ;psect for function _PWM3_Initialize
  6429  0696                     _PWM3_Initialize:
  6430                           
  6431                           ;mcc_generated_files/pwm3.c: 62:     PWM3CON = 0x80;
  6432                           
  6433                           ;incstack = 0
  6434                           ; Regs used in _PWM3_Initialize: [wreg]
  6435  0696  3080               	movlw	128
  6436  0697  0146               	movlb	6	; select bank6
  6437  0698  0096               	movwf	22	;volatile
  6438                           
  6439                           ;mcc_generated_files/pwm3.c: 65:     PWM3DCH = 0x7F;
  6440  0699  307F               	movlw	127
  6441  069A  0095               	movwf	21	;volatile
  6442                           
  6443                           ;mcc_generated_files/pwm3.c: 68:     PWM3DCL = 0xC0;
  6444  069B  30C0               	movlw	192
  6445  069C  0094               	movwf	20	;volatile
  6446  069D  0008               	return
  6447  069E                     __end_of_PWM3_Initialize:
  6448                           
  6449                           	psect	text11
  6450  069E                     __ptext11:	
  6451 ;; *************** function _PWM2_Initialize *****************
  6452 ;; Defined at:
  6453 ;;		line 64 in file "mcc_generated_files/pwm2.c"
  6454 ;; Parameters:    Size  Location     Type
  6455 ;;		None
  6456 ;; Auto vars:     Size  Location     Type
  6457 ;;		None
  6458 ;; Return value:  Size  Location     Type
  6459 ;;                  1    wreg      void 
  6460 ;; Registers used:
  6461 ;;		wreg
  6462 ;; Tracked objects:
  6463 ;;		On entry : 3F/12
  6464 ;;		On exit  : 3F/6
  6465 ;;		Unchanged: 0/0
  6466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6467 ;;      Params:         0       0       0       0
  6468 ;;      Locals:         0       0       0       0
  6469 ;;      Temps:          0       0       0       0
  6470 ;;      Totals:         0       0       0       0
  6471 ;;Total ram usage:        0 bytes
  6472 ;; Hardware stack levels used:    1
  6473 ;; Hardware stack levels required when called:    6
  6474 ;; This function calls:
  6475 ;;		Nothing
  6476 ;; This function is called by:
  6477 ;;		_SYSTEM_Initialize
  6478 ;; This function uses a non-reentrant model
  6479 ;;
  6480                           
  6481                           
  6482                           ;psect for function _PWM2_Initialize
  6483  069E                     _PWM2_Initialize:
  6484                           
  6485                           ;mcc_generated_files/pwm2.c: 69:  CCP2CON = 0x8F;
  6486                           
  6487                           ;incstack = 0
  6488                           ; Regs used in _PWM2_Initialize: [wreg]
  6489  069E  308F               	movlw	143
  6490  069F  0146               	movlb	6	; select bank6
  6491  06A0  0092               	movwf	18	;volatile
  6492                           
  6493                           ;mcc_generated_files/pwm2.c: 72:  CCPR2H = 0x01;
  6494  06A1  3001               	movlw	1
  6495  06A2  0091               	movwf	17	;volatile
  6496                           
  6497                           ;mcc_generated_files/pwm2.c: 75:  CCPR2L = 0xFF;
  6498  06A3  30FF               	movlw	255
  6499  06A4  0090               	movwf	16	;volatile
  6500  06A5  0008               	return
  6501  06A6                     __end_of_PWM2_Initialize:
  6502                           
  6503                           	psect	text12
  6504  06A6                     __ptext12:	
  6505 ;; *************** function _PWM1_Initialize *****************
  6506 ;; Defined at:
  6507 ;;		line 64 in file "mcc_generated_files/pwm1.c"
  6508 ;; Parameters:    Size  Location     Type
  6509 ;;		None
  6510 ;; Auto vars:     Size  Location     Type
  6511 ;;		None
  6512 ;; Return value:  Size  Location     Type
  6513 ;;                  1    wreg      void 
  6514 ;; Registers used:
  6515 ;;		wreg
  6516 ;; Tracked objects:
  6517 ;;		On entry : 3F/7
  6518 ;;		On exit  : 3F/6
  6519 ;;		Unchanged: 0/0
  6520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6521 ;;      Params:         0       0       0       0
  6522 ;;      Locals:         0       0       0       0
  6523 ;;      Temps:          0       0       0       0
  6524 ;;      Totals:         0       0       0       0
  6525 ;;Total ram usage:        0 bytes
  6526 ;; Hardware stack levels used:    1
  6527 ;; Hardware stack levels required when called:    6
  6528 ;; This function calls:
  6529 ;;		Nothing
  6530 ;; This function is called by:
  6531 ;;		_SYSTEM_Initialize
  6532 ;; This function uses a non-reentrant model
  6533 ;;
  6534                           
  6535                           
  6536                           ;psect for function _PWM1_Initialize
  6537  06A6                     _PWM1_Initialize:
  6538                           
  6539                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8F;
  6540                           
  6541                           ;incstack = 0
  6542                           ; Regs used in _PWM1_Initialize: [wreg]
  6543  06A6  308F               	movlw	143
  6544  06A7  0146               	movlb	6	; select bank6
  6545  06A8  008E               	movwf	14	;volatile
  6546                           
  6547                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x01;
  6548  06A9  3001               	movlw	1
  6549  06AA  008D               	movwf	13	;volatile
  6550                           
  6551                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0xFF;
  6552  06AB  30FF               	movlw	255
  6553  06AC  008C               	movwf	12	;volatile
  6554  06AD  0008               	return
  6555  06AE                     __end_of_PWM1_Initialize:
  6556                           
  6557                           	psect	text13
  6558  063C                     __ptext13:	
  6559 ;; *************** function _PMD_Initialize *****************
  6560 ;; Defined at:
  6561 ;;		line 88 in file "mcc_generated_files/mcc.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;		None
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;		None
  6566 ;; Return value:  Size  Location     Type
  6567 ;;                  1    wreg      void 
  6568 ;; Registers used:
  6569 ;;		wreg, status,2
  6570 ;; Tracked objects:
  6571 ;;		On entry : B3F/0
  6572 ;;		On exit  : B3F/F
  6573 ;;		Unchanged: B00/0
  6574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6575 ;;      Params:         0       0       0       0
  6576 ;;      Locals:         0       0       0       0
  6577 ;;      Temps:          0       0       0       0
  6578 ;;      Totals:         0       0       0       0
  6579 ;;Total ram usage:        0 bytes
  6580 ;; Hardware stack levels used:    1
  6581 ;; Hardware stack levels required when called:    6
  6582 ;; This function calls:
  6583 ;;		Nothing
  6584 ;; This function is called by:
  6585 ;;		_SYSTEM_Initialize
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           
  6589                           
  6590                           ;psect for function _PMD_Initialize
  6591  063C                     _PMD_Initialize:
  6592                           
  6593                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x06;
  6594                           
  6595                           ;incstack = 0
  6596                           ; Regs used in _PMD_Initialize: [wreg+status,2]
  6597  063C  3006               	movlw	6
  6598  063D  014F               	movlb	15	; select bank15
  6599  063E  0096               	movwf	22	;volatile
  6600                           
  6601                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x80;
  6602  063F  3080               	movlw	128
  6603  0640  0097               	movwf	23	;volatile
  6604                           
  6605                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x47;
  6606  0641  3047               	movlw	71
  6607  0642  0098               	movwf	24	;volatile
  6608                           
  6609                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
  6610  0643  0199               	clrf	25	;volatile
  6611                           
  6612                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0xD1;
  6613  0644  30D1               	movlw	209
  6614  0645  009A               	movwf	26	;volatile
  6615                           
  6616                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x1E;
  6617  0646  301E               	movlw	30
  6618  0647  009B               	movwf	27	;volatile
  6619  0648  0008               	return
  6620  0649                     __end_of_PMD_Initialize:
  6621                           
  6622                           	psect	text14
  6623  03CD                     __ptext14:	
  6624 ;; *************** function _PIN_MANAGER_Initialize *****************
  6625 ;; Defined at:
  6626 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  6627 ;; Parameters:    Size  Location     Type
  6628 ;;		None
  6629 ;; Auto vars:     Size  Location     Type
  6630 ;;		None
  6631 ;; Return value:  Size  Location     Type
  6632 ;;                  1    wreg      void 
  6633 ;; Registers used:
  6634 ;;		wreg, status,2, status,0, pclath, cstack
  6635 ;; Tracked objects:
  6636 ;;		On entry : B3F/F
  6637 ;;		On exit  : 3F/3E
  6638 ;;		Unchanged: 0/0
  6639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6640 ;;      Params:         0       0       0       0
  6641 ;;      Locals:         0       0       0       0
  6642 ;;      Temps:          0       0       0       0
  6643 ;;      Totals:         0       0       0       0
  6644 ;;Total ram usage:        0 bytes
  6645 ;; Hardware stack levels used:    1
  6646 ;; Hardware stack levels required when called:    7
  6647 ;; This function calls:
  6648 ;;		_IOCCF1_SetInterruptHandler
  6649 ;; This function is called by:
  6650 ;;		_SYSTEM_Initialize
  6651 ;; This function uses a non-reentrant model
  6652 ;;
  6653                           
  6654                           
  6655                           ;psect for function _PIN_MANAGER_Initialize
  6656  03CD                     _PIN_MANAGER_Initialize:
  6657                           
  6658                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  6659                           
  6660                           ;incstack = 0
  6661                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6662  03CD  0140               	movlb	0	; select bank0
  6663  03CE  0198               	clrf	24	;volatile
  6664                           
  6665                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
  6666  03CF  019A               	clrf	26	;volatile
  6667                           
  6668                           ;mcc_generated_files/pin_manager.c: 68:     TRISA = 0x0A;
  6669  03D0  300A               	movlw	10
  6670  03D1  0092               	movwf	18	;volatile
  6671                           
  6672                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x03;
  6673  03D2  3003               	movlw	3
  6674  03D3  0094               	movwf	20	;volatile
  6675                           
  6676                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x01;
  6677  03D4  3001               	movlw	1
  6678  03D5  017E               	movlb	62	; select bank62
  6679  03D6  00CE               	movwf	78	;volatile
  6680                           
  6681                           ;mcc_generated_files/pin_manager.c: 75:     ANSELA = 0x00;
  6682  03D7  01B8               	clrf	56	;volatile
  6683                           
  6684                           ;mcc_generated_files/pin_manager.c: 80:     WPUA = 0x00;
  6685  03D8  01B9               	clrf	57	;volatile
  6686                           
  6687                           ;mcc_generated_files/pin_manager.c: 81:     WPUC = 0x00;
  6688  03D9  01CF               	clrf	79	;volatile
  6689                           
  6690                           ;mcc_generated_files/pin_manager.c: 86:     ODCONA = 0x00;
  6691  03DA  01BA               	clrf	58	;volatile
  6692                           
  6693                           ;mcc_generated_files/pin_manager.c: 87:     ODCONC = 0x00;
  6694  03DB  01D0               	clrf	80	;volatile
  6695                           
  6696                           ;mcc_generated_files/pin_manager.c: 92:     SLRCONA = 0x3F;
  6697  03DC  303F               	movlw	63
  6698  03DD  00BB               	movwf	59	;volatile
  6699                           
  6700                           ;mcc_generated_files/pin_manager.c: 93:     SLRCONC = 0x3F;
  6701  03DE  303F               	movlw	63
  6702  03DF  00D1               	movwf	81	;volatile
  6703                           
  6704                           ;mcc_generated_files/pin_manager.c: 98:     INLVLA = 0x3F;
  6705  03E0  303F               	movlw	63
  6706  03E1  00BC               	movwf	60	;volatile
  6707                           
  6708                           ;mcc_generated_files/pin_manager.c: 99:     INLVLC = 0x3F;
  6709  03E2  303F               	movlw	63
  6710  03E3  00D2               	movwf	82	;volatile
  6711                           
  6712                           ;mcc_generated_files/pin_manager.c: 106:     IOCCFbits.IOCCF1 = 0;
  6713  03E4  10D5               	bcf	85,1	;volatile
  6714                           
  6715                           ;mcc_generated_files/pin_manager.c: 108:     IOCCNbits.IOCCN1 = 1;
  6716  03E5  14D4               	bsf	84,1	;volatile
  6717                           
  6718                           ;mcc_generated_files/pin_manager.c: 110:     IOCCPbits.IOCCP1 = 1;
  6719  03E6  14D3               	bsf	83,1	;volatile
  6720                           
  6721                           ;mcc_generated_files/pin_manager.c: 115:     IOCCF1_SetInterruptHandler(IOCCF1_DefaultIn
      +                          terruptHandler);
  6722  03E7  3004               	movlw	low _IOCCF1_DefaultInterruptHandler
  6723  03E8  00F2               	movwf	IOCCF1_SetInterruptHandler@InterruptHandler
  6724  03E9  3007               	movlw	high _IOCCF1_DefaultInterruptHandler
  6725  03EA  00F3               	movwf	IOCCF1_SetInterruptHandler@InterruptHandler+1
  6726  03EB  26DB               	fcall	_IOCCF1_SetInterruptHandler
  6727                           
  6728                           ;mcc_generated_files/pin_manager.c: 118:     PIE0bits.IOCIE = 1;
  6729  03EC  014E               	movlb	14	; select bank14
  6730  03ED  1616               	bsf	22,4	;volatile
  6731                           
  6732                           ;mcc_generated_files/pin_manager.c: 121:     ADACTPPS = 0x01;
  6733  03EE  3001               	movlw	1
  6734  03EF  017D               	movlb	61	; select bank61
  6735  03F0  00C3               	movwf	67	;volatile
  6736                           
  6737                           ;mcc_generated_files/pin_manager.c: 122:     RA4PPS = 0x0C;
  6738  03F1  300C               	movlw	12
  6739  03F2  017E               	movlb	62	; select bank62
  6740  03F3  0094               	movwf	20	;volatile
  6741                           
  6742                           ;mcc_generated_files/pin_manager.c: 123:     RC3PPS = 0x09;
  6743  03F4  3009               	movlw	9
  6744  03F5  00A3               	movwf	35	;volatile
  6745                           
  6746                           ;mcc_generated_files/pin_manager.c: 124:     RC4PPS = 0x0E;
  6747  03F6  300E               	movlw	14
  6748  03F7  00A4               	movwf	36	;volatile
  6749                           
  6750                           ;mcc_generated_files/pin_manager.c: 125:     RA5PPS = 0x0B;
  6751  03F8  300B               	movlw	11
  6752  03F9  0095               	movwf	21	;volatile
  6753                           
  6754                           ;mcc_generated_files/pin_manager.c: 126:     RC2PPS = 0x0A;
  6755  03FA  300A               	movlw	10
  6756  03FB  00A2               	movwf	34	;volatile
  6757                           
  6758                           ;mcc_generated_files/pin_manager.c: 127:     RC5PPS = 0x0D;
  6759  03FC  300D               	movlw	13
  6760  03FD  00A5               	movwf	37	;volatile
  6761  03FE  0008               	return
  6762  03FF                     __end_of_PIN_MANAGER_Initialize:
  6763                           
  6764                           	psect	text15
  6765  06DB                     __ptext15:	
  6766 ;; *************** function _IOCCF1_SetInterruptHandler *****************
  6767 ;; Defined at:
  6768 ;;		line 157 in file "mcc_generated_files/pin_manager.c"
  6769 ;; Parameters:    Size  Location     Type
  6770 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  6771 ;;		 -> RCS_INT(1), IOCCF1_DefaultInterruptHandler(1), 
  6772 ;; Auto vars:     Size  Location     Type
  6773 ;;		None
  6774 ;; Return value:  Size  Location     Type
  6775 ;;                  1    wreg      void 
  6776 ;; Registers used:
  6777 ;;		wreg
  6778 ;; Tracked objects:
  6779 ;;		On entry : 1/0
  6780 ;;		On exit  : 3F/0
  6781 ;;		Unchanged: 0/0
  6782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6783 ;;      Params:         2       0       0       0
  6784 ;;      Locals:         0       0       0       0
  6785 ;;      Temps:          0       0       0       0
  6786 ;;      Totals:         2       0       0       0
  6787 ;;Total ram usage:        2 bytes
  6788 ;; Hardware stack levels used:    1
  6789 ;; Hardware stack levels required when called:    6
  6790 ;; This function calls:
  6791 ;;		Nothing
  6792 ;; This function is called by:
  6793 ;;		_PIN_MANAGER_Initialize
  6794 ;;		_main
  6795 ;; This function uses a non-reentrant model
  6796 ;;
  6797                           
  6798                           
  6799                           ;psect for function _IOCCF1_SetInterruptHandler
  6800  06DB                     _IOCCF1_SetInterruptHandler:
  6801                           
  6802                           ;mcc_generated_files/pin_manager.c: 158:     IOCCF1_InterruptHandler = InterruptHandler;
  6803                           
  6804                           ;incstack = 0
  6805                           ; Regs used in _IOCCF1_SetInterruptHandler: [wreg]
  6806  06DB  0873               	movf	IOCCF1_SetInterruptHandler@InterruptHandler+1,w
  6807  06DC  0140               	movlb	0	; select bank0
  6808  06DD  00DE               	movwf	_IOCCF1_InterruptHandler+1
  6809  06DE  0872               	movf	IOCCF1_SetInterruptHandler@InterruptHandler,w
  6810  06DF  00DD               	movwf	_IOCCF1_InterruptHandler
  6811  06E0  0008               	return
  6812  06E1                     __end_of_IOCCF1_SetInterruptHandler:
  6813                           
  6814                           	psect	text16
  6815  0663                     __ptext16:	
  6816 ;; *************** function _OSCILLATOR_Initialize *****************
  6817 ;; Defined at:
  6818 ;;		line 68 in file "mcc_generated_files/mcc.c"
  6819 ;; Parameters:    Size  Location     Type
  6820 ;;		None
  6821 ;; Auto vars:     Size  Location     Type
  6822 ;;		None
  6823 ;; Return value:  Size  Location     Type
  6824 ;;                  1    wreg      void 
  6825 ;; Registers used:
  6826 ;;		wreg, status,2
  6827 ;; Tracked objects:
  6828 ;;		On entry : 3F/3E
  6829 ;;		On exit  : 3F/11
  6830 ;;		Unchanged: 0/0
  6831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6832 ;;      Params:         0       0       0       0
  6833 ;;      Locals:         0       0       0       0
  6834 ;;      Temps:          0       0       0       0
  6835 ;;      Totals:         0       0       0       0
  6836 ;;Total ram usage:        0 bytes
  6837 ;; Hardware stack levels used:    1
  6838 ;; Hardware stack levels required when called:    6
  6839 ;; This function calls:
  6840 ;;		Nothing
  6841 ;; This function is called by:
  6842 ;;		_SYSTEM_Initialize
  6843 ;; This function uses a non-reentrant model
  6844 ;;
  6845                           
  6846                           
  6847                           ;psect for function _OSCILLATOR_Initialize
  6848  0663                     _OSCILLATOR_Initialize:
  6849                           
  6850                           ;mcc_generated_files/mcc.c: 71:     OSCCON1 = 0x10;
  6851                           
  6852                           ;incstack = 0
  6853                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6854  0663  3010               	movlw	16
  6855  0664  0151               	movlb	17	; select bank17
  6856  0665  008D               	movwf	13	;volatile
  6857                           
  6858                           ;mcc_generated_files/mcc.c: 73:     OSCCON3 = 0x00;
  6859  0666  018F               	clrf	15	;volatile
  6860                           
  6861                           ;mcc_generated_files/mcc.c: 75:     OSCEN = 0x00;
  6862  0667  0191               	clrf	17	;volatile
  6863                           
  6864                           ;mcc_generated_files/mcc.c: 77:     OSCFRQ = 0x03;
  6865  0668  3003               	movlw	3
  6866  0669  0093               	movwf	19	;volatile
  6867                           
  6868                           ;mcc_generated_files/mcc.c: 79:     OSCSTAT = 0x00;
  6869  066A  0190               	clrf	16	;volatile
  6870                           
  6871                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
  6872  066B  0192               	clrf	18	;volatile
  6873  066C                     l300:	
  6874                           ;mcc_generated_files/mcc.c: 84:     {;mcc_generated_files/mcc.c: 85:     }
  6875                           
  6876                           
  6877                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
  6878  066C  1810               	btfsc	16,0	;volatile
  6879  066D  0008               	return
  6880  066E  2E6C               	goto	l300
  6881  066F                     __end_of_OSCILLATOR_Initialize:
  6882                           
  6883                           	psect	text17
  6884  06F1                     __ptext17:	
  6885 ;; *************** function _FVR_Initialize *****************
  6886 ;; Defined at:
  6887 ;;		line 58 in file "mcc_generated_files/fvr.c"
  6888 ;; Parameters:    Size  Location     Type
  6889 ;;		None
  6890 ;; Auto vars:     Size  Location     Type
  6891 ;;		None
  6892 ;; Return value:  Size  Location     Type
  6893 ;;                  1    wreg      void 
  6894 ;; Registers used:
  6895 ;;		wreg
  6896 ;; Tracked objects:
  6897 ;;		On entry : 3F/11
  6898 ;;		On exit  : 3F/12
  6899 ;;		Unchanged: 0/0
  6900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6901 ;;      Params:         0       0       0       0
  6902 ;;      Locals:         0       0       0       0
  6903 ;;      Temps:          0       0       0       0
  6904 ;;      Totals:         0       0       0       0
  6905 ;;Total ram usage:        0 bytes
  6906 ;; Hardware stack levels used:    1
  6907 ;; Hardware stack levels required when called:    6
  6908 ;; This function calls:
  6909 ;;		Nothing
  6910 ;; This function is called by:
  6911 ;;		_SYSTEM_Initialize
  6912 ;; This function uses a non-reentrant model
  6913 ;;
  6914                           
  6915                           
  6916                           ;psect for function _FVR_Initialize
  6917  06F1                     _FVR_Initialize:
  6918                           
  6919                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x82;
  6920                           
  6921                           ;incstack = 0
  6922                           ; Regs used in _FVR_Initialize: [wreg]
  6923  06F1  3082               	movlw	130
  6924  06F2  0152               	movlb	18	; select bank18
  6925  06F3  008C               	movwf	12	;volatile
  6926  06F4  0008               	return
  6927  06F5                     __end_of_FVR_Initialize:
  6928                           
  6929                           	psect	text18
  6930  0685                     __ptext18:	
  6931 ;; *************** function _ADC_Initialize *****************
  6932 ;; Defined at:
  6933 ;;		line 67 in file "mcc_generated_files/adc.c"
  6934 ;; Parameters:    Size  Location     Type
  6935 ;;		None
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;		None
  6938 ;; Return value:  Size  Location     Type
  6939 ;;                  1    wreg      void 
  6940 ;; Registers used:
  6941 ;;		wreg, status,2
  6942 ;; Tracked objects:
  6943 ;;		On entry : 3F/6
  6944 ;;		On exit  : 3F/1
  6945 ;;		Unchanged: 0/0
  6946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6947 ;;      Params:         0       0       0       0
  6948 ;;      Locals:         0       0       0       0
  6949 ;;      Temps:          0       0       0       0
  6950 ;;      Totals:         0       0       0       0
  6951 ;;Total ram usage:        0 bytes
  6952 ;; Hardware stack levels used:    1
  6953 ;; Hardware stack levels required when called:    6
  6954 ;; This function calls:
  6955 ;;		Nothing
  6956 ;; This function is called by:
  6957 ;;		_SYSTEM_Initialize
  6958 ;; This function uses a non-reentrant model
  6959 ;;
  6960                           
  6961                           
  6962                           ;psect for function _ADC_Initialize
  6963  0685                     _ADC_Initialize:
  6964                           
  6965                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xE3;
  6966                           
  6967                           ;incstack = 0
  6968                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  6969  0685  30E3               	movlw	227
  6970  0686  0141               	movlb	1	; select bank1
  6971  0687  009E               	movwf	30	;volatile
  6972                           
  6973                           ;mcc_generated_files/adc.c: 75:     ADACT = 0x00;
  6974  0688  019F               	clrf	31	;volatile
  6975                           
  6976                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
  6977  0689  019B               	clrf	27	;volatile
  6978                           
  6979                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
  6980  068A  019C               	clrf	28	;volatile
  6981                           
  6982                           ;mcc_generated_files/adc.c: 84:     ADCON0 = 0x01;
  6983  068B  3001               	movlw	1
  6984  068C  009D               	movwf	29	;volatile
  6985  068D  0008               	return
  6986  068E                     __end_of_ADC_Initialize:
  6987                           
  6988                           	psect	text19
  6989  066F                     __ptext19:	
  6990 ;; *************** function _INITxEXECUTER *****************
  6991 ;; Defined at:
  6992 ;;		line 35 in file "executer.c"
  6993 ;; Parameters:    Size  Location     Type
  6994 ;;		None
  6995 ;; Auto vars:     Size  Location     Type
  6996 ;;		None
  6997 ;; Return value:  Size  Location     Type
  6998 ;;                  1    wreg      void 
  6999 ;; Registers used:
  7000 ;;		wreg, status,2, status,0, pclath, cstack
  7001 ;; Tracked objects:
  7002 ;;		On entry : 3F/1
  7003 ;;		On exit  : 3F/0
  7004 ;;		Unchanged: 0/0
  7005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7006 ;;      Params:         0       0       0       0
  7007 ;;      Locals:         0       0       0       0
  7008 ;;      Temps:          0       0       0       0
  7009 ;;      Totals:         0       0       0       0
  7010 ;;Total ram usage:        0 bytes
  7011 ;; Hardware stack levels used:    1
  7012 ;; Hardware stack levels required when called:    9
  7013 ;; This function calls:
  7014 ;;		_RCSxLED
  7015 ;;		_rand
  7016 ;;		_srand
  7017 ;; This function is called by:
  7018 ;;		_main
  7019 ;; This function uses a non-reentrant model
  7020 ;;
  7021                           
  7022                           
  7023                           ;psect for function _INITxEXECUTER
  7024  066F                     _INITxEXECUTER:
  7025                           
  7026                           ;executer.c: 38:     srand(13);
  7027                           
  7028                           ;incstack = 0
  7029                           ; Regs used in _INITxEXECUTER: [wreg+status,2+status,0+pclath+cstack]
  7030  066F  300D               	movlw	13
  7031  0670  00F2               	movwf	srand@s
  7032  0671  3000               	movlw	0
  7033  0672  00F3               	movwf	srand@s+1
  7034  0673  267B               	fcall	_srand
  7035                           
  7036                           ;executer.c: 39:     Random = rand();
  7037  0674  23FF               	fcall	_rand
  7038  0675  083F               	movf	?_rand+1,w
  7039  0676  00A1               	movwf	_Random+1
  7040  0677  083E               	movf	?_rand,w
  7041  0678  00A0               	movwf	_Random
  7042                           
  7043                           ;executer.c: 41:     RCSxLED();
  7044  0679  22D7               	fcall	_RCSxLED
  7045  067A  0008               	return
  7046  067B                     __end_of_INITxEXECUTER:
  7047                           
  7048                           	psect	text20
  7049  067B                     __ptext20:	
  7050 ;; *************** function _srand *****************
  7051 ;; Defined at:
  7052 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\rand.c"
  7053 ;; Parameters:    Size  Location     Type
  7054 ;;  s               2    2[COMMON] unsigned int 
  7055 ;; Auto vars:     Size  Location     Type
  7056 ;;		None
  7057 ;; Return value:  Size  Location     Type
  7058 ;;                  1    wreg      void 
  7059 ;; Registers used:
  7060 ;;		wreg, status,2, status,0
  7061 ;; Tracked objects:
  7062 ;;		On entry : 3F/1
  7063 ;;		On exit  : 3F/0
  7064 ;;		Unchanged: 0/0
  7065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7066 ;;      Params:         2       0       0       0
  7067 ;;      Locals:         0       0       0       0
  7068 ;;      Temps:          0       0       0       0
  7069 ;;      Totals:         2       0       0       0
  7070 ;;Total ram usage:        2 bytes
  7071 ;; Hardware stack levels used:    1
  7072 ;; Hardware stack levels required when called:    6
  7073 ;; This function calls:
  7074 ;;		Nothing
  7075 ;; This function is called by:
  7076 ;;		_INITxEXECUTER
  7077 ;; This function uses a non-reentrant model
  7078 ;;
  7079                           
  7080                           
  7081                           ;psect for function _srand
  7082  067B                     _srand:
  7083                           
  7084                           ;incstack = 0
  7085                           ; Regs used in _srand: [wreg+status,2+status,0]
  7086  067B  0872               	movf	srand@s,w
  7087  067C  3EFF               	addlw	255
  7088  067D  0140               	movlb	0	; select bank0
  7089  067E  00B6               	movwf	_seed
  7090  067F  30FF               	movlw	255
  7091  0680  3D73               	addwfc	srand@s+1,w
  7092  0681  00B7               	movwf	_seed+1
  7093  0682  01B8               	clrf	_seed+2
  7094  0683  01B9               	clrf	_seed+3
  7095  0684  0008               	return
  7096  0685                     __end_of_srand:
  7097                           
  7098                           	psect	text21
  7099  02D7                     __ptext21:	
  7100 ;; *************** function _RCSxLED *****************
  7101 ;; Defined at:
  7102 ;;		line 81 in file "executer.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;		None
  7105 ;; Auto vars:     Size  Location     Type
  7106 ;;		None
  7107 ;; Return value:  Size  Location     Type
  7108 ;;                  1    wreg      void 
  7109 ;; Registers used:
  7110 ;;		wreg, status,2, status,0, pclath, cstack
  7111 ;; Tracked objects:
  7112 ;;		On entry : 3F/0
  7113 ;;		On exit  : 3F/0
  7114 ;;		Unchanged: 0/0
  7115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7116 ;;      Params:         0       0       0       0
  7117 ;;      Locals:         0       0       0       0
  7118 ;;      Temps:          0       1       0       0
  7119 ;;      Totals:         0       1       0       0
  7120 ;;Total ram usage:        1 bytes
  7121 ;; Hardware stack levels used:    1
  7122 ;; Hardware stack levels required when called:    8
  7123 ;; This function calls:
  7124 ;;		_rand
  7125 ;; This function is called by:
  7126 ;;		_main
  7127 ;;		_INITxEXECUTER
  7128 ;; This function uses a non-reentrant model
  7129 ;;
  7130                           
  7131                           
  7132                           ;psect for function _RCSxLED
  7133  02D7                     _RCSxLED:
  7134                           
  7135                           ;executer.c: 83:     if(PORTCbits.RC1){
  7136                           
  7137                           ;incstack = 0
  7138                           ; Regs used in _RCSxLED: [wreg+status,2+status,0+pclath+cstack]
  7139  02D7  1C8E               	btfss	14,1	;volatile
  7140  02D8  2B2B               	goto	l2498
  7141                           
  7142                           ;executer.c: 86:         LedBit[LedBackLeft].Prog = LedNom;
  7143  02D9  3095               	movlw	low _LedNom
  7144  02DA  0141               	movlb	1	; select bank1
  7145  02DB  00B8               	movwf	(low ((_LedBit| 0+24)))^(0+128)
  7146  02DC  3003               	movlw	high _LedNom
  7147  02DD  00B9               	movwf	((low ((_LedBit| 0+24)))^(0+128)+1)
  7148                           
  7149                           ;executer.c: 87:         LedBit[LedBackRight].Prog = LedNom;
  7150  02DE  3095               	movlw	low _LedNom
  7151  02DF  00C3               	movwf	(low ((_LedBit| 0+35)))^(0+128)
  7152  02E0  3003               	movlw	high _LedNom
  7153  02E1  00C4               	movwf	((low ((_LedBit| 0+35)))^(0+128)+1)
  7154                           
  7155                           ;executer.c: 90:         if(Random > 16383)
  7156  02E2  3040               	movlw	64
  7157  02E3  0140               	movlb	0	; select bank0
  7158  02E4  0221               	subwf	_Random+1,w
  7159  02E5  3000               	movlw	0
  7160  02E6  1903               	skipnz
  7161  02E7  0220               	subwf	_Random,w
  7162  02E8  1C03               	skipc
  7163  02E9  2B27               	goto	l2494
  7164                           
  7165                           ;executer.c: 91:         {;executer.c: 93:             LedBit[LedFlashLeft].Prog = LedFl
      +                          ash;
  7166  02EA  30A0               	movlw	low _LedFlash
  7167  02EB  0141               	movlb	1	; select bank1
  7168  02EC  00A2               	movwf	(low ((_LedBit| 0+2)))^(0+128)
  7169  02ED  3001               	movlw	high _LedFlash
  7170  02EE  00A3               	movwf	((low ((_LedBit| 0+2)))^(0+128)+1)
  7171                           
  7172                           ;executer.c: 94:             LedBit[LedFlashLeft].Led = MAX;
  7173  02EF  30FE               	movlw	254
  7174  02F0  0140               	movlb	0	; select bank0
  7175  02F1  00C4               	movwf	??_RCSxLED
  7176  02F2  0844               	movf	??_RCSxLED,w
  7177  02F3  0141               	movlb	1	; select bank1
  7178  02F4  00A1               	movwf	(_LedBit^(0+128)+1)
  7179                           
  7180                           ;executer.c: 95:             LedBit[LedFlashLeft].Prog_State = 0;
  7181  02F5  01A6               	clrf	(_LedBit^(0+128)+6)
  7182                           
  7183                           ;executer.c: 96:             LedBit[LedFlashLeft].Speed = 150;
  7184  02F6  3096               	movlw	150
  7185  02F7  0140               	movlb	0	; select bank0
  7186  02F8  00C4               	movwf	??_RCSxLED
  7187  02F9  0844               	movf	??_RCSxLED,w
  7188  02FA  0141               	movlb	1	; select bank1
  7189  02FB  00A4               	movwf	(_LedBit^(0+128)+4)
  7190                           
  7191                           ;executer.c: 98:             LedBit[LedFlashRight].Prog = LedFlash;
  7192  02FC  30A0               	movlw	low _LedFlash
  7193  02FD  00AD               	movwf	(low ((_LedBit| 0+13)))^(0+128)
  7194  02FE  3001               	movlw	high _LedFlash
  7195  02FF  00AE               	movwf	((low ((_LedBit| 0+13)))^(0+128)+1)
  7196                           
  7197                           ;executer.c: 99:             LedBit[LedFlashRight].Led = 0;
  7198  0300  01AC               	clrf	(_LedBit^(0+128)+12)
  7199                           
  7200                           ;executer.c: 100:             LedBit[LedFlashRight].Prog_State = 0;
  7201  0301  01B1               	clrf	(_LedBit^(0+128)+17)
  7202                           
  7203                           ;executer.c: 101:             LedBit[LedFlashRight].Speed = 150;
  7204  0302  3096               	movlw	150
  7205  0303  0140               	movlb	0	; select bank0
  7206  0304  00C4               	movwf	??_RCSxLED
  7207  0305  0844               	movf	??_RCSxLED,w
  7208  0306  0141               	movlb	1	; select bank1
  7209  0307  00AF               	movwf	(_LedBit^(0+128)+15)
  7210                           
  7211                           ;executer.c: 104:             LedBit[LedFrontLeft].Prog = LedSlFl;
  7212  0308  3039               	movlw	low _LedSlFl
  7213  0309  00CE               	movwf	(low ((_LedBit| 0+46)))^(0+128)
  7214  030A  3000               	movlw	high _LedSlFl
  7215  030B  00CF               	movwf	((low ((_LedBit| 0+46)))^(0+128)+1)
  7216                           
  7217                           ;executer.c: 105:             LedBit[LedFrontLeft].Led = FRONT_HIGH;
  7218  030C  30FF               	movlw	255
  7219  030D  0140               	movlb	0	; select bank0
  7220  030E  00C4               	movwf	??_RCSxLED
  7221  030F  0844               	movf	??_RCSxLED,w
  7222  0310  0141               	movlb	1	; select bank1
  7223  0311  00CD               	movwf	(_LedBit^(0+128)+45)
  7224                           
  7225                           ;executer.c: 106:             LedBit[LedFrontLeft].Prog_State = 2;
  7226  0312  3002               	movlw	2
  7227  0313  0140               	movlb	0	; select bank0
  7228  0314  00C4               	movwf	??_RCSxLED
  7229  0315  0844               	movf	??_RCSxLED,w
  7230  0316  0141               	movlb	1	; select bank1
  7231  0317  00D2               	movwf	(_LedBit^(0+128)+50)
  7232                           
  7233                           ;executer.c: 107:             LedBit[LedFrontLeft].Speed = 1;
  7234  0318  01D0               	clrf	(_LedBit^(0+128)+48)
  7235  0319  0AD0               	incf	(_LedBit^(0+128)+48),f
  7236                           
  7237                           ;executer.c: 109:             LedBit[LedFrontRight].Prog = LedSlFl;
  7238  031A  3039               	movlw	low _LedSlFl
  7239  031B  00D9               	movwf	(low ((_LedBit| 0+57)))^(0+128)
  7240  031C  3000               	movlw	high _LedSlFl
  7241  031D  00DA               	movwf	((low ((_LedBit| 0+57)))^(0+128)+1)
  7242                           
  7243                           ;executer.c: 110:             LedBit[LedFrontRight].Led = FRONT;
  7244  031E  3050               	movlw	80
  7245  031F  0140               	movlb	0	; select bank0
  7246  0320  00C4               	movwf	??_RCSxLED
  7247  0321  0844               	movf	??_RCSxLED,w
  7248  0322  0141               	movlb	1	; select bank1
  7249  0323  00D8               	movwf	(_LedBit^(0+128)+56)
  7250                           
  7251                           ;executer.c: 111:             LedBit[LedFrontRight].Prog_State = 0;
  7252  0324  01DD               	clrf	(_LedBit^(0+128)+61)
  7253                           
  7254                           ;executer.c: 112:             LedBit[LedFrontRight].Speed = 1;
  7255  0325  01DB               	clrf	(_LedBit^(0+128)+59)
  7256  0326  0ADB               	incf	(_LedBit^(0+128)+59),f
  7257  0327                     l2494:
  7258  0327  0140               	movlb	0	; select bank0
  7259  0328  1118               	bcf	24,2	;volatile
  7260                           
  7261                           ;executer.c: 119:         LATAbits.LATA0 = 1;
  7262  0329  1418               	bsf	24,0	;volatile
  7263                           
  7264                           ;executer.c: 120:     }
  7265  032A  2B4D               	goto	l2500
  7266  032B                     l2498:
  7267                           
  7268                           ;executer.c: 124:         LedBit[LedBackLeft].Prog = LedBrake;
  7269  032B  30CD               	movlw	low _LedBrake
  7270  032C  0141               	movlb	1	; select bank1
  7271  032D  00B8               	movwf	(low ((_LedBit| 0+24)))^(0+128)
  7272  032E  3005               	movlw	high _LedBrake
  7273  032F  00B9               	movwf	((low ((_LedBit| 0+24)))^(0+128)+1)
  7274                           
  7275                           ;executer.c: 125:         LedBit[LedBackRight].Prog = LedBrake;
  7276  0330  30CD               	movlw	low _LedBrake
  7277  0331  00C3               	movwf	(low ((_LedBit| 0+35)))^(0+128)
  7278  0332  3005               	movlw	high _LedBrake
  7279  0333  00C4               	movwf	((low ((_LedBit| 0+35)))^(0+128)+1)
  7280                           
  7281                           ;executer.c: 128:         LedBit[LedFlashLeft].Prog = LedOff;
  7282  0334  308E               	movlw	low _LedOff
  7283  0335  00A2               	movwf	(low ((_LedBit| 0+2)))^(0+128)
  7284  0336  3004               	movlw	high _LedOff
  7285  0337  00A3               	movwf	((low ((_LedBit| 0+2)))^(0+128)+1)
  7286                           
  7287                           ;executer.c: 129:         LedBit[LedFlashRight].Prog = LedOff;
  7288  0338  308E               	movlw	low _LedOff
  7289  0339  00AD               	movwf	(low ((_LedBit| 0+13)))^(0+128)
  7290  033A  3004               	movlw	high _LedOff
  7291  033B  00AE               	movwf	((low ((_LedBit| 0+13)))^(0+128)+1)
  7292                           
  7293                           ;executer.c: 132:         LedBit[LedFrontLeft].Prog = LedNom;
  7294  033C  3095               	movlw	low _LedNom
  7295  033D  00CE               	movwf	(low ((_LedBit| 0+46)))^(0+128)
  7296  033E  3003               	movlw	high _LedNom
  7297  033F  00CF               	movwf	((low ((_LedBit| 0+46)))^(0+128)+1)
  7298                           
  7299                           ;executer.c: 133:         LedBit[LedFrontRight].Prog = LedNom;
  7300  0340  3095               	movlw	low _LedNom
  7301  0341  00D9               	movwf	(low ((_LedBit| 0+57)))^(0+128)
  7302  0342  3003               	movlw	high _LedNom
  7303  0343  00DA               	movwf	((low ((_LedBit| 0+57)))^(0+128)+1)
  7304                           
  7305                           ;executer.c: 135:         if(Random < 16383)
  7306  0344  303F               	movlw	63
  7307  0345  0140               	movlb	0	; select bank0
  7308  0346  0221               	subwf	_Random+1,w
  7309  0347  30FF               	movlw	255
  7310  0348  1903               	skipnz
  7311  0349  0220               	subwf	_Random,w
  7312  034A  1C03               	btfss	3,0
  7313                           
  7314                           ;executer.c: 136:         {;executer.c: 138:             do { LATAbits.LATA2 = 1; } whil
      +                          e(0);
  7315  034B  1518               	bsf	24,2	;volatile
  7316                           
  7317                           ;executer.c: 142:         LATAbits.LATA0 = 0;
  7318                           
  7319                           ;executer.c: 139:         }
  7320  034C  1018               	bcf	24,0	;volatile
  7321  034D                     l2500:
  7322                           
  7323                           ;executer.c: 146:     Random = rand();
  7324  034D  23FF               	fcall	_rand
  7325  034E  083F               	movf	?_rand+1,w
  7326  034F  00A1               	movwf	_Random+1
  7327  0350  083E               	movf	?_rand,w
  7328  0351  00A0               	movwf	_Random
  7329  0352  0008               	return
  7330  0353                     __end_of_RCSxLED:
  7331                           
  7332                           	psect	text22
  7333  03FF                     __ptext22:	
  7334 ;; *************** function _rand *****************
  7335 ;; Defined at:
  7336 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\rand.c"
  7337 ;; Parameters:    Size  Location     Type
  7338 ;;		None
  7339 ;; Auto vars:     Size  Location     Type
  7340 ;;		None
  7341 ;; Return value:  Size  Location     Type
  7342 ;;                  2    4[BANK0 ] int 
  7343 ;; Registers used:
  7344 ;;		wreg, status,2, status,0, pclath, cstack
  7345 ;; Tracked objects:
  7346 ;;		On entry : 3F/0
  7347 ;;		On exit  : 3F/0
  7348 ;;		Unchanged: 0/0
  7349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7350 ;;      Params:         0       2       0       0
  7351 ;;      Locals:         0       0       0       0
  7352 ;;      Temps:          0       4       0       0
  7353 ;;      Totals:         0       6       0       0
  7354 ;;Total ram usage:        6 bytes
  7355 ;; Hardware stack levels used:    1
  7356 ;; Hardware stack levels required when called:    7
  7357 ;; This function calls:
  7358 ;;		___lmul
  7359 ;; This function is called by:
  7360 ;;		_INITxEXECUTER
  7361 ;;		_RCSxLED
  7362 ;; This function uses a non-reentrant model
  7363 ;;
  7364                           
  7365                           
  7366                           ;psect for function _rand
  7367  03FF                     _rand:
  7368                           
  7369                           ;incstack = 0
  7370                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  7371  03FF  0839               	movf	_seed+3,w
  7372  0400  00F5               	movwf	___lmul@multiplier+3
  7373  0401  0838               	movf	_seed+2,w
  7374  0402  00F4               	movwf	___lmul@multiplier+2
  7375  0403  0837               	movf	_seed+1,w
  7376  0404  00F3               	movwf	___lmul@multiplier+1
  7377  0405  0836               	movf	_seed,w
  7378  0406  00F2               	movwf	___lmul@multiplier
  7379  0407  304C               	movlw	76
  7380  0408  00F9               	movwf	___lmul@multiplicand+3
  7381  0409  3095               	movlw	149
  7382  040A  00F8               	movwf	___lmul@multiplicand+2
  7383  040B  307F               	movlw	127
  7384  040C  00F7               	movwf	___lmul@multiplicand+1
  7385  040D  302D               	movlw	45
  7386  040E  00F6               	movwf	___lmul@multiplicand
  7387  040F  2430               	fcall	___lmul
  7388  0410  3001               	movlw	1
  7389  0411  0772               	addwf	?___lmul,w
  7390  0412  00B6               	movwf	_seed
  7391  0413  3000               	movlw	0
  7392  0414  3D73               	addwfc	?___lmul+1,w
  7393  0415  00B7               	movwf	_seed+1
  7394  0416  3000               	movlw	0
  7395  0417  3D74               	addwfc	?___lmul+2,w
  7396  0418  00B8               	movwf	_seed+2
  7397  0419  3000               	movlw	0
  7398  041A  3D75               	addwfc	?___lmul+3,w
  7399  041B  00B9               	movwf	_seed+3
  7400  041C  0836               	movf	_seed,w
  7401  041D  00C0               	movwf	??_rand
  7402  041E  0837               	movf	_seed+1,w
  7403  041F  00C1               	movwf	??_rand+1
  7404  0420  0838               	movf	_seed+2,w
  7405  0421  00C2               	movwf	??_rand+2
  7406  0422  0839               	movf	_seed+3,w
  7407  0423  00C3               	movwf	??_rand+3
  7408  0424  3011               	movlw	17
  7409  0425                     u1155:
  7410  0425  36C3               	lsrf	??_rand+3,f
  7411  0426  0CC2               	rrf	??_rand+2,f
  7412  0427  0CC1               	rrf	??_rand+1,f
  7413  0428  0CC0               	rrf	??_rand,f
  7414  0429  0B89               	decfsz	9,f
  7415  042A  2C25               	goto	u1155
  7416  042B  0841               	movf	??_rand+1,w
  7417  042C  00BF               	movwf	?_rand+1
  7418  042D  0840               	movf	??_rand,w
  7419  042E  00BE               	movwf	?_rand
  7420  042F  0008               	return
  7421  0430                     __end_of_rand:
  7422                           
  7423                           	psect	text23
  7424  0430                     __ptext23:	
  7425 ;; *************** function ___lmul *****************
  7426 ;; Defined at:
  7427 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul32.c"
  7428 ;; Parameters:    Size  Location     Type
  7429 ;;  multiplier      4    2[COMMON] unsigned long 
  7430 ;;  multiplicand    4    6[COMMON] unsigned long 
  7431 ;; Auto vars:     Size  Location     Type
  7432 ;;  product         4    0[BANK0 ] unsigned long 
  7433 ;; Return value:  Size  Location     Type
  7434 ;;                  4    2[COMMON] unsigned long 
  7435 ;; Registers used:
  7436 ;;		wreg, status,2, status,0
  7437 ;; Tracked objects:
  7438 ;;		On entry : 3F/0
  7439 ;;		On exit  : 3F/0
  7440 ;;		Unchanged: 0/0
  7441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7442 ;;      Params:         8       0       0       0
  7443 ;;      Locals:         0       4       0       0
  7444 ;;      Temps:          0       0       0       0
  7445 ;;      Totals:         8       4       0       0
  7446 ;;Total ram usage:       12 bytes
  7447 ;; Hardware stack levels used:    1
  7448 ;; Hardware stack levels required when called:    6
  7449 ;; This function calls:
  7450 ;;		Nothing
  7451 ;; This function is called by:
  7452 ;;		_rand
  7453 ;; This function uses a non-reentrant model
  7454 ;;
  7455                           
  7456                           
  7457                           ;psect for function ___lmul
  7458  0430                     ___lmul:
  7459                           
  7460                           ;incstack = 0
  7461                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  7462  0430  3000               	movlw	0
  7463  0431  00BD               	movwf	___lmul@product+3
  7464  0432  3000               	movlw	0
  7465  0433  00BC               	movwf	___lmul@product+2
  7466  0434  3000               	movlw	0
  7467  0435  00BB               	movwf	___lmul@product+1
  7468  0436  3000               	movlw	0
  7469  0437  00BA               	movwf	___lmul@product
  7470  0438                     l1858:
  7471  0438  1C72               	btfss	___lmul@multiplier,0
  7472  0439  2C42               	goto	l1862
  7473  043A  0876               	movf	___lmul@multiplicand,w
  7474  043B  07BA               	addwf	___lmul@product,f
  7475  043C  0877               	movf	___lmul@multiplicand+1,w
  7476  043D  3DBB               	addwfc	___lmul@product+1,f
  7477  043E  0878               	movf	___lmul@multiplicand+2,w
  7478  043F  3DBC               	addwfc	___lmul@product+2,f
  7479  0440  0879               	movf	___lmul@multiplicand+3,w
  7480  0441  3DBD               	addwfc	___lmul@product+3,f
  7481  0442                     l1862:
  7482  0442  3001               	movlw	1
  7483  0443                     u635:
  7484  0443  35F6               	lslf	___lmul@multiplicand,f
  7485  0444  0DF7               	rlf	___lmul@multiplicand+1,f
  7486  0445  0DF8               	rlf	___lmul@multiplicand+2,f
  7487  0446  0DF9               	rlf	___lmul@multiplicand+3,f
  7488  0447  0B89               	decfsz	9,f
  7489  0448  2C43               	goto	u635
  7490  0449  3001               	movlw	1
  7491  044A                     u645:
  7492  044A  36F5               	lsrf	___lmul@multiplier+3,f
  7493  044B  0CF4               	rrf	___lmul@multiplier+2,f
  7494  044C  0CF3               	rrf	___lmul@multiplier+1,f
  7495  044D  0CF2               	rrf	___lmul@multiplier,f
  7496  044E  0B89               	decfsz	9,f
  7497  044F  2C4A               	goto	u645
  7498  0450  0875               	movf	___lmul@multiplier+3,w
  7499  0451  0474               	iorwf	___lmul@multiplier+2,w
  7500  0452  0473               	iorwf	___lmul@multiplier+1,w
  7501  0453  0472               	iorwf	___lmul@multiplier,w
  7502  0454  1D03               	skipz
  7503  0455  2C38               	goto	l1858
  7504  0456  083D               	movf	___lmul@product+3,w
  7505  0457  00F5               	movwf	?___lmul+3
  7506  0458  083C               	movf	___lmul@product+2,w
  7507  0459  00F4               	movwf	?___lmul+2
  7508  045A  083B               	movf	___lmul@product+1,w
  7509  045B  00F3               	movwf	?___lmul+1
  7510  045C  083A               	movf	___lmul@product,w
  7511  045D  00F2               	movwf	?___lmul
  7512  045E  0008               	return
  7513  045F                     __end_of___lmul:
  7514                           
  7515                           	psect	text24
  7516  045F                     __ptext24:	
  7517 ;; *************** function _EXECUTExEFFECT *****************
  7518 ;; Defined at:
  7519 ;;		line 152 in file "executer.c"
  7520 ;; Parameters:    Size  Location     Type
  7521 ;;		None
  7522 ;; Auto vars:     Size  Location     Type
  7523 ;;  x               1   15[BANK0 ] unsigned char 
  7524 ;;  ReturnData      1   14[BANK0 ] unsigned char 
  7525 ;; Return value:  Size  Location     Type
  7526 ;;                  1    wreg      unsigned char 
  7527 ;; Registers used:
  7528 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7529 ;; Tracked objects:
  7530 ;;		On entry : 3F/0
  7531 ;;		On exit  : 3F/0
  7532 ;;		Unchanged: 0/0
  7533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7534 ;;      Params:         0       0       0       0
  7535 ;;      Locals:         0       4       0       0
  7536 ;;      Temps:          0       2       0       0
  7537 ;;      Totals:         0       6       0       0
  7538 ;;Total ram usage:        6 bytes
  7539 ;; Hardware stack levels used:    1
  7540 ;; Hardware stack levels required when called:    9
  7541 ;; This function calls:
  7542 ;;		_LedBrake
  7543 ;;		_LedFlash
  7544 ;;		_LedNom
  7545 ;;		_LedOff
  7546 ;;		_LedSlFl
  7547 ;;		___bmul
  7548 ;; This function is called by:
  7549 ;;		_main
  7550 ;; This function uses a non-reentrant model
  7551 ;;
  7552                           
  7553                           
  7554                           ;psect for function _EXECUTExEFFECT
  7555  045F                     _EXECUTExEFFECT:
  7556                           
  7557                           ;executer.c: 154:     ReturnVal = 0;
  7558                           
  7559                           ;incstack = 0
  7560                           ; Regs used in _EXECUTExEFFECT: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7561  045F  01AE               	clrf	_ReturnVal
  7562                           
  7563                           ;executer.c: 155:     uint8_t ReturnData = 0;
  7564  0460  01C8               	clrf	EXECUTExEFFECT@ReturnData
  7565                           
  7566                           ;executer.c: 157:     for(uint8_t x=0; x<6; x++)
  7567  0461  01C9               	clrf	EXECUTExEFFECT@x
  7568  0462                     l2616:
  7569                           
  7570                           ;executer.c: 158:     {;executer.c: 159:         ReturnData += LedBit[x].Prog(x);
  7571  0462  300B               	movlw	11
  7572  0463  00C4               	movwf	??_EXECUTExEFFECT
  7573  0464  0844               	movf	??_EXECUTExEFFECT,w
  7574  0465  00F2               	movwf	___bmul@multiplicand
  7575  0466  0849               	movf	EXECUTExEFFECT@x,w
  7576  0467  25DE               	fcall	___bmul
  7577  0468  3EA2               	addlw	(low ((_LedBit| 0+2)))& (0+255)
  7578  0469  0086               	movwf	6
  7579  046A  0187               	clrf	7
  7580  046B  3F40               	moviw [0]fsr1
  7581  046C  00C6               	movwf	_EXECUTExEFFECT$1858
  7582  046D  3F41               	moviw [1]fsr1
  7583  046E  00C7               	movwf	_EXECUTExEFFECT$1858+1
  7584                           
  7585                           ;executer.c: 158:     {;executer.c: 159:         ReturnData += LedBit[x].Prog(x);
  7586  046F  0849               	movf	EXECUTExEFFECT@x,w
  7587  0470  00C4               	movwf	??_EXECUTExEFFECT
  7588  0471  0844               	movf	??_EXECUTExEFFECT,w
  7589  0472  00BF               	movwf	LedBrake@Led
  7590  0473  0847               	movf	_EXECUTExEFFECT$1858+1,w
  7591  0474  008A               	movwf	10
  7592  0475  0846               	movf	_EXECUTExEFFECT$1858,w
  7593  0476  000A               	callw
  7594  0477  3184               	pagesel	$
  7595  0478  0140               	movlb	0	; select bank0
  7596  0479  00C5               	movwf	??_EXECUTExEFFECT+1
  7597  047A  0845               	movf	??_EXECUTExEFFECT+1,w
  7598  047B  07C8               	addwf	EXECUTExEFFECT@ReturnData,f
  7599                           
  7600                           ;executer.c: 160:     }
  7601  047C  3001               	movlw	1
  7602  047D  00C4               	movwf	??_EXECUTExEFFECT
  7603  047E  0844               	movf	??_EXECUTExEFFECT,w
  7604  047F  07C9               	addwf	EXECUTExEFFECT@x,f
  7605  0480  3006               	movlw	6
  7606  0481  0249               	subwf	EXECUTExEFFECT@x,w
  7607  0482  1C03               	skipc
  7608  0483  2C62               	goto	l2616
  7609                           
  7610                           ;executer.c: 161:     if(ReturnData >= 5)
  7611  0484  3005               	movlw	5
  7612  0485  0248               	subwf	EXECUTExEFFECT@ReturnData,w
  7613  0486  1C03               	skipc
  7614  0487  2C8B               	goto	l2628
  7615                           
  7616                           ;executer.c: 162:     {;executer.c: 163:         ReturnVal = 1;
  7617  0488  01AE               	clrf	_ReturnVal
  7618  0489  0AAE               	incf	_ReturnVal,f
  7619                           
  7620                           ;executer.c: 164:     }
  7621  048A  2C8C               	goto	l2630
  7622  048B                     l2628:
  7623                           
  7624                           ;executer.c: 166:         ReturnVal = 0;
  7625  048B  01AE               	clrf	_ReturnVal
  7626  048C                     l2630:
  7627                           
  7628                           ;executer.c: 168:     return ReturnVal;
  7629  048C  082E               	movf	_ReturnVal,w
  7630  048D  0008               	return
  7631  048E                     __end_of_EXECUTExEFFECT:
  7632                           
  7633                           	psect	text25
  7634  05CD                     __ptext25:	
  7635 ;; *************** function _LedBrake *****************
  7636 ;; Defined at:
  7637 ;;		line 213 in file "executer.c"
  7638 ;; Parameters:    Size  Location     Type
  7639 ;;  Led             1    5[BANK0 ] unsigned char 
  7640 ;; Auto vars:     Size  Location     Type
  7641 ;;		None
  7642 ;; Return value:  Size  Location     Type
  7643 ;;                  1    wreg      unsigned char 
  7644 ;; Registers used:
  7645 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7646 ;; Tracked objects:
  7647 ;;		On entry : 3F/0
  7648 ;;		On exit  : 3E/6
  7649 ;;		Unchanged: 0/0
  7650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7651 ;;      Params:         0       1       0       0
  7652 ;;      Locals:         0       0       0       0
  7653 ;;      Temps:          0       2       0       0
  7654 ;;      Totals:         0       3       0       0
  7655 ;;Total ram usage:        3 bytes
  7656 ;; Hardware stack levels used:    1
  7657 ;; Hardware stack levels required when called:    8
  7658 ;; This function calls:
  7659 ;;		_CalcPwm
  7660 ;;		___bmul
  7661 ;; This function is called by:
  7662 ;;		_RCSxLED
  7663 ;;		_EXECUTExEFFECT
  7664 ;; This function uses a non-reentrant model
  7665 ;;
  7666                           
  7667                           
  7668                           ;psect for function _LedBrake
  7669  05CD                     _LedBrake:
  7670                           
  7671                           ;executer.c: 213: uint8_t LedBrake(uint8_t Led);executer.c: 214: {;executer.c: 215:     
      +                          LedBit[Led].Led = BRAKE;
  7672                           
  7673                           ;incstack = 0
  7674                           ; Regs used in _LedBrake: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7675  05CD  307F               	movlw	127
  7676  05CE  00C0               	movwf	??_LedBrake
  7677  05CF  300B               	movlw	11
  7678  05D0  00C1               	movwf	??_LedBrake+1
  7679  05D1  0841               	movf	??_LedBrake+1,w
  7680  05D2  00F2               	movwf	___bmul@multiplicand
  7681  05D3  083F               	movf	LedBrake@Led,w
  7682  05D4  25DE               	fcall	___bmul
  7683  05D5  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  7684  05D6  0086               	movwf	6
  7685  05D7  0187               	clrf	7
  7686  05D8  0840               	movf	??_LedBrake,w
  7687  05D9  0081               	movwf	1
  7688                           
  7689                           ;executer.c: 216:     CalcPwm(Led);
  7690  05DA  083F               	movf	LedBrake@Led,w
  7691  05DB  24BA               	fcall	_CalcPwm
  7692                           
  7693                           ;executer.c: 217:     return(1);
  7694  05DC  3001               	movlw	1
  7695  05DD  0008               	return
  7696  05DE                     __end_of_LedBrake:
  7697                           
  7698                           	psect	text26
  7699  0395                     __ptext26:	
  7700 ;; *************** function _LedNom *****************
  7701 ;; Defined at:
  7702 ;;		line 187 in file "executer.c"
  7703 ;; Parameters:    Size  Location     Type
  7704 ;;  Led             1    5[BANK0 ] unsigned char 
  7705 ;; Auto vars:     Size  Location     Type
  7706 ;;		None
  7707 ;; Return value:  Size  Location     Type
  7708 ;;                  1    wreg      unsigned char 
  7709 ;; Registers used:
  7710 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7711 ;; Tracked objects:
  7712 ;;		On entry : 3F/0
  7713 ;;		On exit  : 3E/6
  7714 ;;		Unchanged: 0/0
  7715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7716 ;;      Params:         0       1       0       0
  7717 ;;      Locals:         0       0       0       0
  7718 ;;      Temps:          0       3       0       0
  7719 ;;      Totals:         0       4       0       0
  7720 ;;Total ram usage:        4 bytes
  7721 ;; Hardware stack levels used:    1
  7722 ;; Hardware stack levels required when called:    8
  7723 ;; This function calls:
  7724 ;;		_CalcPwm
  7725 ;;		___bmul
  7726 ;; This function is called by:
  7727 ;;		_RCSxLED
  7728 ;;		_EXECUTExEFFECT
  7729 ;; This function uses a non-reentrant model
  7730 ;;
  7731                           
  7732                           
  7733                           ;psect for function _LedNom
  7734  0395                     _LedNom:
  7735                           
  7736                           ;executer.c: 187: uint8_t LedNom(uint8_t Led);executer.c: 188: {;executer.c: 189:     Le
      +                          dBit[Led].Led = LedBit[Led].nominal;
  7737                           
  7738                           ;incstack = 0
  7739                           ; Regs used in _LedNom: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7740  0395  300B               	movlw	11
  7741  0396  00C0               	movwf	??_LedNom
  7742  0397  0840               	movf	??_LedNom,w
  7743  0398  00F2               	movwf	___bmul@multiplicand
  7744  0399  083F               	movf	LedNom@Led,w
  7745  039A  25DE               	fcall	___bmul
  7746  039B  3EA5               	addlw	(low ((_LedBit| 0+5)))& (0+255)
  7747  039C  0086               	movwf	6
  7748  039D  0187               	clrf	7
  7749  039E  0801               	movf	1,w
  7750  039F  00C1               	movwf	??_LedNom+1
  7751  03A0  300B               	movlw	11
  7752  03A1  00C2               	movwf	??_LedNom+2
  7753  03A2  0842               	movf	??_LedNom+2,w
  7754  03A3  00F2               	movwf	___bmul@multiplicand
  7755  03A4  083F               	movf	LedNom@Led,w
  7756  03A5  25DE               	fcall	___bmul
  7757  03A6  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  7758  03A7  0086               	movwf	6
  7759  03A8  0187               	clrf	7
  7760  03A9  0841               	movf	??_LedNom+1,w
  7761  03AA  0081               	movwf	1
  7762                           
  7763                           ;executer.c: 190:     LedBit[Led].Speed = 0;
  7764  03AB  300B               	movlw	11
  7765  03AC  00C0               	movwf	??_LedNom
  7766  03AD  0840               	movf	??_LedNom,w
  7767  03AE  00F2               	movwf	___bmul@multiplicand
  7768  03AF  083F               	movf	LedNom@Led,w
  7769  03B0  25DE               	fcall	___bmul
  7770  03B1  3EA4               	addlw	(low ((_LedBit| 0+4)))& (0+255)
  7771  03B2  0086               	movwf	6
  7772  03B3  0187               	clrf	7
  7773  03B4  0181               	clrf	1
  7774                           
  7775                           ;executer.c: 191:     LedBit[Led].Prog_State = 0;
  7776  03B5  300B               	movlw	11
  7777  03B6  00C0               	movwf	??_LedNom
  7778  03B7  0840               	movf	??_LedNom,w
  7779  03B8  00F2               	movwf	___bmul@multiplicand
  7780  03B9  083F               	movf	LedNom@Led,w
  7781  03BA  25DE               	fcall	___bmul
  7782  03BB  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  7783  03BC  0086               	movwf	6
  7784  03BD  0187               	clrf	7
  7785  03BE  0181               	clrf	1
  7786                           
  7787                           ;executer.c: 192:     LedBit[Led].Iteration = 0;
  7788  03BF  300B               	movlw	11
  7789  03C0  00C0               	movwf	??_LedNom
  7790  03C1  0840               	movf	??_LedNom,w
  7791  03C2  00F2               	movwf	___bmul@multiplicand
  7792  03C3  083F               	movf	LedNom@Led,w
  7793  03C4  25DE               	fcall	___bmul
  7794  03C5  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  7795  03C6  0086               	movwf	6
  7796  03C7  0187               	clrf	7
  7797  03C8  0181               	clrf	1
  7798                           
  7799                           ;executer.c: 193:     CalcPwm(Led);
  7800  03C9  083F               	movf	LedNom@Led,w
  7801  03CA  24BA               	fcall	_CalcPwm
  7802                           
  7803                           ;executer.c: 194:     return(1);
  7804  03CB  3001               	movlw	1
  7805  03CC  0008               	return
  7806  03CD                     __end_of_LedNom:
  7807                           
  7808                           	psect	text27
  7809  01A0                     __ptext27:	
  7810 ;; *************** function _LedFlash *****************
  7811 ;; Defined at:
  7812 ;;		line 275 in file "executer.c"
  7813 ;; Parameters:    Size  Location     Type
  7814 ;;  Led             1    5[BANK0 ] unsigned char 
  7815 ;; Auto vars:     Size  Location     Type
  7816 ;;  ReturnVal       1    9[BANK0 ] unsigned char 
  7817 ;; Return value:  Size  Location     Type
  7818 ;;                  1    wreg      unsigned char 
  7819 ;; Registers used:
  7820 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7821 ;; Tracked objects:
  7822 ;;		On entry : 3F/0
  7823 ;;		On exit  : 3F/0
  7824 ;;		Unchanged: 0/0
  7825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7826 ;;      Params:         0       1       0       0
  7827 ;;      Locals:         0       1       0       0
  7828 ;;      Temps:          0       3       0       0
  7829 ;;      Totals:         0       5       0       0
  7830 ;;Total ram usage:        5 bytes
  7831 ;; Hardware stack levels used:    1
  7832 ;; Hardware stack levels required when called:    8
  7833 ;; This function calls:
  7834 ;;		_CalcPwm
  7835 ;;		___bmul
  7836 ;; This function is called by:
  7837 ;;		_BATTxPROTECT
  7838 ;;		_RCSxLED
  7839 ;;		_EXECUTExEFFECT
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843                           
  7844                           ;psect for function _LedFlash
  7845  01A0                     _LedFlash:
  7846                           
  7847                           ;executer.c: 275: uint8_t LedFlash(uint8_t Led);executer.c: 276: {;executer.c: 277:     
      +                          uint8_t ReturnVal = 0;
  7848                           
  7849                           ;incstack = 0
  7850                           ; Regs used in _LedFlash: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7851  01A0  01C3               	clrf	LedFlash@ReturnVal
  7852                           
  7853                           ;executer.c: 279:     switch(LedBit[Led].Prog_State){
  7854  01A1  2A24               	goto	l2596
  7855  01A2                     l2576:
  7856  01A2  300B               	movlw	11
  7857  01A3  00C0               	movwf	??_LedFlash
  7858  01A4  0840               	movf	??_LedFlash,w
  7859  01A5  00F2               	movwf	___bmul@multiplicand
  7860  01A6  083F               	movf	LedFlash@Led,w
  7861  01A7  25DE               	fcall	___bmul
  7862  01A8  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  7863  01A9  0086               	movwf	6
  7864  01AA  0187               	clrf	7
  7865  01AB  0181               	clrf	1
  7866                           
  7867                           ;executer.c: 281:                     LedBit[Led].Prog_State = 1;
  7868  01AC  300B               	movlw	11
  7869  01AD  00C0               	movwf	??_LedFlash
  7870  01AE  0840               	movf	??_LedFlash,w
  7871  01AF  00F2               	movwf	___bmul@multiplicand
  7872  01B0  083F               	movf	LedFlash@Led,w
  7873  01B1  25DE               	fcall	___bmul
  7874  01B2  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  7875  01B3  0086               	movwf	6
  7876  01B4  0187               	clrf	7
  7877  01B5  0181               	clrf	1
  7878  01B6  0A81               	incf	1,f
  7879                           
  7880                           ;executer.c: 282:                     ReturnVal = 0;
  7881  01B7  01C3               	clrf	LedFlash@ReturnVal
  7882                           
  7883                           ;executer.c: 283:             break;
  7884  01B8  2A3D               	goto	l2598
  7885  01B9                     l2580:
  7886  01B9  3001               	movlw	1
  7887  01BA  00C0               	movwf	??_LedFlash
  7888  01BB  300B               	movlw	11
  7889  01BC  00C1               	movwf	??_LedFlash+1
  7890  01BD  0841               	movf	??_LedFlash+1,w
  7891  01BE  00F2               	movwf	___bmul@multiplicand
  7892  01BF  083F               	movf	LedFlash@Led,w
  7893  01C0  25DE               	fcall	___bmul
  7894  01C1  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  7895  01C2  0086               	movwf	6
  7896  01C3  0187               	clrf	7
  7897  01C4  0840               	movf	??_LedFlash,w
  7898  01C5  0781               	addwf	1,f
  7899                           
  7900                           ;executer.c: 286:                     if(LedBit[Led].Iteration > LedBit[Led].Speed){
  7901  01C6  300B               	movlw	11
  7902  01C7  00C0               	movwf	??_LedFlash
  7903  01C8  0840               	movf	??_LedFlash,w
  7904  01C9  00F2               	movwf	___bmul@multiplicand
  7905  01CA  083F               	movf	LedFlash@Led,w
  7906  01CB  25DE               	fcall	___bmul
  7907  01CC  3EA4               	addlw	(low ((_LedBit| 0+4)))& (0+255)
  7908  01CD  0086               	movwf	6
  7909  01CE  0187               	clrf	7
  7910  01CF  300B               	movlw	11
  7911  01D0  00C1               	movwf	??_LedFlash+1
  7912  01D1  0841               	movf	??_LedFlash+1,w
  7913  01D2  00F2               	movwf	___bmul@multiplicand
  7914  01D3  083F               	movf	LedFlash@Led,w
  7915  01D4  25DE               	fcall	___bmul
  7916  01D5  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  7917  01D6  0084               	movwf	4
  7918  01D7  0185               	clrf	5
  7919  01D8  0800               	movf	0,w
  7920  01D9  0201               	subwf	1,w
  7921  01DA  1803               	skipnc
  7922  01DB  2A0B               	goto	l677
  7923                           
  7924                           ;executer.c: 287:                         LedBit[Led].Iteration = 0;
  7925  01DC  300B               	movlw	11
  7926  01DD  00C0               	movwf	??_LedFlash
  7927  01DE  0840               	movf	??_LedFlash,w
  7928  01DF  00F2               	movwf	___bmul@multiplicand
  7929  01E0  083F               	movf	LedFlash@Led,w
  7930  01E1  25DE               	fcall	___bmul
  7931  01E2  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  7932  01E3  0086               	movwf	6
  7933  01E4  0187               	clrf	7
  7934  01E5  0181               	clrf	1
  7935                           
  7936                           ;executer.c: 288:                         if(LedBit[Led].Led == MAX){
  7937  01E6  300B               	movlw	11
  7938  01E7  00C0               	movwf	??_LedFlash
  7939  01E8  0840               	movf	??_LedFlash,w
  7940  01E9  00F2               	movwf	___bmul@multiplicand
  7941  01EA  083F               	movf	LedFlash@Led,w
  7942  01EB  25DE               	fcall	___bmul
  7943  01EC  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  7944  01ED  0086               	movwf	6
  7945  01EE  0187               	clrf	7
  7946  01EF  30FE               	movlw	254
  7947  01F0  0601               	xorwf	1,w
  7948  01F1  1D03               	btfss	3,2
  7949  01F2  29FE               	goto	l2588
  7950                           
  7951                           ;executer.c: 289:                             LedBit[Led].Led = 0;
  7952  01F3  300B               	movlw	11
  7953  01F4  00C0               	movwf	??_LedFlash
  7954  01F5  0840               	movf	??_LedFlash,w
  7955  01F6  00F2               	movwf	___bmul@multiplicand
  7956  01F7  083F               	movf	LedFlash@Led,w
  7957  01F8  25DE               	fcall	___bmul
  7958  01F9  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  7959  01FA  0086               	movwf	6
  7960  01FB  0187               	clrf	7
  7961  01FC  0181               	clrf	1
  7962                           
  7963                           ;executer.c: 290:                         }
  7964  01FD  2A0B               	goto	l677
  7965  01FE                     l2588:
  7966                           
  7967                           ;executer.c: 292:                             LedBit[Led].Led = MAX;
  7968  01FE  30FE               	movlw	254
  7969  01FF  00C0               	movwf	??_LedFlash
  7970  0200  300B               	movlw	11
  7971  0201  00C1               	movwf	??_LedFlash+1
  7972  0202  0841               	movf	??_LedFlash+1,w
  7973  0203  00F2               	movwf	___bmul@multiplicand
  7974  0204  083F               	movf	LedFlash@Led,w
  7975  0205  25DE               	fcall	___bmul
  7976  0206  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  7977  0207  0086               	movwf	6
  7978  0208  0187               	clrf	7
  7979  0209  0840               	movf	??_LedFlash,w
  7980  020A  0081               	movwf	1
  7981  020B                     l677:	
  7982                           ;executer.c: 294:                     }
  7983                           
  7984                           
  7985                           ;executer.c: 295:                     LedBit[Led].Prog_State = 1;
  7986  020B  300B               	movlw	11
  7987  020C  00C0               	movwf	??_LedFlash
  7988  020D  0840               	movf	??_LedFlash,w
  7989  020E  00F2               	movwf	___bmul@multiplicand
  7990  020F  083F               	movf	LedFlash@Led,w
  7991  0210  25DE               	fcall	___bmul
  7992  0211  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  7993  0212  0086               	movwf	6
  7994  0213  0187               	clrf	7
  7995  0214  0181               	clrf	1
  7996  0215  0A81               	incf	1,f
  7997                           
  7998                           ;executer.c: 296:                     ReturnVal = 1;
  7999  0216  01C3               	clrf	LedFlash@ReturnVal
  8000  0217  0AC3               	incf	LedFlash@ReturnVal,f
  8001                           
  8002                           ;executer.c: 297:             break;
  8003  0218  2A3D               	goto	l2598
  8004  0219                     l2592:
  8005  0219  300B               	movlw	11
  8006  021A  00C0               	movwf	??_LedFlash
  8007  021B  0840               	movf	??_LedFlash,w
  8008  021C  00F2               	movwf	___bmul@multiplicand
  8009  021D  083F               	movf	LedFlash@Led,w
  8010  021E  25DE               	fcall	___bmul
  8011  021F  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8012  0220  0086               	movwf	6
  8013  0221  0187               	clrf	7
  8014  0222  0181               	clrf	1
  8015                           
  8016                           ;executer.c: 300:         break;
  8017  0223  2A3D               	goto	l2598
  8018  0224                     l2596:
  8019  0224  300B               	movlw	11
  8020  0225  00C0               	movwf	??_LedFlash
  8021  0226  0840               	movf	??_LedFlash,w
  8022  0227  00F2               	movwf	___bmul@multiplicand
  8023  0228  083F               	movf	LedFlash@Led,w
  8024  0229  25DE               	fcall	___bmul
  8025  022A  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8026  022B  0086               	movwf	6
  8027  022C  0187               	clrf	7
  8028  022D  0801               	movf	1,w
  8029  022E  00C1               	movwf	??_LedFlash+1
  8030  022F  01C2               	clrf	??_LedFlash+2
  8031                           
  8032                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8033                           ; Switch size 1, requested type "simple"
  8034                           ; Number of cases is 1, Range of values is 0 to 0
  8035                           ; switch strategies available:
  8036                           ; Name         Instructions Cycles
  8037                           ; simple_byte            4     3 (average)
  8038                           ; direct_byte            8     6 (fixed)
  8039                           ; jumptable            260     6 (fixed)
  8040                           ;	Chosen strategy is simple_byte
  8041  0230  0842               	movf	??_LedFlash+2,w
  8042  0231  3A00               	xorlw	0	; case 0
  8043  0232  1903               	skipnz
  8044  0233  2A35               	goto	l2786
  8045  0234  2A19               	goto	l2592
  8046  0235                     l2786:
  8047                           
  8048                           ; Switch size 1, requested type "simple"
  8049                           ; Number of cases is 2, Range of values is 0 to 1
  8050                           ; switch strategies available:
  8051                           ; Name         Instructions Cycles
  8052                           ; simple_byte            7     4 (average)
  8053                           ; direct_byte           10     6 (fixed)
  8054                           ; jumptable            260     6 (fixed)
  8055                           ;	Chosen strategy is simple_byte
  8056  0235  0841               	movf	??_LedFlash+1,w
  8057  0236  3A00               	xorlw	0	; case 0
  8058  0237  1903               	skipnz
  8059  0238  29A2               	goto	l2576
  8060  0239  3A01               	xorlw	1	; case 1
  8061  023A  1903               	skipnz
  8062  023B  29B9               	goto	l2580
  8063  023C  2A19               	goto	l2592
  8064  023D                     l2598:
  8065                           
  8066                           ;executer.c: 303:     CalcPwm(Led);
  8067  023D  083F               	movf	LedFlash@Led,w
  8068  023E  24BA               	fcall	_CalcPwm
  8069                           
  8070                           ;executer.c: 304:     return(ReturnVal);
  8071  023F  0140               	movlb	0	; select bank0
  8072  0240  0843               	movf	LedFlash@ReturnVal,w
  8073  0241  0008               	return
  8074  0242                     __end_of_LedFlash:
  8075                           
  8076                           	psect	text28
  8077  048E                     __ptext28:	
  8078 ;; *************** function _LedOff *****************
  8079 ;; Defined at:
  8080 ;;		line 174 in file "executer.c"
  8081 ;; Parameters:    Size  Location     Type
  8082 ;;  Led             1    5[BANK0 ] unsigned char 
  8083 ;; Auto vars:     Size  Location     Type
  8084 ;;		None
  8085 ;; Return value:  Size  Location     Type
  8086 ;;                  1    wreg      unsigned char 
  8087 ;; Registers used:
  8088 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8089 ;; Tracked objects:
  8090 ;;		On entry : 3F/0
  8091 ;;		On exit  : 3E/6
  8092 ;;		Unchanged: 0/0
  8093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8094 ;;      Params:         0       1       0       0
  8095 ;;      Locals:         0       0       0       0
  8096 ;;      Temps:          0       1       0       0
  8097 ;;      Totals:         0       2       0       0
  8098 ;;Total ram usage:        2 bytes
  8099 ;; Hardware stack levels used:    1
  8100 ;; Hardware stack levels required when called:    8
  8101 ;; This function calls:
  8102 ;;		_CalcPwm
  8103 ;;		___bmul
  8104 ;; This function is called by:
  8105 ;;		_BATTxPROTECT
  8106 ;;		_RCSxLED
  8107 ;;		_EXECUTExEFFECT
  8108 ;; This function uses a non-reentrant model
  8109 ;;
  8110                           
  8111                           
  8112                           ;psect for function _LedOff
  8113  048E                     _LedOff:
  8114                           
  8115                           ;executer.c: 174: uint8_t LedOff(uint8_t Led);executer.c: 175: {;executer.c: 176:     Le
      +                          dBit[Led].Led = 0;
  8116                           
  8117                           ;incstack = 0
  8118                           ; Regs used in _LedOff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8119  048E  300B               	movlw	11
  8120  048F  00C0               	movwf	??_LedOff
  8121  0490  0840               	movf	??_LedOff,w
  8122  0491  00F2               	movwf	___bmul@multiplicand
  8123  0492  083F               	movf	LedOff@Led,w
  8124  0493  25DE               	fcall	___bmul
  8125  0494  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8126  0495  0086               	movwf	6
  8127  0496  0187               	clrf	7
  8128  0497  0181               	clrf	1
  8129                           
  8130                           ;executer.c: 177:     LedBit[Led].Speed = 0;
  8131  0498  300B               	movlw	11
  8132  0499  00C0               	movwf	??_LedOff
  8133  049A  0840               	movf	??_LedOff,w
  8134  049B  00F2               	movwf	___bmul@multiplicand
  8135  049C  083F               	movf	LedOff@Led,w
  8136  049D  25DE               	fcall	___bmul
  8137  049E  3EA4               	addlw	(low ((_LedBit| 0+4)))& (0+255)
  8138  049F  0086               	movwf	6
  8139  04A0  0187               	clrf	7
  8140  04A1  0181               	clrf	1
  8141                           
  8142                           ;executer.c: 178:     LedBit[Led].Prog_State = 0;
  8143  04A2  300B               	movlw	11
  8144  04A3  00C0               	movwf	??_LedOff
  8145  04A4  0840               	movf	??_LedOff,w
  8146  04A5  00F2               	movwf	___bmul@multiplicand
  8147  04A6  083F               	movf	LedOff@Led,w
  8148  04A7  25DE               	fcall	___bmul
  8149  04A8  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8150  04A9  0086               	movwf	6
  8151  04AA  0187               	clrf	7
  8152  04AB  0181               	clrf	1
  8153                           
  8154                           ;executer.c: 179:     LedBit[Led].Iteration = 0;
  8155  04AC  300B               	movlw	11
  8156  04AD  00C0               	movwf	??_LedOff
  8157  04AE  0840               	movf	??_LedOff,w
  8158  04AF  00F2               	movwf	___bmul@multiplicand
  8159  04B0  083F               	movf	LedOff@Led,w
  8160  04B1  25DE               	fcall	___bmul
  8161  04B2  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8162  04B3  0086               	movwf	6
  8163  04B4  0187               	clrf	7
  8164  04B5  0181               	clrf	1
  8165                           
  8166                           ;executer.c: 180:     CalcPwm(Led);
  8167  04B6  083F               	movf	LedOff@Led,w
  8168  04B7  24BA               	fcall	_CalcPwm
  8169                           
  8170                           ;executer.c: 181:     return(1);
  8171  04B8  3001               	movlw	1
  8172  04B9  0008               	return
  8173  04BA                     __end_of_LedOff:
  8174                           
  8175                           	psect	text29
  8176  0039                     __ptext29:	
  8177 ;; *************** function _LedSlFl *****************
  8178 ;; Defined at:
  8179 ;;		line 223 in file "executer.c"
  8180 ;; Parameters:    Size  Location     Type
  8181 ;;  Led             1    5[BANK0 ] unsigned char 
  8182 ;; Auto vars:     Size  Location     Type
  8183 ;;  ReturnVal       1    9[BANK0 ] unsigned char 
  8184 ;; Return value:  Size  Location     Type
  8185 ;;                  1    wreg      unsigned char 
  8186 ;; Registers used:
  8187 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8188 ;; Tracked objects:
  8189 ;;		On entry : 3F/0
  8190 ;;		On exit  : 3F/0
  8191 ;;		Unchanged: 0/0
  8192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8193 ;;      Params:         0       1       0       0
  8194 ;;      Locals:         0       1       0       0
  8195 ;;      Temps:          0       3       0       0
  8196 ;;      Totals:         0       5       0       0
  8197 ;;Total ram usage:        5 bytes
  8198 ;; Hardware stack levels used:    1
  8199 ;; Hardware stack levels required when called:    8
  8200 ;; This function calls:
  8201 ;;		_CalcPwm
  8202 ;;		___bmul
  8203 ;; This function is called by:
  8204 ;;		_RCSxLED
  8205 ;;		_EXECUTExEFFECT
  8206 ;; This function uses a non-reentrant model
  8207 ;;
  8208                           
  8209                           
  8210                           ;psect for function _LedSlFl
  8211  0039                     _LedSlFl:
  8212                           
  8213                           ;executer.c: 223: uint8_t LedSlFl(uint8_t Led);executer.c: 224: {;executer.c: 225:     u
      +                          int8_t ReturnVal = 0;
  8214                           
  8215                           ;incstack = 0
  8216                           ; Regs used in _LedSlFl: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8217  0039  01C3               	clrf	LedSlFl@ReturnVal
  8218                           
  8219                           ;executer.c: 227:     switch(LedBit[Led].Prog_State){
  8220  003A  297F               	goto	l2562
  8221  003B                     l2522:
  8222  003B  300B               	movlw	11
  8223  003C  00C0               	movwf	??_LedSlFl
  8224  003D  0840               	movf	??_LedSlFl,w
  8225  003E  00F2               	movwf	___bmul@multiplicand
  8226  003F  083F               	movf	LedSlFl@Led,w
  8227  0040  25DE               	fcall	___bmul
  8228  0041  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8229  0042  0086               	movwf	6
  8230  0043  0187               	clrf	7
  8231  0044  0181               	clrf	1
  8232                           
  8233                           ;executer.c: 229:                     LedBit[Led].Prog_State = 1;
  8234  0045  300B               	movlw	11
  8235  0046  00C0               	movwf	??_LedSlFl
  8236  0047  0840               	movf	??_LedSlFl,w
  8237  0048  00F2               	movwf	___bmul@multiplicand
  8238  0049  083F               	movf	LedSlFl@Led,w
  8239  004A  25DE               	fcall	___bmul
  8240  004B  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8241  004C  0086               	movwf	6
  8242  004D  0187               	clrf	7
  8243  004E  0181               	clrf	1
  8244  004F  0A81               	incf	1,f
  8245                           
  8246                           ;executer.c: 230:                     ReturnVal = 0;
  8247  0050  01C3               	clrf	LedSlFl@ReturnVal
  8248                           
  8249                           ;executer.c: 231:             break;
  8250  0051  299B               	goto	l2564
  8251  0052                     l2526:
  8252  0052  3001               	movlw	1
  8253  0053  00C0               	movwf	??_LedSlFl
  8254  0054  300B               	movlw	11
  8255  0055  00C1               	movwf	??_LedSlFl+1
  8256  0056  0841               	movf	??_LedSlFl+1,w
  8257  0057  00F2               	movwf	___bmul@multiplicand
  8258  0058  083F               	movf	LedSlFl@Led,w
  8259  0059  25DE               	fcall	___bmul
  8260  005A  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8261  005B  0086               	movwf	6
  8262  005C  0187               	clrf	7
  8263  005D  0840               	movf	??_LedSlFl,w
  8264  005E  0781               	addwf	1,f
  8265                           
  8266                           ;executer.c: 234:                     if(LedBit[Led].Iteration > LedBit[Led].Speed){
  8267  005F  300B               	movlw	11
  8268  0060  00C0               	movwf	??_LedSlFl
  8269  0061  0840               	movf	??_LedSlFl,w
  8270  0062  00F2               	movwf	___bmul@multiplicand
  8271  0063  083F               	movf	LedSlFl@Led,w
  8272  0064  25DE               	fcall	___bmul
  8273  0065  3EA4               	addlw	(low ((_LedBit| 0+4)))& (0+255)
  8274  0066  0086               	movwf	6
  8275  0067  0187               	clrf	7
  8276  0068  300B               	movlw	11
  8277  0069  00C1               	movwf	??_LedSlFl+1
  8278  006A  0841               	movf	??_LedSlFl+1,w
  8279  006B  00F2               	movwf	___bmul@multiplicand
  8280  006C  083F               	movf	LedSlFl@Led,w
  8281  006D  25DE               	fcall	___bmul
  8282  006E  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8283  006F  0084               	movwf	4
  8284  0070  0185               	clrf	5
  8285  0071  0800               	movf	0,w
  8286  0072  0201               	subwf	1,w
  8287  0073  1803               	skipnc
  8288  0074  2895               	goto	l662
  8289                           
  8290                           ;executer.c: 235:                         LedBit[Led].Iteration = 0;
  8291  0075  300B               	movlw	11
  8292  0076  00C0               	movwf	??_LedSlFl
  8293  0077  0840               	movf	??_LedSlFl,w
  8294  0078  00F2               	movwf	___bmul@multiplicand
  8295  0079  083F               	movf	LedSlFl@Led,w
  8296  007A  25DE               	fcall	___bmul
  8297  007B  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8298  007C  0086               	movwf	6
  8299  007D  0187               	clrf	7
  8300  007E  0181               	clrf	1
  8301                           
  8302                           ;executer.c: 236:                         LedBit[Led].Led += LedBit[Led].StepSize;
  8303  007F  300B               	movlw	11
  8304  0080  00C0               	movwf	??_LedSlFl
  8305  0081  0840               	movf	??_LedSlFl,w
  8306  0082  00F2               	movwf	___bmul@multiplicand
  8307  0083  083F               	movf	LedSlFl@Led,w
  8308  0084  25DE               	fcall	___bmul
  8309  0085  3EA8               	addlw	(low ((_LedBit| 0+8)))& (0+255)
  8310  0086  0086               	movwf	6
  8311  0087  0187               	clrf	7
  8312  0088  0801               	movf	1,w
  8313  0089  00C1               	movwf	??_LedSlFl+1
  8314  008A  300B               	movlw	11
  8315  008B  00C2               	movwf	??_LedSlFl+2
  8316  008C  0842               	movf	??_LedSlFl+2,w
  8317  008D  00F2               	movwf	___bmul@multiplicand
  8318  008E  083F               	movf	LedSlFl@Led,w
  8319  008F  25DE               	fcall	___bmul
  8320  0090  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8321  0091  0086               	movwf	6
  8322  0092  0187               	clrf	7
  8323  0093  0841               	movf	??_LedSlFl+1,w
  8324  0094  0781               	addwf	1,f
  8325  0095                     l662:	
  8326                           ;executer.c: 237:                     }
  8327                           
  8328                           
  8329                           ;executer.c: 238:                     if(LedBit[Led].Led > MAX){
  8330  0095  300B               	movlw	11
  8331  0096  00C0               	movwf	??_LedSlFl
  8332  0097  0840               	movf	??_LedSlFl,w
  8333  0098  00F2               	movwf	___bmul@multiplicand
  8334  0099  083F               	movf	LedSlFl@Led,w
  8335  009A  25DE               	fcall	___bmul
  8336  009B  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8337  009C  0086               	movwf	6
  8338  009D  0187               	clrf	7
  8339  009E  0A01               	incf	1,w
  8340  009F  1D03               	btfss	3,2
  8341  00A0  28C5               	goto	l2534
  8342                           
  8343                           ;executer.c: 239:                         LedBit[Led].Led = MAX;
  8344  00A1  30FE               	movlw	254
  8345  00A2  00C0               	movwf	??_LedSlFl
  8346  00A3  300B               	movlw	11
  8347  00A4  00C1               	movwf	??_LedSlFl+1
  8348  00A5  0841               	movf	??_LedSlFl+1,w
  8349  00A6  00F2               	movwf	___bmul@multiplicand
  8350  00A7  083F               	movf	LedSlFl@Led,w
  8351  00A8  25DE               	fcall	___bmul
  8352  00A9  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8353  00AA  0086               	movwf	6
  8354  00AB  0187               	clrf	7
  8355  00AC  0840               	movf	??_LedSlFl,w
  8356  00AD  0081               	movwf	1
  8357                           
  8358                           ;executer.c: 240:                         LedBit[Led].Prog_State = 2;
  8359  00AE  3002               	movlw	2
  8360  00AF  00C0               	movwf	??_LedSlFl
  8361  00B0  300B               	movlw	11
  8362  00B1  00C1               	movwf	??_LedSlFl+1
  8363  00B2  0841               	movf	??_LedSlFl+1,w
  8364  00B3  00F2               	movwf	___bmul@multiplicand
  8365  00B4  083F               	movf	LedSlFl@Led,w
  8366  00B5  25DE               	fcall	___bmul
  8367  00B6  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8368  00B7  0086               	movwf	6
  8369  00B8  0187               	clrf	7
  8370  00B9  0840               	movf	??_LedSlFl,w
  8371  00BA  0081               	movwf	1
  8372  00BB                     L2:
  8373                           
  8374                           ;executer.c: 241:                         LedBit[Led].Iteration = 0;
  8375  00BB  300B               	movlw	11
  8376  00BC  00C0               	movwf	??_LedSlFl
  8377  00BD  0840               	movf	??_LedSlFl,w
  8378  00BE  00F2               	movwf	___bmul@multiplicand
  8379  00BF  083F               	movf	LedSlFl@Led,w
  8380  00C0  25DE               	fcall	___bmul
  8381  00C1  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8382  00C2  0086               	movwf	6
  8383  00C3  0187               	clrf	7
  8384  00C4  0181               	clrf	1
  8385  00C5                     l2534:
  8386                           
  8387                           ;executer.c: 243:                     ReturnVal = 1;
  8388  00C5  01C3               	clrf	LedSlFl@ReturnVal
  8389  00C6  0AC3               	incf	LedSlFl@ReturnVal,f
  8390                           
  8391                           ;executer.c: 244:             break;
  8392  00C7  299B               	goto	l2564
  8393  00C8                     l2536:
  8394  00C8  3001               	movlw	1
  8395  00C9  00C0               	movwf	??_LedSlFl
  8396  00CA  300B               	movlw	11
  8397  00CB  00C1               	movwf	??_LedSlFl+1
  8398  00CC  0841               	movf	??_LedSlFl+1,w
  8399  00CD  00F2               	movwf	___bmul@multiplicand
  8400  00CE  083F               	movf	LedSlFl@Led,w
  8401  00CF  25DE               	fcall	___bmul
  8402  00D0  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8403  00D1  0086               	movwf	6
  8404  00D2  0187               	clrf	7
  8405  00D3  0840               	movf	??_LedSlFl,w
  8406  00D4  0781               	addwf	1,f
  8407                           
  8408                           ;executer.c: 247:                     if(LedBit[Led].Iteration > LedBit[Led].Speed){
  8409  00D5  300B               	movlw	11
  8410  00D6  00C0               	movwf	??_LedSlFl
  8411  00D7  0840               	movf	??_LedSlFl,w
  8412  00D8  00F2               	movwf	___bmul@multiplicand
  8413  00D9  083F               	movf	LedSlFl@Led,w
  8414  00DA  25DE               	fcall	___bmul
  8415  00DB  3EA4               	addlw	(low ((_LedBit| 0+4)))& (0+255)
  8416  00DC  0086               	movwf	6
  8417  00DD  0187               	clrf	7
  8418  00DE  300B               	movlw	11
  8419  00DF  00C1               	movwf	??_LedSlFl+1
  8420  00E0  0841               	movf	??_LedSlFl+1,w
  8421  00E1  00F2               	movwf	___bmul@multiplicand
  8422  00E2  083F               	movf	LedSlFl@Led,w
  8423  00E3  25DE               	fcall	___bmul
  8424  00E4  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8425  00E5  0084               	movwf	4
  8426  00E6  0185               	clrf	5
  8427  00E7  0800               	movf	0,w
  8428  00E8  0201               	subwf	1,w
  8429  00E9  1803               	skipnc
  8430  00EA  2909               	goto	l2544
  8431                           
  8432                           ;executer.c: 248:                         LedBit[Led].Iteration = 0;
  8433  00EB  300B               	movlw	11
  8434  00EC  00C0               	movwf	??_LedSlFl
  8435  00ED  0840               	movf	??_LedSlFl,w
  8436  00EE  00F2               	movwf	___bmul@multiplicand
  8437  00EF  083F               	movf	LedSlFl@Led,w
  8438  00F0  25DE               	fcall	___bmul
  8439  00F1  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8440  00F2  0086               	movwf	6
  8441  00F3  0187               	clrf	7
  8442  00F4  0181               	clrf	1
  8443                           
  8444                           ;executer.c: 249:                         LedBit[Led].Led -= LedBit[Led].StepSize;
  8445  00F5  300B               	movlw	11
  8446  00F6  00C0               	movwf	??_LedSlFl
  8447  00F7  0840               	movf	??_LedSlFl,w
  8448  00F8  00F2               	movwf	___bmul@multiplicand
  8449  00F9  083F               	movf	LedSlFl@Led,w
  8450  00FA  25DE               	fcall	___bmul
  8451  00FB  3EA8               	addlw	(low ((_LedBit| 0+8)))& (0+255)
  8452  00FC  0086               	movwf	6
  8453  00FD  0187               	clrf	7
  8454  00FE  300B               	movlw	11
  8455  00FF  00C1               	movwf	??_LedSlFl+1
  8456  0100  0841               	movf	??_LedSlFl+1,w
  8457  0101  00F2               	movwf	___bmul@multiplicand
  8458  0102  083F               	movf	LedSlFl@Led,w
  8459  0103  25DE               	fcall	___bmul
  8460  0104  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8461  0105  0084               	movwf	4
  8462  0106  0185               	clrf	5
  8463  0107  0801               	movf	1,w
  8464  0108  0280               	subwf	0,f
  8465  0109                     l2544:
  8466                           
  8467                           ;executer.c: 251:                     if((LedBit[Led].nominal != MAX) && (LedBit[Led].Le
      +                          d <= LedBit[Led].nominal)){
  8468  0109  300B               	movlw	11
  8469  010A  00C0               	movwf	??_LedSlFl
  8470  010B  0840               	movf	??_LedSlFl,w
  8471  010C  00F2               	movwf	___bmul@multiplicand
  8472  010D  083F               	movf	LedSlFl@Led,w
  8473  010E  25DE               	fcall	___bmul
  8474  010F  3EA5               	addlw	(low ((_LedBit| 0+5)))& (0+255)
  8475  0110  0086               	movwf	6
  8476  0111  0187               	clrf	7
  8477  0112  30FE               	movlw	254
  8478  0113  0601               	xorwf	1,w
  8479  0114  1903               	btfsc	3,2
  8480  0115  2943               	goto	l2550
  8481  0116  300B               	movlw	11
  8482  0117  00C0               	movwf	??_LedSlFl
  8483  0118  0840               	movf	??_LedSlFl,w
  8484  0119  00F2               	movwf	___bmul@multiplicand
  8485  011A  083F               	movf	LedSlFl@Led,w
  8486  011B  25DE               	fcall	___bmul
  8487  011C  3EA5               	addlw	(low ((_LedBit| 0+5)))& (0+255)
  8488  011D  0086               	movwf	6
  8489  011E  0187               	clrf	7
  8490  011F  300B               	movlw	11
  8491  0120  00C1               	movwf	??_LedSlFl+1
  8492  0121  0841               	movf	??_LedSlFl+1,w
  8493  0122  00F2               	movwf	___bmul@multiplicand
  8494  0123  083F               	movf	LedSlFl@Led,w
  8495  0124  25DE               	fcall	___bmul
  8496  0125  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8497  0126  0084               	movwf	4
  8498  0127  0185               	clrf	5
  8499  0128  0800               	movf	0,w
  8500  0129  0201               	subwf	1,w
  8501  012A  1C03               	skipc
  8502  012B  2943               	goto	l2550
  8503                           
  8504                           ;executer.c: 252:                         LedBit[Led].Led = LedBit[Led].nominal;
  8505  012C  300B               	movlw	11
  8506  012D  00C0               	movwf	??_LedSlFl
  8507  012E  0840               	movf	??_LedSlFl,w
  8508  012F  00F2               	movwf	___bmul@multiplicand
  8509  0130  083F               	movf	LedSlFl@Led,w
  8510  0131  25DE               	fcall	___bmul
  8511  0132  3EA5               	addlw	(low ((_LedBit| 0+5)))& (0+255)
  8512  0133  0086               	movwf	6
  8513  0134  0187               	clrf	7
  8514  0135  0801               	movf	1,w
  8515  0136  00C1               	movwf	??_LedSlFl+1
  8516  0137  300B               	movlw	11
  8517  0138  00C2               	movwf	??_LedSlFl+2
  8518  0139  0842               	movf	??_LedSlFl+2,w
  8519  013A  00F2               	movwf	___bmul@multiplicand
  8520  013B  083F               	movf	LedSlFl@Led,w
  8521  013C  25DE               	fcall	___bmul
  8522  013D  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8523  013E  0086               	movwf	6
  8524  013F  0187               	clrf	7
  8525  0140  0841               	movf	??_LedSlFl+1,w
  8526  0141  0081               	movwf	1
  8527  0142  2968               	goto	L4
  8528  0143                     l2550:	
  8529                           ;executer.c: 255:                     }
  8530                           
  8531                           ;executer.c: 254:                         LedBit[Led].Iteration = 0;
  8532                           
  8533                           ;executer.c: 253:                         LedBit[Led].Prog_State = 1;
  8534                           
  8535  0143  300B               	movlw	11
  8536  0144  00C0               	movwf	??_LedSlFl
  8537  0145  0840               	movf	??_LedSlFl,w
  8538  0146  00F2               	movwf	___bmul@multiplicand
  8539  0147  083F               	movf	LedSlFl@Led,w
  8540  0148  25DE               	fcall	___bmul
  8541  0149  3EA5               	addlw	(low ((_LedBit| 0+5)))& (0+255)
  8542  014A  0086               	movwf	6
  8543  014B  0187               	clrf	7
  8544  014C  30FE               	movlw	254
  8545  014D  0601               	xorwf	1,w
  8546  014E  1D03               	btfss	3,2
  8547  014F  28C5               	goto	l2534
  8548  0150  300B               	movlw	11
  8549  0151  00C0               	movwf	??_LedSlFl
  8550  0152  0840               	movf	??_LedSlFl,w
  8551  0153  00F2               	movwf	___bmul@multiplicand
  8552  0154  083F               	movf	LedSlFl@Led,w
  8553  0155  25DE               	fcall	___bmul
  8554  0156  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8555  0157  0086               	movwf	6
  8556  0158  0187               	clrf	7
  8557  0159  3002               	movlw	2
  8558  015A  0201               	subwf	1,w
  8559  015B  1803               	skipnc
  8560  015C  28C5               	goto	l2534
  8561                           
  8562                           ;executer.c: 257:                         LedBit[Led].Led = MIN;
  8563  015D  300B               	movlw	11
  8564  015E  00C0               	movwf	??_LedSlFl
  8565  015F  0840               	movf	??_LedSlFl,w
  8566  0160  00F2               	movwf	___bmul@multiplicand
  8567  0161  083F               	movf	LedSlFl@Led,w
  8568  0162  25DE               	fcall	___bmul
  8569  0163  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8570  0164  0086               	movwf	6
  8571  0165  0187               	clrf	7
  8572  0166  0181               	clrf	1
  8573  0167  0A81               	incf	1,f
  8574  0168                     L4:
  8575                           
  8576                           ;executer.c: 258:                         LedBit[Led].Prog_State = 1;
  8577  0168  300B               	movlw	11
  8578  0169  00C0               	movwf	??_LedSlFl
  8579  016A  0840               	movf	??_LedSlFl,w
  8580  016B  00F2               	movwf	___bmul@multiplicand
  8581  016C  083F               	movf	LedSlFl@Led,w
  8582  016D  25DE               	fcall	___bmul
  8583  016E  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8584  016F  0086               	movwf	6
  8585  0170  0187               	clrf	7
  8586  0171  0181               	clrf	1
  8587  0172  0A81               	incf	1,f
  8588  0173  28BB               	goto	L2
  8589  0174                     l2558:	
  8590                           ;executer.c: 259:                         LedBit[Led].Iteration = 0;
  8591                           
  8592  0174  300B               	movlw	11
  8593  0175  00C0               	movwf	??_LedSlFl
  8594  0176  0840               	movf	??_LedSlFl,w
  8595  0177  00F2               	movwf	___bmul@multiplicand
  8596  0178  083F               	movf	LedSlFl@Led,w
  8597  0179  25DE               	fcall	___bmul
  8598  017A  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8599  017B  0086               	movwf	6
  8600  017C  0187               	clrf	7
  8601  017D  0181               	clrf	1
  8602                           
  8603                           ;executer.c: 265:         break;
  8604  017E  299B               	goto	l2564
  8605  017F                     l2562:
  8606  017F  300B               	movlw	11
  8607  0180  00C0               	movwf	??_LedSlFl
  8608  0181  0840               	movf	??_LedSlFl,w
  8609  0182  00F2               	movwf	___bmul@multiplicand
  8610  0183  083F               	movf	LedSlFl@Led,w
  8611  0184  25DE               	fcall	___bmul
  8612  0185  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8613  0186  0086               	movwf	6
  8614  0187  0187               	clrf	7
  8615  0188  0801               	movf	1,w
  8616  0189  00C1               	movwf	??_LedSlFl+1
  8617  018A  01C2               	clrf	??_LedSlFl+2
  8618                           
  8619                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8620                           ; Switch size 1, requested type "simple"
  8621                           ; Number of cases is 1, Range of values is 0 to 0
  8622                           ; switch strategies available:
  8623                           ; Name         Instructions Cycles
  8624                           ; simple_byte            4     3 (average)
  8625                           ; direct_byte            8     6 (fixed)
  8626                           ; jumptable            260     6 (fixed)
  8627                           ;	Chosen strategy is simple_byte
  8628  018B  0842               	movf	??_LedSlFl+2,w
  8629  018C  3A00               	xorlw	0	; case 0
  8630  018D  1903               	skipnz
  8631  018E  2990               	goto	l2788
  8632  018F  2974               	goto	l2558
  8633  0190                     l2788:
  8634                           
  8635                           ; Switch size 1, requested type "simple"
  8636                           ; Number of cases is 3, Range of values is 0 to 2
  8637                           ; switch strategies available:
  8638                           ; Name         Instructions Cycles
  8639                           ; simple_byte           10     6 (average)
  8640                           ; direct_byte           12     6 (fixed)
  8641                           ; jumptable            260     6 (fixed)
  8642                           ;	Chosen strategy is simple_byte
  8643  0190  0841               	movf	??_LedSlFl+1,w
  8644  0191  3A00               	xorlw	0	; case 0
  8645  0192  1903               	skipnz
  8646  0193  283B               	goto	l2522
  8647  0194  3A01               	xorlw	1	; case 1
  8648  0195  1903               	skipnz
  8649  0196  2852               	goto	l2526
  8650  0197  3A03               	xorlw	3	; case 2
  8651  0198  1903               	skipnz
  8652  0199  28C8               	goto	l2536
  8653  019A  2974               	goto	l2558
  8654  019B                     l2564:
  8655                           
  8656                           ;executer.c: 268:     CalcPwm(Led);
  8657  019B  083F               	movf	LedSlFl@Led,w
  8658  019C  24BA               	fcall	_CalcPwm
  8659                           
  8660                           ;executer.c: 269:     return(ReturnVal);
  8661  019D  0140               	movlb	0	; select bank0
  8662  019E  0843               	movf	LedSlFl@ReturnVal,w
  8663  019F  0008               	return
  8664  01A0                     __end_of_LedSlFl:
  8665                           
  8666                           	psect	text30
  8667  04BA                     __ptext30:	
  8668 ;; *************** function _CalcPwm *****************
  8669 ;; Defined at:
  8670 ;;		line 310 in file "executer.c"
  8671 ;; Parameters:    Size  Location     Type
  8672 ;;  Led             1    wreg     unsigned char 
  8673 ;; Auto vars:     Size  Location     Type
  8674 ;;  Led             1    4[BANK0 ] unsigned char 
  8675 ;; Return value:  Size  Location     Type
  8676 ;;                  1    wreg      void 
  8677 ;; Registers used:
  8678 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8679 ;; Tracked objects:
  8680 ;;		On entry : 3F/0
  8681 ;;		On exit  : 3E/6
  8682 ;;		Unchanged: 0/0
  8683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8684 ;;      Params:         0       0       0       0
  8685 ;;      Locals:         0       1       0       0
  8686 ;;      Temps:          0       4       0       0
  8687 ;;      Totals:         0       5       0       0
  8688 ;;Total ram usage:        5 bytes
  8689 ;; Hardware stack levels used:    1
  8690 ;; Hardware stack levels required when called:    7
  8691 ;; This function calls:
  8692 ;;		_PWM1_LoadDutyValue
  8693 ;;		_PWM2_LoadDutyValue
  8694 ;;		_PWM3_LoadDutyValue
  8695 ;;		_PWM4_LoadDutyValue
  8696 ;;		_PWM5_LoadDutyValue
  8697 ;;		_PWM6_LoadDutyValue
  8698 ;;		___bmul
  8699 ;; This function is called by:
  8700 ;;		_LedOff
  8701 ;;		_LedNom
  8702 ;;		_LedBrake
  8703 ;;		_LedSlFl
  8704 ;;		_LedFlash
  8705 ;; This function uses a non-reentrant model
  8706 ;;
  8707                           
  8708                           
  8709                           ;psect for function _CalcPwm
  8710  04BA                     _CalcPwm:
  8711                           
  8712                           ;incstack = 0
  8713                           ; Regs used in _CalcPwm: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8714                           ;CalcPwm@Led stored from wreg
  8715  04BA  00BE               	movwf	CalcPwm@Led
  8716                           
  8717                           ;executer.c: 311:     LedBit[Led].PWM((uint16_t)LedBit[Led].Led * 4);
  8718  04BB  300B               	movlw	11
  8719  04BC  00BA               	movwf	??_CalcPwm
  8720  04BD  083A               	movf	??_CalcPwm,w
  8721  04BE  00F2               	movwf	___bmul@multiplicand
  8722  04BF  083E               	movf	CalcPwm@Led,w
  8723  04C0  25DE               	fcall	___bmul
  8724  04C1  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8725  04C2  0086               	movwf	6
  8726  04C3  0187               	clrf	7
  8727  04C4  0801               	movf	1,w
  8728  04C5  00BB               	movwf	??_CalcPwm+1
  8729  04C6  01BC               	clrf	??_CalcPwm+2
  8730  04C7  35BB               	lslf	??_CalcPwm+1,f
  8731  04C8  0DBC               	rlf	??_CalcPwm+2,f
  8732  04C9  35BB               	lslf	??_CalcPwm+1,f
  8733  04CA  0DBC               	rlf	??_CalcPwm+2,f
  8734  04CB  083B               	movf	??_CalcPwm+1,w
  8735  04CC  00F6               	movwf	PWM1_LoadDutyValue@dutyValue
  8736  04CD  083C               	movf	??_CalcPwm+2,w
  8737  04CE  00F7               	movwf	PWM1_LoadDutyValue@dutyValue+1
  8738  04CF  300B               	movlw	11
  8739  04D0  00BD               	movwf	??_CalcPwm+3
  8740  04D1  083D               	movf	??_CalcPwm+3,w
  8741  04D2  00F2               	movwf	___bmul@multiplicand
  8742  04D3  083E               	movf	CalcPwm@Led,w
  8743  04D4  25DE               	fcall	___bmul
  8744  04D5  3EA9               	addlw	(low ((_LedBit| 0+9)))& (0+255)
  8745  04D6  0086               	movwf	6
  8746  04D7  0187               	clrf	7
  8747  04D8  3F41               	moviw [1]fsr1
  8748  04D9  008A               	movwf	10
  8749  04DA  3F40               	moviw [0]fsr1
  8750  04DB  000A               	callw
  8751  04DC  3184               	pagesel	$
  8752  04DD  0008               	return
  8753  04DE                     __end_of_CalcPwm:
  8754                           
  8755                           	psect	text31
  8756  05DE                     __ptext31:	
  8757 ;; *************** function ___bmul *****************
  8758 ;; Defined at:
  8759 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul8.c"
  8760 ;; Parameters:    Size  Location     Type
  8761 ;;  multiplier      1    wreg     unsigned char 
  8762 ;;  multiplicand    1    2[COMMON] unsigned char 
  8763 ;; Auto vars:     Size  Location     Type
  8764 ;;  multiplier      1    5[COMMON] unsigned char 
  8765 ;;  product         1    4[COMMON] unsigned char 
  8766 ;; Return value:  Size  Location     Type
  8767 ;;                  1    wreg      unsigned char 
  8768 ;; Registers used:
  8769 ;;		wreg, status,2, status,0
  8770 ;; Tracked objects:
  8771 ;;		On entry : 3F/0
  8772 ;;		On exit  : 3F/0
  8773 ;;		Unchanged: 3F/0
  8774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8775 ;;      Params:         1       0       0       0
  8776 ;;      Locals:         2       0       0       0
  8777 ;;      Temps:          1       0       0       0
  8778 ;;      Totals:         4       0       0       0
  8779 ;;Total ram usage:        4 bytes
  8780 ;; Hardware stack levels used:    1
  8781 ;; Hardware stack levels required when called:    6
  8782 ;; This function calls:
  8783 ;;		Nothing
  8784 ;; This function is called by:
  8785 ;;		_EXECUTExEFFECT
  8786 ;;		_LedOff
  8787 ;;		_LedNom
  8788 ;;		_LedBrake
  8789 ;;		_LedSlFl
  8790 ;;		_LedFlash
  8791 ;;		_CalcPwm
  8792 ;; This function uses a non-reentrant model
  8793 ;;
  8794                           
  8795                           
  8796                           ;psect for function ___bmul
  8797  05DE                     ___bmul:
  8798                           
  8799                           ;incstack = 0
  8800                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  8801                           ;___bmul@multiplier stored from wreg
  8802  05DE  00F5               	movwf	___bmul@multiplier
  8803  05DF  01F4               	clrf	___bmul@product
  8804  05E0                     l2440:
  8805  05E0  1C75               	btfss	___bmul@multiplier,0
  8806  05E1  2DE6               	goto	l2444
  8807  05E2  0872               	movf	___bmul@multiplicand,w
  8808  05E3  00F3               	movwf	??___bmul
  8809  05E4  0873               	movf	??___bmul,w
  8810  05E5  07F4               	addwf	___bmul@product,f
  8811  05E6                     l2444:
  8812  05E6  1003               	clrc
  8813  05E7  0DF2               	rlf	___bmul@multiplicand,f
  8814  05E8  1003               	clrc
  8815  05E9  0CF5               	rrf	___bmul@multiplier,f
  8816  05EA  0875               	movf	___bmul@multiplier,w
  8817  05EB  1D03               	btfss	3,2
  8818  05EC  2DE0               	goto	l2440
  8819  05ED  0874               	movf	___bmul@product,w
  8820  05EE  0008               	return
  8821  05EF                     __end_of___bmul:
  8822                           
  8823                           	psect	text32
  8824  0537                     __ptext32:	
  8825 ;; *************** function _PWM1_LoadDutyValue *****************
  8826 ;; Defined at:
  8827 ;;		line 80 in file "mcc_generated_files/pwm1.c"
  8828 ;; Parameters:    Size  Location     Type
  8829 ;;  dutyValue       2    6[COMMON] unsigned short 
  8830 ;; Auto vars:     Size  Location     Type
  8831 ;;		None
  8832 ;; Return value:  Size  Location     Type
  8833 ;;                  1    wreg      void 
  8834 ;; Registers used:
  8835 ;;		wreg
  8836 ;; Tracked objects:
  8837 ;;		On entry : 3F/0
  8838 ;;		On exit  : 3F/6
  8839 ;;		Unchanged: 0/0
  8840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8841 ;;      Params:         2       0       0       0
  8842 ;;      Locals:         0       0       0       0
  8843 ;;      Temps:          0       0       0       0
  8844 ;;      Totals:         2       0       0       0
  8845 ;;Total ram usage:        2 bytes
  8846 ;; Hardware stack levels used:    1
  8847 ;; Hardware stack levels required when called:    6
  8848 ;; This function calls:
  8849 ;;		Nothing
  8850 ;; This function is called by:
  8851 ;;		_CalcPwm
  8852 ;; This function uses a non-reentrant model
  8853 ;;
  8854                           
  8855                           
  8856                           ;psect for function _PWM1_LoadDutyValue
  8857  0537                     _PWM1_LoadDutyValue:
  8858                           
  8859                           ;mcc_generated_files/pwm1.c: 80: void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm1.c: 81: {;mcc_generated_files/pwm1.c: 82:     dutyValue &= 0x03FF;
  8860                           
  8861                           ;incstack = 0
  8862                           ; Regs used in _PWM1_LoadDutyValue: [wreg]
  8863  0537  30FF               	movlw	255
  8864  0538  05F6               	andwf	PWM1_LoadDutyValue@dutyValue,f
  8865  0539  3003               	movlw	3
  8866  053A  05F7               	andwf	PWM1_LoadDutyValue@dutyValue+1,f
  8867                           
  8868                           ;mcc_generated_files/pwm1.c: 85:     if(CCP1CONbits.CCP1FMT)
  8869  053B  0146               	movlb	6	; select bank6
  8870  053C  1E0E               	btfss	14,4	;volatile
  8871  053D  2D48               	goto	l2436
  8872                           
  8873                           ;mcc_generated_files/pwm1.c: 86:     {;mcc_generated_files/pwm1.c: 87:         dutyValue
      +                           <<= 6;
  8874  053E  3006               	movlw	6
  8875  053F                     u1125:
  8876  053F  35F6               	lslf	PWM1_LoadDutyValue@dutyValue,f
  8877  0540  0DF7               	rlf	PWM1_LoadDutyValue@dutyValue+1,f
  8878  0541  0B89               	decfsz	9,f
  8879  0542  2D3F               	goto	u1125
  8880                           
  8881                           ;mcc_generated_files/pwm1.c: 88:         CCPR1H = dutyValue >> 8;
  8882  0543  0877               	movf	PWM1_LoadDutyValue@dutyValue+1,w
  8883  0544  008D               	movwf	13	;volatile
  8884                           
  8885                           ;mcc_generated_files/pwm1.c: 89:         CCPR1L = dutyValue;
  8886  0545  0876               	movf	PWM1_LoadDutyValue@dutyValue,w
  8887  0546  008C               	movwf	12	;volatile
  8888                           
  8889                           ;mcc_generated_files/pwm1.c: 90:     }
  8890  0547  0008               	return
  8891  0548                     l2436:
  8892                           
  8893                           ;mcc_generated_files/pwm1.c: 92:     {;mcc_generated_files/pwm1.c: 93:         CCPR1H = 
      +                          dutyValue >> 8;
  8894  0548  0877               	movf	PWM1_LoadDutyValue@dutyValue+1,w
  8895  0549  008D               	movwf	13	;volatile
  8896                           
  8897                           ;mcc_generated_files/pwm1.c: 94:         CCPR1L = dutyValue;
  8898  054A  0876               	movf	PWM1_LoadDutyValue@dutyValue,w
  8899  054B  008C               	movwf	12	;volatile
  8900  054C  0008               	return
  8901  054D                     __end_of_PWM1_LoadDutyValue:
  8902                           
  8903                           	psect	text33
  8904  054D                     __ptext33:	
  8905 ;; *************** function _PWM2_LoadDutyValue *****************
  8906 ;; Defined at:
  8907 ;;		line 80 in file "mcc_generated_files/pwm2.c"
  8908 ;; Parameters:    Size  Location     Type
  8909 ;;  dutyValue       2    6[COMMON] unsigned short 
  8910 ;; Auto vars:     Size  Location     Type
  8911 ;;		None
  8912 ;; Return value:  Size  Location     Type
  8913 ;;                  1    wreg      void 
  8914 ;; Registers used:
  8915 ;;		wreg
  8916 ;; Tracked objects:
  8917 ;;		On entry : 3F/0
  8918 ;;		On exit  : 3F/6
  8919 ;;		Unchanged: 0/0
  8920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8921 ;;      Params:         2       0       0       0
  8922 ;;      Locals:         0       0       0       0
  8923 ;;      Temps:          0       0       0       0
  8924 ;;      Totals:         2       0       0       0
  8925 ;;Total ram usage:        2 bytes
  8926 ;; Hardware stack levels used:    1
  8927 ;; Hardware stack levels required when called:    6
  8928 ;; This function calls:
  8929 ;;		Nothing
  8930 ;; This function is called by:
  8931 ;;		_CalcPwm
  8932 ;; This function uses a non-reentrant model
  8933 ;;
  8934                           
  8935                           
  8936                           ;psect for function _PWM2_LoadDutyValue
  8937  054D                     _PWM2_LoadDutyValue:
  8938                           
  8939                           ;mcc_generated_files/pwm2.c: 80: void PWM2_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm2.c: 81: {;mcc_generated_files/pwm2.c: 82:     dutyValue &= 0x03FF;
  8940                           
  8941                           ;incstack = 0
  8942                           ; Regs used in _PWM2_LoadDutyValue: [wreg]
  8943  054D  30FF               	movlw	255
  8944  054E  05F6               	andwf	PWM2_LoadDutyValue@dutyValue,f
  8945  054F  3003               	movlw	3
  8946  0550  05F7               	andwf	PWM2_LoadDutyValue@dutyValue+1,f
  8947                           
  8948                           ;mcc_generated_files/pwm2.c: 85:     if(CCP2CONbits.CCP2FMT)
  8949  0551  0146               	movlb	6	; select bank6
  8950  0552  1E12               	btfss	18,4	;volatile
  8951  0553  2D5E               	goto	l2428
  8952                           
  8953                           ;mcc_generated_files/pwm2.c: 86:     {;mcc_generated_files/pwm2.c: 87:         dutyValue
      +                           <<= 6;
  8954  0554  3006               	movlw	6
  8955  0555                     u1105:
  8956  0555  35F6               	lslf	PWM2_LoadDutyValue@dutyValue,f
  8957  0556  0DF7               	rlf	PWM2_LoadDutyValue@dutyValue+1,f
  8958  0557  0B89               	decfsz	9,f
  8959  0558  2D55               	goto	u1105
  8960                           
  8961                           ;mcc_generated_files/pwm2.c: 88:         CCPR2H = dutyValue >> 8;
  8962  0559  0877               	movf	PWM2_LoadDutyValue@dutyValue+1,w
  8963  055A  0091               	movwf	17	;volatile
  8964                           
  8965                           ;mcc_generated_files/pwm2.c: 89:         CCPR2L = dutyValue;
  8966  055B  0876               	movf	PWM2_LoadDutyValue@dutyValue,w
  8967  055C  0090               	movwf	16	;volatile
  8968                           
  8969                           ;mcc_generated_files/pwm2.c: 90:     }
  8970  055D  0008               	return
  8971  055E                     l2428:
  8972                           
  8973                           ;mcc_generated_files/pwm2.c: 92:     {;mcc_generated_files/pwm2.c: 93:         CCPR2H = 
      +                          dutyValue >> 8;
  8974  055E  0877               	movf	PWM2_LoadDutyValue@dutyValue+1,w
  8975  055F  0091               	movwf	17	;volatile
  8976                           
  8977                           ;mcc_generated_files/pwm2.c: 94:         CCPR2L = dutyValue;
  8978  0560  0876               	movf	PWM2_LoadDutyValue@dutyValue,w
  8979  0561  0090               	movwf	16	;volatile
  8980  0562  0008               	return
  8981  0563                     __end_of_PWM2_LoadDutyValue:
  8982                           
  8983                           	psect	text34
  8984  0563                     __ptext34:	
  8985 ;; *************** function _PWM5_LoadDutyValue *****************
  8986 ;; Defined at:
  8987 ;;		line 72 in file "mcc_generated_files/pwm5.c"
  8988 ;; Parameters:    Size  Location     Type
  8989 ;;  dutyValue       2    6[COMMON] unsigned short 
  8990 ;; Auto vars:     Size  Location     Type
  8991 ;;		None
  8992 ;; Return value:  Size  Location     Type
  8993 ;;                  1    wreg      void 
  8994 ;; Registers used:
  8995 ;;		wreg, status,2, status,0
  8996 ;; Tracked objects:
  8997 ;;		On entry : 3F/0
  8998 ;;		On exit  : 3F/6
  8999 ;;		Unchanged: 0/0
  9000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9001 ;;      Params:         2       0       0       0
  9002 ;;      Locals:         0       0       0       0
  9003 ;;      Temps:          2       0       0       0
  9004 ;;      Totals:         4       0       0       0
  9005 ;;Total ram usage:        4 bytes
  9006 ;; Hardware stack levels used:    1
  9007 ;; Hardware stack levels required when called:    6
  9008 ;; This function calls:
  9009 ;;		Nothing
  9010 ;; This function is called by:
  9011 ;;		_CalcPwm
  9012 ;; This function uses a non-reentrant model
  9013 ;;
  9014                           
  9015                           
  9016                           ;psect for function _PWM5_LoadDutyValue
  9017  0563                     _PWM5_LoadDutyValue:
  9018                           
  9019                           ;mcc_generated_files/pwm5.c: 72:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 73:  {;mcc_generated_files/pwm5.c: 75:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9020                           
  9021                           ;incstack = 0
  9022                           ; Regs used in _PWM5_LoadDutyValue: [wreg+status,2+status,0]
  9023  0563  0877               	movf	PWM5_LoadDutyValue@dutyValue+1,w
  9024  0564  00F9               	movwf	??_PWM5_LoadDutyValue+1
  9025  0565  0876               	movf	PWM5_LoadDutyValue@dutyValue,w
  9026  0566  00F8               	movwf	??_PWM5_LoadDutyValue
  9027  0567  36F9               	lsrf	??_PWM5_LoadDutyValue+1,f
  9028  0568  0CF8               	rrf	??_PWM5_LoadDutyValue,f
  9029  0569  36F9               	lsrf	??_PWM5_LoadDutyValue+1,f
  9030  056A  0CF8               	rrf	??_PWM5_LoadDutyValue,f
  9031  056B  0878               	movf	??_PWM5_LoadDutyValue,w
  9032  056C  0146               	movlb	6	; select bank6
  9033  056D  009D               	movwf	29	;volatile
  9034                           
  9035                           ;mcc_generated_files/pwm5.c: 78:      PWM5DCL = (dutyValue & 0x0003)<<6;
  9036  056E  0876               	movf	PWM5_LoadDutyValue@dutyValue,w
  9037  056F  3903               	andlw	3
  9038  0570  00F8               	movwf	??_PWM5_LoadDutyValue
  9039  0571  3005               	movlw	5
  9040  0572                     u1085:
  9041  0572  35F8               	lslf	??_PWM5_LoadDutyValue,f
  9042  0573  3EFF               	addlw	-1
  9043  0574  1D03               	skipz
  9044  0575  2D72               	goto	u1085
  9045  0576  3578               	lslf	??_PWM5_LoadDutyValue,w
  9046  0577  009C               	movwf	28	;volatile
  9047  0578  0008               	return
  9048  0579                     __end_of_PWM5_LoadDutyValue:
  9049                           
  9050                           	psect	text35
  9051  0579                     __ptext35:	
  9052 ;; *************** function _PWM3_LoadDutyValue *****************
  9053 ;; Defined at:
  9054 ;;		line 72 in file "mcc_generated_files/pwm3.c"
  9055 ;; Parameters:    Size  Location     Type
  9056 ;;  dutyValue       2    6[COMMON] unsigned short 
  9057 ;; Auto vars:     Size  Location     Type
  9058 ;;		None
  9059 ;; Return value:  Size  Location     Type
  9060 ;;                  1    wreg      void 
  9061 ;; Registers used:
  9062 ;;		wreg, status,2, status,0
  9063 ;; Tracked objects:
  9064 ;;		On entry : 3F/0
  9065 ;;		On exit  : 3F/6
  9066 ;;		Unchanged: 0/0
  9067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9068 ;;      Params:         2       0       0       0
  9069 ;;      Locals:         0       0       0       0
  9070 ;;      Temps:          2       0       0       0
  9071 ;;      Totals:         4       0       0       0
  9072 ;;Total ram usage:        4 bytes
  9073 ;; Hardware stack levels used:    1
  9074 ;; Hardware stack levels required when called:    6
  9075 ;; This function calls:
  9076 ;;		Nothing
  9077 ;; This function is called by:
  9078 ;;		_CalcPwm
  9079 ;; This function uses a non-reentrant model
  9080 ;;
  9081                           
  9082                           
  9083                           ;psect for function _PWM3_LoadDutyValue
  9084  0579                     _PWM3_LoadDutyValue:
  9085                           
  9086                           ;mcc_generated_files/pwm3.c: 72:  void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm3.c: 73:  {;mcc_generated_files/pwm3.c: 75:      PWM3DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9087                           
  9088                           ;incstack = 0
  9089                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  9090  0579  0877               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  9091  057A  00F9               	movwf	??_PWM3_LoadDutyValue+1
  9092  057B  0876               	movf	PWM3_LoadDutyValue@dutyValue,w
  9093  057C  00F8               	movwf	??_PWM3_LoadDutyValue
  9094  057D  36F9               	lsrf	??_PWM3_LoadDutyValue+1,f
  9095  057E  0CF8               	rrf	??_PWM3_LoadDutyValue,f
  9096  057F  36F9               	lsrf	??_PWM3_LoadDutyValue+1,f
  9097  0580  0CF8               	rrf	??_PWM3_LoadDutyValue,f
  9098  0581  0878               	movf	??_PWM3_LoadDutyValue,w
  9099  0582  0146               	movlb	6	; select bank6
  9100  0583  0095               	movwf	21	;volatile
  9101                           
  9102                           ;mcc_generated_files/pwm3.c: 78:      PWM3DCL = (dutyValue & 0x0003)<<6;
  9103  0584  0876               	movf	PWM3_LoadDutyValue@dutyValue,w
  9104  0585  3903               	andlw	3
  9105  0586  00F8               	movwf	??_PWM3_LoadDutyValue
  9106  0587  3005               	movlw	5
  9107  0588                     u1065:
  9108  0588  35F8               	lslf	??_PWM3_LoadDutyValue,f
  9109  0589  3EFF               	addlw	-1
  9110  058A  1D03               	skipz
  9111  058B  2D88               	goto	u1065
  9112  058C  3578               	lslf	??_PWM3_LoadDutyValue,w
  9113  058D  0094               	movwf	20	;volatile
  9114  058E  0008               	return
  9115  058F                     __end_of_PWM3_LoadDutyValue:
  9116                           
  9117                           	psect	text36
  9118  058F                     __ptext36:	
  9119 ;; *************** function _PWM4_LoadDutyValue *****************
  9120 ;; Defined at:
  9121 ;;		line 72 in file "mcc_generated_files/pwm4.c"
  9122 ;; Parameters:    Size  Location     Type
  9123 ;;  dutyValue       2    6[COMMON] unsigned short 
  9124 ;; Auto vars:     Size  Location     Type
  9125 ;;		None
  9126 ;; Return value:  Size  Location     Type
  9127 ;;                  1    wreg      void 
  9128 ;; Registers used:
  9129 ;;		wreg, status,2, status,0
  9130 ;; Tracked objects:
  9131 ;;		On entry : 3F/0
  9132 ;;		On exit  : 3F/6
  9133 ;;		Unchanged: 0/0
  9134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9135 ;;      Params:         2       0       0       0
  9136 ;;      Locals:         0       0       0       0
  9137 ;;      Temps:          2       0       0       0
  9138 ;;      Totals:         4       0       0       0
  9139 ;;Total ram usage:        4 bytes
  9140 ;; Hardware stack levels used:    1
  9141 ;; Hardware stack levels required when called:    6
  9142 ;; This function calls:
  9143 ;;		Nothing
  9144 ;; This function is called by:
  9145 ;;		_CalcPwm
  9146 ;; This function uses a non-reentrant model
  9147 ;;
  9148                           
  9149                           
  9150                           ;psect for function _PWM4_LoadDutyValue
  9151  058F                     _PWM4_LoadDutyValue:
  9152                           
  9153                           ;mcc_generated_files/pwm4.c: 72:  void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm4.c: 73:  {;mcc_generated_files/pwm4.c: 75:      PWM4DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9154                           
  9155                           ;incstack = 0
  9156                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2+status,0]
  9157  058F  0877               	movf	PWM4_LoadDutyValue@dutyValue+1,w
  9158  0590  00F9               	movwf	??_PWM4_LoadDutyValue+1
  9159  0591  0876               	movf	PWM4_LoadDutyValue@dutyValue,w
  9160  0592  00F8               	movwf	??_PWM4_LoadDutyValue
  9161  0593  36F9               	lsrf	??_PWM4_LoadDutyValue+1,f
  9162  0594  0CF8               	rrf	??_PWM4_LoadDutyValue,f
  9163  0595  36F9               	lsrf	??_PWM4_LoadDutyValue+1,f
  9164  0596  0CF8               	rrf	??_PWM4_LoadDutyValue,f
  9165  0597  0878               	movf	??_PWM4_LoadDutyValue,w
  9166  0598  0146               	movlb	6	; select bank6
  9167  0599  0099               	movwf	25	;volatile
  9168                           
  9169                           ;mcc_generated_files/pwm4.c: 78:      PWM4DCL = (dutyValue & 0x0003)<<6;
  9170  059A  0876               	movf	PWM4_LoadDutyValue@dutyValue,w
  9171  059B  3903               	andlw	3
  9172  059C  00F8               	movwf	??_PWM4_LoadDutyValue
  9173  059D  3005               	movlw	5
  9174  059E                     u1055:
  9175  059E  35F8               	lslf	??_PWM4_LoadDutyValue,f
  9176  059F  3EFF               	addlw	-1
  9177  05A0  1D03               	skipz
  9178  05A1  2D9E               	goto	u1055
  9179  05A2  3578               	lslf	??_PWM4_LoadDutyValue,w
  9180  05A3  0098               	movwf	24	;volatile
  9181  05A4  0008               	return
  9182  05A5                     __end_of_PWM4_LoadDutyValue:
  9183                           
  9184                           	psect	text37
  9185  05A5                     __ptext37:	
  9186 ;; *************** function _PWM6_LoadDutyValue *****************
  9187 ;; Defined at:
  9188 ;;		line 72 in file "mcc_generated_files/pwm6.c"
  9189 ;; Parameters:    Size  Location     Type
  9190 ;;  dutyValue       2    6[COMMON] unsigned short 
  9191 ;; Auto vars:     Size  Location     Type
  9192 ;;		None
  9193 ;; Return value:  Size  Location     Type
  9194 ;;                  1    wreg      void 
  9195 ;; Registers used:
  9196 ;;		wreg, status,2, status,0
  9197 ;; Tracked objects:
  9198 ;;		On entry : 3F/0
  9199 ;;		On exit  : 3F/7
  9200 ;;		Unchanged: 0/0
  9201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9202 ;;      Params:         2       0       0       0
  9203 ;;      Locals:         0       0       0       0
  9204 ;;      Temps:          2       0       0       0
  9205 ;;      Totals:         4       0       0       0
  9206 ;;Total ram usage:        4 bytes
  9207 ;; Hardware stack levels used:    1
  9208 ;; Hardware stack levels required when called:    6
  9209 ;; This function calls:
  9210 ;;		Nothing
  9211 ;; This function is called by:
  9212 ;;		_CalcPwm
  9213 ;; This function uses a non-reentrant model
  9214 ;;
  9215                           
  9216                           
  9217                           ;psect for function _PWM6_LoadDutyValue
  9218  05A5                     _PWM6_LoadDutyValue:
  9219                           
  9220                           ;mcc_generated_files/pwm6.c: 72:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 73:  {;mcc_generated_files/pwm6.c: 75:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9221                           
  9222                           ;incstack = 0
  9223                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
  9224  05A5  0877               	movf	PWM6_LoadDutyValue@dutyValue+1,w
  9225  05A6  00F9               	movwf	??_PWM6_LoadDutyValue+1
  9226  05A7  0876               	movf	PWM6_LoadDutyValue@dutyValue,w
  9227  05A8  00F8               	movwf	??_PWM6_LoadDutyValue
  9228  05A9  36F9               	lsrf	??_PWM6_LoadDutyValue+1,f
  9229  05AA  0CF8               	rrf	??_PWM6_LoadDutyValue,f
  9230  05AB  36F9               	lsrf	??_PWM6_LoadDutyValue+1,f
  9231  05AC  0CF8               	rrf	??_PWM6_LoadDutyValue,f
  9232  05AD  0878               	movf	??_PWM6_LoadDutyValue,w
  9233  05AE  0147               	movlb	7	; select bank7
  9234  05AF  008D               	movwf	13	;volatile
  9235                           
  9236                           ;mcc_generated_files/pwm6.c: 78:      PWM6DCL = (dutyValue & 0x0003)<<6;
  9237  05B0  0876               	movf	PWM6_LoadDutyValue@dutyValue,w
  9238  05B1  3903               	andlw	3
  9239  05B2  00F8               	movwf	??_PWM6_LoadDutyValue
  9240  05B3  3005               	movlw	5
  9241  05B4                     u1075:
  9242  05B4  35F8               	lslf	??_PWM6_LoadDutyValue,f
  9243  05B5  3EFF               	addlw	-1
  9244  05B6  1D03               	skipz
  9245  05B7  2DB4               	goto	u1075
  9246  05B8  3578               	lslf	??_PWM6_LoadDutyValue,w
  9247  05B9  008C               	movwf	12	;volatile
  9248  05BA  0008               	return
  9249  05BB                     __end_of_PWM6_LoadDutyValue:
  9250                           
  9251                           	psect	text38
  9252  04DE                     __ptext38:	
  9253 ;; *************** function _BATTxPROTECT *****************
  9254 ;; Defined at:
  9255 ;;		line 47 in file "executer.c"
  9256 ;; Parameters:    Size  Location     Type
  9257 ;;		None
  9258 ;; Auto vars:     Size  Location     Type
  9259 ;;		None
  9260 ;; Return value:  Size  Location     Type
  9261 ;;                  1    wreg      void 
  9262 ;; Registers used:
  9263 ;;		wreg
  9264 ;; Tracked objects:
  9265 ;;		On entry : 3F/0
  9266 ;;		On exit  : 3F/1
  9267 ;;		Unchanged: 0/0
  9268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9269 ;;      Params:         0       0       0       0
  9270 ;;      Locals:         0       0       0       0
  9271 ;;      Temps:          1       0       0       0
  9272 ;;      Totals:         1       0       0       0
  9273 ;;Total ram usage:        1 bytes
  9274 ;; Hardware stack levels used:    1
  9275 ;; Hardware stack levels required when called:    6
  9276 ;; This function calls:
  9277 ;;		Nothing
  9278 ;; This function is called by:
  9279 ;;		_main
  9280 ;; This function uses a non-reentrant model
  9281 ;;
  9282                           
  9283                           
  9284                           ;psect for function _BATTxPROTECT
  9285  04DE                     _BATTxPROTECT:
  9286                           
  9287                           ;incstack = 0
  9288                           ; Regs used in _BATTxPROTECT: [wreg]
  9289                           ;executer.c: 49:     do { LATAbits.LATA2 = 0; } while(0);
  9290  04DE  1118               	bcf	24,2	;volatile
  9291                           
  9292                           ;executer.c: 51:     do { TRISAbits.TRISA0 = 1; } while(0);
  9293  04DF  1412               	bsf	18,0	;volatile
  9294                           
  9295                           ;executer.c: 53:     LedBit[LedBackLeft].Prog = LedOff;
  9296  04E0  308E               	movlw	low _LedOff
  9297  04E1  0141               	movlb	1	; select bank1
  9298  04E2  00B8               	movwf	(low ((_LedBit| 0+24)))^(0+128)
  9299  04E3  3004               	movlw	high _LedOff
  9300  04E4  00B9               	movwf	((low ((_LedBit| 0+24)))^(0+128)+1)
  9301                           
  9302                           ;executer.c: 57:     LedBit[LedBackRight].Prog = LedOff;
  9303  04E5  308E               	movlw	low _LedOff
  9304  04E6  00C3               	movwf	(low ((_LedBit| 0+35)))^(0+128)
  9305  04E7  3004               	movlw	high _LedOff
  9306  04E8  00C4               	movwf	((low ((_LedBit| 0+35)))^(0+128)+1)
  9307                           
  9308                           ;executer.c: 61:     LedBit[LedFlashLeft].Prog = LedFlash;
  9309  04E9  30A0               	movlw	low _LedFlash
  9310  04EA  00A2               	movwf	(low ((_LedBit| 0+2)))^(0+128)
  9311  04EB  3001               	movlw	high _LedFlash
  9312  04EC  00A3               	movwf	((low ((_LedBit| 0+2)))^(0+128)+1)
  9313                           
  9314                           ;executer.c: 62:     LedBit[LedFlashLeft].Led = MAX;
  9315  04ED  30FE               	movlw	254
  9316  04EE  00F2               	movwf	??_BATTxPROTECT
  9317  04EF  0872               	movf	??_BATTxPROTECT,w
  9318  04F0  00A1               	movwf	(_LedBit^(0+128)+1)
  9319                           
  9320                           ;executer.c: 63:     LedBit[LedFlashLeft].Speed = 10;
  9321  04F1  300A               	movlw	10
  9322  04F2  00F2               	movwf	??_BATTxPROTECT
  9323  04F3  0872               	movf	??_BATTxPROTECT,w
  9324  04F4  00A4               	movwf	(_LedBit^(0+128)+4)
  9325                           
  9326                           ;executer.c: 65:     LedBit[LedFlashRight].Prog = LedOff;
  9327  04F5  308E               	movlw	low _LedOff
  9328  04F6  00AD               	movwf	(low ((_LedBit| 0+13)))^(0+128)
  9329  04F7  3004               	movlw	high _LedOff
  9330  04F8  00AE               	movwf	((low ((_LedBit| 0+13)))^(0+128)+1)
  9331                           
  9332                           ;executer.c: 69:     LedBit[LedFrontLeft].Prog = LedOff;
  9333  04F9  308E               	movlw	low _LedOff
  9334  04FA  00CE               	movwf	(low ((_LedBit| 0+46)))^(0+128)
  9335  04FB  3004               	movlw	high _LedOff
  9336  04FC  00CF               	movwf	((low ((_LedBit| 0+46)))^(0+128)+1)
  9337                           
  9338                           ;executer.c: 73:     LedBit[LedFrontRight].Prog = LedOff;
  9339  04FD  308E               	movlw	low _LedOff
  9340  04FE  00D9               	movwf	(low ((_LedBit| 0+57)))^(0+128)
  9341  04FF  3004               	movlw	high _LedOff
  9342  0500  00DA               	movwf	((low ((_LedBit| 0+57)))^(0+128)+1)
  9343  0501  0008               	return
  9344  0502                     __end_of_BATTxPROTECT:
  9345                           
  9346                           	psect	text39
  9347  06F9                     __ptext39:	
  9348 ;; *************** function _ADC_StartConversion *****************
  9349 ;; Defined at:
  9350 ;;		line 96 in file "mcc_generated_files/adc.c"
  9351 ;; Parameters:    Size  Location     Type
  9352 ;;		None
  9353 ;; Auto vars:     Size  Location     Type
  9354 ;;		None
  9355 ;; Return value:  Size  Location     Type
  9356 ;;                  1    wreg      void 
  9357 ;; Registers used:
  9358 ;;		None
  9359 ;; Tracked objects:
  9360 ;;		On entry : 3F/0
  9361 ;;		On exit  : 3F/1
  9362 ;;		Unchanged: 0/0
  9363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9364 ;;      Params:         0       0       0       0
  9365 ;;      Locals:         0       0       0       0
  9366 ;;      Temps:          0       0       0       0
  9367 ;;      Totals:         0       0       0       0
  9368 ;;Total ram usage:        0 bytes
  9369 ;; Hardware stack levels used:    1
  9370 ;; Hardware stack levels required when called:    6
  9371 ;; This function calls:
  9372 ;;		Nothing
  9373 ;; This function is called by:
  9374 ;;		_main
  9375 ;; This function uses a non-reentrant model
  9376 ;;
  9377                           
  9378                           
  9379                           ;psect for function _ADC_StartConversion
  9380  06F9                     _ADC_StartConversion:
  9381                           
  9382                           ;mcc_generated_files/adc.c: 99:     ADCON0bits.GOnDONE = 1;
  9383                           
  9384                           ;incstack = 0
  9385                           ; Regs used in _ADC_StartConversion: []
  9386  06F9  0141               	movlb	1	; select bank1
  9387  06FA  149D               	bsf	29,1	;volatile
  9388  06FB  0008               	return
  9389  06FC                     __end_of_ADC_StartConversion:
  9390                           
  9391                           	psect	text40
  9392  0649                     __ptext40:	
  9393 ;; *************** function _ADC_SelectChannel *****************
  9394 ;; Defined at:
  9395 ;;		line 88 in file "mcc_generated_files/adc.c"
  9396 ;; Parameters:    Size  Location     Type
  9397 ;;  channel         1    wreg     enum E6234
  9398 ;; Auto vars:     Size  Location     Type
  9399 ;;  channel         1    3[COMMON] enum E6234
  9400 ;; Return value:  Size  Location     Type
  9401 ;;                  1    wreg      void 
  9402 ;; Registers used:
  9403 ;;		wreg, status,2, status,0
  9404 ;; Tracked objects:
  9405 ;;		On entry : 3F/0
  9406 ;;		On exit  : 3F/1
  9407 ;;		Unchanged: 0/0
  9408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9409 ;;      Params:         0       0       0       0
  9410 ;;      Locals:         1       0       0       0
  9411 ;;      Temps:          1       0       0       0
  9412 ;;      Totals:         2       0       0       0
  9413 ;;Total ram usage:        2 bytes
  9414 ;; Hardware stack levels used:    1
  9415 ;; Hardware stack levels required when called:    6
  9416 ;; This function calls:
  9417 ;;		Nothing
  9418 ;; This function is called by:
  9419 ;;		_main
  9420 ;; This function uses a non-reentrant model
  9421 ;;
  9422                           
  9423                           
  9424                           ;psect for function _ADC_SelectChannel
  9425  0649                     _ADC_SelectChannel:
  9426                           
  9427                           ;incstack = 0
  9428                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
  9429                           ;ADC_SelectChannel@channel stored from wreg
  9430  0649  00F3               	movwf	ADC_SelectChannel@channel
  9431                           
  9432                           ;mcc_generated_files/adc.c: 88: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 89: {;mcc_generated_files/adc.c: 91:     ADCON0bits.CHS = channel;
  9433  064A  0873               	movf	ADC_SelectChannel@channel,w
  9434  064B  00F2               	movwf	??_ADC_SelectChannel
  9435  064C  0DF2               	rlf	??_ADC_SelectChannel,f
  9436  064D  0DF2               	rlf	??_ADC_SelectChannel,f
  9437  064E  0141               	movlb	1	; select bank1
  9438  064F  081D               	movf	29,w	;volatile
  9439  0650  0672               	xorwf	??_ADC_SelectChannel,w
  9440  0651  3903               	andlw	-253
  9441  0652  0672               	xorwf	??_ADC_SelectChannel,w
  9442  0653  009D               	movwf	29	;volatile
  9443                           
  9444                           ;mcc_generated_files/adc.c: 93:     ADCON0bits.ADON = 1;
  9445  0654  141D               	bsf	29,0	;volatile
  9446  0655  0008               	return
  9447  0656                     __end_of_ADC_SelectChannel:
  9448                           
  9449                           	psect	text41
  9450  06BC                     __ptext41:	
  9451 ;; *************** function _ADC_IsConversionDone *****************
  9452 ;; Defined at:
  9453 ;;		line 103 in file "mcc_generated_files/adc.c"
  9454 ;; Parameters:    Size  Location     Type
  9455 ;;		None
  9456 ;; Auto vars:     Size  Location     Type
  9457 ;;		None
  9458 ;; Return value:  Size  Location     Type
  9459 ;;                  1    wreg      _Bool 
  9460 ;; Registers used:
  9461 ;;		wreg, status,0
  9462 ;; Tracked objects:
  9463 ;;		On entry : 3F/0
  9464 ;;		On exit  : 3F/1
  9465 ;;		Unchanged: 0/0
  9466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9467 ;;      Params:         0       0       0       0
  9468 ;;      Locals:         0       0       0       0
  9469 ;;      Temps:          0       0       0       0
  9470 ;;      Totals:         0       0       0       0
  9471 ;;Total ram usage:        0 bytes
  9472 ;; Hardware stack levels used:    1
  9473 ;; Hardware stack levels required when called:    6
  9474 ;; This function calls:
  9475 ;;		Nothing
  9476 ;; This function is called by:
  9477 ;;		_main
  9478 ;; This function uses a non-reentrant model
  9479 ;;
  9480                           
  9481                           
  9482                           ;psect for function _ADC_IsConversionDone
  9483  06BC                     _ADC_IsConversionDone:
  9484                           
  9485                           ;mcc_generated_files/adc.c: 106:    return ((_Bool)(!ADCON0bits.GOnDONE));
  9486                           
  9487                           ;incstack = 0
  9488                           ; Regs used in _ADC_IsConversionDone: [wreg+status,0]
  9489  06BC  1003               	clrc
  9490  06BD  0141               	movlb	1	; select bank1
  9491  06BE  1C9D               	btfss	29,1	;volatile
  9492  06BF  1403               	setc
  9493  06C0  3000               	movlw	0
  9494  06C1  3D09               	addwfc	9,w
  9495  06C2  0008               	return
  9496  06C3                     __end_of_ADC_IsConversionDone:
  9497                           
  9498                           	psect	text42
  9499  06E7                     __ptext42:	
  9500 ;; *************** function _ADC_GetConversionResult *****************
  9501 ;; Defined at:
  9502 ;;		line 109 in file "mcc_generated_files/adc.c"
  9503 ;; Parameters:    Size  Location     Type
  9504 ;;		None
  9505 ;; Auto vars:     Size  Location     Type
  9506 ;;		None
  9507 ;; Return value:  Size  Location     Type
  9508 ;;                  2    2[COMMON] unsigned short 
  9509 ;; Registers used:
  9510 ;;		wreg
  9511 ;; Tracked objects:
  9512 ;;		On entry : 3F/1
  9513 ;;		On exit  : 3F/1
  9514 ;;		Unchanged: 0/0
  9515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9516 ;;      Params:         2       0       0       0
  9517 ;;      Locals:         0       0       0       0
  9518 ;;      Temps:          0       0       0       0
  9519 ;;      Totals:         2       0       0       0
  9520 ;;Total ram usage:        2 bytes
  9521 ;; Hardware stack levels used:    1
  9522 ;; Hardware stack levels required when called:    6
  9523 ;; This function calls:
  9524 ;;		Nothing
  9525 ;; This function is called by:
  9526 ;;		_main
  9527 ;; This function uses a non-reentrant model
  9528 ;;
  9529                           
  9530                           
  9531                           ;psect for function _ADC_GetConversionResult
  9532  06E7                     _ADC_GetConversionResult:
  9533                           
  9534                           ;mcc_generated_files/adc.c: 112:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  9535                           
  9536                           ;incstack = 0
  9537                           ; Regs used in _ADC_GetConversionResult: [wreg]
  9538  06E7  081C               	movf	28,w	;volatile
  9539  06E8  00F3               	movwf	?_ADC_GetConversionResult+1
  9540  06E9  081B               	movf	27,w	;volatile
  9541  06EA  00F2               	movwf	?_ADC_GetConversionResult
  9542  06EB  0008               	return
  9543  06EC                     __end_of_ADC_GetConversionResult:
  9544                           
  9545                           	psect	intentry
  9546  0004                     __pintentry:	
  9547 ;; *************** function _INTERRUPT_InterruptManager *****************
  9548 ;; Defined at:
  9549 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9550 ;; Parameters:    Size  Location     Type
  9551 ;;		None
  9552 ;; Auto vars:     Size  Location     Type
  9553 ;;		None
  9554 ;; Return value:  Size  Location     Type
  9555 ;;                  1    wreg      void 
  9556 ;; Registers used:
  9557 ;;		wreg, status,2, status,0, pclath, cstack
  9558 ;; Tracked objects:
  9559 ;;		On entry : 0/0
  9560 ;;		On exit  : 0/0
  9561 ;;		Unchanged: 0/0
  9562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9563 ;;      Params:         0       0       0       0
  9564 ;;      Locals:         0       0       0       0
  9565 ;;      Temps:          0       0       0       0
  9566 ;;      Totals:         0       0       0       0
  9567 ;;Total ram usage:        0 bytes
  9568 ;; Hardware stack levels used:    1
  9569 ;; Hardware stack levels required when called:    5
  9570 ;; This function calls:
  9571 ;;		_PIN_MANAGER_IOC
  9572 ;;		_TMR0_ISR
  9573 ;;		_TMR1_ISR
  9574 ;; This function is called by:
  9575 ;;		Interrupt level 1
  9576 ;; This function uses a non-reentrant model
  9577 ;;
  9578                           
  9579  0004                     _INTERRUPT_InterruptManager:
  9580                           
  9581                           ;incstack = 0
  9582  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  9583                           
  9584                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  9585  0005  3180               	pagesel	$
  9586                           
  9587                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  9588  0006  014E               	movlb	14	; select bank14
  9589  0007  1A96               	btfsc	22,5	;volatile
  9590  0008  1E8C               	btfss	12,5	;volatile
  9591  0009  280C               	goto	i1l365
  9592                           
  9593                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  9594  000A  25EF               	fcall	_TMR0_ISR
  9595                           
  9596                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  9597  000B  2817               	goto	i1l373
  9598  000C                     i1l365:	
  9599                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.IOCIE == 1 && PIR0bit
      +                          s.IOCIF == 1)
  9600                           
  9601  000C  1A16               	btfsc	22,4	;volatile
  9602  000D  1E0C               	btfss	12,4	;volatile
  9603  000E  2811               	goto	i1l367
  9604                           
  9605                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         PIN_MANAGER_IOC();
  9606  000F  26EC               	fcall	_PIN_MANAGER_IOC
  9607                           
  9608                           ;mcc_generated_files/interrupt_manager.c: 62:     }
  9609  0010  2817               	goto	i1l373
  9610  0011                     i1l367:	
  9611                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
  9612                           
  9613  0011  1B0B               	btfsc	11,6	;volatile
  9614                           
  9615                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
  9616  0012  1C1A               	btfss	26,0	;volatile
  9617  0013  2817               	goto	i1l373
  9618  0014  1C10               	btfss	16,0	;volatile
  9619  0015  2817               	goto	i1l373
  9620                           
  9621                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR1_ISR();
  9622  0016  25BB               	fcall	_TMR1_ISR
  9623  0017                     i1l373:	
  9624                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  9625                           
  9626  0017  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9627  0018  0009               	retfie
  9628  0019                     __end_of_INTERRUPT_InterruptManager:
  9629                           
  9630                           	psect	text44
  9631  05BB                     __ptext44:	
  9632 ;; *************** function _TMR1_ISR *****************
  9633 ;; Defined at:
  9634 ;;		line 164 in file "mcc_generated_files/tmr1.c"
  9635 ;; Parameters:    Size  Location     Type
  9636 ;;		None
  9637 ;; Auto vars:     Size  Location     Type
  9638 ;;		None
  9639 ;; Return value:  Size  Location     Type
  9640 ;;                  1    wreg      void 
  9641 ;; Registers used:
  9642 ;;		wreg, status,2, status,0, pclath, cstack
  9643 ;; Tracked objects:
  9644 ;;		On entry : 3F/E
  9645 ;;		On exit  : 0/0
  9646 ;;		Unchanged: 0/0
  9647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9648 ;;      Params:         0       0       0       0
  9649 ;;      Locals:         0       0       0       0
  9650 ;;      Temps:          0       0       0       0
  9651 ;;      Totals:         0       0       0       0
  9652 ;;Total ram usage:        0 bytes
  9653 ;; Hardware stack levels used:    1
  9654 ;; Hardware stack levels required when called:    1
  9655 ;; This function calls:
  9656 ;;		Absolute function
  9657 ;;		_TMR1_DefaultInterruptHandler
  9658 ;;		_TMR1_INT
  9659 ;;		_TMR1_WriteTimer
  9660 ;; This function is called by:
  9661 ;;		_INTERRUPT_InterruptManager
  9662 ;; This function uses a non-reentrant model
  9663 ;;
  9664                           
  9665                           
  9666                           ;psect for function _TMR1_ISR
  9667  05BB                     _TMR1_ISR:
  9668                           
  9669                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
  9670                           
  9671                           ;incstack = 0
  9672                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  9673  05BB  1010               	bcf	16,0	;volatile
  9674                           
  9675                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
  9676  05BC  0140               	movlb	0	; select bank0
  9677  05BD  0829               	movf	_timer1ReloadVal+1,w	;volatile
  9678  05BE  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  9679  05BF  0828               	movf	_timer1ReloadVal,w	;volatile
  9680  05C0  00F0               	movwf	TMR1_WriteTimer@timerVal
  9681  05C1  261F               	fcall	_TMR1_WriteTimer
  9682                           
  9683                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
  9684  05C2  0140               	movlb	0	; select bank0
  9685  05C3  0826               	movf	_TMR1_InterruptHandler,w
  9686  05C4  0427               	iorwf	_TMR1_InterruptHandler+1,w
  9687  05C5  1903               	btfsc	3,2
  9688  05C6  0008               	return
  9689                           
  9690                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
  9691  05C7  0827               	movf	_TMR1_InterruptHandler+1,w
  9692  05C8  008A               	movwf	10
  9693  05C9  0826               	movf	_TMR1_InterruptHandler,w
  9694  05CA  000A               	callw
  9695  05CB  3185               	pagesel	$
  9696  05CC  0008               	return
  9697  05CD                     __end_of_TMR1_ISR:
  9698                           
  9699                           	psect	text45
  9700  0702                     __ptext45:	
  9701 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  9702 ;; Defined at:
  9703 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  9704 ;; Parameters:    Size  Location     Type
  9705 ;;		None
  9706 ;; Auto vars:     Size  Location     Type
  9707 ;;		None
  9708 ;; Return value:  Size  Location     Type
  9709 ;;                  1    wreg      void 
  9710 ;; Registers used:
  9711 ;;		None
  9712 ;; Tracked objects:
  9713 ;;		On entry : 3F/0
  9714 ;;		On exit  : 3F/0
  9715 ;;		Unchanged: 3F/0
  9716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9717 ;;      Params:         0       0       0       0
  9718 ;;      Locals:         0       0       0       0
  9719 ;;      Temps:          0       0       0       0
  9720 ;;      Totals:         0       0       0       0
  9721 ;;Total ram usage:        0 bytes
  9722 ;; Hardware stack levels used:    1
  9723 ;; This function calls:
  9724 ;;		Nothing
  9725 ;; This function is called by:
  9726 ;;		_TMR1_Initialize
  9727 ;;		_TMR1_ISR
  9728 ;; This function uses a non-reentrant model
  9729 ;;
  9730                           
  9731                           
  9732                           ;psect for function _TMR1_DefaultInterruptHandler
  9733  0702                     _TMR1_DefaultInterruptHandler:
  9734                           
  9735                           ;incstack = 0
  9736                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  9737  0702  0008               	return
  9738  0703                     __end_of_TMR1_DefaultInterruptHandler:
  9739                           
  9740                           	psect	text46
  9741  06FC                     __ptext46:	
  9742 ;; *************** function _TMR1_INT *****************
  9743 ;; Defined at:
  9744 ;;		line 170 in file "Main.c"
  9745 ;; Parameters:    Size  Location     Type
  9746 ;;		None
  9747 ;; Auto vars:     Size  Location     Type
  9748 ;;		None
  9749 ;; Return value:  Size  Location     Type
  9750 ;;                  1    wreg      void 
  9751 ;; Registers used:
  9752 ;;		None
  9753 ;; Tracked objects:
  9754 ;;		On entry : 3F/0
  9755 ;;		On exit  : 3F/0
  9756 ;;		Unchanged: 0/0
  9757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9758 ;;      Params:         0       0       0       0
  9759 ;;      Locals:         0       0       0       0
  9760 ;;      Temps:          0       0       0       0
  9761 ;;      Totals:         0       0       0       0
  9762 ;;Total ram usage:        0 bytes
  9763 ;; Hardware stack levels used:    1
  9764 ;; This function calls:
  9765 ;;		Nothing
  9766 ;; This function is called by:
  9767 ;;		_main
  9768 ;;		_TMR1_ISR
  9769 ;; This function uses a non-reentrant model
  9770 ;;
  9771                           
  9772                           
  9773                           ;psect for function _TMR1_INT
  9774  06FC                     _TMR1_INT:
  9775                           
  9776                           ;Main.c: 172:     UpdateVbatt = 1;
  9777                           
  9778                           ;incstack = 0
  9779                           ; Regs used in _TMR1_INT: []
  9780  06FC  01B3               	clrf	_UpdateVbatt
  9781  06FD  0AB3               	incf	_UpdateVbatt,f
  9782  06FE  0008               	return
  9783  06FF                     __end_of_TMR1_INT:
  9784                           
  9785                           	psect	text47
  9786  05EF                     __ptext47:	
  9787 ;; *************** function _TMR0_ISR *****************
  9788 ;; Defined at:
  9789 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  9790 ;; Parameters:    Size  Location     Type
  9791 ;;		None
  9792 ;; Auto vars:     Size  Location     Type
  9793 ;;		None
  9794 ;; Return value:  Size  Location     Type
  9795 ;;                  1    wreg      void 
  9796 ;; Registers used:
  9797 ;;		wreg, status,2, status,0, pclath, cstack
  9798 ;; Tracked objects:
  9799 ;;		On entry : 3F/E
  9800 ;;		On exit  : 0/0
  9801 ;;		Unchanged: 0/0
  9802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9803 ;;      Params:         0       0       0       0
  9804 ;;      Locals:         0       0       0       0
  9805 ;;      Temps:          0       0       0       0
  9806 ;;      Totals:         0       0       0       0
  9807 ;;Total ram usage:        0 bytes
  9808 ;; Hardware stack levels used:    1
  9809 ;; Hardware stack levels required when called:    1
  9810 ;; This function calls:
  9811 ;;		Absolute function
  9812 ;;		_TMR0_DefaultInterruptHandler
  9813 ;;		_TMR0_INT
  9814 ;; This function is called by:
  9815 ;;		_INTERRUPT_InterruptManager
  9816 ;; This function uses a non-reentrant model
  9817 ;;
  9818                           
  9819                           
  9820                           ;psect for function _TMR0_ISR
  9821  05EF                     _TMR0_ISR:
  9822                           
  9823                           ;mcc_generated_files/tmr0.c: 137:     PIR0bits.TMR0IF = 0;
  9824                           
  9825                           ;incstack = 0
  9826                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  9827  05EF  128C               	bcf	12,5	;volatile
  9828                           
  9829                           ;mcc_generated_files/tmr0.c: 139:     TMR0H = timer0ReloadVal16bit >> 8;
  9830  05F0  087B               	movf	_timer0ReloadVal16bit+1,w	;volatile
  9831  05F1  014B               	movlb	11	; select bank11
  9832  05F2  009D               	movwf	29	;volatile
  9833                           
  9834                           ;mcc_generated_files/tmr0.c: 140:     TMR0L = (uint8_t) timer0ReloadVal16bit;
  9835  05F3  087A               	movf	_timer0ReloadVal16bit,w	;volatile
  9836  05F4  009C               	movwf	28	;volatile
  9837                           
  9838                           ;mcc_generated_files/tmr0.c: 142:     if(TMR0_InterruptHandler)
  9839  05F5  0140               	movlb	0	; select bank0
  9840  05F6  082A               	movf	_TMR0_InterruptHandler,w
  9841  05F7  042B               	iorwf	_TMR0_InterruptHandler+1,w
  9842  05F8  1903               	btfsc	3,2
  9843  05F9  0008               	return
  9844                           
  9845                           ;mcc_generated_files/tmr0.c: 143:     {;mcc_generated_files/tmr0.c: 144:         TMR0_In
      +                          terruptHandler();
  9846  05FA  082B               	movf	_TMR0_InterruptHandler+1,w
  9847  05FB  008A               	movwf	10
  9848  05FC  082A               	movf	_TMR0_InterruptHandler,w
  9849  05FD  000A               	callw
  9850  05FE  3185               	pagesel	$
  9851  05FF  0008               	return
  9852  0600                     __end_of_TMR0_ISR:
  9853                           
  9854                           	psect	text48
  9855  0703                     __ptext48:	
  9856 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  9857 ;; Defined at:
  9858 ;;		line 155 in file "mcc_generated_files/tmr0.c"
  9859 ;; Parameters:    Size  Location     Type
  9860 ;;		None
  9861 ;; Auto vars:     Size  Location     Type
  9862 ;;		None
  9863 ;; Return value:  Size  Location     Type
  9864 ;;                  1    wreg      void 
  9865 ;; Registers used:
  9866 ;;		None
  9867 ;; Tracked objects:
  9868 ;;		On entry : 3F/0
  9869 ;;		On exit  : 3F/0
  9870 ;;		Unchanged: 3F/0
  9871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9872 ;;      Params:         0       0       0       0
  9873 ;;      Locals:         0       0       0       0
  9874 ;;      Temps:          0       0       0       0
  9875 ;;      Totals:         0       0       0       0
  9876 ;;Total ram usage:        0 bytes
  9877 ;; Hardware stack levels used:    1
  9878 ;; This function calls:
  9879 ;;		Nothing
  9880 ;; This function is called by:
  9881 ;;		_TMR0_Initialize
  9882 ;;		_TMR0_ISR
  9883 ;; This function uses a non-reentrant model
  9884 ;;
  9885                           
  9886                           
  9887                           ;psect for function _TMR0_DefaultInterruptHandler
  9888  0703                     _TMR0_DefaultInterruptHandler:
  9889                           
  9890                           ;incstack = 0
  9891                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  9892  0703  0008               	return
  9893  0704                     __end_of_TMR0_DefaultInterruptHandler:
  9894                           
  9895                           	psect	text49
  9896  06FF                     __ptext49:	
  9897 ;; *************** function _TMR0_INT *****************
  9898 ;; Defined at:
  9899 ;;		line 165 in file "Main.c"
  9900 ;; Parameters:    Size  Location     Type
  9901 ;;		None
  9902 ;; Auto vars:     Size  Location     Type
  9903 ;;		None
  9904 ;; Return value:  Size  Location     Type
  9905 ;;                  1    wreg      void 
  9906 ;; Registers used:
  9907 ;;		None
  9908 ;; Tracked objects:
  9909 ;;		On entry : 3F/0
  9910 ;;		On exit  : 3F/0
  9911 ;;		Unchanged: 0/0
  9912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9913 ;;      Params:         0       0       0       0
  9914 ;;      Locals:         0       0       0       0
  9915 ;;      Temps:          0       0       0       0
  9916 ;;      Totals:         0       0       0       0
  9917 ;;Total ram usage:        0 bytes
  9918 ;; Hardware stack levels used:    1
  9919 ;; This function calls:
  9920 ;;		Nothing
  9921 ;; This function is called by:
  9922 ;;		_main
  9923 ;;		_TMR0_ISR
  9924 ;; This function uses a non-reentrant model
  9925 ;;
  9926                           
  9927                           
  9928                           ;psect for function _TMR0_INT
  9929  06FF                     _TMR0_INT:
  9930                           
  9931                           ;Main.c: 167:     UpdateLeds = 1;
  9932                           
  9933                           ;incstack = 0
  9934                           ; Regs used in _TMR0_INT: []
  9935  06FF  01B5               	clrf	_UpdateLeds
  9936  0700  0AB5               	incf	_UpdateLeds,f
  9937  0701  0008               	return
  9938  0702                     __end_of_TMR0_INT:
  9939                           
  9940                           	psect	text50
  9941  06EC                     __ptext50:	
  9942 ;; *************** function _PIN_MANAGER_IOC *****************
  9943 ;; Defined at:
  9944 ;;		line 130 in file "mcc_generated_files/pin_manager.c"
  9945 ;; Parameters:    Size  Location     Type
  9946 ;;		None
  9947 ;; Auto vars:     Size  Location     Type
  9948 ;;		None
  9949 ;; Return value:  Size  Location     Type
  9950 ;;                  1    wreg      void 
  9951 ;; Registers used:
  9952 ;;		wreg, status,2, status,0, pclath, cstack
  9953 ;; Tracked objects:
  9954 ;;		On entry : 3F/E
  9955 ;;		On exit  : 3F/3E
  9956 ;;		Unchanged: 0/0
  9957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9958 ;;      Params:         0       0       0       0
  9959 ;;      Locals:         0       0       0       0
  9960 ;;      Temps:          0       0       0       0
  9961 ;;      Totals:         0       0       0       0
  9962 ;;Total ram usage:        0 bytes
  9963 ;; Hardware stack levels used:    1
  9964 ;; Hardware stack levels required when called:    4
  9965 ;; This function calls:
  9966 ;;		_IOCCF1_ISR
  9967 ;; This function is called by:
  9968 ;;		_INTERRUPT_InterruptManager
  9969 ;; This function uses a non-reentrant model
  9970 ;;
  9971                           
  9972                           
  9973                           ;psect for function _PIN_MANAGER_IOC
  9974  06EC                     _PIN_MANAGER_IOC:
  9975                           
  9976                           ;mcc_generated_files/pin_manager.c: 133:     if(IOCCFbits.IOCCF1 == 1)
  9977                           
  9978                           ;incstack = 0
  9979                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  9980  06EC  017E               	movlb	62	; select bank62
  9981  06ED  1CD5               	btfss	85,1	;volatile
  9982  06EE  0008               	return
  9983                           
  9984                           ;mcc_generated_files/pin_manager.c: 134:     {;mcc_generated_files/pin_manager.c: 135:  
      +                                 IOCCF1_ISR();
  9985  06EF  2656               	fcall	_IOCCF1_ISR
  9986  06F0  0008               	return
  9987  06F1                     __end_of_PIN_MANAGER_IOC:
  9988                           
  9989                           	psect	text51
  9990  0656                     __ptext51:	
  9991 ;; *************** function _IOCCF1_ISR *****************
  9992 ;; Defined at:
  9993 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
  9994 ;; Parameters:    Size  Location     Type
  9995 ;;		None
  9996 ;; Auto vars:     Size  Location     Type
  9997 ;;		None
  9998 ;; Return value:  Size  Location     Type
  9999 ;;                  1    wreg      void 
 10000 ;; Registers used:
 10001 ;;		wreg, status,2, status,0, pclath, cstack
 10002 ;; Tracked objects:
 10003 ;;		On entry : 3F/3E
 10004 ;;		On exit  : 3F/3E
 10005 ;;		Unchanged: 0/0
 10006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10007 ;;      Params:         0       0       0       0
 10008 ;;      Locals:         0       0       0       0
 10009 ;;      Temps:          0       0       0       0
 10010 ;;      Totals:         0       0       0       0
 10011 ;;Total ram usage:        0 bytes
 10012 ;; Hardware stack levels used:    1
 10013 ;; Hardware stack levels required when called:    3
 10014 ;; This function calls:
 10015 ;;		Absolute function
 10016 ;;		_IOCCF1_DefaultInterruptHandler
 10017 ;;		_RCS_INT
 10018 ;; This function is called by:
 10019 ;;		_PIN_MANAGER_IOC
 10020 ;; This function uses a non-reentrant model
 10021 ;;
 10022                           
 10023                           
 10024                           ;psect for function _IOCCF1_ISR
 10025  0656                     _IOCCF1_ISR:
 10026                           
 10027                           ;mcc_generated_files/pin_manager.c: 147:     if(IOCCF1_InterruptHandler)
 10028                           
 10029                           ;incstack = 0
 10030                           ; Regs used in _IOCCF1_ISR: [wreg+status,2+status,0+pclath+cstack]
 10031  0656  0140               	movlb	0	; select bank0
 10032  0657  085D               	movf	_IOCCF1_InterruptHandler,w
 10033  0658  045E               	iorwf	_IOCCF1_InterruptHandler+1,w
 10034  0659  1903               	btfsc	3,2
 10035  065A  2E60               	goto	i1l1980
 10036                           
 10037                           ;mcc_generated_files/pin_manager.c: 148:     {;mcc_generated_files/pin_manager.c: 149:  
      +                                 IOCCF1_InterruptHandler();
 10038  065B  085E               	movf	_IOCCF1_InterruptHandler+1,w
 10039  065C  008A               	movwf	10
 10040  065D  085D               	movf	_IOCCF1_InterruptHandler,w
 10041  065E  000A               	callw
 10042  065F  3186               	pagesel	$
 10043  0660                     i1l1980:
 10044                           
 10045                           ;mcc_generated_files/pin_manager.c: 151:     IOCCFbits.IOCCF1 = 0;
 10046  0660  017E               	movlb	62	; select bank62
 10047  0661  10D5               	bcf	85,1	;volatile
 10048  0662  0008               	return
 10049  0663                     __end_of_IOCCF1_ISR:
 10050                           
 10051                           	psect	text52
 10052  0704                     __ptext52:	
 10053 ;; *************** function _IOCCF1_DefaultInterruptHandler *****************
 10054 ;; Defined at:
 10055 ;;		line 164 in file "mcc_generated_files/pin_manager.c"
 10056 ;; Parameters:    Size  Location     Type
 10057 ;;		None
 10058 ;; Auto vars:     Size  Location     Type
 10059 ;;		None
 10060 ;; Return value:  Size  Location     Type
 10061 ;;                  1    wreg      void 
 10062 ;; Registers used:
 10063 ;;		None
 10064 ;; Tracked objects:
 10065 ;;		On entry : 3F/0
 10066 ;;		On exit  : 3F/0
 10067 ;;		Unchanged: 3F/0
 10068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10069 ;;      Params:         0       0       0       0
 10070 ;;      Locals:         0       0       0       0
 10071 ;;      Temps:          0       0       0       0
 10072 ;;      Totals:         0       0       0       0
 10073 ;;Total ram usage:        0 bytes
 10074 ;; Hardware stack levels used:    1
 10075 ;; This function calls:
 10076 ;;		Nothing
 10077 ;; This function is called by:
 10078 ;;		_PIN_MANAGER_Initialize
 10079 ;;		_IOCCF1_ISR
 10080 ;; This function uses a non-reentrant model
 10081 ;;
 10082                           
 10083                           
 10084                           ;psect for function _IOCCF1_DefaultInterruptHandler
 10085  0704                     _IOCCF1_DefaultInterruptHandler:
 10086                           
 10087                           ;incstack = 0
 10088                           ; Regs used in _IOCCF1_DefaultInterruptHandler: []
 10089  0704  0008               	return
 10090  0705                     __end_of_IOCCF1_DefaultInterruptHandler:
 10091                           
 10092                           	psect	text53
 10093  06F5                     __ptext53:	
 10094 ;; *************** function _RCS_INT *****************
 10095 ;; Defined at:
 10096 ;;		line 178 in file "Main.c"
 10097 ;; Parameters:    Size  Location     Type
 10098 ;;		None
 10099 ;; Auto vars:     Size  Location     Type
 10100 ;;		None
 10101 ;; Return value:  Size  Location     Type
 10102 ;;                  1    wreg      void 
 10103 ;; Registers used:
 10104 ;;		wreg, status,2, status,0, pclath, cstack
 10105 ;; Tracked objects:
 10106 ;;		On entry : 3F/0
 10107 ;;		On exit  : 3F/4
 10108 ;;		Unchanged: 0/0
 10109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10110 ;;      Params:         0       0       0       0
 10111 ;;      Locals:         0       0       0       0
 10112 ;;      Temps:          0       0       0       0
 10113 ;;      Totals:         0       0       0       0
 10114 ;;Total ram usage:        0 bytes
 10115 ;; Hardware stack levels used:    1
 10116 ;; Hardware stack levels required when called:    2
 10117 ;; This function calls:
 10118 ;;		_TMR1_Reload
 10119 ;; This function is called by:
 10120 ;;		_main
 10121 ;;		_IOCCF1_ISR
 10122 ;; This function uses a non-reentrant model
 10123 ;;
 10124                           
 10125                           
 10126                           ;psect for function _RCS_INT
 10127  06F5                     _RCS_INT:
 10128                           
 10129                           ;Main.c: 181:     UpdateRcs = 1;
 10130                           
 10131                           ;incstack = 0
 10132                           ; Regs used in _RCS_INT: [wreg+status,2+status,0+pclath+cstack]
 10133  06F5  01B4               	clrf	_UpdateRcs
 10134  06F6  0AB4               	incf	_UpdateRcs,f
 10135                           
 10136                           ;Main.c: 183:     TMR1_Reload();
 10137  06F7  26E1               	fcall	_TMR1_Reload
 10138  06F8  0008               	return
 10139  06F9                     __end_of_RCS_INT:
 10140                           
 10141                           	psect	text54
 10142  06E1                     __ptext54:	
 10143 ;; *************** function _TMR1_Reload *****************
 10144 ;; Defined at:
 10145 ;;		line 149 in file "mcc_generated_files/tmr1.c"
 10146 ;; Parameters:    Size  Location     Type
 10147 ;;		None
 10148 ;; Auto vars:     Size  Location     Type
 10149 ;;		None
 10150 ;; Return value:  Size  Location     Type
 10151 ;;                  1    wreg      void 
 10152 ;; Registers used:
 10153 ;;		wreg, status,2, status,0, pclath, cstack
 10154 ;; Tracked objects:
 10155 ;;		On entry : 3F/0
 10156 ;;		On exit  : 3F/4
 10157 ;;		Unchanged: 0/0
 10158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10159 ;;      Params:         0       0       0       0
 10160 ;;      Locals:         0       0       0       0
 10161 ;;      Temps:          0       0       0       0
 10162 ;;      Totals:         0       0       0       0
 10163 ;;Total ram usage:        0 bytes
 10164 ;; Hardware stack levels used:    1
 10165 ;; Hardware stack levels required when called:    1
 10166 ;; This function calls:
 10167 ;;		_TMR1_WriteTimer
 10168 ;; This function is called by:
 10169 ;;		_RCS_INT
 10170 ;; This function uses a non-reentrant model
 10171 ;;
 10172                           
 10173                           
 10174                           ;psect for function _TMR1_Reload
 10175  06E1                     _TMR1_Reload:
 10176                           
 10177                           ;mcc_generated_files/tmr1.c: 151:     TMR1_WriteTimer(timer1ReloadVal);
 10178                           
 10179                           ;incstack = 0
 10180                           ; Regs used in _TMR1_Reload: [wreg+status,2+status,0+pclath+cstack]
 10181  06E1  0829               	movf	_timer1ReloadVal+1,w	;volatile
 10182  06E2  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 10183  06E3  0828               	movf	_timer1ReloadVal,w	;volatile
 10184  06E4  00F0               	movwf	TMR1_WriteTimer@timerVal
 10185  06E5  261F               	fcall	_TMR1_WriteTimer
 10186  06E6  0008               	return
 10187  06E7                     __end_of_TMR1_Reload:
 10188                           
 10189                           	psect	text55
 10190  061F                     __ptext55:	
 10191 ;; *************** function _TMR1_WriteTimer *****************
 10192 ;; Defined at:
 10193 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 10194 ;; Parameters:    Size  Location     Type
 10195 ;;  timerVal        2    0[COMMON] unsigned short 
 10196 ;; Auto vars:     Size  Location     Type
 10197 ;;		None
 10198 ;; Return value:  Size  Location     Type
 10199 ;;                  1    wreg      void 
 10200 ;; Registers used:
 10201 ;;		wreg
 10202 ;; Tracked objects:
 10203 ;;		On entry : 3F/0
 10204 ;;		On exit  : 3F/4
 10205 ;;		Unchanged: 0/0
 10206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10207 ;;      Params:         2       0       0       0
 10208 ;;      Locals:         0       0       0       0
 10209 ;;      Temps:          0       0       0       0
 10210 ;;      Totals:         2       0       0       0
 10211 ;;Total ram usage:        2 bytes
 10212 ;; Hardware stack levels used:    1
 10213 ;; This function calls:
 10214 ;;		Nothing
 10215 ;; This function is called by:
 10216 ;;		_TMR1_Reload
 10217 ;;		_TMR1_ISR
 10218 ;; This function uses a non-reentrant model
 10219 ;;
 10220                           
 10221                           
 10222                           ;psect for function _TMR1_WriteTimer
 10223  061F                     _TMR1_WriteTimer:
 10224                           
 10225                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 10226                           
 10227                           ;incstack = 0
 10228                           ; Regs used in _TMR1_WriteTimer: [wreg]
 10229  061F  0144               	movlb	4	; select bank4
 10230  0620  1D0E               	btfss	14,2	;volatile
 10231  0621  2E29               	goto	i1l1828
 10232                           
 10233                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 10234  0622  100E               	bcf	14,0	;volatile
 10235                           
 10236                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (uint8_t)(timerVal >> 8);
 10237  0623  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 10238  0624  008D               	movwf	13	;volatile
 10239                           
 10240                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = (uint8_t)timerVal;
 10241  0625  0870               	movf	TMR1_WriteTimer@timerVal,w
 10242  0626  008C               	movwf	12	;volatile
 10243                           
 10244                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 10245  0627  140E               	bsf	14,0	;volatile
 10246                           
 10247                           ;mcc_generated_files/tmr1.c: 140:     }
 10248  0628  0008               	return
 10249  0629                     i1l1828:
 10250                           
 10251                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 10252  0629  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 10253  062A  008D               	movwf	13	;volatile
 10254                           
 10255                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = (uint8_t)timerVal;
 10256  062B  0870               	movf	TMR1_WriteTimer@timerVal,w
 10257  062C  008C               	movwf	12	;volatile
 10258  062D  0008               	return
 10259  062E                     __end_of_TMR1_WriteTimer:
 10260  007E                     btemp	set	126	;btemp
 10261  007E                     int$flags	set	126
 10262  007E                     wtemp0	set	126
 10263                           
 10264                           	psect	idloc
 10265                           
 10266                           ;Config register IDLOC0 @ 0x8000
 10267                           ;	unspecified, using default values
 10268  8000                     	org	32768
 10269  8000  3FFF               	dw	16383
 10270                           
 10271                           ;Config register IDLOC1 @ 0x8001
 10272                           ;	unspecified, using default values
 10273  8001                     	org	32769
 10274  8001  3FFF               	dw	16383
 10275                           
 10276                           ;Config register IDLOC2 @ 0x8002
 10277                           ;	unspecified, using default values
 10278  8002                     	org	32770
 10279  8002  3FFF               	dw	16383
 10280                           
 10281                           ;Config register IDLOC3 @ 0x8003
 10282                           ;	unspecified, using default values
 10283  8003                     	org	32771
 10284  8003  3FFF               	dw	16383
 10285                           
 10286                           	psect	config
 10287                           
 10288                           ;Config register CONFIG1 @ 0x8007
 10289                           ;	External Oscillator mode selection bits
 10290                           ;	FEXTOSC = OFF, Oscillator not enabled
 10291                           ;	Power-up default value for COSC bits
 10292                           ;	RSTOSC = HFINTPLL, HFINTOSC with 2x PLL, with OSCFRQ = 16 MHz and CDIV = 1:1 (FOSC = 3
      +                          2 MHz)
 10293                           ;	Clock Out Enable bit
 10294                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 10295                           ;	Clock Switch Enable bit
 10296                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 10297                           ;	Fail-Safe Clock Monitor Enable bit
 10298                           ;	FCMEN = OFF, FSCM timer disabled
 10299  8007                     	org	32775
 10300  8007  1F9C               	dw	8092
 10301                           
 10302                           ;Config register CONFIG2 @ 0x8008
 10303                           ;	Master Clear Enable bit
 10304                           ;	MCLRE = OFF, MCLR pin function is port defined function
 10305                           ;	Power-up Timer Enable bit
 10306                           ;	PWRTE = OFF, PWRT disabled
 10307                           ;	Low-Power BOR enable bit
 10308                           ;	LPBOREN = OFF, ULPBOR disabled
 10309                           ;	Brown-out reset enable bits
 10310                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 10311                           ;	Brown-out Reset Voltage Selection
 10312                           ;	BORV = HI, Brown-out Reset Voltage (VBOR) is set to 2.7V
 10313                           ;	Zero-cross detect disable
 10314                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 10315                           ;	Peripheral Pin Select one-way control
 10316                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 10317                           ;	Stack Overflow/Underflow Reset Enable bit
 10318                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 10319  8008                     	org	32776
 10320  8008  3DFE               	dw	15870
 10321                           
 10322                           ;Config register CONFIG3 @ 0x8009
 10323                           ;	WDT Period Select bits
 10324                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10325                           ;	WDT operating mode
 10326                           ;	WDTE = ON, WDT enabled regardless of sleep; SWDTEN ignored
 10327                           ;	WDT Window Select bits
 10328                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 10329                           ;	WDT input clock selector
 10330                           ;	WDTCCS = SC, Software Control
 10331  8009                     	org	32777
 10332  8009  3FFF               	dw	16383
 10333                           
 10334                           ;Config register CONFIG4 @ 0x800A
 10335                           ;	Boot Block Size Selection bits
 10336                           ;	BBSIZE = BB512, 512 words boot block size
 10337                           ;	Boot Block Enable bit
 10338                           ;	BBEN = OFF, Boot Block disabled
 10339                           ;	SAF Enable bit
 10340                           ;	SAFEN = OFF, SAF disabled
 10341                           ;	Application Block Write Protection bit
 10342                           ;	WRTAPP = OFF, Application Block not write protected
 10343                           ;	Boot Block Write Protection bit
 10344                           ;	WRTB = OFF, Boot Block not write protected
 10345                           ;	Configuration Register Write Protection bit
 10346                           ;	WRTC = OFF, Configuration Register not write protected
 10347                           ;	Storage Area Flash Write Protection bit
 10348                           ;	WRTSAF = OFF, SAF not write protected
 10349                           ;	Low Voltage Programming Enable bit
 10350                           ;	LVP = OFF, High Voltage on MCLR/Vpp must be used for programming
 10351  800A                     	org	32778
 10352  800A  1FFF               	dw	8191
 10353                           
 10354                           ;Config register CONFIG5 @ 0x800B
 10355                           ;	UserNVM Program memory code protection bit
 10356                           ;	CP = OFF, UserNVM code protection disabled
 10357  800B                     	org	32779
 10358  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        82
    BSS         28
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     19      63
    BANK1            80      0      66
    BANK2            80      0       0

Pointer List with Targets:

    EXECUTExEFFECT$1858	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> LedBrake(), LedSlFl(), LedNom(), LedFlash(), 
		 -> LedOff(), 

    EXECUTExEFFECT$1853	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> LedBrake(), LedSlFl(), LedNom(), LedFlash(), 
		 -> LedOff(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S1107$PWM	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> PWM1_LoadDutyValue(), PWM2_LoadDutyValue(), PWM5_LoadDutyValue(), PWM6_LoadDutyValue(), 
		 -> PWM3_LoadDutyValue(), PWM4_LoadDutyValue(), 

    LedBit.PWM	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> PWM1_LoadDutyValue(), PWM2_LoadDutyValue(), PWM5_LoadDutyValue(), PWM6_LoadDutyValue(), 
		 -> PWM3_LoadDutyValue(), PWM4_LoadDutyValue(), 

    S1107$Prog	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> LedBrake(), LedSlFl(), LedNom(), LedFlash(), 
		 -> LedOff(), 

    LedBit.Prog	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> LedBrake(), LedSlFl(), LedNom(), LedFlash(), 
		 -> LedOff(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_INT(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_INT(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_INT(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_INT(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCCF1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> RCS_INT(), IOCCF1_DefaultInterruptHandler(), 

    IOCCF1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> RCS_INT(), Absolute function(), IOCCF1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF1_SetInterruptHandler
    _rand->___lmul
    _CalcPwm->_PWM3_LoadDutyValue
    _CalcPwm->_PWM4_LoadDutyValue
    _CalcPwm->_PWM5_LoadDutyValue
    _CalcPwm->_PWM6_LoadDutyValue
    _PWM6_LoadDutyValue->___bmul
    _PWM5_LoadDutyValue->___bmul
    _PWM4_LoadDutyValue->___bmul
    _PWM3_LoadDutyValue->___bmul
    _PWM2_LoadDutyValue->___bmul
    _PWM1_LoadDutyValue->___bmul

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer
    _TMR1_Reload->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_EXECUTExEFFECT
    _INITxEXECUTER->_RCSxLED
    _RCSxLED->_rand
    _rand->___lmul
    _EXECUTExEFFECT->_LedFlash
    _EXECUTExEFFECT->_LedSlFl
    _LedSlFl->_CalcPwm
    _LedOff->_CalcPwm
    _LedNom->_CalcPwm
    _LedFlash->_CalcPwm
    _LedBrake->_CalcPwm

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   31509
                                             16 BANK0      3     3      0
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                  _ADC_SelectChannel
                _ADC_StartConversion
                       _BATTxPROTECT
                     _EXECUTExEFFECT
                      _INITxEXECUTER
         _IOCCF1_SetInterruptHandler
                            _RCSxLED
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     522
                     _ADC_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
         _IOCCF1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF1_SetInterruptHandler                           2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INITxEXECUTER                                        0     0      0     586
                            _RCSxLED
                               _rand
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RCSxLED                                              1     1      0     244
                                             10 BANK0      1     1      0
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 6     4      2     244
                                              4 BANK0      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     244
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _EXECUTExEFFECT                                       6     6      0   29514
                                             10 BANK0      6     6      0
                           _LedBrake *
                           _LedFlash *
                             _LedNom *
                             _LedOff *
                            _LedSlFl *
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LedSlFl                                              5     4      1    6095
                                              5 BANK0      5     4      1
                            _CalcPwm
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LedOff                                               2     1      1    5184
                                              5 BANK0      2     1      1
                            _CalcPwm
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LedNom                                               4     3      1    5215
                                              5 BANK0      4     3      1
                            _CalcPwm
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LedFlash                                             5     4      1    5472
                                              5 BANK0      5     4      1
                            _CalcPwm
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LedBrake                                             3     2      1    5156
                                              5 BANK0      3     2      1
                            _CalcPwm
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) _CalcPwm                                              5     5      0    2838
                                              0 BANK0      5     5      0
                 _PWM1_LoadDutyValue *
                 _PWM2_LoadDutyValue *
                 _PWM3_LoadDutyValue *
                 _PWM4_LoadDutyValue *
                 _PWM5_LoadDutyValue *
                 _PWM6_LoadDutyValue *
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1    2191
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2      62
                                              6 COMMON     4     2      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM5_LoadDutyValue                                   4     2      2      62
                                              6 COMMON     4     2      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM4_LoadDutyValue                                   4     2      2      62
                                              6 COMMON     4     2      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM3_LoadDutyValue                                   4     2      2      62
                                              6 COMMON     4     2      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM2_LoadDutyValue                                   2     0      2     136
                                              6 COMMON     2     0      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM1_LoadDutyValue                                   2     0      2     201
                                              6 COMMON     2     0      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _BATTxPROTECT                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversionResult                              2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0     484
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     242
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                           _TMR1_INT *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_INT                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _TMR0_INT *
 ---------------------------------------------------------------------------------
 (7) _TMR0_INT                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _PIN_MANAGER_IOC                                      0     0      0     242
                         _IOCCF1_ISR
 ---------------------------------------------------------------------------------
 (7) _IOCCF1_ISR                                           0     0      0     242
                   Absolute function *
     _IOCCF1_DefaultInterruptHandler *
                            _RCS_INT *
 ---------------------------------------------------------------------------------
 (8) _RCS_INT                                              0     0      0     242
                        _TMR1_Reload
 ---------------------------------------------------------------------------------
 (9) _TMR1_Reload                                          0     0      0     242
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     242
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _IOCCF1_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversionResult
   _ADC_IsConversionDone
   _ADC_SelectChannel
   _ADC_StartConversion
   _BATTxPROTECT
   _EXECUTExEFFECT
     _LedBrake *
       _CalcPwm
         _PWM1_LoadDutyValue *
           ___bmul (ARG)
         _PWM2_LoadDutyValue *
           ___bmul (ARG)
         _PWM3_LoadDutyValue *
           ___bmul (ARG)
         _PWM4_LoadDutyValue *
           ___bmul (ARG)
         _PWM5_LoadDutyValue *
           ___bmul (ARG)
         _PWM6_LoadDutyValue *
           ___bmul (ARG)
         ___bmul *
       ___bmul
     _LedFlash *
       _CalcPwm
         _PWM1_LoadDutyValue *
           ___bmul (ARG)
         _PWM2_LoadDutyValue *
           ___bmul (ARG)
         _PWM3_LoadDutyValue *
           ___bmul (ARG)
         _PWM4_LoadDutyValue *
           ___bmul (ARG)
         _PWM5_LoadDutyValue *
           ___bmul (ARG)
         _PWM6_LoadDutyValue *
           ___bmul (ARG)
         ___bmul *
       ___bmul
     _LedNom *
       _CalcPwm
         _PWM1_LoadDutyValue *
           ___bmul (ARG)
         _PWM2_LoadDutyValue *
           ___bmul (ARG)
         _PWM3_LoadDutyValue *
           ___bmul (ARG)
         _PWM4_LoadDutyValue *
           ___bmul (ARG)
         _PWM5_LoadDutyValue *
           ___bmul (ARG)
         _PWM6_LoadDutyValue *
           ___bmul (ARG)
         ___bmul *
       ___bmul
     _LedOff *
       _CalcPwm
         _PWM1_LoadDutyValue *
           ___bmul (ARG)
         _PWM2_LoadDutyValue *
           ___bmul (ARG)
         _PWM3_LoadDutyValue *
           ___bmul (ARG)
         _PWM4_LoadDutyValue *
           ___bmul (ARG)
         _PWM5_LoadDutyValue *
           ___bmul (ARG)
         _PWM6_LoadDutyValue *
           ___bmul (ARG)
         ___bmul *
       ___bmul
     _LedSlFl *
       _CalcPwm
         _PWM1_LoadDutyValue *
           ___bmul (ARG)
         _PWM2_LoadDutyValue *
           ___bmul (ARG)
         _PWM3_LoadDutyValue *
           ___bmul (ARG)
         _PWM4_LoadDutyValue *
           ___bmul (ARG)
         _PWM5_LoadDutyValue *
           ___bmul (ARG)
         _PWM6_LoadDutyValue *
           ___bmul (ARG)
         ___bmul *
       ___bmul
     ___bmul *
   _INITxEXECUTER
     _RCSxLED
       _rand
         ___lmul
     _rand
       ___lmul
     _srand
   _IOCCF1_SetInterruptHandler
   _RCSxLED
     _rand
       ___lmul
   _SYSTEM_Initialize
     _ADC_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF1_SetInterruptHandler
     _PMD_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
   _TMR0_SetInterruptHandler
   _TMR1_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCCF1_ISR
       Absolute function(Fake) *
       _IOCCF1_DefaultInterruptHandler *
       _RCS_INT *
         _TMR1_Reload
           _TMR1_WriteTimer
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _TMR0_INT *
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_INT *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      3F       5       78.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      42       7       82.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
ABS                  0      0      8D      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      8D      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Dec 21 23:34:01 2022

                            ___bmul@product 0074                      __end_of_FVR_Initialize 06F5  
               __size_of_PWM6_LoadDutyValue 0016                                         l300 066C  
                      __end_of_BATTxPROTECT 0502                                         l561 02D5  
                                       l662 0095                                         l677 020B  
                                       u635 0443                                         u645 044A  
                           _timer1ReloadVal 0028                     __size_of_PMD_Initialize 000D  
                           _TMR2_Initialize 062E                             _PWM4_Initialize 06B5  
                                       wreg 0009                                        l2500 034D  
                                      l2440 05E0                                        l2522 003B  
                                      l2428 055E                                        l2436 0548  
                                      l2444 05E6                                        l2700 02CC  
                                      l2550 0143                                        l2534 00C5  
                                      l2526 0052                                        l2630 048C  
                                      l2544 0109                                        l2536 00C8  
                                      l2616 0462                                        l2562 017F  
                                      l2642 0257                                        l2564 019B  
                                      l2580 01B9                                        l2628 048B  
                                      l2660 026C                                        l2558 0174  
                                      l1862 0442                                        l2494 0327  
                                      l2592 0219                                        l2576 01A2  
                                      l2680 028E                                        l2664 0271  
                                      l2656 0268                                        l2648 0260  
                                      l1858 0438                                        l2498 032B  
                                      l2588 01FE                                        l2596 0224  
                                      l2692 02B9                                        l2598 023D  
                                      l2694 02BA                                        l2784 02C4  
                                      l2786 0235                                        l2698 02BC  
                                      l2788 0190                     __end_of_PWM1_Initialize 06AE  
                                      u1105 0555                                        u1125 053F  
                                      u1055 059E                                        u1065 0588  
                                      u1075 05B4                                        u1155 0425  
                                      u1085 0572                                        _LATA 0018  
                                      _LATC 001A                                        _T2PR 028D  
                                      _PMD0 0796                                        _PMD1 0797  
                                      _PMD2 0798                                        _PMD3 0799  
                                      _PMD4 079A                                        _PMD5 079B  
                                      _PLLR 4480                                        _WPUA 1F39  
                                      _WPUC 1F4F                             __end_of_RCS_INT 06F9  
                           ?_EXECUTExEFFECT 0070                             __end_of_RCSxLED 0353  
                                      _main 0242                                        _rand 03FF  
                                      _seed 0036                                        fsr0h 0005  
                                      fsr1h 0007                                        indf0 0000  
                                      fsr0l 0004                                        indf1 0001  
                                      fsr1l 0006                                        btemp 007E  
                           __end_of_CalcPwm 04DE                                        start 0019  
                           _PWM5_Initialize 06AE                             __end_of_LedSlFl 01A0  
                ??_TMR1_SetInterruptHandler 0074                           ___bmul@multiplier 0075  
                __end_of_PWM5_LoadDutyValue 0579                     __end_of_PWM2_Initialize 06A6  
                   __end_of_TMR0_Initialize 0537              ??_TMR0_DefaultInterruptHandler 0070  
                           ?_FVR_Initialize 0070              __size_of_OSCILLATOR_Initialize 000C  
             __end_of_OSCILLATOR_Initialize 066F                         __size_of_IOCCF1_ISR 000D  
                                     _ADACT 009F                                       ?_main 0070  
                                     ?_rand 003E                                       _T1CLK 0211  
                                     _T1CON 020E                                       _T2CON 028E  
                                     _T2HLT 028F                                       _T2TMR 028C  
                                     _T2RST 0291                                       i1l373 0017  
                                     i1l365 000C                                       i1l367 0011  
                                     _OSCEN 0891                          _PWM4_LoadDutyValue 058F  
                                     _TMR0H 059D                                       _TMR1H 020D  
                                     _TMR0L 059C                                       _TMR1L 020C  
                                     _TRISA 0012                                       _TRISC 0014  
                               _BattProtect 0032            __size_of_ADC_GetConversionResult 0005  
         __size_of_TMR0_SetInterruptHandler 0006                             _PWM6_Initialize 068E  
                       ___lmul@multiplicand 0076                   ?_TMR0_SetInterruptHandler 0072  
                          __end_of_TMR0_INT 0702                            __end_of_TMR0_ISR 0600  
                          __end_of_TMR1_INT 06FF                            __end_of_TMR1_ISR 05CD  
                   __end_of_PIN_MANAGER_IOC 06F1                         ?_PWM4_LoadDutyValue 0076  
                                     _srand 067B                                       main@i 004C  
                   __end_of_PWM3_Initialize 069E                     __end_of_TMR1_Initialize 0520  
                                     pclath 000A                                       status 0003  
                    __size_of_INITxEXECUTER 000C                                       wtemp0 007E  
                           _TMR1_WriteTimer 061F                            __end_of_LedBrake 05DE  
                          __end_of_LedFlash 0242                             __initialization 001A  
                              __end_of_main 02D7                                __end_of_rand 0430  
                      ??_PWM4_LoadDutyValue 0078                     __end_of_PWM4_Initialize 06BC  
                   __end_of_TMR2_Initialize 063C                 ?_INTERRUPT_InterruptManager 0070  
                                    ??_main 004A                                      ??_rand 0040  
             __size_of_ADC_IsConversionDone 0007                                   ??_RCS_INT 0072  
                                 ??_RCSxLED 0044                                      _ADCON0 009D  
                                    _ADCON1 009E                ??_IOCCF1_SetInterruptHandler 0074  
                                    _ADRESH 009C                                      _ADRESL 009B  
                                    _CCPR1H 030D                                      _CCPR2H 0311  
                                    _CCPR1L 030C                                      _CCPR2L 0310  
                                    ?_srand 0072                                      _ANSELA 1F38  
                                    _ANSELC 1F4E                                      _T0CON0 059E  
                                    _T0CON1 059F                                      _T1GATE 0210  
                                    _T1GCON 020F                                   ??_CalcPwm 003A  
                                    _RA4PPS 1F14                                      _RA5PPS 1F15  
                                    _RC2PPS 1F22                                      _RC3PPS 1F23  
                   TMR1_WriteTimer@timerVal 0070                                      _RC4PPS 1F24  
                          ?_PWM1_Initialize 0070                                      _RC5PPS 1F25  
                                    _ODCONA 1F3A                                      _ODCONC 1F50  
                                    i1l1828 0629                     __end_of_PWM5_Initialize 06B5  
                                    i1l1980 0660                                      _INLVLA 1F3C  
                                    _INLVLC 1F52                                      _FVRCON 090C  
                                    _OSCFRQ 0893                                   ??_LedSlFl 0040  
                                    _LedBit 00A0                                      _LedOff 048E  
                                    _LedNom 0395                                      _Random 0020  
      __end_of_TMR1_DefaultInterruptHandler 0703       __size_of_TMR1_DefaultInterruptHandler 0001  
              _TMR1_DefaultInterruptHandler 0702                                      ___bmul 05DE  
                                    ___lmul 0430                 __size_of_PWM3_LoadDutyValue 0016  
                              ?_TMR1_Reload 0070                       __size_of_BATTxPROTECT 0024  
                          ?_TMR0_Initialize 0070                            ?_PWM2_Initialize 0070  
                   __end_of_PWM6_Initialize 0696                               _INITxEXECUTER 066F  
       __size_of_IOCCF1_SetInterruptHandler 0006                            LedSlFl@ReturnVal 0043  
                            _PMD_Initialize 063C                                  _UpdateLeds 0035  
                                    srand@s 0072    TMR1_SetInterruptHandler@InterruptHandler 0072  
  TMR0_SetInterruptHandler@InterruptHandler 0072  IOCCF1_SetInterruptHandler@InterruptHandler 0072  
                          ?_PIN_MANAGER_IOC 0070                     __end_of_TMR1_WriteTimer 062E  
                              ??_IOCCF1_ISR 0072                            ?_PWM3_Initialize 0070  
                          ?_TMR1_Initialize 0070                                  _pAdcResult 002F  
                         _SYSTEM_Initialize 0610                     __end_of__initialization 0036  
                        ?_SYSTEM_Initialize 0070                                _BATTxPROTECT 04DE  
                __end_of_PWM2_LoadDutyValue 0563                 PWM1_LoadDutyValue@dutyValue 0076  
                       ___bmul@multiplicand 0072                __size_of_ADC_StartConversion 0003  
                            __pcstackCOMMON 0070                                __pidataBANK0 0600  
                              __pidataBANK1 0353                         ??_SYSTEM_Initialize 0074  
                                 ?_TMR0_INT 0070                                   ?_TMR0_ISR 0070  
                                 ?_TMR1_INT 0070                                   ?_TMR1_ISR 0070  
             ?_TMR1_DefaultInterruptHandler 0070                               __end_of_srand 0685  
                        _PWM1_LoadDutyValue 0537                            ?_PWM4_Initialize 0070  
                          ?_TMR2_Initialize 0070                              ?_INITxEXECUTER 0070  
                    __end_of_PMD_Initialize 0649                 PWM4_LoadDutyValue@dutyValue 0076  
                        __end_of_IOCCF1_ISR 0663                     _ADC_GetConversionResult 06E7  
                       ?_PWM1_LoadDutyValue 0076                                   ?_LedBrake 003F  
                                 ?_LedFlash 003F                            ??_EXECUTExEFFECT 0044  
                 __end_of_SYSTEM_Initialize 061F                                     ??_srand 0074  
                                __pbssBANK0 0020                            ?_PWM5_Initialize 0070  
                                   ?_LedOff 003F                                     ?_LedNom 003F  
                      ??_PWM1_LoadDutyValue 0078                            ??_FVR_Initialize 0072  
                                __pmaintext 0242                                     ?___bmul 0072  
          __end_of_TMR0_SetInterruptHandler 06DB                                     ?___lmul 0072  
                                ??_TMR0_INT 0070                                  ??_TMR0_ISR 0070  
                                ??_TMR1_INT 0070                                  ??_TMR1_ISR 0072  
                __end_of_PWM6_LoadDutyValue 05BB                                  __pintentry 0004  
                                   _CCP1CON 030E                                     _CCP2CON 0312  
                            ___lmul@product 003A                            ?_PWM6_Initialize 0070  
                           ?_PMD_Initialize 0070                     __size_of_ADC_Initialize 0009  
                        _PWM5_LoadDutyValue 0563                                     _OSCCON1 088D  
                                   _OSCCON3 088F                                     _OSCSTAT 0890  
        __end_of_IOCCF1_SetInterruptHandler 06E1                  _IOCCF1_SetInterruptHandler 06DB  
                                ??_LedBrake 0040                                     _RCS_INT 06F5  
                                   _OSCTUNE 0892                                     _PWM3DCH 0315  
                                   _PWM3DCL 0314                                     _PWM4DCH 0319  
                                   _PWM4DCL 0318                                     _PWM5DCH 031D  
                                ??_LedFlash 0040                                     _PWM5DCL 031C  
                                   _PWM6DCH 038D                                     _PWM3CON 0316  
                                   _PWM6DCL 038C                                     _PWM4CON 031A  
                                   _PWM5CON 031E                                     _PWM6CON 038E  
                                   _SLRCONA 1F3B                                     _SLRCONC 1F51  
                                   _RCSxLED 02D7                            ?_TMR1_WriteTimer 0070  
                                   _CalcPwm 04BA                         ?_PWM5_LoadDutyValue 0076  
                                   _CarrOff 0031                                     _LedSlFl 0039  
                           __size_of_LedOff 002C                             __size_of_LedNom 0038  
                      _ADC_InterruptHandler 002C                             __size_of___bmul 0011  
                           __size_of___lmul 002F                             ??_INITxEXECUTER 007A  
                         LedFlash@ReturnVal 0043                        ??_PWM5_LoadDutyValue 0078  
                 ??_ADC_GetConversionResult 0074                        __size_of_TMR1_Reload 0006  
                                   __ptext1 0610                                     __ptext2 062E  
                                   __ptext3 0502                                     __ptext4 06CF  
                                   __ptext5 0520                                     __ptext6 06D5  
                                   __ptext7 068E                                     __ptext8 06AE  
                                   __ptext9 06B5              ??_TMR1_DefaultInterruptHandler 0070  
                                 _T1CONbits 020E                       _OSCILLATOR_Initialize 0663  
         __size_of_TMR1_SetInterruptHandler 0006                    ??_PIN_MANAGER_Initialize 0074  
                 ?_TMR1_SetInterruptHandler 0072                                   _IOCCFbits 1F55  
                                 _IOCCNbits 1F54                                   _IOCCPbits 1F53  
                __size_of_SYSTEM_Initialize 000F                                     clrloop0 06CA  
                      end_of_initialization 0036                                     init_ram 06C3  
                                   initloop 06C4                                 _UpdateVbatt 0033  
              __end_of_ADC_IsConversionDone 06C3                                   LedOff@Led 003F  
                                 LedNom@Led 003F                 __size_of_PWM4_LoadDutyValue 0016  
                  _TMR0_SetInterruptHandler 06D5                                   _PORTCbits 000E  
                                 _AdcResult 004D                                   _TRISAbits 0012  
                       _ADC_StartConversion 06F9                                 _CCP1CONbits 030E  
                               _CCP2CONbits 0312                  __end_of_PWM3_LoadDutyValue 058F  
                            __end_of_LedOff 04BA                    __size_of_PWM1_Initialize 0008  
                            __end_of_LedNom 03CD                        ?_ADC_StartConversion 0070  
                      _timer0ReloadVal16bit 007A                              __end_of___bmul 05EF  
                            __end_of___lmul 045F                           __size_of_TMR0_INT 0003  
                         __size_of_TMR0_ISR 0011                           __size_of_TMR1_INT 0003  
                         __size_of_TMR1_ISR 0012                          _PWM2_LoadDutyValue 054D  
                            _ADC_Initialize 0685                      ?_OSCILLATOR_Initialize 0070  
                       _EXECUTExEFFECT$1858 0046                         start_initialization 001A  
                  __size_of_PWM2_Initialize 0008                    __size_of_TMR0_Initialize 0017  
                       ?_PWM2_LoadDutyValue 0076             __size_of_PIN_MANAGER_Initialize 0032  
                         __size_of_LedBrake 0011                           __size_of_LedFlash 00A2  
                                  ??_LedOff 0040                                    ??_LedNom 0040  
                  __size_of_PIN_MANAGER_IOC 0005                       ??_ADC_StartConversion 0072  
                      ??_PWM2_LoadDutyValue 0078                    __size_of_PWM3_Initialize 0008  
                  __size_of_TMR1_Initialize 001E                                    ??___bmul 0073  
               PWM2_LoadDutyValue@dutyValue 0076                            ??_PMD_Initialize 0072  
                                  ??___lmul 007A                                   _ReturnVal 002E  
                    __end_of_ADC_Initialize 068E                                 __pdataBANK0 004D  
                               __pdataBANK1 00A0                                   _UpdateRcs 0034  
               PWM5_LoadDutyValue@dutyValue 0076                                 __pbssCOMMON 007A  
                                 ___latbits 0000                               __pcstackBANK0 003A  
                      _ADC_IsConversionDone 06BC                          _PWM6_LoadDutyValue 05A5  
                  __size_of_PWM4_Initialize 0007                    __size_of_TMR2_Initialize 000E  
                                  ?_RCS_INT 0070                 ?_IOCCF1_SetInterruptHandler 0072  
                                  ?_RCSxLED 0070                                    ?_CalcPwm 0070  
                       ?_PWM6_LoadDutyValue 0076                                    ?_LedSlFl 003F  
                     _TMR0_InterruptHandler 002A                                   __pnvBANK0 005D  
               __size_of_PWM1_LoadDutyValue 0016                      _PIN_MANAGER_Initialize 03CD  
                  __size_of_PWM5_Initialize 0007                           _ADC_SelectChannel 0649  
          __end_of_TMR1_SetInterruptHandler 06D5                             ?_ADC_Initialize 0070  
                        ?_ADC_SelectChannel 0070                        ??_PWM6_LoadDutyValue 0078  
                         ??_PWM1_Initialize 0072                ??_INTERRUPT_InterruptManager 0072  
                                  _ADACTPPS 1EC3            ??_IOCCF1_DefaultInterruptHandler 0070  
           ?_IOCCF1_DefaultInterruptHandler 0070                         ??_ADC_SelectChannel 0072  
                     ?_ADC_IsConversionDone 0070                    __size_of_PWM6_Initialize 0008  
                                  _T2CLKCON 0290                              __size_of_srand 000A  
                           _AdcResultSample 0024                           ??_TMR0_Initialize 0074  
                         ??_PWM2_Initialize 0072                                    _LATAbits 0018  
                                 clear_ram0 06C9                                    _PIE0bits 0716  
                                  _PIE4bits 071A                     __size_of_EXECUTExEFFECT 002F  
                 __end_of_ADC_SelectChannel 0656                    __size_of_TMR1_WriteTimer 000F  
       __size_of_INTERRUPT_InterruptManager 0015                  ??_TMR0_SetInterruptHandler 0074  
                                  _PIR0bits 070C                                    _PIR4bits 0710  
                             ??_TMR1_Reload 0072                                    _TMR0_INT 06FF  
                                  _TMR0_ISR 05EF                                    _TMR1_INT 06FC  
                                  _TMR1_ISR 05BB                           ??_PIN_MANAGER_IOC 0072  
               __size_of_PWM5_LoadDutyValue 0016                       __end_of_INITxEXECUTER 067B  
                                  _AdcState 0030                           ??_TMR1_Initialize 0074  
                         ??_PWM3_Initialize 0072                                  _ADCON0bits 009D  
                  ADC_SelectChannel@channel 0073                     __size_of_FVR_Initialize 0004  
                                  _LedBrake 05CD                                    _LedFlash 01A0  
                          __size_of_RCS_INT 0004                           ___lmul@multiplier 0072  
                          __size_of_RCSxLED 007C                             EXECUTExEFFECT@x 0049  
                          __size_of_CalcPwm 0024                           ??_PWM4_Initialize 0072  
                         ??_TMR2_Initialize 0072                               ?_BATTxPROTECT 0070  
                          __size_of_LedSlFl 0167                  __end_of_PWM4_LoadDutyValue 05A5  
                  ?_ADC_GetConversionResult 0072                     ??_OSCILLATOR_Initialize 0072  
                                CalcPwm@Led 003E                           ??_PWM5_Initialize 0072  
                  _TMR1_SetInterruptHandler 06CF                          _PWM3_LoadDutyValue 0579  
                       __end_of_TMR1_Reload 06E7                       _TMR1_InterruptHandler 0026  
                    ??_ADC_IsConversionDone 0072                                    __ptext10 0696  
                                  __ptext11 069E                                    __ptext20 067B  
                                  __ptext12 06A6                                    __ptext21 02D7  
                                  __ptext13 063C                                    __ptext30 04BA  
                                  __ptext22 03FF                                    __ptext14 03CD  
                                  __ptext31 05DE                                    __ptext23 0430  
                                  __ptext15 06DB                                    __ptext40 0649  
                                  __ptext32 0537                                    __ptext24 045F  
                                  __ptext16 0663                                    __ptext41 06BC  
                                  __ptext33 054D                                    __ptext25 05CD  
                                  __ptext17 06F1                                    __ptext50 06EC  
                                  __ptext42 06E7                                    __ptext34 0563  
                                  __ptext26 0395                                    __ptext18 0685  
                                  __ptext51 0656                                    __ptext35 0579  
                                  __ptext27 01A0                                    __ptext19 066F  
                                  __ptext52 0704                                    __ptext44 05BB  
                                  __ptext36 058F                                    __ptext28 048E  
                                  __ptext53 06F5                                    __ptext45 0702  
                                  __ptext37 05A5                                    __ptext29 0039  
                                  __ptext54 06E1                                    __ptext46 06FC  
                                  __ptext38 04DE                                    __ptext55 061F  
                                  __ptext47 05EF                                    __ptext39 06F9  
                                  __ptext48 0703                                    __ptext49 06FF  
                       ?_PWM3_LoadDutyValue 0076                                  _IOCCF1_ISR 0656  
                            ??_BATTxPROTECT 0072                           ??_PWM6_Initialize 0072  
                             __size_of_main 0095                               __size_of_rand 0031  
                               LedBrake@Led 003F        __end_of_TMR0_DefaultInterruptHandler 0704  
     __size_of_TMR0_DefaultInterruptHandler 0001                _TMR0_DefaultInterruptHandler 0703  
                __size_of_ADC_SelectChannel 000D                                 LedFlash@Led 003F  
                      ??_PWM3_LoadDutyValue 0078                                    int$flags 007E  
        __end_of_INTERRUPT_InterruptManager 0019                  _INTERRUPT_InterruptManager 0004  
                         ??_TMR1_WriteTimer 0072                                  _INTCONbits 000B  
                  EXECUTExEFFECT@ReturnData 0048                                    intlevel1 0000  
               __end_of_ADC_StartConversion 06FC                     ?_PIN_MANAGER_Initialize 0070  
           __end_of_ADC_GetConversionResult 06EC                              _EXECUTExEFFECT 045F  
                           _PWM1_Initialize 06A6                            ??_ADC_Initialize 0072  
             ?_TMR0_DefaultInterruptHandler 0070                 __size_of_PWM2_LoadDutyValue 0016  
                               _TMR1_Reload 06E1                                  LedSlFl@Led 003F  
               PWM3_LoadDutyValue@dutyValue 0076                              _FVR_Initialize 06F1  
                           _TMR0_Initialize 0520                             _PWM2_Initialize 069E  
                              _AdcResultAvg 0022                 PWM6_LoadDutyValue@dutyValue 0076  
                               ?_IOCCF1_ISR 0070              __end_of_PIN_MANAGER_Initialize 03FF  
                    __end_of_EXECUTExEFFECT 048E      __end_of_IOCCF1_DefaultInterruptHandler 0705  
   __size_of_IOCCF1_DefaultInterruptHandler 0001              _IOCCF1_DefaultInterruptHandler 0704  
                __end_of_PWM1_LoadDutyValue 054D                             _PIN_MANAGER_IOC 06EC  
                   _IOCCF1_InterruptHandler 005D                             _TMR1_Initialize 0502  
                           _PWM3_Initialize 0696  
