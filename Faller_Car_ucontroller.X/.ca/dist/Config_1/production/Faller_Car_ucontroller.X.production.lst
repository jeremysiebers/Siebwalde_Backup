

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Dec 21 23:33:59 2022

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F15323
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	intentry,global,class=CODE,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,delta=2
    64                           	psect	text48,local,class=CODE,merge=1,delta=2
    65                           	psect	text49,local,class=CODE,merge=1,delta=2
    66                           	psect	text50,local,class=CODE,merge=1,delta=2
    67                           	psect	text51,local,class=CODE,merge=1,delta=2
    68                           	psect	text52,local,class=CODE,merge=1,delta=2
    69                           	psect	text53,local,class=CODE,merge=1,delta=2
    70                           	psect	text54,local,class=CODE,merge=1,delta=2
    71                           	psect	text55,local,class=CODE,merge=1,delta=2
    72                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    73                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    74                           	dabs	1,0x7E,2
    75  0000                     
    76                           ; Generated 19/07/2022 GMT
    77                           ; 
    78                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution. Publication is not required when
    92                           ;        this file is used in an embedded application.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC16F15323 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000E                     	;# 
   124  0012                     	;# 
   125  0014                     	;# 
   126  0018                     	;# 
   127  001A                     	;# 
   128  009B                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0119                     	;# 
   135  0119                     	;# 
   136  0119                     	;# 
   137  011A                     	;# 
   138  011A                     	;# 
   139  011A                     	;# 
   140  011B                     	;# 
   141  011B                     	;# 
   142  011B                     	;# 
   143  011B                     	;# 
   144  011B                     	;# 
   145  011C                     	;# 
   146  011C                     	;# 
   147  011C                     	;# 
   148  011D                     	;# 
   149  011D                     	;# 
   150  011D                     	;# 
   151  011E                     	;# 
   152  011E                     	;# 
   153  011E                     	;# 
   154  011F                     	;# 
   155  011F                     	;# 
   156  011F                     	;# 
   157  011F                     	;# 
   158  011F                     	;# 
   159  018C                     	;# 
   160  018D                     	;# 
   161  018E                     	;# 
   162  018F                     	;# 
   163  0190                     	;# 
   164  0191                     	;# 
   165  0192                     	;# 
   166  020C                     	;# 
   167  020C                     	;# 
   168  020D                     	;# 
   169  020E                     	;# 
   170  020F                     	;# 
   171  020F                     	;# 
   172  0210                     	;# 
   173  0210                     	;# 
   174  0211                     	;# 
   175  0211                     	;# 
   176  028C                     	;# 
   177  028C                     	;# 
   178  028D                     	;# 
   179  028D                     	;# 
   180  028E                     	;# 
   181  028F                     	;# 
   182  0290                     	;# 
   183  0291                     	;# 
   184  030C                     	;# 
   185  030C                     	;# 
   186  030D                     	;# 
   187  030E                     	;# 
   188  030F                     	;# 
   189  0310                     	;# 
   190  0310                     	;# 
   191  0311                     	;# 
   192  0312                     	;# 
   193  0313                     	;# 
   194  0314                     	;# 
   195  0314                     	;# 
   196  0315                     	;# 
   197  0316                     	;# 
   198  0318                     	;# 
   199  0318                     	;# 
   200  0319                     	;# 
   201  031A                     	;# 
   202  031C                     	;# 
   203  031C                     	;# 
   204  031D                     	;# 
   205  031E                     	;# 
   206  038C                     	;# 
   207  038C                     	;# 
   208  038D                     	;# 
   209  038E                     	;# 
   210  058C                     	;# 
   211  058C                     	;# 
   212  058D                     	;# 
   213  058E                     	;# 
   214  058F                     	;# 
   215  058F                     	;# 
   216  0590                     	;# 
   217  0591                     	;# 
   218  0592                     	;# 
   219  0593                     	;# 
   220  059C                     	;# 
   221  059C                     	;# 
   222  059D                     	;# 
   223  059D                     	;# 
   224  059E                     	;# 
   225  059F                     	;# 
   226  060C                     	;# 
   227  060D                     	;# 
   228  060E                     	;# 
   229  060F                     	;# 
   230  0610                     	;# 
   231  0611                     	;# 
   232  0612                     	;# 
   233  0613                     	;# 
   234  0614                     	;# 
   235  070C                     	;# 
   236  070D                     	;# 
   237  070E                     	;# 
   238  070F                     	;# 
   239  0710                     	;# 
   240  0711                     	;# 
   241  0712                     	;# 
   242  0713                     	;# 
   243  0716                     	;# 
   244  0717                     	;# 
   245  0718                     	;# 
   246  0719                     	;# 
   247  071A                     	;# 
   248  071B                     	;# 
   249  071C                     	;# 
   250  071D                     	;# 
   251  0796                     	;# 
   252  0797                     	;# 
   253  0798                     	;# 
   254  0799                     	;# 
   255  079A                     	;# 
   256  079B                     	;# 
   257  080C                     	;# 
   258  080D                     	;# 
   259  080E                     	;# 
   260  080F                     	;# 
   261  0810                     	;# 
   262  0811                     	;# 
   263  0812                     	;# 
   264  0813                     	;# 
   265  0814                     	;# 
   266  081A                     	;# 
   267  081A                     	;# 
   268  081B                     	;# 
   269  081C                     	;# 
   270  081C                     	;# 
   271  081D                     	;# 
   272  081E                     	;# 
   273  081F                     	;# 
   274  088C                     	;# 
   275  088D                     	;# 
   276  088E                     	;# 
   277  088F                     	;# 
   278  0890                     	;# 
   279  0891                     	;# 
   280  0892                     	;# 
   281  0893                     	;# 
   282  0895                     	;# 
   283  0896                     	;# 
   284  090C                     	;# 
   285  090E                     	;# 
   286  090F                     	;# 
   287  091F                     	;# 
   288  098F                     	;# 
   289  098F                     	;# 
   290  0990                     	;# 
   291  0991                     	;# 
   292  0992                     	;# 
   293  0993                     	;# 
   294  0994                     	;# 
   295  0995                     	;# 
   296  0996                     	;# 
   297  0997                     	;# 
   298  1E0F                     	;# 
   299  1E10                     	;# 
   300  1E11                     	;# 
   301  1E12                     	;# 
   302  1E13                     	;# 
   303  1E14                     	;# 
   304  1E15                     	;# 
   305  1E16                     	;# 
   306  1E17                     	;# 
   307  1E18                     	;# 
   308  1E19                     	;# 
   309  1E1A                     	;# 
   310  1E1B                     	;# 
   311  1E1C                     	;# 
   312  1E1D                     	;# 
   313  1E1E                     	;# 
   314  1E1F                     	;# 
   315  1E20                     	;# 
   316  1E21                     	;# 
   317  1E22                     	;# 
   318  1E23                     	;# 
   319  1E24                     	;# 
   320  1E25                     	;# 
   321  1E26                     	;# 
   322  1E27                     	;# 
   323  1E28                     	;# 
   324  1E29                     	;# 
   325  1E2A                     	;# 
   326  1E2B                     	;# 
   327  1E2C                     	;# 
   328  1E2D                     	;# 
   329  1E2E                     	;# 
   330  1E2F                     	;# 
   331  1E30                     	;# 
   332  1E31                     	;# 
   333  1E32                     	;# 
   334  1E33                     	;# 
   335  1E34                     	;# 
   336  1E35                     	;# 
   337  1E36                     	;# 
   338  1E37                     	;# 
   339  1E8F                     	;# 
   340  1E90                     	;# 
   341  1E91                     	;# 
   342  1E92                     	;# 
   343  1E93                     	;# 
   344  1E9C                     	;# 
   345  1EA1                     	;# 
   346  1EA2                     	;# 
   347  1EB1                     	;# 
   348  1EBB                     	;# 
   349  1EBC                     	;# 
   350  1EBD                     	;# 
   351  1EBE                     	;# 
   352  1EC3                     	;# 
   353  1EC5                     	;# 
   354  1EC6                     	;# 
   355  1EC7                     	;# 
   356  1ECB                     	;# 
   357  1ECC                     	;# 
   358  1F10                     	;# 
   359  1F11                     	;# 
   360  1F12                     	;# 
   361  1F13                     	;# 
   362  1F14                     	;# 
   363  1F15                     	;# 
   364  1F20                     	;# 
   365  1F21                     	;# 
   366  1F22                     	;# 
   367  1F23                     	;# 
   368  1F24                     	;# 
   369  1F25                     	;# 
   370  1F38                     	;# 
   371  1F39                     	;# 
   372  1F3A                     	;# 
   373  1F3B                     	;# 
   374  1F3C                     	;# 
   375  1F3D                     	;# 
   376  1F3E                     	;# 
   377  1F3F                     	;# 
   378  1F4E                     	;# 
   379  1F4F                     	;# 
   380  1F50                     	;# 
   381  1F51                     	;# 
   382  1F52                     	;# 
   383  1F53                     	;# 
   384  1F54                     	;# 
   385  1F55                     	;# 
   386  1FE4                     	;# 
   387  1FE5                     	;# 
   388  1FE6                     	;# 
   389  1FE7                     	;# 
   390  1FE8                     	;# 
   391  1FE8                     	;# 
   392  1FE9                     	;# 
   393  1FEA                     	;# 
   394  1FEA                     	;# 
   395  1FEB                     	;# 
   396  1FED                     	;# 
   397  1FEE                     	;# 
   398  1FEF                     	;# 
   399  0000                     	;# 
   400  0001                     	;# 
   401  0002                     	;# 
   402  0003                     	;# 
   403  0004                     	;# 
   404  0005                     	;# 
   405  0006                     	;# 
   406  0007                     	;# 
   407  0008                     	;# 
   408  0009                     	;# 
   409  000A                     	;# 
   410  000B                     	;# 
   411  000C                     	;# 
   412  000E                     	;# 
   413  0012                     	;# 
   414  0014                     	;# 
   415  0018                     	;# 
   416  001A                     	;# 
   417  009B                     	;# 
   418  009B                     	;# 
   419  009C                     	;# 
   420  009D                     	;# 
   421  009E                     	;# 
   422  009F                     	;# 
   423  0119                     	;# 
   424  0119                     	;# 
   425  0119                     	;# 
   426  011A                     	;# 
   427  011A                     	;# 
   428  011A                     	;# 
   429  011B                     	;# 
   430  011B                     	;# 
   431  011B                     	;# 
   432  011B                     	;# 
   433  011B                     	;# 
   434  011C                     	;# 
   435  011C                     	;# 
   436  011C                     	;# 
   437  011D                     	;# 
   438  011D                     	;# 
   439  011D                     	;# 
   440  011E                     	;# 
   441  011E                     	;# 
   442  011E                     	;# 
   443  011F                     	;# 
   444  011F                     	;# 
   445  011F                     	;# 
   446  011F                     	;# 
   447  011F                     	;# 
   448  018C                     	;# 
   449  018D                     	;# 
   450  018E                     	;# 
   451  018F                     	;# 
   452  0190                     	;# 
   453  0191                     	;# 
   454  0192                     	;# 
   455  020C                     	;# 
   456  020C                     	;# 
   457  020D                     	;# 
   458  020E                     	;# 
   459  020F                     	;# 
   460  020F                     	;# 
   461  0210                     	;# 
   462  0210                     	;# 
   463  0211                     	;# 
   464  0211                     	;# 
   465  028C                     	;# 
   466  028C                     	;# 
   467  028D                     	;# 
   468  028D                     	;# 
   469  028E                     	;# 
   470  028F                     	;# 
   471  0290                     	;# 
   472  0291                     	;# 
   473  030C                     	;# 
   474  030C                     	;# 
   475  030D                     	;# 
   476  030E                     	;# 
   477  030F                     	;# 
   478  0310                     	;# 
   479  0310                     	;# 
   480  0311                     	;# 
   481  0312                     	;# 
   482  0313                     	;# 
   483  0314                     	;# 
   484  0314                     	;# 
   485  0315                     	;# 
   486  0316                     	;# 
   487  0318                     	;# 
   488  0318                     	;# 
   489  0319                     	;# 
   490  031A                     	;# 
   491  031C                     	;# 
   492  031C                     	;# 
   493  031D                     	;# 
   494  031E                     	;# 
   495  038C                     	;# 
   496  038C                     	;# 
   497  038D                     	;# 
   498  038E                     	;# 
   499  058C                     	;# 
   500  058C                     	;# 
   501  058D                     	;# 
   502  058E                     	;# 
   503  058F                     	;# 
   504  058F                     	;# 
   505  0590                     	;# 
   506  0591                     	;# 
   507  0592                     	;# 
   508  0593                     	;# 
   509  059C                     	;# 
   510  059C                     	;# 
   511  059D                     	;# 
   512  059D                     	;# 
   513  059E                     	;# 
   514  059F                     	;# 
   515  060C                     	;# 
   516  060D                     	;# 
   517  060E                     	;# 
   518  060F                     	;# 
   519  0610                     	;# 
   520  0611                     	;# 
   521  0612                     	;# 
   522  0613                     	;# 
   523  0614                     	;# 
   524  070C                     	;# 
   525  070D                     	;# 
   526  070E                     	;# 
   527  070F                     	;# 
   528  0710                     	;# 
   529  0711                     	;# 
   530  0712                     	;# 
   531  0713                     	;# 
   532  0716                     	;# 
   533  0717                     	;# 
   534  0718                     	;# 
   535  0719                     	;# 
   536  071A                     	;# 
   537  071B                     	;# 
   538  071C                     	;# 
   539  071D                     	;# 
   540  0796                     	;# 
   541  0797                     	;# 
   542  0798                     	;# 
   543  0799                     	;# 
   544  079A                     	;# 
   545  079B                     	;# 
   546  080C                     	;# 
   547  080D                     	;# 
   548  080E                     	;# 
   549  080F                     	;# 
   550  0810                     	;# 
   551  0811                     	;# 
   552  0812                     	;# 
   553  0813                     	;# 
   554  0814                     	;# 
   555  081A                     	;# 
   556  081A                     	;# 
   557  081B                     	;# 
   558  081C                     	;# 
   559  081C                     	;# 
   560  081D                     	;# 
   561  081E                     	;# 
   562  081F                     	;# 
   563  088C                     	;# 
   564  088D                     	;# 
   565  088E                     	;# 
   566  088F                     	;# 
   567  0890                     	;# 
   568  0891                     	;# 
   569  0892                     	;# 
   570  0893                     	;# 
   571  0895                     	;# 
   572  0896                     	;# 
   573  090C                     	;# 
   574  090E                     	;# 
   575  090F                     	;# 
   576  091F                     	;# 
   577  098F                     	;# 
   578  098F                     	;# 
   579  0990                     	;# 
   580  0991                     	;# 
   581  0992                     	;# 
   582  0993                     	;# 
   583  0994                     	;# 
   584  0995                     	;# 
   585  0996                     	;# 
   586  0997                     	;# 
   587  1E0F                     	;# 
   588  1E10                     	;# 
   589  1E11                     	;# 
   590  1E12                     	;# 
   591  1E13                     	;# 
   592  1E14                     	;# 
   593  1E15                     	;# 
   594  1E16                     	;# 
   595  1E17                     	;# 
   596  1E18                     	;# 
   597  1E19                     	;# 
   598  1E1A                     	;# 
   599  1E1B                     	;# 
   600  1E1C                     	;# 
   601  1E1D                     	;# 
   602  1E1E                     	;# 
   603  1E1F                     	;# 
   604  1E20                     	;# 
   605  1E21                     	;# 
   606  1E22                     	;# 
   607  1E23                     	;# 
   608  1E24                     	;# 
   609  1E25                     	;# 
   610  1E26                     	;# 
   611  1E27                     	;# 
   612  1E28                     	;# 
   613  1E29                     	;# 
   614  1E2A                     	;# 
   615  1E2B                     	;# 
   616  1E2C                     	;# 
   617  1E2D                     	;# 
   618  1E2E                     	;# 
   619  1E2F                     	;# 
   620  1E30                     	;# 
   621  1E31                     	;# 
   622  1E32                     	;# 
   623  1E33                     	;# 
   624  1E34                     	;# 
   625  1E35                     	;# 
   626  1E36                     	;# 
   627  1E37                     	;# 
   628  1E8F                     	;# 
   629  1E90                     	;# 
   630  1E91                     	;# 
   631  1E92                     	;# 
   632  1E93                     	;# 
   633  1E9C                     	;# 
   634  1EA1                     	;# 
   635  1EA2                     	;# 
   636  1EB1                     	;# 
   637  1EBB                     	;# 
   638  1EBC                     	;# 
   639  1EBD                     	;# 
   640  1EBE                     	;# 
   641  1EC3                     	;# 
   642  1EC5                     	;# 
   643  1EC6                     	;# 
   644  1EC7                     	;# 
   645  1ECB                     	;# 
   646  1ECC                     	;# 
   647  1F10                     	;# 
   648  1F11                     	;# 
   649  1F12                     	;# 
   650  1F13                     	;# 
   651  1F14                     	;# 
   652  1F15                     	;# 
   653  1F20                     	;# 
   654  1F21                     	;# 
   655  1F22                     	;# 
   656  1F23                     	;# 
   657  1F24                     	;# 
   658  1F25                     	;# 
   659  1F38                     	;# 
   660  1F39                     	;# 
   661  1F3A                     	;# 
   662  1F3B                     	;# 
   663  1F3C                     	;# 
   664  1F3D                     	;# 
   665  1F3E                     	;# 
   666  1F3F                     	;# 
   667  1F4E                     	;# 
   668  1F4F                     	;# 
   669  1F50                     	;# 
   670  1F51                     	;# 
   671  1F52                     	;# 
   672  1F53                     	;# 
   673  1F54                     	;# 
   674  1F55                     	;# 
   675  1FE4                     	;# 
   676  1FE5                     	;# 
   677  1FE6                     	;# 
   678  1FE7                     	;# 
   679  1FE8                     	;# 
   680  1FE8                     	;# 
   681  1FE9                     	;# 
   682  1FEA                     	;# 
   683  1FEA                     	;# 
   684  1FEB                     	;# 
   685  1FED                     	;# 
   686  1FEE                     	;# 
   687  1FEF                     	;# 
   688  0000                     	;# 
   689  0001                     	;# 
   690  0002                     	;# 
   691  0003                     	;# 
   692  0004                     	;# 
   693  0005                     	;# 
   694  0006                     	;# 
   695  0007                     	;# 
   696  0008                     	;# 
   697  0009                     	;# 
   698  000A                     	;# 
   699  000B                     	;# 
   700  000C                     	;# 
   701  000E                     	;# 
   702  0012                     	;# 
   703  0014                     	;# 
   704  0018                     	;# 
   705  001A                     	;# 
   706  009B                     	;# 
   707  009B                     	;# 
   708  009C                     	;# 
   709  009D                     	;# 
   710  009E                     	;# 
   711  009F                     	;# 
   712  0119                     	;# 
   713  0119                     	;# 
   714  0119                     	;# 
   715  011A                     	;# 
   716  011A                     	;# 
   717  011A                     	;# 
   718  011B                     	;# 
   719  011B                     	;# 
   720  011B                     	;# 
   721  011B                     	;# 
   722  011B                     	;# 
   723  011C                     	;# 
   724  011C                     	;# 
   725  011C                     	;# 
   726  011D                     	;# 
   727  011D                     	;# 
   728  011D                     	;# 
   729  011E                     	;# 
   730  011E                     	;# 
   731  011E                     	;# 
   732  011F                     	;# 
   733  011F                     	;# 
   734  011F                     	;# 
   735  011F                     	;# 
   736  011F                     	;# 
   737  018C                     	;# 
   738  018D                     	;# 
   739  018E                     	;# 
   740  018F                     	;# 
   741  0190                     	;# 
   742  0191                     	;# 
   743  0192                     	;# 
   744  020C                     	;# 
   745  020C                     	;# 
   746  020D                     	;# 
   747  020E                     	;# 
   748  020F                     	;# 
   749  020F                     	;# 
   750  0210                     	;# 
   751  0210                     	;# 
   752  0211                     	;# 
   753  0211                     	;# 
   754  028C                     	;# 
   755  028C                     	;# 
   756  028D                     	;# 
   757  028D                     	;# 
   758  028E                     	;# 
   759  028F                     	;# 
   760  0290                     	;# 
   761  0291                     	;# 
   762  030C                     	;# 
   763  030C                     	;# 
   764  030D                     	;# 
   765  030E                     	;# 
   766  030F                     	;# 
   767  0310                     	;# 
   768  0310                     	;# 
   769  0311                     	;# 
   770  0312                     	;# 
   771  0313                     	;# 
   772  0314                     	;# 
   773  0314                     	;# 
   774  0315                     	;# 
   775  0316                     	;# 
   776  0318                     	;# 
   777  0318                     	;# 
   778  0319                     	;# 
   779  031A                     	;# 
   780  031C                     	;# 
   781  031C                     	;# 
   782  031D                     	;# 
   783  031E                     	;# 
   784  038C                     	;# 
   785  038C                     	;# 
   786  038D                     	;# 
   787  038E                     	;# 
   788  058C                     	;# 
   789  058C                     	;# 
   790  058D                     	;# 
   791  058E                     	;# 
   792  058F                     	;# 
   793  058F                     	;# 
   794  0590                     	;# 
   795  0591                     	;# 
   796  0592                     	;# 
   797  0593                     	;# 
   798  059C                     	;# 
   799  059C                     	;# 
   800  059D                     	;# 
   801  059D                     	;# 
   802  059E                     	;# 
   803  059F                     	;# 
   804  060C                     	;# 
   805  060D                     	;# 
   806  060E                     	;# 
   807  060F                     	;# 
   808  0610                     	;# 
   809  0611                     	;# 
   810  0612                     	;# 
   811  0613                     	;# 
   812  0614                     	;# 
   813  070C                     	;# 
   814  070D                     	;# 
   815  070E                     	;# 
   816  070F                     	;# 
   817  0710                     	;# 
   818  0711                     	;# 
   819  0712                     	;# 
   820  0713                     	;# 
   821  0716                     	;# 
   822  0717                     	;# 
   823  0718                     	;# 
   824  0719                     	;# 
   825  071A                     	;# 
   826  071B                     	;# 
   827  071C                     	;# 
   828  071D                     	;# 
   829  0796                     	;# 
   830  0797                     	;# 
   831  0798                     	;# 
   832  0799                     	;# 
   833  079A                     	;# 
   834  079B                     	;# 
   835  080C                     	;# 
   836  080D                     	;# 
   837  080E                     	;# 
   838  080F                     	;# 
   839  0810                     	;# 
   840  0811                     	;# 
   841  0812                     	;# 
   842  0813                     	;# 
   843  0814                     	;# 
   844  081A                     	;# 
   845  081A                     	;# 
   846  081B                     	;# 
   847  081C                     	;# 
   848  081C                     	;# 
   849  081D                     	;# 
   850  081E                     	;# 
   851  081F                     	;# 
   852  088C                     	;# 
   853  088D                     	;# 
   854  088E                     	;# 
   855  088F                     	;# 
   856  0890                     	;# 
   857  0891                     	;# 
   858  0892                     	;# 
   859  0893                     	;# 
   860  0895                     	;# 
   861  0896                     	;# 
   862  090C                     	;# 
   863  090E                     	;# 
   864  090F                     	;# 
   865  091F                     	;# 
   866  098F                     	;# 
   867  098F                     	;# 
   868  0990                     	;# 
   869  0991                     	;# 
   870  0992                     	;# 
   871  0993                     	;# 
   872  0994                     	;# 
   873  0995                     	;# 
   874  0996                     	;# 
   875  0997                     	;# 
   876  1E0F                     	;# 
   877  1E10                     	;# 
   878  1E11                     	;# 
   879  1E12                     	;# 
   880  1E13                     	;# 
   881  1E14                     	;# 
   882  1E15                     	;# 
   883  1E16                     	;# 
   884  1E17                     	;# 
   885  1E18                     	;# 
   886  1E19                     	;# 
   887  1E1A                     	;# 
   888  1E1B                     	;# 
   889  1E1C                     	;# 
   890  1E1D                     	;# 
   891  1E1E                     	;# 
   892  1E1F                     	;# 
   893  1E20                     	;# 
   894  1E21                     	;# 
   895  1E22                     	;# 
   896  1E23                     	;# 
   897  1E24                     	;# 
   898  1E25                     	;# 
   899  1E26                     	;# 
   900  1E27                     	;# 
   901  1E28                     	;# 
   902  1E29                     	;# 
   903  1E2A                     	;# 
   904  1E2B                     	;# 
   905  1E2C                     	;# 
   906  1E2D                     	;# 
   907  1E2E                     	;# 
   908  1E2F                     	;# 
   909  1E30                     	;# 
   910  1E31                     	;# 
   911  1E32                     	;# 
   912  1E33                     	;# 
   913  1E34                     	;# 
   914  1E35                     	;# 
   915  1E36                     	;# 
   916  1E37                     	;# 
   917  1E8F                     	;# 
   918  1E90                     	;# 
   919  1E91                     	;# 
   920  1E92                     	;# 
   921  1E93                     	;# 
   922  1E9C                     	;# 
   923  1EA1                     	;# 
   924  1EA2                     	;# 
   925  1EB1                     	;# 
   926  1EBB                     	;# 
   927  1EBC                     	;# 
   928  1EBD                     	;# 
   929  1EBE                     	;# 
   930  1EC3                     	;# 
   931  1EC5                     	;# 
   932  1EC6                     	;# 
   933  1EC7                     	;# 
   934  1ECB                     	;# 
   935  1ECC                     	;# 
   936  1F10                     	;# 
   937  1F11                     	;# 
   938  1F12                     	;# 
   939  1F13                     	;# 
   940  1F14                     	;# 
   941  1F15                     	;# 
   942  1F20                     	;# 
   943  1F21                     	;# 
   944  1F22                     	;# 
   945  1F23                     	;# 
   946  1F24                     	;# 
   947  1F25                     	;# 
   948  1F38                     	;# 
   949  1F39                     	;# 
   950  1F3A                     	;# 
   951  1F3B                     	;# 
   952  1F3C                     	;# 
   953  1F3D                     	;# 
   954  1F3E                     	;# 
   955  1F3F                     	;# 
   956  1F4E                     	;# 
   957  1F4F                     	;# 
   958  1F50                     	;# 
   959  1F51                     	;# 
   960  1F52                     	;# 
   961  1F53                     	;# 
   962  1F54                     	;# 
   963  1F55                     	;# 
   964  1FE4                     	;# 
   965  1FE5                     	;# 
   966  1FE6                     	;# 
   967  1FE7                     	;# 
   968  1FE8                     	;# 
   969  1FE8                     	;# 
   970  1FE9                     	;# 
   971  1FEA                     	;# 
   972  1FEA                     	;# 
   973  1FEB                     	;# 
   974  1FED                     	;# 
   975  1FEE                     	;# 
   976  1FEF                     	;# 
   977  0000                     	;# 
   978  0001                     	;# 
   979  0002                     	;# 
   980  0003                     	;# 
   981  0004                     	;# 
   982  0005                     	;# 
   983  0006                     	;# 
   984  0007                     	;# 
   985  0008                     	;# 
   986  0009                     	;# 
   987  000A                     	;# 
   988  000B                     	;# 
   989  000C                     	;# 
   990  000E                     	;# 
   991  0012                     	;# 
   992  0014                     	;# 
   993  0018                     	;# 
   994  001A                     	;# 
   995  009B                     	;# 
   996  009B                     	;# 
   997  009C                     	;# 
   998  009D                     	;# 
   999  009E                     	;# 
  1000  009F                     	;# 
  1001  0119                     	;# 
  1002  0119                     	;# 
  1003  0119                     	;# 
  1004  011A                     	;# 
  1005  011A                     	;# 
  1006  011A                     	;# 
  1007  011B                     	;# 
  1008  011B                     	;# 
  1009  011B                     	;# 
  1010  011B                     	;# 
  1011  011B                     	;# 
  1012  011C                     	;# 
  1013  011C                     	;# 
  1014  011C                     	;# 
  1015  011D                     	;# 
  1016  011D                     	;# 
  1017  011D                     	;# 
  1018  011E                     	;# 
  1019  011E                     	;# 
  1020  011E                     	;# 
  1021  011F                     	;# 
  1022  011F                     	;# 
  1023  011F                     	;# 
  1024  011F                     	;# 
  1025  011F                     	;# 
  1026  018C                     	;# 
  1027  018D                     	;# 
  1028  018E                     	;# 
  1029  018F                     	;# 
  1030  0190                     	;# 
  1031  0191                     	;# 
  1032  0192                     	;# 
  1033  020C                     	;# 
  1034  020C                     	;# 
  1035  020D                     	;# 
  1036  020E                     	;# 
  1037  020F                     	;# 
  1038  020F                     	;# 
  1039  0210                     	;# 
  1040  0210                     	;# 
  1041  0211                     	;# 
  1042  0211                     	;# 
  1043  028C                     	;# 
  1044  028C                     	;# 
  1045  028D                     	;# 
  1046  028D                     	;# 
  1047  028E                     	;# 
  1048  028F                     	;# 
  1049  0290                     	;# 
  1050  0291                     	;# 
  1051  030C                     	;# 
  1052  030C                     	;# 
  1053  030D                     	;# 
  1054  030E                     	;# 
  1055  030F                     	;# 
  1056  0310                     	;# 
  1057  0310                     	;# 
  1058  0311                     	;# 
  1059  0312                     	;# 
  1060  0313                     	;# 
  1061  0314                     	;# 
  1062  0314                     	;# 
  1063  0315                     	;# 
  1064  0316                     	;# 
  1065  0318                     	;# 
  1066  0318                     	;# 
  1067  0319                     	;# 
  1068  031A                     	;# 
  1069  031C                     	;# 
  1070  031C                     	;# 
  1071  031D                     	;# 
  1072  031E                     	;# 
  1073  038C                     	;# 
  1074  038C                     	;# 
  1075  038D                     	;# 
  1076  038E                     	;# 
  1077  058C                     	;# 
  1078  058C                     	;# 
  1079  058D                     	;# 
  1080  058E                     	;# 
  1081  058F                     	;# 
  1082  058F                     	;# 
  1083  0590                     	;# 
  1084  0591                     	;# 
  1085  0592                     	;# 
  1086  0593                     	;# 
  1087  059C                     	;# 
  1088  059C                     	;# 
  1089  059D                     	;# 
  1090  059D                     	;# 
  1091  059E                     	;# 
  1092  059F                     	;# 
  1093  060C                     	;# 
  1094  060D                     	;# 
  1095  060E                     	;# 
  1096  060F                     	;# 
  1097  0610                     	;# 
  1098  0611                     	;# 
  1099  0612                     	;# 
  1100  0613                     	;# 
  1101  0614                     	;# 
  1102  070C                     	;# 
  1103  070D                     	;# 
  1104  070E                     	;# 
  1105  070F                     	;# 
  1106  0710                     	;# 
  1107  0711                     	;# 
  1108  0712                     	;# 
  1109  0713                     	;# 
  1110  0716                     	;# 
  1111  0717                     	;# 
  1112  0718                     	;# 
  1113  0719                     	;# 
  1114  071A                     	;# 
  1115  071B                     	;# 
  1116  071C                     	;# 
  1117  071D                     	;# 
  1118  0796                     	;# 
  1119  0797                     	;# 
  1120  0798                     	;# 
  1121  0799                     	;# 
  1122  079A                     	;# 
  1123  079B                     	;# 
  1124  080C                     	;# 
  1125  080D                     	;# 
  1126  080E                     	;# 
  1127  080F                     	;# 
  1128  0810                     	;# 
  1129  0811                     	;# 
  1130  0812                     	;# 
  1131  0813                     	;# 
  1132  0814                     	;# 
  1133  081A                     	;# 
  1134  081A                     	;# 
  1135  081B                     	;# 
  1136  081C                     	;# 
  1137  081C                     	;# 
  1138  081D                     	;# 
  1139  081E                     	;# 
  1140  081F                     	;# 
  1141  088C                     	;# 
  1142  088D                     	;# 
  1143  088E                     	;# 
  1144  088F                     	;# 
  1145  0890                     	;# 
  1146  0891                     	;# 
  1147  0892                     	;# 
  1148  0893                     	;# 
  1149  0895                     	;# 
  1150  0896                     	;# 
  1151  090C                     	;# 
  1152  090E                     	;# 
  1153  090F                     	;# 
  1154  091F                     	;# 
  1155  098F                     	;# 
  1156  098F                     	;# 
  1157  0990                     	;# 
  1158  0991                     	;# 
  1159  0992                     	;# 
  1160  0993                     	;# 
  1161  0994                     	;# 
  1162  0995                     	;# 
  1163  0996                     	;# 
  1164  0997                     	;# 
  1165  1E0F                     	;# 
  1166  1E10                     	;# 
  1167  1E11                     	;# 
  1168  1E12                     	;# 
  1169  1E13                     	;# 
  1170  1E14                     	;# 
  1171  1E15                     	;# 
  1172  1E16                     	;# 
  1173  1E17                     	;# 
  1174  1E18                     	;# 
  1175  1E19                     	;# 
  1176  1E1A                     	;# 
  1177  1E1B                     	;# 
  1178  1E1C                     	;# 
  1179  1E1D                     	;# 
  1180  1E1E                     	;# 
  1181  1E1F                     	;# 
  1182  1E20                     	;# 
  1183  1E21                     	;# 
  1184  1E22                     	;# 
  1185  1E23                     	;# 
  1186  1E24                     	;# 
  1187  1E25                     	;# 
  1188  1E26                     	;# 
  1189  1E27                     	;# 
  1190  1E28                     	;# 
  1191  1E29                     	;# 
  1192  1E2A                     	;# 
  1193  1E2B                     	;# 
  1194  1E2C                     	;# 
  1195  1E2D                     	;# 
  1196  1E2E                     	;# 
  1197  1E2F                     	;# 
  1198  1E30                     	;# 
  1199  1E31                     	;# 
  1200  1E32                     	;# 
  1201  1E33                     	;# 
  1202  1E34                     	;# 
  1203  1E35                     	;# 
  1204  1E36                     	;# 
  1205  1E37                     	;# 
  1206  1E8F                     	;# 
  1207  1E90                     	;# 
  1208  1E91                     	;# 
  1209  1E92                     	;# 
  1210  1E93                     	;# 
  1211  1E9C                     	;# 
  1212  1EA1                     	;# 
  1213  1EA2                     	;# 
  1214  1EB1                     	;# 
  1215  1EBB                     	;# 
  1216  1EBC                     	;# 
  1217  1EBD                     	;# 
  1218  1EBE                     	;# 
  1219  1EC3                     	;# 
  1220  1EC5                     	;# 
  1221  1EC6                     	;# 
  1222  1EC7                     	;# 
  1223  1ECB                     	;# 
  1224  1ECC                     	;# 
  1225  1F10                     	;# 
  1226  1F11                     	;# 
  1227  1F12                     	;# 
  1228  1F13                     	;# 
  1229  1F14                     	;# 
  1230  1F15                     	;# 
  1231  1F20                     	;# 
  1232  1F21                     	;# 
  1233  1F22                     	;# 
  1234  1F23                     	;# 
  1235  1F24                     	;# 
  1236  1F25                     	;# 
  1237  1F38                     	;# 
  1238  1F39                     	;# 
  1239  1F3A                     	;# 
  1240  1F3B                     	;# 
  1241  1F3C                     	;# 
  1242  1F3D                     	;# 
  1243  1F3E                     	;# 
  1244  1F3F                     	;# 
  1245  1F4E                     	;# 
  1246  1F4F                     	;# 
  1247  1F50                     	;# 
  1248  1F51                     	;# 
  1249  1F52                     	;# 
  1250  1F53                     	;# 
  1251  1F54                     	;# 
  1252  1F55                     	;# 
  1253  1FE4                     	;# 
  1254  1FE5                     	;# 
  1255  1FE6                     	;# 
  1256  1FE7                     	;# 
  1257  1FE8                     	;# 
  1258  1FE8                     	;# 
  1259  1FE9                     	;# 
  1260  1FEA                     	;# 
  1261  1FEA                     	;# 
  1262  1FEB                     	;# 
  1263  1FED                     	;# 
  1264  1FEE                     	;# 
  1265  1FEF                     	;# 
  1266  0000                     	;# 
  1267  0001                     	;# 
  1268  0002                     	;# 
  1269  0003                     	;# 
  1270  0004                     	;# 
  1271  0005                     	;# 
  1272  0006                     	;# 
  1273  0007                     	;# 
  1274  0008                     	;# 
  1275  0009                     	;# 
  1276  000A                     	;# 
  1277  000B                     	;# 
  1278  000C                     	;# 
  1279  000E                     	;# 
  1280  0012                     	;# 
  1281  0014                     	;# 
  1282  0018                     	;# 
  1283  001A                     	;# 
  1284  009B                     	;# 
  1285  009B                     	;# 
  1286  009C                     	;# 
  1287  009D                     	;# 
  1288  009E                     	;# 
  1289  009F                     	;# 
  1290  0119                     	;# 
  1291  0119                     	;# 
  1292  0119                     	;# 
  1293  011A                     	;# 
  1294  011A                     	;# 
  1295  011A                     	;# 
  1296  011B                     	;# 
  1297  011B                     	;# 
  1298  011B                     	;# 
  1299  011B                     	;# 
  1300  011B                     	;# 
  1301  011C                     	;# 
  1302  011C                     	;# 
  1303  011C                     	;# 
  1304  011D                     	;# 
  1305  011D                     	;# 
  1306  011D                     	;# 
  1307  011E                     	;# 
  1308  011E                     	;# 
  1309  011E                     	;# 
  1310  011F                     	;# 
  1311  011F                     	;# 
  1312  011F                     	;# 
  1313  011F                     	;# 
  1314  011F                     	;# 
  1315  018C                     	;# 
  1316  018D                     	;# 
  1317  018E                     	;# 
  1318  018F                     	;# 
  1319  0190                     	;# 
  1320  0191                     	;# 
  1321  0192                     	;# 
  1322  020C                     	;# 
  1323  020C                     	;# 
  1324  020D                     	;# 
  1325  020E                     	;# 
  1326  020F                     	;# 
  1327  020F                     	;# 
  1328  0210                     	;# 
  1329  0210                     	;# 
  1330  0211                     	;# 
  1331  0211                     	;# 
  1332  028C                     	;# 
  1333  028C                     	;# 
  1334  028D                     	;# 
  1335  028D                     	;# 
  1336  028E                     	;# 
  1337  028F                     	;# 
  1338  0290                     	;# 
  1339  0291                     	;# 
  1340  030C                     	;# 
  1341  030C                     	;# 
  1342  030D                     	;# 
  1343  030E                     	;# 
  1344  030F                     	;# 
  1345  0310                     	;# 
  1346  0310                     	;# 
  1347  0311                     	;# 
  1348  0312                     	;# 
  1349  0313                     	;# 
  1350  0314                     	;# 
  1351  0314                     	;# 
  1352  0315                     	;# 
  1353  0316                     	;# 
  1354  0318                     	;# 
  1355  0318                     	;# 
  1356  0319                     	;# 
  1357  031A                     	;# 
  1358  031C                     	;# 
  1359  031C                     	;# 
  1360  031D                     	;# 
  1361  031E                     	;# 
  1362  038C                     	;# 
  1363  038C                     	;# 
  1364  038D                     	;# 
  1365  038E                     	;# 
  1366  058C                     	;# 
  1367  058C                     	;# 
  1368  058D                     	;# 
  1369  058E                     	;# 
  1370  058F                     	;# 
  1371  058F                     	;# 
  1372  0590                     	;# 
  1373  0591                     	;# 
  1374  0592                     	;# 
  1375  0593                     	;# 
  1376  059C                     	;# 
  1377  059C                     	;# 
  1378  059D                     	;# 
  1379  059D                     	;# 
  1380  059E                     	;# 
  1381  059F                     	;# 
  1382  060C                     	;# 
  1383  060D                     	;# 
  1384  060E                     	;# 
  1385  060F                     	;# 
  1386  0610                     	;# 
  1387  0611                     	;# 
  1388  0612                     	;# 
  1389  0613                     	;# 
  1390  0614                     	;# 
  1391  070C                     	;# 
  1392  070D                     	;# 
  1393  070E                     	;# 
  1394  070F                     	;# 
  1395  0710                     	;# 
  1396  0711                     	;# 
  1397  0712                     	;# 
  1398  0713                     	;# 
  1399  0716                     	;# 
  1400  0717                     	;# 
  1401  0718                     	;# 
  1402  0719                     	;# 
  1403  071A                     	;# 
  1404  071B                     	;# 
  1405  071C                     	;# 
  1406  071D                     	;# 
  1407  0796                     	;# 
  1408  0797                     	;# 
  1409  0798                     	;# 
  1410  0799                     	;# 
  1411  079A                     	;# 
  1412  079B                     	;# 
  1413  080C                     	;# 
  1414  080D                     	;# 
  1415  080E                     	;# 
  1416  080F                     	;# 
  1417  0810                     	;# 
  1418  0811                     	;# 
  1419  0812                     	;# 
  1420  0813                     	;# 
  1421  0814                     	;# 
  1422  081A                     	;# 
  1423  081A                     	;# 
  1424  081B                     	;# 
  1425  081C                     	;# 
  1426  081C                     	;# 
  1427  081D                     	;# 
  1428  081E                     	;# 
  1429  081F                     	;# 
  1430  088C                     	;# 
  1431  088D                     	;# 
  1432  088E                     	;# 
  1433  088F                     	;# 
  1434  0890                     	;# 
  1435  0891                     	;# 
  1436  0892                     	;# 
  1437  0893                     	;# 
  1438  0895                     	;# 
  1439  0896                     	;# 
  1440  090C                     	;# 
  1441  090E                     	;# 
  1442  090F                     	;# 
  1443  091F                     	;# 
  1444  098F                     	;# 
  1445  098F                     	;# 
  1446  0990                     	;# 
  1447  0991                     	;# 
  1448  0992                     	;# 
  1449  0993                     	;# 
  1450  0994                     	;# 
  1451  0995                     	;# 
  1452  0996                     	;# 
  1453  0997                     	;# 
  1454  1E0F                     	;# 
  1455  1E10                     	;# 
  1456  1E11                     	;# 
  1457  1E12                     	;# 
  1458  1E13                     	;# 
  1459  1E14                     	;# 
  1460  1E15                     	;# 
  1461  1E16                     	;# 
  1462  1E17                     	;# 
  1463  1E18                     	;# 
  1464  1E19                     	;# 
  1465  1E1A                     	;# 
  1466  1E1B                     	;# 
  1467  1E1C                     	;# 
  1468  1E1D                     	;# 
  1469  1E1E                     	;# 
  1470  1E1F                     	;# 
  1471  1E20                     	;# 
  1472  1E21                     	;# 
  1473  1E22                     	;# 
  1474  1E23                     	;# 
  1475  1E24                     	;# 
  1476  1E25                     	;# 
  1477  1E26                     	;# 
  1478  1E27                     	;# 
  1479  1E28                     	;# 
  1480  1E29                     	;# 
  1481  1E2A                     	;# 
  1482  1E2B                     	;# 
  1483  1E2C                     	;# 
  1484  1E2D                     	;# 
  1485  1E2E                     	;# 
  1486  1E2F                     	;# 
  1487  1E30                     	;# 
  1488  1E31                     	;# 
  1489  1E32                     	;# 
  1490  1E33                     	;# 
  1491  1E34                     	;# 
  1492  1E35                     	;# 
  1493  1E36                     	;# 
  1494  1E37                     	;# 
  1495  1E8F                     	;# 
  1496  1E90                     	;# 
  1497  1E91                     	;# 
  1498  1E92                     	;# 
  1499  1E93                     	;# 
  1500  1E9C                     	;# 
  1501  1EA1                     	;# 
  1502  1EA2                     	;# 
  1503  1EB1                     	;# 
  1504  1EBB                     	;# 
  1505  1EBC                     	;# 
  1506  1EBD                     	;# 
  1507  1EBE                     	;# 
  1508  1EC3                     	;# 
  1509  1EC5                     	;# 
  1510  1EC6                     	;# 
  1511  1EC7                     	;# 
  1512  1ECB                     	;# 
  1513  1ECC                     	;# 
  1514  1F10                     	;# 
  1515  1F11                     	;# 
  1516  1F12                     	;# 
  1517  1F13                     	;# 
  1518  1F14                     	;# 
  1519  1F15                     	;# 
  1520  1F20                     	;# 
  1521  1F21                     	;# 
  1522  1F22                     	;# 
  1523  1F23                     	;# 
  1524  1F24                     	;# 
  1525  1F25                     	;# 
  1526  1F38                     	;# 
  1527  1F39                     	;# 
  1528  1F3A                     	;# 
  1529  1F3B                     	;# 
  1530  1F3C                     	;# 
  1531  1F3D                     	;# 
  1532  1F3E                     	;# 
  1533  1F3F                     	;# 
  1534  1F4E                     	;# 
  1535  1F4F                     	;# 
  1536  1F50                     	;# 
  1537  1F51                     	;# 
  1538  1F52                     	;# 
  1539  1F53                     	;# 
  1540  1F54                     	;# 
  1541  1F55                     	;# 
  1542  1FE4                     	;# 
  1543  1FE5                     	;# 
  1544  1FE6                     	;# 
  1545  1FE7                     	;# 
  1546  1FE8                     	;# 
  1547  1FE8                     	;# 
  1548  1FE9                     	;# 
  1549  1FEA                     	;# 
  1550  1FEA                     	;# 
  1551  1FEB                     	;# 
  1552  1FED                     	;# 
  1553  1FEE                     	;# 
  1554  1FEF                     	;# 
  1555  0000                     	;# 
  1556  0001                     	;# 
  1557  0002                     	;# 
  1558  0003                     	;# 
  1559  0004                     	;# 
  1560  0005                     	;# 
  1561  0006                     	;# 
  1562  0007                     	;# 
  1563  0008                     	;# 
  1564  0009                     	;# 
  1565  000A                     	;# 
  1566  000B                     	;# 
  1567  000C                     	;# 
  1568  000E                     	;# 
  1569  0012                     	;# 
  1570  0014                     	;# 
  1571  0018                     	;# 
  1572  001A                     	;# 
  1573  009B                     	;# 
  1574  009B                     	;# 
  1575  009C                     	;# 
  1576  009D                     	;# 
  1577  009E                     	;# 
  1578  009F                     	;# 
  1579  0119                     	;# 
  1580  0119                     	;# 
  1581  0119                     	;# 
  1582  011A                     	;# 
  1583  011A                     	;# 
  1584  011A                     	;# 
  1585  011B                     	;# 
  1586  011B                     	;# 
  1587  011B                     	;# 
  1588  011B                     	;# 
  1589  011B                     	;# 
  1590  011C                     	;# 
  1591  011C                     	;# 
  1592  011C                     	;# 
  1593  011D                     	;# 
  1594  011D                     	;# 
  1595  011D                     	;# 
  1596  011E                     	;# 
  1597  011E                     	;# 
  1598  011E                     	;# 
  1599  011F                     	;# 
  1600  011F                     	;# 
  1601  011F                     	;# 
  1602  011F                     	;# 
  1603  011F                     	;# 
  1604  018C                     	;# 
  1605  018D                     	;# 
  1606  018E                     	;# 
  1607  018F                     	;# 
  1608  0190                     	;# 
  1609  0191                     	;# 
  1610  0192                     	;# 
  1611  020C                     	;# 
  1612  020C                     	;# 
  1613  020D                     	;# 
  1614  020E                     	;# 
  1615  020F                     	;# 
  1616  020F                     	;# 
  1617  0210                     	;# 
  1618  0210                     	;# 
  1619  0211                     	;# 
  1620  0211                     	;# 
  1621  028C                     	;# 
  1622  028C                     	;# 
  1623  028D                     	;# 
  1624  028D                     	;# 
  1625  028E                     	;# 
  1626  028F                     	;# 
  1627  0290                     	;# 
  1628  0291                     	;# 
  1629  030C                     	;# 
  1630  030C                     	;# 
  1631  030D                     	;# 
  1632  030E                     	;# 
  1633  030F                     	;# 
  1634  0310                     	;# 
  1635  0310                     	;# 
  1636  0311                     	;# 
  1637  0312                     	;# 
  1638  0313                     	;# 
  1639  0314                     	;# 
  1640  0314                     	;# 
  1641  0315                     	;# 
  1642  0316                     	;# 
  1643  0318                     	;# 
  1644  0318                     	;# 
  1645  0319                     	;# 
  1646  031A                     	;# 
  1647  031C                     	;# 
  1648  031C                     	;# 
  1649  031D                     	;# 
  1650  031E                     	;# 
  1651  038C                     	;# 
  1652  038C                     	;# 
  1653  038D                     	;# 
  1654  038E                     	;# 
  1655  058C                     	;# 
  1656  058C                     	;# 
  1657  058D                     	;# 
  1658  058E                     	;# 
  1659  058F                     	;# 
  1660  058F                     	;# 
  1661  0590                     	;# 
  1662  0591                     	;# 
  1663  0592                     	;# 
  1664  0593                     	;# 
  1665  059C                     	;# 
  1666  059C                     	;# 
  1667  059D                     	;# 
  1668  059D                     	;# 
  1669  059E                     	;# 
  1670  059F                     	;# 
  1671  060C                     	;# 
  1672  060D                     	;# 
  1673  060E                     	;# 
  1674  060F                     	;# 
  1675  0610                     	;# 
  1676  0611                     	;# 
  1677  0612                     	;# 
  1678  0613                     	;# 
  1679  0614                     	;# 
  1680  070C                     	;# 
  1681  070D                     	;# 
  1682  070E                     	;# 
  1683  070F                     	;# 
  1684  0710                     	;# 
  1685  0711                     	;# 
  1686  0712                     	;# 
  1687  0713                     	;# 
  1688  0716                     	;# 
  1689  0717                     	;# 
  1690  0718                     	;# 
  1691  0719                     	;# 
  1692  071A                     	;# 
  1693  071B                     	;# 
  1694  071C                     	;# 
  1695  071D                     	;# 
  1696  0796                     	;# 
  1697  0797                     	;# 
  1698  0798                     	;# 
  1699  0799                     	;# 
  1700  079A                     	;# 
  1701  079B                     	;# 
  1702  080C                     	;# 
  1703  080D                     	;# 
  1704  080E                     	;# 
  1705  080F                     	;# 
  1706  0810                     	;# 
  1707  0811                     	;# 
  1708  0812                     	;# 
  1709  0813                     	;# 
  1710  0814                     	;# 
  1711  081A                     	;# 
  1712  081A                     	;# 
  1713  081B                     	;# 
  1714  081C                     	;# 
  1715  081C                     	;# 
  1716  081D                     	;# 
  1717  081E                     	;# 
  1718  081F                     	;# 
  1719  088C                     	;# 
  1720  088D                     	;# 
  1721  088E                     	;# 
  1722  088F                     	;# 
  1723  0890                     	;# 
  1724  0891                     	;# 
  1725  0892                     	;# 
  1726  0893                     	;# 
  1727  0895                     	;# 
  1728  0896                     	;# 
  1729  090C                     	;# 
  1730  090E                     	;# 
  1731  090F                     	;# 
  1732  091F                     	;# 
  1733  098F                     	;# 
  1734  098F                     	;# 
  1735  0990                     	;# 
  1736  0991                     	;# 
  1737  0992                     	;# 
  1738  0993                     	;# 
  1739  0994                     	;# 
  1740  0995                     	;# 
  1741  0996                     	;# 
  1742  0997                     	;# 
  1743  1E0F                     	;# 
  1744  1E10                     	;# 
  1745  1E11                     	;# 
  1746  1E12                     	;# 
  1747  1E13                     	;# 
  1748  1E14                     	;# 
  1749  1E15                     	;# 
  1750  1E16                     	;# 
  1751  1E17                     	;# 
  1752  1E18                     	;# 
  1753  1E19                     	;# 
  1754  1E1A                     	;# 
  1755  1E1B                     	;# 
  1756  1E1C                     	;# 
  1757  1E1D                     	;# 
  1758  1E1E                     	;# 
  1759  1E1F                     	;# 
  1760  1E20                     	;# 
  1761  1E21                     	;# 
  1762  1E22                     	;# 
  1763  1E23                     	;# 
  1764  1E24                     	;# 
  1765  1E25                     	;# 
  1766  1E26                     	;# 
  1767  1E27                     	;# 
  1768  1E28                     	;# 
  1769  1E29                     	;# 
  1770  1E2A                     	;# 
  1771  1E2B                     	;# 
  1772  1E2C                     	;# 
  1773  1E2D                     	;# 
  1774  1E2E                     	;# 
  1775  1E2F                     	;# 
  1776  1E30                     	;# 
  1777  1E31                     	;# 
  1778  1E32                     	;# 
  1779  1E33                     	;# 
  1780  1E34                     	;# 
  1781  1E35                     	;# 
  1782  1E36                     	;# 
  1783  1E37                     	;# 
  1784  1E8F                     	;# 
  1785  1E90                     	;# 
  1786  1E91                     	;# 
  1787  1E92                     	;# 
  1788  1E93                     	;# 
  1789  1E9C                     	;# 
  1790  1EA1                     	;# 
  1791  1EA2                     	;# 
  1792  1EB1                     	;# 
  1793  1EBB                     	;# 
  1794  1EBC                     	;# 
  1795  1EBD                     	;# 
  1796  1EBE                     	;# 
  1797  1EC3                     	;# 
  1798  1EC5                     	;# 
  1799  1EC6                     	;# 
  1800  1EC7                     	;# 
  1801  1ECB                     	;# 
  1802  1ECC                     	;# 
  1803  1F10                     	;# 
  1804  1F11                     	;# 
  1805  1F12                     	;# 
  1806  1F13                     	;# 
  1807  1F14                     	;# 
  1808  1F15                     	;# 
  1809  1F20                     	;# 
  1810  1F21                     	;# 
  1811  1F22                     	;# 
  1812  1F23                     	;# 
  1813  1F24                     	;# 
  1814  1F25                     	;# 
  1815  1F38                     	;# 
  1816  1F39                     	;# 
  1817  1F3A                     	;# 
  1818  1F3B                     	;# 
  1819  1F3C                     	;# 
  1820  1F3D                     	;# 
  1821  1F3E                     	;# 
  1822  1F3F                     	;# 
  1823  1F4E                     	;# 
  1824  1F4F                     	;# 
  1825  1F50                     	;# 
  1826  1F51                     	;# 
  1827  1F52                     	;# 
  1828  1F53                     	;# 
  1829  1F54                     	;# 
  1830  1F55                     	;# 
  1831  1FE4                     	;# 
  1832  1FE5                     	;# 
  1833  1FE6                     	;# 
  1834  1FE7                     	;# 
  1835  1FE8                     	;# 
  1836  1FE8                     	;# 
  1837  1FE9                     	;# 
  1838  1FEA                     	;# 
  1839  1FEA                     	;# 
  1840  1FEB                     	;# 
  1841  1FED                     	;# 
  1842  1FEE                     	;# 
  1843  1FEF                     	;# 
  1844  0000                     	;# 
  1845  0001                     	;# 
  1846  0002                     	;# 
  1847  0003                     	;# 
  1848  0004                     	;# 
  1849  0005                     	;# 
  1850  0006                     	;# 
  1851  0007                     	;# 
  1852  0008                     	;# 
  1853  0009                     	;# 
  1854  000A                     	;# 
  1855  000B                     	;# 
  1856  000C                     	;# 
  1857  000E                     	;# 
  1858  0012                     	;# 
  1859  0014                     	;# 
  1860  0018                     	;# 
  1861  001A                     	;# 
  1862  009B                     	;# 
  1863  009B                     	;# 
  1864  009C                     	;# 
  1865  009D                     	;# 
  1866  009E                     	;# 
  1867  009F                     	;# 
  1868  0119                     	;# 
  1869  0119                     	;# 
  1870  0119                     	;# 
  1871  011A                     	;# 
  1872  011A                     	;# 
  1873  011A                     	;# 
  1874  011B                     	;# 
  1875  011B                     	;# 
  1876  011B                     	;# 
  1877  011B                     	;# 
  1878  011B                     	;# 
  1879  011C                     	;# 
  1880  011C                     	;# 
  1881  011C                     	;# 
  1882  011D                     	;# 
  1883  011D                     	;# 
  1884  011D                     	;# 
  1885  011E                     	;# 
  1886  011E                     	;# 
  1887  011E                     	;# 
  1888  011F                     	;# 
  1889  011F                     	;# 
  1890  011F                     	;# 
  1891  011F                     	;# 
  1892  011F                     	;# 
  1893  018C                     	;# 
  1894  018D                     	;# 
  1895  018E                     	;# 
  1896  018F                     	;# 
  1897  0190                     	;# 
  1898  0191                     	;# 
  1899  0192                     	;# 
  1900  020C                     	;# 
  1901  020C                     	;# 
  1902  020D                     	;# 
  1903  020E                     	;# 
  1904  020F                     	;# 
  1905  020F                     	;# 
  1906  0210                     	;# 
  1907  0210                     	;# 
  1908  0211                     	;# 
  1909  0211                     	;# 
  1910  028C                     	;# 
  1911  028C                     	;# 
  1912  028D                     	;# 
  1913  028D                     	;# 
  1914  028E                     	;# 
  1915  028F                     	;# 
  1916  0290                     	;# 
  1917  0291                     	;# 
  1918  030C                     	;# 
  1919  030C                     	;# 
  1920  030D                     	;# 
  1921  030E                     	;# 
  1922  030F                     	;# 
  1923  0310                     	;# 
  1924  0310                     	;# 
  1925  0311                     	;# 
  1926  0312                     	;# 
  1927  0313                     	;# 
  1928  0314                     	;# 
  1929  0314                     	;# 
  1930  0315                     	;# 
  1931  0316                     	;# 
  1932  0318                     	;# 
  1933  0318                     	;# 
  1934  0319                     	;# 
  1935  031A                     	;# 
  1936  031C                     	;# 
  1937  031C                     	;# 
  1938  031D                     	;# 
  1939  031E                     	;# 
  1940  038C                     	;# 
  1941  038C                     	;# 
  1942  038D                     	;# 
  1943  038E                     	;# 
  1944  058C                     	;# 
  1945  058C                     	;# 
  1946  058D                     	;# 
  1947  058E                     	;# 
  1948  058F                     	;# 
  1949  058F                     	;# 
  1950  0590                     	;# 
  1951  0591                     	;# 
  1952  0592                     	;# 
  1953  0593                     	;# 
  1954  059C                     	;# 
  1955  059C                     	;# 
  1956  059D                     	;# 
  1957  059D                     	;# 
  1958  059E                     	;# 
  1959  059F                     	;# 
  1960  060C                     	;# 
  1961  060D                     	;# 
  1962  060E                     	;# 
  1963  060F                     	;# 
  1964  0610                     	;# 
  1965  0611                     	;# 
  1966  0612                     	;# 
  1967  0613                     	;# 
  1968  0614                     	;# 
  1969  070C                     	;# 
  1970  070D                     	;# 
  1971  070E                     	;# 
  1972  070F                     	;# 
  1973  0710                     	;# 
  1974  0711                     	;# 
  1975  0712                     	;# 
  1976  0713                     	;# 
  1977  0716                     	;# 
  1978  0717                     	;# 
  1979  0718                     	;# 
  1980  0719                     	;# 
  1981  071A                     	;# 
  1982  071B                     	;# 
  1983  071C                     	;# 
  1984  071D                     	;# 
  1985  0796                     	;# 
  1986  0797                     	;# 
  1987  0798                     	;# 
  1988  0799                     	;# 
  1989  079A                     	;# 
  1990  079B                     	;# 
  1991  080C                     	;# 
  1992  080D                     	;# 
  1993  080E                     	;# 
  1994  080F                     	;# 
  1995  0810                     	;# 
  1996  0811                     	;# 
  1997  0812                     	;# 
  1998  0813                     	;# 
  1999  0814                     	;# 
  2000  081A                     	;# 
  2001  081A                     	;# 
  2002  081B                     	;# 
  2003  081C                     	;# 
  2004  081C                     	;# 
  2005  081D                     	;# 
  2006  081E                     	;# 
  2007  081F                     	;# 
  2008  088C                     	;# 
  2009  088D                     	;# 
  2010  088E                     	;# 
  2011  088F                     	;# 
  2012  0890                     	;# 
  2013  0891                     	;# 
  2014  0892                     	;# 
  2015  0893                     	;# 
  2016  0895                     	;# 
  2017  0896                     	;# 
  2018  090C                     	;# 
  2019  090E                     	;# 
  2020  090F                     	;# 
  2021  091F                     	;# 
  2022  098F                     	;# 
  2023  098F                     	;# 
  2024  0990                     	;# 
  2025  0991                     	;# 
  2026  0992                     	;# 
  2027  0993                     	;# 
  2028  0994                     	;# 
  2029  0995                     	;# 
  2030  0996                     	;# 
  2031  0997                     	;# 
  2032  1E0F                     	;# 
  2033  1E10                     	;# 
  2034  1E11                     	;# 
  2035  1E12                     	;# 
  2036  1E13                     	;# 
  2037  1E14                     	;# 
  2038  1E15                     	;# 
  2039  1E16                     	;# 
  2040  1E17                     	;# 
  2041  1E18                     	;# 
  2042  1E19                     	;# 
  2043  1E1A                     	;# 
  2044  1E1B                     	;# 
  2045  1E1C                     	;# 
  2046  1E1D                     	;# 
  2047  1E1E                     	;# 
  2048  1E1F                     	;# 
  2049  1E20                     	;# 
  2050  1E21                     	;# 
  2051  1E22                     	;# 
  2052  1E23                     	;# 
  2053  1E24                     	;# 
  2054  1E25                     	;# 
  2055  1E26                     	;# 
  2056  1E27                     	;# 
  2057  1E28                     	;# 
  2058  1E29                     	;# 
  2059  1E2A                     	;# 
  2060  1E2B                     	;# 
  2061  1E2C                     	;# 
  2062  1E2D                     	;# 
  2063  1E2E                     	;# 
  2064  1E2F                     	;# 
  2065  1E30                     	;# 
  2066  1E31                     	;# 
  2067  1E32                     	;# 
  2068  1E33                     	;# 
  2069  1E34                     	;# 
  2070  1E35                     	;# 
  2071  1E36                     	;# 
  2072  1E37                     	;# 
  2073  1E8F                     	;# 
  2074  1E90                     	;# 
  2075  1E91                     	;# 
  2076  1E92                     	;# 
  2077  1E93                     	;# 
  2078  1E9C                     	;# 
  2079  1EA1                     	;# 
  2080  1EA2                     	;# 
  2081  1EB1                     	;# 
  2082  1EBB                     	;# 
  2083  1EBC                     	;# 
  2084  1EBD                     	;# 
  2085  1EBE                     	;# 
  2086  1EC3                     	;# 
  2087  1EC5                     	;# 
  2088  1EC6                     	;# 
  2089  1EC7                     	;# 
  2090  1ECB                     	;# 
  2091  1ECC                     	;# 
  2092  1F10                     	;# 
  2093  1F11                     	;# 
  2094  1F12                     	;# 
  2095  1F13                     	;# 
  2096  1F14                     	;# 
  2097  1F15                     	;# 
  2098  1F20                     	;# 
  2099  1F21                     	;# 
  2100  1F22                     	;# 
  2101  1F23                     	;# 
  2102  1F24                     	;# 
  2103  1F25                     	;# 
  2104  1F38                     	;# 
  2105  1F39                     	;# 
  2106  1F3A                     	;# 
  2107  1F3B                     	;# 
  2108  1F3C                     	;# 
  2109  1F3D                     	;# 
  2110  1F3E                     	;# 
  2111  1F3F                     	;# 
  2112  1F4E                     	;# 
  2113  1F4F                     	;# 
  2114  1F50                     	;# 
  2115  1F51                     	;# 
  2116  1F52                     	;# 
  2117  1F53                     	;# 
  2118  1F54                     	;# 
  2119  1F55                     	;# 
  2120  1FE4                     	;# 
  2121  1FE5                     	;# 
  2122  1FE6                     	;# 
  2123  1FE7                     	;# 
  2124  1FE8                     	;# 
  2125  1FE8                     	;# 
  2126  1FE9                     	;# 
  2127  1FEA                     	;# 
  2128  1FEA                     	;# 
  2129  1FEB                     	;# 
  2130  1FED                     	;# 
  2131  1FEE                     	;# 
  2132  1FEF                     	;# 
  2133  0000                     	;# 
  2134  0001                     	;# 
  2135  0002                     	;# 
  2136  0003                     	;# 
  2137  0004                     	;# 
  2138  0005                     	;# 
  2139  0006                     	;# 
  2140  0007                     	;# 
  2141  0008                     	;# 
  2142  0009                     	;# 
  2143  000A                     	;# 
  2144  000B                     	;# 
  2145  000C                     	;# 
  2146  000E                     	;# 
  2147  0012                     	;# 
  2148  0014                     	;# 
  2149  0018                     	;# 
  2150  001A                     	;# 
  2151  009B                     	;# 
  2152  009B                     	;# 
  2153  009C                     	;# 
  2154  009D                     	;# 
  2155  009E                     	;# 
  2156  009F                     	;# 
  2157  0119                     	;# 
  2158  0119                     	;# 
  2159  0119                     	;# 
  2160  011A                     	;# 
  2161  011A                     	;# 
  2162  011A                     	;# 
  2163  011B                     	;# 
  2164  011B                     	;# 
  2165  011B                     	;# 
  2166  011B                     	;# 
  2167  011B                     	;# 
  2168  011C                     	;# 
  2169  011C                     	;# 
  2170  011C                     	;# 
  2171  011D                     	;# 
  2172  011D                     	;# 
  2173  011D                     	;# 
  2174  011E                     	;# 
  2175  011E                     	;# 
  2176  011E                     	;# 
  2177  011F                     	;# 
  2178  011F                     	;# 
  2179  011F                     	;# 
  2180  011F                     	;# 
  2181  011F                     	;# 
  2182  018C                     	;# 
  2183  018D                     	;# 
  2184  018E                     	;# 
  2185  018F                     	;# 
  2186  0190                     	;# 
  2187  0191                     	;# 
  2188  0192                     	;# 
  2189  020C                     	;# 
  2190  020C                     	;# 
  2191  020D                     	;# 
  2192  020E                     	;# 
  2193  020F                     	;# 
  2194  020F                     	;# 
  2195  0210                     	;# 
  2196  0210                     	;# 
  2197  0211                     	;# 
  2198  0211                     	;# 
  2199  028C                     	;# 
  2200  028C                     	;# 
  2201  028D                     	;# 
  2202  028D                     	;# 
  2203  028E                     	;# 
  2204  028F                     	;# 
  2205  0290                     	;# 
  2206  0291                     	;# 
  2207  030C                     	;# 
  2208  030C                     	;# 
  2209  030D                     	;# 
  2210  030E                     	;# 
  2211  030F                     	;# 
  2212  0310                     	;# 
  2213  0310                     	;# 
  2214  0311                     	;# 
  2215  0312                     	;# 
  2216  0313                     	;# 
  2217  0314                     	;# 
  2218  0314                     	;# 
  2219  0315                     	;# 
  2220  0316                     	;# 
  2221  0318                     	;# 
  2222  0318                     	;# 
  2223  0319                     	;# 
  2224  031A                     	;# 
  2225  031C                     	;# 
  2226  031C                     	;# 
  2227  031D                     	;# 
  2228  031E                     	;# 
  2229  038C                     	;# 
  2230  038C                     	;# 
  2231  038D                     	;# 
  2232  038E                     	;# 
  2233  058C                     	;# 
  2234  058C                     	;# 
  2235  058D                     	;# 
  2236  058E                     	;# 
  2237  058F                     	;# 
  2238  058F                     	;# 
  2239  0590                     	;# 
  2240  0591                     	;# 
  2241  0592                     	;# 
  2242  0593                     	;# 
  2243  059C                     	;# 
  2244  059C                     	;# 
  2245  059D                     	;# 
  2246  059D                     	;# 
  2247  059E                     	;# 
  2248  059F                     	;# 
  2249  060C                     	;# 
  2250  060D                     	;# 
  2251  060E                     	;# 
  2252  060F                     	;# 
  2253  0610                     	;# 
  2254  0611                     	;# 
  2255  0612                     	;# 
  2256  0613                     	;# 
  2257  0614                     	;# 
  2258  070C                     	;# 
  2259  070D                     	;# 
  2260  070E                     	;# 
  2261  070F                     	;# 
  2262  0710                     	;# 
  2263  0711                     	;# 
  2264  0712                     	;# 
  2265  0713                     	;# 
  2266  0716                     	;# 
  2267  0717                     	;# 
  2268  0718                     	;# 
  2269  0719                     	;# 
  2270  071A                     	;# 
  2271  071B                     	;# 
  2272  071C                     	;# 
  2273  071D                     	;# 
  2274  0796                     	;# 
  2275  0797                     	;# 
  2276  0798                     	;# 
  2277  0799                     	;# 
  2278  079A                     	;# 
  2279  079B                     	;# 
  2280  080C                     	;# 
  2281  080D                     	;# 
  2282  080E                     	;# 
  2283  080F                     	;# 
  2284  0810                     	;# 
  2285  0811                     	;# 
  2286  0812                     	;# 
  2287  0813                     	;# 
  2288  0814                     	;# 
  2289  081A                     	;# 
  2290  081A                     	;# 
  2291  081B                     	;# 
  2292  081C                     	;# 
  2293  081C                     	;# 
  2294  081D                     	;# 
  2295  081E                     	;# 
  2296  081F                     	;# 
  2297  088C                     	;# 
  2298  088D                     	;# 
  2299  088E                     	;# 
  2300  088F                     	;# 
  2301  0890                     	;# 
  2302  0891                     	;# 
  2303  0892                     	;# 
  2304  0893                     	;# 
  2305  0895                     	;# 
  2306  0896                     	;# 
  2307  090C                     	;# 
  2308  090E                     	;# 
  2309  090F                     	;# 
  2310  091F                     	;# 
  2311  098F                     	;# 
  2312  098F                     	;# 
  2313  0990                     	;# 
  2314  0991                     	;# 
  2315  0992                     	;# 
  2316  0993                     	;# 
  2317  0994                     	;# 
  2318  0995                     	;# 
  2319  0996                     	;# 
  2320  0997                     	;# 
  2321  1E0F                     	;# 
  2322  1E10                     	;# 
  2323  1E11                     	;# 
  2324  1E12                     	;# 
  2325  1E13                     	;# 
  2326  1E14                     	;# 
  2327  1E15                     	;# 
  2328  1E16                     	;# 
  2329  1E17                     	;# 
  2330  1E18                     	;# 
  2331  1E19                     	;# 
  2332  1E1A                     	;# 
  2333  1E1B                     	;# 
  2334  1E1C                     	;# 
  2335  1E1D                     	;# 
  2336  1E1E                     	;# 
  2337  1E1F                     	;# 
  2338  1E20                     	;# 
  2339  1E21                     	;# 
  2340  1E22                     	;# 
  2341  1E23                     	;# 
  2342  1E24                     	;# 
  2343  1E25                     	;# 
  2344  1E26                     	;# 
  2345  1E27                     	;# 
  2346  1E28                     	;# 
  2347  1E29                     	;# 
  2348  1E2A                     	;# 
  2349  1E2B                     	;# 
  2350  1E2C                     	;# 
  2351  1E2D                     	;# 
  2352  1E2E                     	;# 
  2353  1E2F                     	;# 
  2354  1E30                     	;# 
  2355  1E31                     	;# 
  2356  1E32                     	;# 
  2357  1E33                     	;# 
  2358  1E34                     	;# 
  2359  1E35                     	;# 
  2360  1E36                     	;# 
  2361  1E37                     	;# 
  2362  1E8F                     	;# 
  2363  1E90                     	;# 
  2364  1E91                     	;# 
  2365  1E92                     	;# 
  2366  1E93                     	;# 
  2367  1E9C                     	;# 
  2368  1EA1                     	;# 
  2369  1EA2                     	;# 
  2370  1EB1                     	;# 
  2371  1EBB                     	;# 
  2372  1EBC                     	;# 
  2373  1EBD                     	;# 
  2374  1EBE                     	;# 
  2375  1EC3                     	;# 
  2376  1EC5                     	;# 
  2377  1EC6                     	;# 
  2378  1EC7                     	;# 
  2379  1ECB                     	;# 
  2380  1ECC                     	;# 
  2381  1F10                     	;# 
  2382  1F11                     	;# 
  2383  1F12                     	;# 
  2384  1F13                     	;# 
  2385  1F14                     	;# 
  2386  1F15                     	;# 
  2387  1F20                     	;# 
  2388  1F21                     	;# 
  2389  1F22                     	;# 
  2390  1F23                     	;# 
  2391  1F24                     	;# 
  2392  1F25                     	;# 
  2393  1F38                     	;# 
  2394  1F39                     	;# 
  2395  1F3A                     	;# 
  2396  1F3B                     	;# 
  2397  1F3C                     	;# 
  2398  1F3D                     	;# 
  2399  1F3E                     	;# 
  2400  1F3F                     	;# 
  2401  1F4E                     	;# 
  2402  1F4F                     	;# 
  2403  1F50                     	;# 
  2404  1F51                     	;# 
  2405  1F52                     	;# 
  2406  1F53                     	;# 
  2407  1F54                     	;# 
  2408  1F55                     	;# 
  2409  1FE4                     	;# 
  2410  1FE5                     	;# 
  2411  1FE6                     	;# 
  2412  1FE7                     	;# 
  2413  1FE8                     	;# 
  2414  1FE8                     	;# 
  2415  1FE9                     	;# 
  2416  1FEA                     	;# 
  2417  1FEA                     	;# 
  2418  1FEB                     	;# 
  2419  1FED                     	;# 
  2420  1FEE                     	;# 
  2421  1FEF                     	;# 
  2422  0000                     	;# 
  2423  0001                     	;# 
  2424  0002                     	;# 
  2425  0003                     	;# 
  2426  0004                     	;# 
  2427  0005                     	;# 
  2428  0006                     	;# 
  2429  0007                     	;# 
  2430  0008                     	;# 
  2431  0009                     	;# 
  2432  000A                     	;# 
  2433  000B                     	;# 
  2434  000C                     	;# 
  2435  000E                     	;# 
  2436  0012                     	;# 
  2437  0014                     	;# 
  2438  0018                     	;# 
  2439  001A                     	;# 
  2440  009B                     	;# 
  2441  009B                     	;# 
  2442  009C                     	;# 
  2443  009D                     	;# 
  2444  009E                     	;# 
  2445  009F                     	;# 
  2446  0119                     	;# 
  2447  0119                     	;# 
  2448  0119                     	;# 
  2449  011A                     	;# 
  2450  011A                     	;# 
  2451  011A                     	;# 
  2452  011B                     	;# 
  2453  011B                     	;# 
  2454  011B                     	;# 
  2455  011B                     	;# 
  2456  011B                     	;# 
  2457  011C                     	;# 
  2458  011C                     	;# 
  2459  011C                     	;# 
  2460  011D                     	;# 
  2461  011D                     	;# 
  2462  011D                     	;# 
  2463  011E                     	;# 
  2464  011E                     	;# 
  2465  011E                     	;# 
  2466  011F                     	;# 
  2467  011F                     	;# 
  2468  011F                     	;# 
  2469  011F                     	;# 
  2470  011F                     	;# 
  2471  018C                     	;# 
  2472  018D                     	;# 
  2473  018E                     	;# 
  2474  018F                     	;# 
  2475  0190                     	;# 
  2476  0191                     	;# 
  2477  0192                     	;# 
  2478  020C                     	;# 
  2479  020C                     	;# 
  2480  020D                     	;# 
  2481  020E                     	;# 
  2482  020F                     	;# 
  2483  020F                     	;# 
  2484  0210                     	;# 
  2485  0210                     	;# 
  2486  0211                     	;# 
  2487  0211                     	;# 
  2488  028C                     	;# 
  2489  028C                     	;# 
  2490  028D                     	;# 
  2491  028D                     	;# 
  2492  028E                     	;# 
  2493  028F                     	;# 
  2494  0290                     	;# 
  2495  0291                     	;# 
  2496  030C                     	;# 
  2497  030C                     	;# 
  2498  030D                     	;# 
  2499  030E                     	;# 
  2500  030F                     	;# 
  2501  0310                     	;# 
  2502  0310                     	;# 
  2503  0311                     	;# 
  2504  0312                     	;# 
  2505  0313                     	;# 
  2506  0314                     	;# 
  2507  0314                     	;# 
  2508  0315                     	;# 
  2509  0316                     	;# 
  2510  0318                     	;# 
  2511  0318                     	;# 
  2512  0319                     	;# 
  2513  031A                     	;# 
  2514  031C                     	;# 
  2515  031C                     	;# 
  2516  031D                     	;# 
  2517  031E                     	;# 
  2518  038C                     	;# 
  2519  038C                     	;# 
  2520  038D                     	;# 
  2521  038E                     	;# 
  2522  058C                     	;# 
  2523  058C                     	;# 
  2524  058D                     	;# 
  2525  058E                     	;# 
  2526  058F                     	;# 
  2527  058F                     	;# 
  2528  0590                     	;# 
  2529  0591                     	;# 
  2530  0592                     	;# 
  2531  0593                     	;# 
  2532  059C                     	;# 
  2533  059C                     	;# 
  2534  059D                     	;# 
  2535  059D                     	;# 
  2536  059E                     	;# 
  2537  059F                     	;# 
  2538  060C                     	;# 
  2539  060D                     	;# 
  2540  060E                     	;# 
  2541  060F                     	;# 
  2542  0610                     	;# 
  2543  0611                     	;# 
  2544  0612                     	;# 
  2545  0613                     	;# 
  2546  0614                     	;# 
  2547  070C                     	;# 
  2548  070D                     	;# 
  2549  070E                     	;# 
  2550  070F                     	;# 
  2551  0710                     	;# 
  2552  0711                     	;# 
  2553  0712                     	;# 
  2554  0713                     	;# 
  2555  0716                     	;# 
  2556  0717                     	;# 
  2557  0718                     	;# 
  2558  0719                     	;# 
  2559  071A                     	;# 
  2560  071B                     	;# 
  2561  071C                     	;# 
  2562  071D                     	;# 
  2563  0796                     	;# 
  2564  0797                     	;# 
  2565  0798                     	;# 
  2566  0799                     	;# 
  2567  079A                     	;# 
  2568  079B                     	;# 
  2569  080C                     	;# 
  2570  080D                     	;# 
  2571  080E                     	;# 
  2572  080F                     	;# 
  2573  0810                     	;# 
  2574  0811                     	;# 
  2575  0812                     	;# 
  2576  0813                     	;# 
  2577  0814                     	;# 
  2578  081A                     	;# 
  2579  081A                     	;# 
  2580  081B                     	;# 
  2581  081C                     	;# 
  2582  081C                     	;# 
  2583  081D                     	;# 
  2584  081E                     	;# 
  2585  081F                     	;# 
  2586  088C                     	;# 
  2587  088D                     	;# 
  2588  088E                     	;# 
  2589  088F                     	;# 
  2590  0890                     	;# 
  2591  0891                     	;# 
  2592  0892                     	;# 
  2593  0893                     	;# 
  2594  0895                     	;# 
  2595  0896                     	;# 
  2596  090C                     	;# 
  2597  090E                     	;# 
  2598  090F                     	;# 
  2599  091F                     	;# 
  2600  098F                     	;# 
  2601  098F                     	;# 
  2602  0990                     	;# 
  2603  0991                     	;# 
  2604  0992                     	;# 
  2605  0993                     	;# 
  2606  0994                     	;# 
  2607  0995                     	;# 
  2608  0996                     	;# 
  2609  0997                     	;# 
  2610  1E0F                     	;# 
  2611  1E10                     	;# 
  2612  1E11                     	;# 
  2613  1E12                     	;# 
  2614  1E13                     	;# 
  2615  1E14                     	;# 
  2616  1E15                     	;# 
  2617  1E16                     	;# 
  2618  1E17                     	;# 
  2619  1E18                     	;# 
  2620  1E19                     	;# 
  2621  1E1A                     	;# 
  2622  1E1B                     	;# 
  2623  1E1C                     	;# 
  2624  1E1D                     	;# 
  2625  1E1E                     	;# 
  2626  1E1F                     	;# 
  2627  1E20                     	;# 
  2628  1E21                     	;# 
  2629  1E22                     	;# 
  2630  1E23                     	;# 
  2631  1E24                     	;# 
  2632  1E25                     	;# 
  2633  1E26                     	;# 
  2634  1E27                     	;# 
  2635  1E28                     	;# 
  2636  1E29                     	;# 
  2637  1E2A                     	;# 
  2638  1E2B                     	;# 
  2639  1E2C                     	;# 
  2640  1E2D                     	;# 
  2641  1E2E                     	;# 
  2642  1E2F                     	;# 
  2643  1E30                     	;# 
  2644  1E31                     	;# 
  2645  1E32                     	;# 
  2646  1E33                     	;# 
  2647  1E34                     	;# 
  2648  1E35                     	;# 
  2649  1E36                     	;# 
  2650  1E37                     	;# 
  2651  1E8F                     	;# 
  2652  1E90                     	;# 
  2653  1E91                     	;# 
  2654  1E92                     	;# 
  2655  1E93                     	;# 
  2656  1E9C                     	;# 
  2657  1EA1                     	;# 
  2658  1EA2                     	;# 
  2659  1EB1                     	;# 
  2660  1EBB                     	;# 
  2661  1EBC                     	;# 
  2662  1EBD                     	;# 
  2663  1EBE                     	;# 
  2664  1EC3                     	;# 
  2665  1EC5                     	;# 
  2666  1EC6                     	;# 
  2667  1EC7                     	;# 
  2668  1ECB                     	;# 
  2669  1ECC                     	;# 
  2670  1F10                     	;# 
  2671  1F11                     	;# 
  2672  1F12                     	;# 
  2673  1F13                     	;# 
  2674  1F14                     	;# 
  2675  1F15                     	;# 
  2676  1F20                     	;# 
  2677  1F21                     	;# 
  2678  1F22                     	;# 
  2679  1F23                     	;# 
  2680  1F24                     	;# 
  2681  1F25                     	;# 
  2682  1F38                     	;# 
  2683  1F39                     	;# 
  2684  1F3A                     	;# 
  2685  1F3B                     	;# 
  2686  1F3C                     	;# 
  2687  1F3D                     	;# 
  2688  1F3E                     	;# 
  2689  1F3F                     	;# 
  2690  1F4E                     	;# 
  2691  1F4F                     	;# 
  2692  1F50                     	;# 
  2693  1F51                     	;# 
  2694  1F52                     	;# 
  2695  1F53                     	;# 
  2696  1F54                     	;# 
  2697  1F55                     	;# 
  2698  1FE4                     	;# 
  2699  1FE5                     	;# 
  2700  1FE6                     	;# 
  2701  1FE7                     	;# 
  2702  1FE8                     	;# 
  2703  1FE8                     	;# 
  2704  1FE9                     	;# 
  2705  1FEA                     	;# 
  2706  1FEA                     	;# 
  2707  1FEB                     	;# 
  2708  1FED                     	;# 
  2709  1FEE                     	;# 
  2710  1FEF                     	;# 
  2711  0000                     	;# 
  2712  0001                     	;# 
  2713  0002                     	;# 
  2714  0003                     	;# 
  2715  0004                     	;# 
  2716  0005                     	;# 
  2717  0006                     	;# 
  2718  0007                     	;# 
  2719  0008                     	;# 
  2720  0009                     	;# 
  2721  000A                     	;# 
  2722  000B                     	;# 
  2723  000C                     	;# 
  2724  000E                     	;# 
  2725  0012                     	;# 
  2726  0014                     	;# 
  2727  0018                     	;# 
  2728  001A                     	;# 
  2729  009B                     	;# 
  2730  009B                     	;# 
  2731  009C                     	;# 
  2732  009D                     	;# 
  2733  009E                     	;# 
  2734  009F                     	;# 
  2735  0119                     	;# 
  2736  0119                     	;# 
  2737  0119                     	;# 
  2738  011A                     	;# 
  2739  011A                     	;# 
  2740  011A                     	;# 
  2741  011B                     	;# 
  2742  011B                     	;# 
  2743  011B                     	;# 
  2744  011B                     	;# 
  2745  011B                     	;# 
  2746  011C                     	;# 
  2747  011C                     	;# 
  2748  011C                     	;# 
  2749  011D                     	;# 
  2750  011D                     	;# 
  2751  011D                     	;# 
  2752  011E                     	;# 
  2753  011E                     	;# 
  2754  011E                     	;# 
  2755  011F                     	;# 
  2756  011F                     	;# 
  2757  011F                     	;# 
  2758  011F                     	;# 
  2759  011F                     	;# 
  2760  018C                     	;# 
  2761  018D                     	;# 
  2762  018E                     	;# 
  2763  018F                     	;# 
  2764  0190                     	;# 
  2765  0191                     	;# 
  2766  0192                     	;# 
  2767  020C                     	;# 
  2768  020C                     	;# 
  2769  020D                     	;# 
  2770  020E                     	;# 
  2771  020F                     	;# 
  2772  020F                     	;# 
  2773  0210                     	;# 
  2774  0210                     	;# 
  2775  0211                     	;# 
  2776  0211                     	;# 
  2777  028C                     	;# 
  2778  028C                     	;# 
  2779  028D                     	;# 
  2780  028D                     	;# 
  2781  028E                     	;# 
  2782  028F                     	;# 
  2783  0290                     	;# 
  2784  0291                     	;# 
  2785  030C                     	;# 
  2786  030C                     	;# 
  2787  030D                     	;# 
  2788  030E                     	;# 
  2789  030F                     	;# 
  2790  0310                     	;# 
  2791  0310                     	;# 
  2792  0311                     	;# 
  2793  0312                     	;# 
  2794  0313                     	;# 
  2795  0314                     	;# 
  2796  0314                     	;# 
  2797  0315                     	;# 
  2798  0316                     	;# 
  2799  0318                     	;# 
  2800  0318                     	;# 
  2801  0319                     	;# 
  2802  031A                     	;# 
  2803  031C                     	;# 
  2804  031C                     	;# 
  2805  031D                     	;# 
  2806  031E                     	;# 
  2807  038C                     	;# 
  2808  038C                     	;# 
  2809  038D                     	;# 
  2810  038E                     	;# 
  2811  058C                     	;# 
  2812  058C                     	;# 
  2813  058D                     	;# 
  2814  058E                     	;# 
  2815  058F                     	;# 
  2816  058F                     	;# 
  2817  0590                     	;# 
  2818  0591                     	;# 
  2819  0592                     	;# 
  2820  0593                     	;# 
  2821  059C                     	;# 
  2822  059C                     	;# 
  2823  059D                     	;# 
  2824  059D                     	;# 
  2825  059E                     	;# 
  2826  059F                     	;# 
  2827  060C                     	;# 
  2828  060D                     	;# 
  2829  060E                     	;# 
  2830  060F                     	;# 
  2831  0610                     	;# 
  2832  0611                     	;# 
  2833  0612                     	;# 
  2834  0613                     	;# 
  2835  0614                     	;# 
  2836  070C                     	;# 
  2837  070D                     	;# 
  2838  070E                     	;# 
  2839  070F                     	;# 
  2840  0710                     	;# 
  2841  0711                     	;# 
  2842  0712                     	;# 
  2843  0713                     	;# 
  2844  0716                     	;# 
  2845  0717                     	;# 
  2846  0718                     	;# 
  2847  0719                     	;# 
  2848  071A                     	;# 
  2849  071B                     	;# 
  2850  071C                     	;# 
  2851  071D                     	;# 
  2852  0796                     	;# 
  2853  0797                     	;# 
  2854  0798                     	;# 
  2855  0799                     	;# 
  2856  079A                     	;# 
  2857  079B                     	;# 
  2858  080C                     	;# 
  2859  080D                     	;# 
  2860  080E                     	;# 
  2861  080F                     	;# 
  2862  0810                     	;# 
  2863  0811                     	;# 
  2864  0812                     	;# 
  2865  0813                     	;# 
  2866  0814                     	;# 
  2867  081A                     	;# 
  2868  081A                     	;# 
  2869  081B                     	;# 
  2870  081C                     	;# 
  2871  081C                     	;# 
  2872  081D                     	;# 
  2873  081E                     	;# 
  2874  081F                     	;# 
  2875  088C                     	;# 
  2876  088D                     	;# 
  2877  088E                     	;# 
  2878  088F                     	;# 
  2879  0890                     	;# 
  2880  0891                     	;# 
  2881  0892                     	;# 
  2882  0893                     	;# 
  2883  0895                     	;# 
  2884  0896                     	;# 
  2885  090C                     	;# 
  2886  090E                     	;# 
  2887  090F                     	;# 
  2888  091F                     	;# 
  2889  098F                     	;# 
  2890  098F                     	;# 
  2891  0990                     	;# 
  2892  0991                     	;# 
  2893  0992                     	;# 
  2894  0993                     	;# 
  2895  0994                     	;# 
  2896  0995                     	;# 
  2897  0996                     	;# 
  2898  0997                     	;# 
  2899  1E0F                     	;# 
  2900  1E10                     	;# 
  2901  1E11                     	;# 
  2902  1E12                     	;# 
  2903  1E13                     	;# 
  2904  1E14                     	;# 
  2905  1E15                     	;# 
  2906  1E16                     	;# 
  2907  1E17                     	;# 
  2908  1E18                     	;# 
  2909  1E19                     	;# 
  2910  1E1A                     	;# 
  2911  1E1B                     	;# 
  2912  1E1C                     	;# 
  2913  1E1D                     	;# 
  2914  1E1E                     	;# 
  2915  1E1F                     	;# 
  2916  1E20                     	;# 
  2917  1E21                     	;# 
  2918  1E22                     	;# 
  2919  1E23                     	;# 
  2920  1E24                     	;# 
  2921  1E25                     	;# 
  2922  1E26                     	;# 
  2923  1E27                     	;# 
  2924  1E28                     	;# 
  2925  1E29                     	;# 
  2926  1E2A                     	;# 
  2927  1E2B                     	;# 
  2928  1E2C                     	;# 
  2929  1E2D                     	;# 
  2930  1E2E                     	;# 
  2931  1E2F                     	;# 
  2932  1E30                     	;# 
  2933  1E31                     	;# 
  2934  1E32                     	;# 
  2935  1E33                     	;# 
  2936  1E34                     	;# 
  2937  1E35                     	;# 
  2938  1E36                     	;# 
  2939  1E37                     	;# 
  2940  1E8F                     	;# 
  2941  1E90                     	;# 
  2942  1E91                     	;# 
  2943  1E92                     	;# 
  2944  1E93                     	;# 
  2945  1E9C                     	;# 
  2946  1EA1                     	;# 
  2947  1EA2                     	;# 
  2948  1EB1                     	;# 
  2949  1EBB                     	;# 
  2950  1EBC                     	;# 
  2951  1EBD                     	;# 
  2952  1EBE                     	;# 
  2953  1EC3                     	;# 
  2954  1EC5                     	;# 
  2955  1EC6                     	;# 
  2956  1EC7                     	;# 
  2957  1ECB                     	;# 
  2958  1ECC                     	;# 
  2959  1F10                     	;# 
  2960  1F11                     	;# 
  2961  1F12                     	;# 
  2962  1F13                     	;# 
  2963  1F14                     	;# 
  2964  1F15                     	;# 
  2965  1F20                     	;# 
  2966  1F21                     	;# 
  2967  1F22                     	;# 
  2968  1F23                     	;# 
  2969  1F24                     	;# 
  2970  1F25                     	;# 
  2971  1F38                     	;# 
  2972  1F39                     	;# 
  2973  1F3A                     	;# 
  2974  1F3B                     	;# 
  2975  1F3C                     	;# 
  2976  1F3D                     	;# 
  2977  1F3E                     	;# 
  2978  1F3F                     	;# 
  2979  1F4E                     	;# 
  2980  1F4F                     	;# 
  2981  1F50                     	;# 
  2982  1F51                     	;# 
  2983  1F52                     	;# 
  2984  1F53                     	;# 
  2985  1F54                     	;# 
  2986  1F55                     	;# 
  2987  1FE4                     	;# 
  2988  1FE5                     	;# 
  2989  1FE6                     	;# 
  2990  1FE7                     	;# 
  2991  1FE8                     	;# 
  2992  1FE8                     	;# 
  2993  1FE9                     	;# 
  2994  1FEA                     	;# 
  2995  1FEA                     	;# 
  2996  1FEB                     	;# 
  2997  1FED                     	;# 
  2998  1FEE                     	;# 
  2999  1FEF                     	;# 
  3000  0000                     	;# 
  3001  0001                     	;# 
  3002  0002                     	;# 
  3003  0003                     	;# 
  3004  0004                     	;# 
  3005  0005                     	;# 
  3006  0006                     	;# 
  3007  0007                     	;# 
  3008  0008                     	;# 
  3009  0009                     	;# 
  3010  000A                     	;# 
  3011  000B                     	;# 
  3012  000C                     	;# 
  3013  000E                     	;# 
  3014  0012                     	;# 
  3015  0014                     	;# 
  3016  0018                     	;# 
  3017  001A                     	;# 
  3018  009B                     	;# 
  3019  009B                     	;# 
  3020  009C                     	;# 
  3021  009D                     	;# 
  3022  009E                     	;# 
  3023  009F                     	;# 
  3024  0119                     	;# 
  3025  0119                     	;# 
  3026  0119                     	;# 
  3027  011A                     	;# 
  3028  011A                     	;# 
  3029  011A                     	;# 
  3030  011B                     	;# 
  3031  011B                     	;# 
  3032  011B                     	;# 
  3033  011B                     	;# 
  3034  011B                     	;# 
  3035  011C                     	;# 
  3036  011C                     	;# 
  3037  011C                     	;# 
  3038  011D                     	;# 
  3039  011D                     	;# 
  3040  011D                     	;# 
  3041  011E                     	;# 
  3042  011E                     	;# 
  3043  011E                     	;# 
  3044  011F                     	;# 
  3045  011F                     	;# 
  3046  011F                     	;# 
  3047  011F                     	;# 
  3048  011F                     	;# 
  3049  018C                     	;# 
  3050  018D                     	;# 
  3051  018E                     	;# 
  3052  018F                     	;# 
  3053  0190                     	;# 
  3054  0191                     	;# 
  3055  0192                     	;# 
  3056  020C                     	;# 
  3057  020C                     	;# 
  3058  020D                     	;# 
  3059  020E                     	;# 
  3060  020F                     	;# 
  3061  020F                     	;# 
  3062  0210                     	;# 
  3063  0210                     	;# 
  3064  0211                     	;# 
  3065  0211                     	;# 
  3066  028C                     	;# 
  3067  028C                     	;# 
  3068  028D                     	;# 
  3069  028D                     	;# 
  3070  028E                     	;# 
  3071  028F                     	;# 
  3072  0290                     	;# 
  3073  0291                     	;# 
  3074  030C                     	;# 
  3075  030C                     	;# 
  3076  030D                     	;# 
  3077  030E                     	;# 
  3078  030F                     	;# 
  3079  0310                     	;# 
  3080  0310                     	;# 
  3081  0311                     	;# 
  3082  0312                     	;# 
  3083  0313                     	;# 
  3084  0314                     	;# 
  3085  0314                     	;# 
  3086  0315                     	;# 
  3087  0316                     	;# 
  3088  0318                     	;# 
  3089  0318                     	;# 
  3090  0319                     	;# 
  3091  031A                     	;# 
  3092  031C                     	;# 
  3093  031C                     	;# 
  3094  031D                     	;# 
  3095  031E                     	;# 
  3096  038C                     	;# 
  3097  038C                     	;# 
  3098  038D                     	;# 
  3099  038E                     	;# 
  3100  058C                     	;# 
  3101  058C                     	;# 
  3102  058D                     	;# 
  3103  058E                     	;# 
  3104  058F                     	;# 
  3105  058F                     	;# 
  3106  0590                     	;# 
  3107  0591                     	;# 
  3108  0592                     	;# 
  3109  0593                     	;# 
  3110  059C                     	;# 
  3111  059C                     	;# 
  3112  059D                     	;# 
  3113  059D                     	;# 
  3114  059E                     	;# 
  3115  059F                     	;# 
  3116  060C                     	;# 
  3117  060D                     	;# 
  3118  060E                     	;# 
  3119  060F                     	;# 
  3120  0610                     	;# 
  3121  0611                     	;# 
  3122  0612                     	;# 
  3123  0613                     	;# 
  3124  0614                     	;# 
  3125  070C                     	;# 
  3126  070D                     	;# 
  3127  070E                     	;# 
  3128  070F                     	;# 
  3129  0710                     	;# 
  3130  0711                     	;# 
  3131  0712                     	;# 
  3132  0713                     	;# 
  3133  0716                     	;# 
  3134  0717                     	;# 
  3135  0718                     	;# 
  3136  0719                     	;# 
  3137  071A                     	;# 
  3138  071B                     	;# 
  3139  071C                     	;# 
  3140  071D                     	;# 
  3141  0796                     	;# 
  3142  0797                     	;# 
  3143  0798                     	;# 
  3144  0799                     	;# 
  3145  079A                     	;# 
  3146  079B                     	;# 
  3147  080C                     	;# 
  3148  080D                     	;# 
  3149  080E                     	;# 
  3150  080F                     	;# 
  3151  0810                     	;# 
  3152  0811                     	;# 
  3153  0812                     	;# 
  3154  0813                     	;# 
  3155  0814                     	;# 
  3156  081A                     	;# 
  3157  081A                     	;# 
  3158  081B                     	;# 
  3159  081C                     	;# 
  3160  081C                     	;# 
  3161  081D                     	;# 
  3162  081E                     	;# 
  3163  081F                     	;# 
  3164  088C                     	;# 
  3165  088D                     	;# 
  3166  088E                     	;# 
  3167  088F                     	;# 
  3168  0890                     	;# 
  3169  0891                     	;# 
  3170  0892                     	;# 
  3171  0893                     	;# 
  3172  0895                     	;# 
  3173  0896                     	;# 
  3174  090C                     	;# 
  3175  090E                     	;# 
  3176  090F                     	;# 
  3177  091F                     	;# 
  3178  098F                     	;# 
  3179  098F                     	;# 
  3180  0990                     	;# 
  3181  0991                     	;# 
  3182  0992                     	;# 
  3183  0993                     	;# 
  3184  0994                     	;# 
  3185  0995                     	;# 
  3186  0996                     	;# 
  3187  0997                     	;# 
  3188  1E0F                     	;# 
  3189  1E10                     	;# 
  3190  1E11                     	;# 
  3191  1E12                     	;# 
  3192  1E13                     	;# 
  3193  1E14                     	;# 
  3194  1E15                     	;# 
  3195  1E16                     	;# 
  3196  1E17                     	;# 
  3197  1E18                     	;# 
  3198  1E19                     	;# 
  3199  1E1A                     	;# 
  3200  1E1B                     	;# 
  3201  1E1C                     	;# 
  3202  1E1D                     	;# 
  3203  1E1E                     	;# 
  3204  1E1F                     	;# 
  3205  1E20                     	;# 
  3206  1E21                     	;# 
  3207  1E22                     	;# 
  3208  1E23                     	;# 
  3209  1E24                     	;# 
  3210  1E25                     	;# 
  3211  1E26                     	;# 
  3212  1E27                     	;# 
  3213  1E28                     	;# 
  3214  1E29                     	;# 
  3215  1E2A                     	;# 
  3216  1E2B                     	;# 
  3217  1E2C                     	;# 
  3218  1E2D                     	;# 
  3219  1E2E                     	;# 
  3220  1E2F                     	;# 
  3221  1E30                     	;# 
  3222  1E31                     	;# 
  3223  1E32                     	;# 
  3224  1E33                     	;# 
  3225  1E34                     	;# 
  3226  1E35                     	;# 
  3227  1E36                     	;# 
  3228  1E37                     	;# 
  3229  1E8F                     	;# 
  3230  1E90                     	;# 
  3231  1E91                     	;# 
  3232  1E92                     	;# 
  3233  1E93                     	;# 
  3234  1E9C                     	;# 
  3235  1EA1                     	;# 
  3236  1EA2                     	;# 
  3237  1EB1                     	;# 
  3238  1EBB                     	;# 
  3239  1EBC                     	;# 
  3240  1EBD                     	;# 
  3241  1EBE                     	;# 
  3242  1EC3                     	;# 
  3243  1EC5                     	;# 
  3244  1EC6                     	;# 
  3245  1EC7                     	;# 
  3246  1ECB                     	;# 
  3247  1ECC                     	;# 
  3248  1F10                     	;# 
  3249  1F11                     	;# 
  3250  1F12                     	;# 
  3251  1F13                     	;# 
  3252  1F14                     	;# 
  3253  1F15                     	;# 
  3254  1F20                     	;# 
  3255  1F21                     	;# 
  3256  1F22                     	;# 
  3257  1F23                     	;# 
  3258  1F24                     	;# 
  3259  1F25                     	;# 
  3260  1F38                     	;# 
  3261  1F39                     	;# 
  3262  1F3A                     	;# 
  3263  1F3B                     	;# 
  3264  1F3C                     	;# 
  3265  1F3D                     	;# 
  3266  1F3E                     	;# 
  3267  1F3F                     	;# 
  3268  1F4E                     	;# 
  3269  1F4F                     	;# 
  3270  1F50                     	;# 
  3271  1F51                     	;# 
  3272  1F52                     	;# 
  3273  1F53                     	;# 
  3274  1F54                     	;# 
  3275  1F55                     	;# 
  3276  1FE4                     	;# 
  3277  1FE5                     	;# 
  3278  1FE6                     	;# 
  3279  1FE7                     	;# 
  3280  1FE8                     	;# 
  3281  1FE8                     	;# 
  3282  1FE9                     	;# 
  3283  1FEA                     	;# 
  3284  1FEA                     	;# 
  3285  1FEB                     	;# 
  3286  1FED                     	;# 
  3287  1FEE                     	;# 
  3288  1FEF                     	;# 
  3289  0000                     	;# 
  3290  0001                     	;# 
  3291  0002                     	;# 
  3292  0003                     	;# 
  3293  0004                     	;# 
  3294  0005                     	;# 
  3295  0006                     	;# 
  3296  0007                     	;# 
  3297  0008                     	;# 
  3298  0009                     	;# 
  3299  000A                     	;# 
  3300  000B                     	;# 
  3301  000C                     	;# 
  3302  000E                     	;# 
  3303  0012                     	;# 
  3304  0014                     	;# 
  3305  0018                     	;# 
  3306  001A                     	;# 
  3307  009B                     	;# 
  3308  009B                     	;# 
  3309  009C                     	;# 
  3310  009D                     	;# 
  3311  009E                     	;# 
  3312  009F                     	;# 
  3313  0119                     	;# 
  3314  0119                     	;# 
  3315  0119                     	;# 
  3316  011A                     	;# 
  3317  011A                     	;# 
  3318  011A                     	;# 
  3319  011B                     	;# 
  3320  011B                     	;# 
  3321  011B                     	;# 
  3322  011B                     	;# 
  3323  011B                     	;# 
  3324  011C                     	;# 
  3325  011C                     	;# 
  3326  011C                     	;# 
  3327  011D                     	;# 
  3328  011D                     	;# 
  3329  011D                     	;# 
  3330  011E                     	;# 
  3331  011E                     	;# 
  3332  011E                     	;# 
  3333  011F                     	;# 
  3334  011F                     	;# 
  3335  011F                     	;# 
  3336  011F                     	;# 
  3337  011F                     	;# 
  3338  018C                     	;# 
  3339  018D                     	;# 
  3340  018E                     	;# 
  3341  018F                     	;# 
  3342  0190                     	;# 
  3343  0191                     	;# 
  3344  0192                     	;# 
  3345  020C                     	;# 
  3346  020C                     	;# 
  3347  020D                     	;# 
  3348  020E                     	;# 
  3349  020F                     	;# 
  3350  020F                     	;# 
  3351  0210                     	;# 
  3352  0210                     	;# 
  3353  0211                     	;# 
  3354  0211                     	;# 
  3355  028C                     	;# 
  3356  028C                     	;# 
  3357  028D                     	;# 
  3358  028D                     	;# 
  3359  028E                     	;# 
  3360  028F                     	;# 
  3361  0290                     	;# 
  3362  0291                     	;# 
  3363  030C                     	;# 
  3364  030C                     	;# 
  3365  030D                     	;# 
  3366  030E                     	;# 
  3367  030F                     	;# 
  3368  0310                     	;# 
  3369  0310                     	;# 
  3370  0311                     	;# 
  3371  0312                     	;# 
  3372  0313                     	;# 
  3373  0314                     	;# 
  3374  0314                     	;# 
  3375  0315                     	;# 
  3376  0316                     	;# 
  3377  0318                     	;# 
  3378  0318                     	;# 
  3379  0319                     	;# 
  3380  031A                     	;# 
  3381  031C                     	;# 
  3382  031C                     	;# 
  3383  031D                     	;# 
  3384  031E                     	;# 
  3385  038C                     	;# 
  3386  038C                     	;# 
  3387  038D                     	;# 
  3388  038E                     	;# 
  3389  058C                     	;# 
  3390  058C                     	;# 
  3391  058D                     	;# 
  3392  058E                     	;# 
  3393  058F                     	;# 
  3394  058F                     	;# 
  3395  0590                     	;# 
  3396  0591                     	;# 
  3397  0592                     	;# 
  3398  0593                     	;# 
  3399  059C                     	;# 
  3400  059C                     	;# 
  3401  059D                     	;# 
  3402  059D                     	;# 
  3403  059E                     	;# 
  3404  059F                     	;# 
  3405  060C                     	;# 
  3406  060D                     	;# 
  3407  060E                     	;# 
  3408  060F                     	;# 
  3409  0610                     	;# 
  3410  0611                     	;# 
  3411  0612                     	;# 
  3412  0613                     	;# 
  3413  0614                     	;# 
  3414  070C                     	;# 
  3415  070D                     	;# 
  3416  070E                     	;# 
  3417  070F                     	;# 
  3418  0710                     	;# 
  3419  0711                     	;# 
  3420  0712                     	;# 
  3421  0713                     	;# 
  3422  0716                     	;# 
  3423  0717                     	;# 
  3424  0718                     	;# 
  3425  0719                     	;# 
  3426  071A                     	;# 
  3427  071B                     	;# 
  3428  071C                     	;# 
  3429  071D                     	;# 
  3430  0796                     	;# 
  3431  0797                     	;# 
  3432  0798                     	;# 
  3433  0799                     	;# 
  3434  079A                     	;# 
  3435  079B                     	;# 
  3436  080C                     	;# 
  3437  080D                     	;# 
  3438  080E                     	;# 
  3439  080F                     	;# 
  3440  0810                     	;# 
  3441  0811                     	;# 
  3442  0812                     	;# 
  3443  0813                     	;# 
  3444  0814                     	;# 
  3445  081A                     	;# 
  3446  081A                     	;# 
  3447  081B                     	;# 
  3448  081C                     	;# 
  3449  081C                     	;# 
  3450  081D                     	;# 
  3451  081E                     	;# 
  3452  081F                     	;# 
  3453  088C                     	;# 
  3454  088D                     	;# 
  3455  088E                     	;# 
  3456  088F                     	;# 
  3457  0890                     	;# 
  3458  0891                     	;# 
  3459  0892                     	;# 
  3460  0893                     	;# 
  3461  0895                     	;# 
  3462  0896                     	;# 
  3463  090C                     	;# 
  3464  090E                     	;# 
  3465  090F                     	;# 
  3466  091F                     	;# 
  3467  098F                     	;# 
  3468  098F                     	;# 
  3469  0990                     	;# 
  3470  0991                     	;# 
  3471  0992                     	;# 
  3472  0993                     	;# 
  3473  0994                     	;# 
  3474  0995                     	;# 
  3475  0996                     	;# 
  3476  0997                     	;# 
  3477  1E0F                     	;# 
  3478  1E10                     	;# 
  3479  1E11                     	;# 
  3480  1E12                     	;# 
  3481  1E13                     	;# 
  3482  1E14                     	;# 
  3483  1E15                     	;# 
  3484  1E16                     	;# 
  3485  1E17                     	;# 
  3486  1E18                     	;# 
  3487  1E19                     	;# 
  3488  1E1A                     	;# 
  3489  1E1B                     	;# 
  3490  1E1C                     	;# 
  3491  1E1D                     	;# 
  3492  1E1E                     	;# 
  3493  1E1F                     	;# 
  3494  1E20                     	;# 
  3495  1E21                     	;# 
  3496  1E22                     	;# 
  3497  1E23                     	;# 
  3498  1E24                     	;# 
  3499  1E25                     	;# 
  3500  1E26                     	;# 
  3501  1E27                     	;# 
  3502  1E28                     	;# 
  3503  1E29                     	;# 
  3504  1E2A                     	;# 
  3505  1E2B                     	;# 
  3506  1E2C                     	;# 
  3507  1E2D                     	;# 
  3508  1E2E                     	;# 
  3509  1E2F                     	;# 
  3510  1E30                     	;# 
  3511  1E31                     	;# 
  3512  1E32                     	;# 
  3513  1E33                     	;# 
  3514  1E34                     	;# 
  3515  1E35                     	;# 
  3516  1E36                     	;# 
  3517  1E37                     	;# 
  3518  1E8F                     	;# 
  3519  1E90                     	;# 
  3520  1E91                     	;# 
  3521  1E92                     	;# 
  3522  1E93                     	;# 
  3523  1E9C                     	;# 
  3524  1EA1                     	;# 
  3525  1EA2                     	;# 
  3526  1EB1                     	;# 
  3527  1EBB                     	;# 
  3528  1EBC                     	;# 
  3529  1EBD                     	;# 
  3530  1EBE                     	;# 
  3531  1EC3                     	;# 
  3532  1EC5                     	;# 
  3533  1EC6                     	;# 
  3534  1EC7                     	;# 
  3535  1ECB                     	;# 
  3536  1ECC                     	;# 
  3537  1F10                     	;# 
  3538  1F11                     	;# 
  3539  1F12                     	;# 
  3540  1F13                     	;# 
  3541  1F14                     	;# 
  3542  1F15                     	;# 
  3543  1F20                     	;# 
  3544  1F21                     	;# 
  3545  1F22                     	;# 
  3546  1F23                     	;# 
  3547  1F24                     	;# 
  3548  1F25                     	;# 
  3549  1F38                     	;# 
  3550  1F39                     	;# 
  3551  1F3A                     	;# 
  3552  1F3B                     	;# 
  3553  1F3C                     	;# 
  3554  1F3D                     	;# 
  3555  1F3E                     	;# 
  3556  1F3F                     	;# 
  3557  1F4E                     	;# 
  3558  1F4F                     	;# 
  3559  1F50                     	;# 
  3560  1F51                     	;# 
  3561  1F52                     	;# 
  3562  1F53                     	;# 
  3563  1F54                     	;# 
  3564  1F55                     	;# 
  3565  1FE4                     	;# 
  3566  1FE5                     	;# 
  3567  1FE6                     	;# 
  3568  1FE7                     	;# 
  3569  1FE8                     	;# 
  3570  1FE8                     	;# 
  3571  1FE9                     	;# 
  3572  1FEA                     	;# 
  3573  1FEA                     	;# 
  3574  1FEB                     	;# 
  3575  1FED                     	;# 
  3576  1FEE                     	;# 
  3577  1FEF                     	;# 
  3578  0000                     	;# 
  3579  0001                     	;# 
  3580  0002                     	;# 
  3581  0003                     	;# 
  3582  0004                     	;# 
  3583  0005                     	;# 
  3584  0006                     	;# 
  3585  0007                     	;# 
  3586  0008                     	;# 
  3587  0009                     	;# 
  3588  000A                     	;# 
  3589  000B                     	;# 
  3590  000C                     	;# 
  3591  000E                     	;# 
  3592  0012                     	;# 
  3593  0014                     	;# 
  3594  0018                     	;# 
  3595  001A                     	;# 
  3596  009B                     	;# 
  3597  009B                     	;# 
  3598  009C                     	;# 
  3599  009D                     	;# 
  3600  009E                     	;# 
  3601  009F                     	;# 
  3602  0119                     	;# 
  3603  0119                     	;# 
  3604  0119                     	;# 
  3605  011A                     	;# 
  3606  011A                     	;# 
  3607  011A                     	;# 
  3608  011B                     	;# 
  3609  011B                     	;# 
  3610  011B                     	;# 
  3611  011B                     	;# 
  3612  011B                     	;# 
  3613  011C                     	;# 
  3614  011C                     	;# 
  3615  011C                     	;# 
  3616  011D                     	;# 
  3617  011D                     	;# 
  3618  011D                     	;# 
  3619  011E                     	;# 
  3620  011E                     	;# 
  3621  011E                     	;# 
  3622  011F                     	;# 
  3623  011F                     	;# 
  3624  011F                     	;# 
  3625  011F                     	;# 
  3626  011F                     	;# 
  3627  018C                     	;# 
  3628  018D                     	;# 
  3629  018E                     	;# 
  3630  018F                     	;# 
  3631  0190                     	;# 
  3632  0191                     	;# 
  3633  0192                     	;# 
  3634  020C                     	;# 
  3635  020C                     	;# 
  3636  020D                     	;# 
  3637  020E                     	;# 
  3638  020F                     	;# 
  3639  020F                     	;# 
  3640  0210                     	;# 
  3641  0210                     	;# 
  3642  0211                     	;# 
  3643  0211                     	;# 
  3644  028C                     	;# 
  3645  028C                     	;# 
  3646  028D                     	;# 
  3647  028D                     	;# 
  3648  028E                     	;# 
  3649  028F                     	;# 
  3650  0290                     	;# 
  3651  0291                     	;# 
  3652  030C                     	;# 
  3653  030C                     	;# 
  3654  030D                     	;# 
  3655  030E                     	;# 
  3656  030F                     	;# 
  3657  0310                     	;# 
  3658  0310                     	;# 
  3659  0311                     	;# 
  3660  0312                     	;# 
  3661  0313                     	;# 
  3662  0314                     	;# 
  3663  0314                     	;# 
  3664  0315                     	;# 
  3665  0316                     	;# 
  3666  0318                     	;# 
  3667  0318                     	;# 
  3668  0319                     	;# 
  3669  031A                     	;# 
  3670  031C                     	;# 
  3671  031C                     	;# 
  3672  031D                     	;# 
  3673  031E                     	;# 
  3674  038C                     	;# 
  3675  038C                     	;# 
  3676  038D                     	;# 
  3677  038E                     	;# 
  3678  058C                     	;# 
  3679  058C                     	;# 
  3680  058D                     	;# 
  3681  058E                     	;# 
  3682  058F                     	;# 
  3683  058F                     	;# 
  3684  0590                     	;# 
  3685  0591                     	;# 
  3686  0592                     	;# 
  3687  0593                     	;# 
  3688  059C                     	;# 
  3689  059C                     	;# 
  3690  059D                     	;# 
  3691  059D                     	;# 
  3692  059E                     	;# 
  3693  059F                     	;# 
  3694  060C                     	;# 
  3695  060D                     	;# 
  3696  060E                     	;# 
  3697  060F                     	;# 
  3698  0610                     	;# 
  3699  0611                     	;# 
  3700  0612                     	;# 
  3701  0613                     	;# 
  3702  0614                     	;# 
  3703  070C                     	;# 
  3704  070D                     	;# 
  3705  070E                     	;# 
  3706  070F                     	;# 
  3707  0710                     	;# 
  3708  0711                     	;# 
  3709  0712                     	;# 
  3710  0713                     	;# 
  3711  0716                     	;# 
  3712  0717                     	;# 
  3713  0718                     	;# 
  3714  0719                     	;# 
  3715  071A                     	;# 
  3716  071B                     	;# 
  3717  071C                     	;# 
  3718  071D                     	;# 
  3719  0796                     	;# 
  3720  0797                     	;# 
  3721  0798                     	;# 
  3722  0799                     	;# 
  3723  079A                     	;# 
  3724  079B                     	;# 
  3725  080C                     	;# 
  3726  080D                     	;# 
  3727  080E                     	;# 
  3728  080F                     	;# 
  3729  0810                     	;# 
  3730  0811                     	;# 
  3731  0812                     	;# 
  3732  0813                     	;# 
  3733  0814                     	;# 
  3734  081A                     	;# 
  3735  081A                     	;# 
  3736  081B                     	;# 
  3737  081C                     	;# 
  3738  081C                     	;# 
  3739  081D                     	;# 
  3740  081E                     	;# 
  3741  081F                     	;# 
  3742  088C                     	;# 
  3743  088D                     	;# 
  3744  088E                     	;# 
  3745  088F                     	;# 
  3746  0890                     	;# 
  3747  0891                     	;# 
  3748  0892                     	;# 
  3749  0893                     	;# 
  3750  0895                     	;# 
  3751  0896                     	;# 
  3752  090C                     	;# 
  3753  090E                     	;# 
  3754  090F                     	;# 
  3755  091F                     	;# 
  3756  098F                     	;# 
  3757  098F                     	;# 
  3758  0990                     	;# 
  3759  0991                     	;# 
  3760  0992                     	;# 
  3761  0993                     	;# 
  3762  0994                     	;# 
  3763  0995                     	;# 
  3764  0996                     	;# 
  3765  0997                     	;# 
  3766  1E0F                     	;# 
  3767  1E10                     	;# 
  3768  1E11                     	;# 
  3769  1E12                     	;# 
  3770  1E13                     	;# 
  3771  1E14                     	;# 
  3772  1E15                     	;# 
  3773  1E16                     	;# 
  3774  1E17                     	;# 
  3775  1E18                     	;# 
  3776  1E19                     	;# 
  3777  1E1A                     	;# 
  3778  1E1B                     	;# 
  3779  1E1C                     	;# 
  3780  1E1D                     	;# 
  3781  1E1E                     	;# 
  3782  1E1F                     	;# 
  3783  1E20                     	;# 
  3784  1E21                     	;# 
  3785  1E22                     	;# 
  3786  1E23                     	;# 
  3787  1E24                     	;# 
  3788  1E25                     	;# 
  3789  1E26                     	;# 
  3790  1E27                     	;# 
  3791  1E28                     	;# 
  3792  1E29                     	;# 
  3793  1E2A                     	;# 
  3794  1E2B                     	;# 
  3795  1E2C                     	;# 
  3796  1E2D                     	;# 
  3797  1E2E                     	;# 
  3798  1E2F                     	;# 
  3799  1E30                     	;# 
  3800  1E31                     	;# 
  3801  1E32                     	;# 
  3802  1E33                     	;# 
  3803  1E34                     	;# 
  3804  1E35                     	;# 
  3805  1E36                     	;# 
  3806  1E37                     	;# 
  3807  1E8F                     	;# 
  3808  1E90                     	;# 
  3809  1E91                     	;# 
  3810  1E92                     	;# 
  3811  1E93                     	;# 
  3812  1E9C                     	;# 
  3813  1EA1                     	;# 
  3814  1EA2                     	;# 
  3815  1EB1                     	;# 
  3816  1EBB                     	;# 
  3817  1EBC                     	;# 
  3818  1EBD                     	;# 
  3819  1EBE                     	;# 
  3820  1EC3                     	;# 
  3821  1EC5                     	;# 
  3822  1EC6                     	;# 
  3823  1EC7                     	;# 
  3824  1ECB                     	;# 
  3825  1ECC                     	;# 
  3826  1F10                     	;# 
  3827  1F11                     	;# 
  3828  1F12                     	;# 
  3829  1F13                     	;# 
  3830  1F14                     	;# 
  3831  1F15                     	;# 
  3832  1F20                     	;# 
  3833  1F21                     	;# 
  3834  1F22                     	;# 
  3835  1F23                     	;# 
  3836  1F24                     	;# 
  3837  1F25                     	;# 
  3838  1F38                     	;# 
  3839  1F39                     	;# 
  3840  1F3A                     	;# 
  3841  1F3B                     	;# 
  3842  1F3C                     	;# 
  3843  1F3D                     	;# 
  3844  1F3E                     	;# 
  3845  1F3F                     	;# 
  3846  1F4E                     	;# 
  3847  1F4F                     	;# 
  3848  1F50                     	;# 
  3849  1F51                     	;# 
  3850  1F52                     	;# 
  3851  1F53                     	;# 
  3852  1F54                     	;# 
  3853  1F55                     	;# 
  3854  1FE4                     	;# 
  3855  1FE5                     	;# 
  3856  1FE6                     	;# 
  3857  1FE7                     	;# 
  3858  1FE8                     	;# 
  3859  1FE8                     	;# 
  3860  1FE9                     	;# 
  3861  1FEA                     	;# 
  3862  1FEA                     	;# 
  3863  1FEB                     	;# 
  3864  1FED                     	;# 
  3865  1FEE                     	;# 
  3866  1FEF                     	;# 
  3867  0000                     	;# 
  3868  0001                     	;# 
  3869  0002                     	;# 
  3870  0003                     	;# 
  3871  0004                     	;# 
  3872  0005                     	;# 
  3873  0006                     	;# 
  3874  0007                     	;# 
  3875  0008                     	;# 
  3876  0009                     	;# 
  3877  000A                     	;# 
  3878  000B                     	;# 
  3879  000C                     	;# 
  3880  000E                     	;# 
  3881  0012                     	;# 
  3882  0014                     	;# 
  3883  0018                     	;# 
  3884  001A                     	;# 
  3885  009B                     	;# 
  3886  009B                     	;# 
  3887  009C                     	;# 
  3888  009D                     	;# 
  3889  009E                     	;# 
  3890  009F                     	;# 
  3891  0119                     	;# 
  3892  0119                     	;# 
  3893  0119                     	;# 
  3894  011A                     	;# 
  3895  011A                     	;# 
  3896  011A                     	;# 
  3897  011B                     	;# 
  3898  011B                     	;# 
  3899  011B                     	;# 
  3900  011B                     	;# 
  3901  011B                     	;# 
  3902  011C                     	;# 
  3903  011C                     	;# 
  3904  011C                     	;# 
  3905  011D                     	;# 
  3906  011D                     	;# 
  3907  011D                     	;# 
  3908  011E                     	;# 
  3909  011E                     	;# 
  3910  011E                     	;# 
  3911  011F                     	;# 
  3912  011F                     	;# 
  3913  011F                     	;# 
  3914  011F                     	;# 
  3915  011F                     	;# 
  3916  018C                     	;# 
  3917  018D                     	;# 
  3918  018E                     	;# 
  3919  018F                     	;# 
  3920  0190                     	;# 
  3921  0191                     	;# 
  3922  0192                     	;# 
  3923  020C                     	;# 
  3924  020C                     	;# 
  3925  020D                     	;# 
  3926  020E                     	;# 
  3927  020F                     	;# 
  3928  020F                     	;# 
  3929  0210                     	;# 
  3930  0210                     	;# 
  3931  0211                     	;# 
  3932  0211                     	;# 
  3933  028C                     	;# 
  3934  028C                     	;# 
  3935  028D                     	;# 
  3936  028D                     	;# 
  3937  028E                     	;# 
  3938  028F                     	;# 
  3939  0290                     	;# 
  3940  0291                     	;# 
  3941  030C                     	;# 
  3942  030C                     	;# 
  3943  030D                     	;# 
  3944  030E                     	;# 
  3945  030F                     	;# 
  3946  0310                     	;# 
  3947  0310                     	;# 
  3948  0311                     	;# 
  3949  0312                     	;# 
  3950  0313                     	;# 
  3951  0314                     	;# 
  3952  0314                     	;# 
  3953  0315                     	;# 
  3954  0316                     	;# 
  3955  0318                     	;# 
  3956  0318                     	;# 
  3957  0319                     	;# 
  3958  031A                     	;# 
  3959  031C                     	;# 
  3960  031C                     	;# 
  3961  031D                     	;# 
  3962  031E                     	;# 
  3963  038C                     	;# 
  3964  038C                     	;# 
  3965  038D                     	;# 
  3966  038E                     	;# 
  3967  058C                     	;# 
  3968  058C                     	;# 
  3969  058D                     	;# 
  3970  058E                     	;# 
  3971  058F                     	;# 
  3972  058F                     	;# 
  3973  0590                     	;# 
  3974  0591                     	;# 
  3975  0592                     	;# 
  3976  0593                     	;# 
  3977  059C                     	;# 
  3978  059C                     	;# 
  3979  059D                     	;# 
  3980  059D                     	;# 
  3981  059E                     	;# 
  3982  059F                     	;# 
  3983  060C                     	;# 
  3984  060D                     	;# 
  3985  060E                     	;# 
  3986  060F                     	;# 
  3987  0610                     	;# 
  3988  0611                     	;# 
  3989  0612                     	;# 
  3990  0613                     	;# 
  3991  0614                     	;# 
  3992  070C                     	;# 
  3993  070D                     	;# 
  3994  070E                     	;# 
  3995  070F                     	;# 
  3996  0710                     	;# 
  3997  0711                     	;# 
  3998  0712                     	;# 
  3999  0713                     	;# 
  4000  0716                     	;# 
  4001  0717                     	;# 
  4002  0718                     	;# 
  4003  0719                     	;# 
  4004  071A                     	;# 
  4005  071B                     	;# 
  4006  071C                     	;# 
  4007  071D                     	;# 
  4008  0796                     	;# 
  4009  0797                     	;# 
  4010  0798                     	;# 
  4011  0799                     	;# 
  4012  079A                     	;# 
  4013  079B                     	;# 
  4014  080C                     	;# 
  4015  080D                     	;# 
  4016  080E                     	;# 
  4017  080F                     	;# 
  4018  0810                     	;# 
  4019  0811                     	;# 
  4020  0812                     	;# 
  4021  0813                     	;# 
  4022  0814                     	;# 
  4023  081A                     	;# 
  4024  081A                     	;# 
  4025  081B                     	;# 
  4026  081C                     	;# 
  4027  081C                     	;# 
  4028  081D                     	;# 
  4029  081E                     	;# 
  4030  081F                     	;# 
  4031  088C                     	;# 
  4032  088D                     	;# 
  4033  088E                     	;# 
  4034  088F                     	;# 
  4035  0890                     	;# 
  4036  0891                     	;# 
  4037  0892                     	;# 
  4038  0893                     	;# 
  4039  0895                     	;# 
  4040  0896                     	;# 
  4041  090C                     	;# 
  4042  090E                     	;# 
  4043  090F                     	;# 
  4044  091F                     	;# 
  4045  098F                     	;# 
  4046  098F                     	;# 
  4047  0990                     	;# 
  4048  0991                     	;# 
  4049  0992                     	;# 
  4050  0993                     	;# 
  4051  0994                     	;# 
  4052  0995                     	;# 
  4053  0996                     	;# 
  4054  0997                     	;# 
  4055  1E0F                     	;# 
  4056  1E10                     	;# 
  4057  1E11                     	;# 
  4058  1E12                     	;# 
  4059  1E13                     	;# 
  4060  1E14                     	;# 
  4061  1E15                     	;# 
  4062  1E16                     	;# 
  4063  1E17                     	;# 
  4064  1E18                     	;# 
  4065  1E19                     	;# 
  4066  1E1A                     	;# 
  4067  1E1B                     	;# 
  4068  1E1C                     	;# 
  4069  1E1D                     	;# 
  4070  1E1E                     	;# 
  4071  1E1F                     	;# 
  4072  1E20                     	;# 
  4073  1E21                     	;# 
  4074  1E22                     	;# 
  4075  1E23                     	;# 
  4076  1E24                     	;# 
  4077  1E25                     	;# 
  4078  1E26                     	;# 
  4079  1E27                     	;# 
  4080  1E28                     	;# 
  4081  1E29                     	;# 
  4082  1E2A                     	;# 
  4083  1E2B                     	;# 
  4084  1E2C                     	;# 
  4085  1E2D                     	;# 
  4086  1E2E                     	;# 
  4087  1E2F                     	;# 
  4088  1E30                     	;# 
  4089  1E31                     	;# 
  4090  1E32                     	;# 
  4091  1E33                     	;# 
  4092  1E34                     	;# 
  4093  1E35                     	;# 
  4094  1E36                     	;# 
  4095  1E37                     	;# 
  4096  1E8F                     	;# 
  4097  1E90                     	;# 
  4098  1E91                     	;# 
  4099  1E92                     	;# 
  4100  1E93                     	;# 
  4101  1E9C                     	;# 
  4102  1EA1                     	;# 
  4103  1EA2                     	;# 
  4104  1EB1                     	;# 
  4105  1EBB                     	;# 
  4106  1EBC                     	;# 
  4107  1EBD                     	;# 
  4108  1EBE                     	;# 
  4109  1EC3                     	;# 
  4110  1EC5                     	;# 
  4111  1EC6                     	;# 
  4112  1EC7                     	;# 
  4113  1ECB                     	;# 
  4114  1ECC                     	;# 
  4115  1F10                     	;# 
  4116  1F11                     	;# 
  4117  1F12                     	;# 
  4118  1F13                     	;# 
  4119  1F14                     	;# 
  4120  1F15                     	;# 
  4121  1F20                     	;# 
  4122  1F21                     	;# 
  4123  1F22                     	;# 
  4124  1F23                     	;# 
  4125  1F24                     	;# 
  4126  1F25                     	;# 
  4127  1F38                     	;# 
  4128  1F39                     	;# 
  4129  1F3A                     	;# 
  4130  1F3B                     	;# 
  4131  1F3C                     	;# 
  4132  1F3D                     	;# 
  4133  1F3E                     	;# 
  4134  1F3F                     	;# 
  4135  1F4E                     	;# 
  4136  1F4F                     	;# 
  4137  1F50                     	;# 
  4138  1F51                     	;# 
  4139  1F52                     	;# 
  4140  1F53                     	;# 
  4141  1F54                     	;# 
  4142  1F55                     	;# 
  4143  1FE4                     	;# 
  4144  1FE5                     	;# 
  4145  1FE6                     	;# 
  4146  1FE7                     	;# 
  4147  1FE8                     	;# 
  4148  1FE8                     	;# 
  4149  1FE9                     	;# 
  4150  1FEA                     	;# 
  4151  1FEA                     	;# 
  4152  1FEB                     	;# 
  4153  1FED                     	;# 
  4154  1FEE                     	;# 
  4155  1FEF                     	;# 
  4156  0000                     	;# 
  4157  0001                     	;# 
  4158  0002                     	;# 
  4159  0003                     	;# 
  4160  0004                     	;# 
  4161  0005                     	;# 
  4162  0006                     	;# 
  4163  0007                     	;# 
  4164  0008                     	;# 
  4165  0009                     	;# 
  4166  000A                     	;# 
  4167  000B                     	;# 
  4168  000C                     	;# 
  4169  000E                     	;# 
  4170  0012                     	;# 
  4171  0014                     	;# 
  4172  0018                     	;# 
  4173  001A                     	;# 
  4174  009B                     	;# 
  4175  009B                     	;# 
  4176  009C                     	;# 
  4177  009D                     	;# 
  4178  009E                     	;# 
  4179  009F                     	;# 
  4180  0119                     	;# 
  4181  0119                     	;# 
  4182  0119                     	;# 
  4183  011A                     	;# 
  4184  011A                     	;# 
  4185  011A                     	;# 
  4186  011B                     	;# 
  4187  011B                     	;# 
  4188  011B                     	;# 
  4189  011B                     	;# 
  4190  011B                     	;# 
  4191  011C                     	;# 
  4192  011C                     	;# 
  4193  011C                     	;# 
  4194  011D                     	;# 
  4195  011D                     	;# 
  4196  011D                     	;# 
  4197  011E                     	;# 
  4198  011E                     	;# 
  4199  011E                     	;# 
  4200  011F                     	;# 
  4201  011F                     	;# 
  4202  011F                     	;# 
  4203  011F                     	;# 
  4204  011F                     	;# 
  4205  018C                     	;# 
  4206  018D                     	;# 
  4207  018E                     	;# 
  4208  018F                     	;# 
  4209  0190                     	;# 
  4210  0191                     	;# 
  4211  0192                     	;# 
  4212  020C                     	;# 
  4213  020C                     	;# 
  4214  020D                     	;# 
  4215  020E                     	;# 
  4216  020F                     	;# 
  4217  020F                     	;# 
  4218  0210                     	;# 
  4219  0210                     	;# 
  4220  0211                     	;# 
  4221  0211                     	;# 
  4222  028C                     	;# 
  4223  028C                     	;# 
  4224  028D                     	;# 
  4225  028D                     	;# 
  4226  028E                     	;# 
  4227  028F                     	;# 
  4228  0290                     	;# 
  4229  0291                     	;# 
  4230  030C                     	;# 
  4231  030C                     	;# 
  4232  030D                     	;# 
  4233  030E                     	;# 
  4234  030F                     	;# 
  4235  0310                     	;# 
  4236  0310                     	;# 
  4237  0311                     	;# 
  4238  0312                     	;# 
  4239  0313                     	;# 
  4240  0314                     	;# 
  4241  0314                     	;# 
  4242  0315                     	;# 
  4243  0316                     	;# 
  4244  0318                     	;# 
  4245  0318                     	;# 
  4246  0319                     	;# 
  4247  031A                     	;# 
  4248  031C                     	;# 
  4249  031C                     	;# 
  4250  031D                     	;# 
  4251  031E                     	;# 
  4252  038C                     	;# 
  4253  038C                     	;# 
  4254  038D                     	;# 
  4255  038E                     	;# 
  4256  058C                     	;# 
  4257  058C                     	;# 
  4258  058D                     	;# 
  4259  058E                     	;# 
  4260  058F                     	;# 
  4261  058F                     	;# 
  4262  0590                     	;# 
  4263  0591                     	;# 
  4264  0592                     	;# 
  4265  0593                     	;# 
  4266  059C                     	;# 
  4267  059C                     	;# 
  4268  059D                     	;# 
  4269  059D                     	;# 
  4270  059E                     	;# 
  4271  059F                     	;# 
  4272  060C                     	;# 
  4273  060D                     	;# 
  4274  060E                     	;# 
  4275  060F                     	;# 
  4276  0610                     	;# 
  4277  0611                     	;# 
  4278  0612                     	;# 
  4279  0613                     	;# 
  4280  0614                     	;# 
  4281  070C                     	;# 
  4282  070D                     	;# 
  4283  070E                     	;# 
  4284  070F                     	;# 
  4285  0710                     	;# 
  4286  0711                     	;# 
  4287  0712                     	;# 
  4288  0713                     	;# 
  4289  0716                     	;# 
  4290  0717                     	;# 
  4291  0718                     	;# 
  4292  0719                     	;# 
  4293  071A                     	;# 
  4294  071B                     	;# 
  4295  071C                     	;# 
  4296  071D                     	;# 
  4297  0796                     	;# 
  4298  0797                     	;# 
  4299  0798                     	;# 
  4300  0799                     	;# 
  4301  079A                     	;# 
  4302  079B                     	;# 
  4303  080C                     	;# 
  4304  080D                     	;# 
  4305  080E                     	;# 
  4306  080F                     	;# 
  4307  0810                     	;# 
  4308  0811                     	;# 
  4309  0812                     	;# 
  4310  0813                     	;# 
  4311  0814                     	;# 
  4312  081A                     	;# 
  4313  081A                     	;# 
  4314  081B                     	;# 
  4315  081C                     	;# 
  4316  081C                     	;# 
  4317  081D                     	;# 
  4318  081E                     	;# 
  4319  081F                     	;# 
  4320  088C                     	;# 
  4321  088D                     	;# 
  4322  088E                     	;# 
  4323  088F                     	;# 
  4324  0890                     	;# 
  4325  0891                     	;# 
  4326  0892                     	;# 
  4327  0893                     	;# 
  4328  0895                     	;# 
  4329  0896                     	;# 
  4330  090C                     	;# 
  4331  090E                     	;# 
  4332  090F                     	;# 
  4333  091F                     	;# 
  4334  098F                     	;# 
  4335  098F                     	;# 
  4336  0990                     	;# 
  4337  0991                     	;# 
  4338  0992                     	;# 
  4339  0993                     	;# 
  4340  0994                     	;# 
  4341  0995                     	;# 
  4342  0996                     	;# 
  4343  0997                     	;# 
  4344  1E0F                     	;# 
  4345  1E10                     	;# 
  4346  1E11                     	;# 
  4347  1E12                     	;# 
  4348  1E13                     	;# 
  4349  1E14                     	;# 
  4350  1E15                     	;# 
  4351  1E16                     	;# 
  4352  1E17                     	;# 
  4353  1E18                     	;# 
  4354  1E19                     	;# 
  4355  1E1A                     	;# 
  4356  1E1B                     	;# 
  4357  1E1C                     	;# 
  4358  1E1D                     	;# 
  4359  1E1E                     	;# 
  4360  1E1F                     	;# 
  4361  1E20                     	;# 
  4362  1E21                     	;# 
  4363  1E22                     	;# 
  4364  1E23                     	;# 
  4365  1E24                     	;# 
  4366  1E25                     	;# 
  4367  1E26                     	;# 
  4368  1E27                     	;# 
  4369  1E28                     	;# 
  4370  1E29                     	;# 
  4371  1E2A                     	;# 
  4372  1E2B                     	;# 
  4373  1E2C                     	;# 
  4374  1E2D                     	;# 
  4375  1E2E                     	;# 
  4376  1E2F                     	;# 
  4377  1E30                     	;# 
  4378  1E31                     	;# 
  4379  1E32                     	;# 
  4380  1E33                     	;# 
  4381  1E34                     	;# 
  4382  1E35                     	;# 
  4383  1E36                     	;# 
  4384  1E37                     	;# 
  4385  1E8F                     	;# 
  4386  1E90                     	;# 
  4387  1E91                     	;# 
  4388  1E92                     	;# 
  4389  1E93                     	;# 
  4390  1E9C                     	;# 
  4391  1EA1                     	;# 
  4392  1EA2                     	;# 
  4393  1EB1                     	;# 
  4394  1EBB                     	;# 
  4395  1EBC                     	;# 
  4396  1EBD                     	;# 
  4397  1EBE                     	;# 
  4398  1EC3                     	;# 
  4399  1EC5                     	;# 
  4400  1EC6                     	;# 
  4401  1EC7                     	;# 
  4402  1ECB                     	;# 
  4403  1ECC                     	;# 
  4404  1F10                     	;# 
  4405  1F11                     	;# 
  4406  1F12                     	;# 
  4407  1F13                     	;# 
  4408  1F14                     	;# 
  4409  1F15                     	;# 
  4410  1F20                     	;# 
  4411  1F21                     	;# 
  4412  1F22                     	;# 
  4413  1F23                     	;# 
  4414  1F24                     	;# 
  4415  1F25                     	;# 
  4416  1F38                     	;# 
  4417  1F39                     	;# 
  4418  1F3A                     	;# 
  4419  1F3B                     	;# 
  4420  1F3C                     	;# 
  4421  1F3D                     	;# 
  4422  1F3E                     	;# 
  4423  1F3F                     	;# 
  4424  1F4E                     	;# 
  4425  1F4F                     	;# 
  4426  1F50                     	;# 
  4427  1F51                     	;# 
  4428  1F52                     	;# 
  4429  1F53                     	;# 
  4430  1F54                     	;# 
  4431  1F55                     	;# 
  4432  1FE4                     	;# 
  4433  1FE5                     	;# 
  4434  1FE6                     	;# 
  4435  1FE7                     	;# 
  4436  1FE8                     	;# 
  4437  1FE8                     	;# 
  4438  1FE9                     	;# 
  4439  1FEA                     	;# 
  4440  1FEA                     	;# 
  4441  1FEB                     	;# 
  4442  1FED                     	;# 
  4443  1FEE                     	;# 
  4444  1FEF                     	;# 
  4445  0000                     	;# 
  4446  0001                     	;# 
  4447  0002                     	;# 
  4448  0003                     	;# 
  4449  0004                     	;# 
  4450  0005                     	;# 
  4451  0006                     	;# 
  4452  0007                     	;# 
  4453  0008                     	;# 
  4454  0009                     	;# 
  4455  000A                     	;# 
  4456  000B                     	;# 
  4457  000C                     	;# 
  4458  000E                     	;# 
  4459  0012                     	;# 
  4460  0014                     	;# 
  4461  0018                     	;# 
  4462  001A                     	;# 
  4463  009B                     	;# 
  4464  009B                     	;# 
  4465  009C                     	;# 
  4466  009D                     	;# 
  4467  009E                     	;# 
  4468  009F                     	;# 
  4469  0119                     	;# 
  4470  0119                     	;# 
  4471  0119                     	;# 
  4472  011A                     	;# 
  4473  011A                     	;# 
  4474  011A                     	;# 
  4475  011B                     	;# 
  4476  011B                     	;# 
  4477  011B                     	;# 
  4478  011B                     	;# 
  4479  011B                     	;# 
  4480  011C                     	;# 
  4481  011C                     	;# 
  4482  011C                     	;# 
  4483  011D                     	;# 
  4484  011D                     	;# 
  4485  011D                     	;# 
  4486  011E                     	;# 
  4487  011E                     	;# 
  4488  011E                     	;# 
  4489  011F                     	;# 
  4490  011F                     	;# 
  4491  011F                     	;# 
  4492  011F                     	;# 
  4493  011F                     	;# 
  4494  018C                     	;# 
  4495  018D                     	;# 
  4496  018E                     	;# 
  4497  018F                     	;# 
  4498  0190                     	;# 
  4499  0191                     	;# 
  4500  0192                     	;# 
  4501  020C                     	;# 
  4502  020C                     	;# 
  4503  020D                     	;# 
  4504  020E                     	;# 
  4505  020F                     	;# 
  4506  020F                     	;# 
  4507  0210                     	;# 
  4508  0210                     	;# 
  4509  0211                     	;# 
  4510  0211                     	;# 
  4511  028C                     	;# 
  4512  028C                     	;# 
  4513  028D                     	;# 
  4514  028D                     	;# 
  4515  028E                     	;# 
  4516  028F                     	;# 
  4517  0290                     	;# 
  4518  0291                     	;# 
  4519  030C                     	;# 
  4520  030C                     	;# 
  4521  030D                     	;# 
  4522  030E                     	;# 
  4523  030F                     	;# 
  4524  0310                     	;# 
  4525  0310                     	;# 
  4526  0311                     	;# 
  4527  0312                     	;# 
  4528  0313                     	;# 
  4529  0314                     	;# 
  4530  0314                     	;# 
  4531  0315                     	;# 
  4532  0316                     	;# 
  4533  0318                     	;# 
  4534  0318                     	;# 
  4535  0319                     	;# 
  4536  031A                     	;# 
  4537  031C                     	;# 
  4538  031C                     	;# 
  4539  031D                     	;# 
  4540  031E                     	;# 
  4541  038C                     	;# 
  4542  038C                     	;# 
  4543  038D                     	;# 
  4544  038E                     	;# 
  4545  058C                     	;# 
  4546  058C                     	;# 
  4547  058D                     	;# 
  4548  058E                     	;# 
  4549  058F                     	;# 
  4550  058F                     	;# 
  4551  0590                     	;# 
  4552  0591                     	;# 
  4553  0592                     	;# 
  4554  0593                     	;# 
  4555  059C                     	;# 
  4556  059C                     	;# 
  4557  059D                     	;# 
  4558  059D                     	;# 
  4559  059E                     	;# 
  4560  059F                     	;# 
  4561  060C                     	;# 
  4562  060D                     	;# 
  4563  060E                     	;# 
  4564  060F                     	;# 
  4565  0610                     	;# 
  4566  0611                     	;# 
  4567  0612                     	;# 
  4568  0613                     	;# 
  4569  0614                     	;# 
  4570  070C                     	;# 
  4571  070D                     	;# 
  4572  070E                     	;# 
  4573  070F                     	;# 
  4574  0710                     	;# 
  4575  0711                     	;# 
  4576  0712                     	;# 
  4577  0713                     	;# 
  4578  0716                     	;# 
  4579  0717                     	;# 
  4580  0718                     	;# 
  4581  0719                     	;# 
  4582  071A                     	;# 
  4583  071B                     	;# 
  4584  071C                     	;# 
  4585  071D                     	;# 
  4586  0796                     	;# 
  4587  0797                     	;# 
  4588  0798                     	;# 
  4589  0799                     	;# 
  4590  079A                     	;# 
  4591  079B                     	;# 
  4592  080C                     	;# 
  4593  080D                     	;# 
  4594  080E                     	;# 
  4595  080F                     	;# 
  4596  0810                     	;# 
  4597  0811                     	;# 
  4598  0812                     	;# 
  4599  0813                     	;# 
  4600  0814                     	;# 
  4601  081A                     	;# 
  4602  081A                     	;# 
  4603  081B                     	;# 
  4604  081C                     	;# 
  4605  081C                     	;# 
  4606  081D                     	;# 
  4607  081E                     	;# 
  4608  081F                     	;# 
  4609  088C                     	;# 
  4610  088D                     	;# 
  4611  088E                     	;# 
  4612  088F                     	;# 
  4613  0890                     	;# 
  4614  0891                     	;# 
  4615  0892                     	;# 
  4616  0893                     	;# 
  4617  0895                     	;# 
  4618  0896                     	;# 
  4619  090C                     	;# 
  4620  090E                     	;# 
  4621  090F                     	;# 
  4622  091F                     	;# 
  4623  098F                     	;# 
  4624  098F                     	;# 
  4625  0990                     	;# 
  4626  0991                     	;# 
  4627  0992                     	;# 
  4628  0993                     	;# 
  4629  0994                     	;# 
  4630  0995                     	;# 
  4631  0996                     	;# 
  4632  0997                     	;# 
  4633  1E0F                     	;# 
  4634  1E10                     	;# 
  4635  1E11                     	;# 
  4636  1E12                     	;# 
  4637  1E13                     	;# 
  4638  1E14                     	;# 
  4639  1E15                     	;# 
  4640  1E16                     	;# 
  4641  1E17                     	;# 
  4642  1E18                     	;# 
  4643  1E19                     	;# 
  4644  1E1A                     	;# 
  4645  1E1B                     	;# 
  4646  1E1C                     	;# 
  4647  1E1D                     	;# 
  4648  1E1E                     	;# 
  4649  1E1F                     	;# 
  4650  1E20                     	;# 
  4651  1E21                     	;# 
  4652  1E22                     	;# 
  4653  1E23                     	;# 
  4654  1E24                     	;# 
  4655  1E25                     	;# 
  4656  1E26                     	;# 
  4657  1E27                     	;# 
  4658  1E28                     	;# 
  4659  1E29                     	;# 
  4660  1E2A                     	;# 
  4661  1E2B                     	;# 
  4662  1E2C                     	;# 
  4663  1E2D                     	;# 
  4664  1E2E                     	;# 
  4665  1E2F                     	;# 
  4666  1E30                     	;# 
  4667  1E31                     	;# 
  4668  1E32                     	;# 
  4669  1E33                     	;# 
  4670  1E34                     	;# 
  4671  1E35                     	;# 
  4672  1E36                     	;# 
  4673  1E37                     	;# 
  4674  1E8F                     	;# 
  4675  1E90                     	;# 
  4676  1E91                     	;# 
  4677  1E92                     	;# 
  4678  1E93                     	;# 
  4679  1E9C                     	;# 
  4680  1EA1                     	;# 
  4681  1EA2                     	;# 
  4682  1EB1                     	;# 
  4683  1EBB                     	;# 
  4684  1EBC                     	;# 
  4685  1EBD                     	;# 
  4686  1EBE                     	;# 
  4687  1EC3                     	;# 
  4688  1EC5                     	;# 
  4689  1EC6                     	;# 
  4690  1EC7                     	;# 
  4691  1ECB                     	;# 
  4692  1ECC                     	;# 
  4693  1F10                     	;# 
  4694  1F11                     	;# 
  4695  1F12                     	;# 
  4696  1F13                     	;# 
  4697  1F14                     	;# 
  4698  1F15                     	;# 
  4699  1F20                     	;# 
  4700  1F21                     	;# 
  4701  1F22                     	;# 
  4702  1F23                     	;# 
  4703  1F24                     	;# 
  4704  1F25                     	;# 
  4705  1F38                     	;# 
  4706  1F39                     	;# 
  4707  1F3A                     	;# 
  4708  1F3B                     	;# 
  4709  1F3C                     	;# 
  4710  1F3D                     	;# 
  4711  1F3E                     	;# 
  4712  1F3F                     	;# 
  4713  1F4E                     	;# 
  4714  1F4F                     	;# 
  4715  1F50                     	;# 
  4716  1F51                     	;# 
  4717  1F52                     	;# 
  4718  1F53                     	;# 
  4719  1F54                     	;# 
  4720  1F55                     	;# 
  4721  1FE4                     	;# 
  4722  1FE5                     	;# 
  4723  1FE6                     	;# 
  4724  1FE7                     	;# 
  4725  1FE8                     	;# 
  4726  1FE8                     	;# 
  4727  1FE9                     	;# 
  4728  1FEA                     	;# 
  4729  1FEA                     	;# 
  4730  1FEB                     	;# 
  4731  1FED                     	;# 
  4732  1FEE                     	;# 
  4733  1FEF                     	;# 
  4734                           
  4735                           	psect	idataBANK0
  4736  0644                     __pidataBANK0:
  4737                           
  4738                           ;initializer for _AdcResult
  4739  0644  34FF               	retlw	255
  4740  0645  3403               	retlw	3
  4741  0646  34FF               	retlw	255
  4742  0647  3403               	retlw	3
  4743  0648  34FF               	retlw	255
  4744  0649  3403               	retlw	3
  4745  064A  34FF               	retlw	255
  4746  064B  3403               	retlw	3
  4747  064C  34FF               	retlw	255
  4748  064D  3403               	retlw	3
  4749  064E  34FF               	retlw	255
  4750  064F  3403               	retlw	3
  4751  0650  34FF               	retlw	255
  4752  0651  3403               	retlw	3
  4753  0652  34FF               	retlw	255
  4754  0653  3403               	retlw	3
  4755                           
  4756                           	psect	idataBANK1
  4757  0388                     __pidataBANK1:
  4758                           
  4759                           ;initializer for _LedBit
  4760  0388  3400               	retlw	0
  4761  0389  3400               	retlw	0
  4762  038A  34D0               	retlw	low _LedOff
  4763  038B  3404               	retlw	high _LedOff
  4764  038C  3400               	retlw	0
  4765  038D  34FE               	retlw	254
  4766  038E  3400               	retlw	0
  4767  038F  3400               	retlw	0
  4768  0390  3401               	retlw	1
  4769  0391  3422               	retlw	low _PWM1_LoadDutyValue
  4770  0392  3406               	retlw	high _PWM1_LoadDutyValue
  4771  0393  3401               	retlw	1
  4772  0394  3400               	retlw	0
  4773  0395  34D0               	retlw	low _LedOff
  4774  0396  3404               	retlw	high _LedOff
  4775  0397  3400               	retlw	0
  4776  0398  34FE               	retlw	254
  4777  0399  3400               	retlw	0
  4778  039A  3400               	retlw	0
  4779  039B  3401               	retlw	1
  4780  039C  3433               	retlw	low _PWM2_LoadDutyValue
  4781  039D  3406               	retlw	high _PWM2_LoadDutyValue
  4782  039E  3402               	retlw	2
  4783  039F  3400               	retlw	0
  4784  03A0  34D0               	retlw	low _LedOff
  4785  03A1  3404               	retlw	high _LedOff
  4786  03A2  3400               	retlw	0
  4787  03A3  3419               	retlw	25
  4788  03A4  3400               	retlw	0
  4789  03A5  3400               	retlw	0
  4790  03A6  3401               	retlw	1
  4791  03A7  3497               	retlw	low _PWM3_LoadDutyValue
  4792  03A8  3405               	retlw	high _PWM3_LoadDutyValue
  4793  03A9  3403               	retlw	3
  4794  03AA  3400               	retlw	0
  4795  03AB  34D0               	retlw	low _LedOff
  4796  03AC  3404               	retlw	high _LedOff
  4797  03AD  3400               	retlw	0
  4798  03AE  3419               	retlw	25
  4799  03AF  3400               	retlw	0
  4800  03B0  3400               	retlw	0
  4801  03B1  3401               	retlw	1
  4802  03B2  34AD               	retlw	low _PWM4_LoadDutyValue
  4803  03B3  3405               	retlw	high _PWM4_LoadDutyValue
  4804  03B4  3404               	retlw	4
  4805  03B5  3400               	retlw	0
  4806  03B6  34D0               	retlw	low _LedOff
  4807  03B7  3404               	retlw	high _LedOff
  4808  03B8  3400               	retlw	0
  4809  03B9  3450               	retlw	80
  4810  03BA  3400               	retlw	0
  4811  03BB  3400               	retlw	0
  4812  03BC  3401               	retlw	1
  4813  03BD  3481               	retlw	low _PWM5_LoadDutyValue
  4814  03BE  3405               	retlw	high _PWM5_LoadDutyValue
  4815  03BF  3405               	retlw	5
  4816  03C0  3400               	retlw	0
  4817  03C1  34D0               	retlw	low _LedOff
  4818  03C2  3404               	retlw	high _LedOff
  4819  03C3  3400               	retlw	0
  4820  03C4  3450               	retlw	80
  4821  03C5  3400               	retlw	0
  4822  03C6  3400               	retlw	0
  4823  03C7  3401               	retlw	1
  4824  03C8  34C3               	retlw	low _PWM6_LoadDutyValue
  4825  03C9  3405               	retlw	high _PWM6_LoadDutyValue
  4826                           
  4827                           	psect	nvBANK0
  4828  005D                     __pnvBANK0:
  4829  005D                     _IOCCF1_InterruptHandler:
  4830  005D                     	ds	2
  4831  000E                     _PORTCbits	set	14
  4832  0012                     _TRISAbits	set	18
  4833  0018                     _LATAbits	set	24
  4834  000B                     _INTCONbits	set	11
  4835  0014                     _TRISC	set	20
  4836  0012                     _TRISA	set	18
  4837  001A                     _LATC	set	26
  4838  0018                     _LATA	set	24
  4839  009D                     _ADCON0bits	set	157
  4840  009D                     _ADCON0	set	157
  4841  009C                     _ADRESH	set	156
  4842  009B                     _ADRESL	set	155
  4843  009F                     _ADACT	set	159
  4844  009E                     _ADCON1	set	158
  4845  020F                     _T1GCONbits	set	527
  4846  020E                     _T1CONbits	set	526
  4847  020E                     _T1CON	set	526
  4848  020C                     _TMR1L	set	524
  4849  020D                     _TMR1H	set	525
  4850  0211                     _T1CLK	set	529
  4851  0210                     _T1GATE	set	528
  4852  020F                     _T1GCON	set	527
  4853  028D                     _PR2	set	653
  4854  028C                     _TMR2	set	652
  4855  028E                     _T2CONbits	set	654
  4856  0291                     _T2RSTbits	set	657
  4857  028F                     _T2HLTbits	set	655
  4858  028E                     _T2CON	set	654
  4859  028C                     _T2TMR	set	652
  4860  028D                     _T2PR	set	653
  4861  0291                     _T2RST	set	657
  4862  028F                     _T2HLT	set	655
  4863  0290                     _T2CLKCON	set	656
  4864  030E                     _CCP1CONbits	set	782
  4865  030C                     _CCPR1L	set	780
  4866  030D                     _CCPR1H	set	781
  4867  030E                     _CCP1CON	set	782
  4868  0312                     _CCP2CONbits	set	786
  4869  0310                     _CCPR2L	set	784
  4870  0311                     _CCPR2H	set	785
  4871  0312                     _CCP2CON	set	786
  4872  031C                     _PWM5DCL	set	796
  4873  031D                     _PWM5DCH	set	797
  4874  031E                     _PWM5CON	set	798
  4875  0314                     _PWM3DCL	set	788
  4876  0315                     _PWM3DCH	set	789
  4877  0316                     _PWM3CON	set	790
  4878  0318                     _PWM4DCL	set	792
  4879  0319                     _PWM4DCH	set	793
  4880  031A                     _PWM4CON	set	794
  4881  038C                     _PWM6DCL	set	908
  4882  038D                     _PWM6DCH	set	909
  4883  038E                     _PWM6CON	set	910
  4884  059E                     _T0CON0bits	set	1438
  4885  059E                     _T0CON0	set	1438
  4886  059C                     _TMR0L	set	1436
  4887  059D                     _TMR0H	set	1437
  4888  059F                     _T0CON1	set	1439
  4889  071A                     _PIE4bits	set	1818
  4890  070C                     _PIR0bits	set	1804
  4891  0716                     _PIE0bits	set	1814
  4892  0710                     _PIR4bits	set	1808
  4893  079B                     _PMD5	set	1947
  4894  079A                     _PMD4	set	1946
  4895  0799                     _PMD3	set	1945
  4896  0798                     _PMD2	set	1944
  4897  0797                     _PMD1	set	1943
  4898  0796                     _PMD0	set	1942
  4899  0892                     _OSCTUNE	set	2194
  4900  0890                     _OSCSTAT	set	2192
  4901  0893                     _OSCFRQ	set	2195
  4902  0891                     _OSCEN	set	2193
  4903  088F                     _OSCCON3	set	2191
  4904  088D                     _OSCCON1	set	2189
  4905  4480                     _PLLR	set	17536
  4906  090C                     _FVRCONbits	set	2316
  4907  090C                     _FVRCON	set	2316
  4908  1EC3                     _ADACTPPS	set	7875
  4909  1F25                     _RC5PPS	set	7973
  4910  1F22                     _RC2PPS	set	7970
  4911  1F15                     _RA5PPS	set	7957
  4912  1F24                     _RC4PPS	set	7972
  4913  1F23                     _RC3PPS	set	7971
  4914  1F14                     _RA4PPS	set	7956
  4915  1F53                     _IOCCPbits	set	8019
  4916  1F54                     _IOCCNbits	set	8020
  4917  1F55                     _IOCCFbits	set	8021
  4918  1F52                     _INLVLC	set	8018
  4919  1F3C                     _INLVLA	set	7996
  4920  1F51                     _SLRCONC	set	8017
  4921  1F3B                     _SLRCONA	set	7995
  4922  1F50                     _ODCONC	set	8016
  4923  1F3A                     _ODCONA	set	7994
  4924  1F4F                     _WPUC	set	8015
  4925  1F39                     _WPUA	set	7993
  4926  1F38                     _ANSELA	set	7992
  4927  1F4E                     _ANSELC	set	8014
  4928                           
  4929                           	psect	cinit
  4930  001A                     start_initialization:	
  4931                           ; #config settings
  4932                           
  4933  001A                     __initialization:
  4934                           
  4935                           ; Initialize objects allocated to BANK0
  4936  001A  3044               	movlw	low __pidataBANK0
  4937  001B  0084               	movwf	4
  4938  001C  3086               	movlw	(high __pidataBANK0)| (0+128)
  4939  001D  0085               	movwf	5
  4940  001E  304D               	movlw	low __pdataBANK0
  4941  001F  0086               	movwf	6
  4942  0020  3000               	movlw	high __pdataBANK0
  4943  0021  0087               	movwf	7
  4944  0022  3010               	movlw	16
  4945  0023  2711               	fcall	init_ram
  4946                           
  4947                           ; Initialize objects allocated to BANK1
  4948  0024  3088               	movlw	low __pidataBANK1
  4949  0025  0084               	movwf	4
  4950  0026  3083               	movlw	(high __pidataBANK1)| (0+128)
  4951  0027  0085               	movwf	5
  4952  0028  30A0               	movlw	low __pdataBANK1
  4953  0029  0086               	movwf	6
  4954  002A  3000               	movlw	high __pdataBANK1
  4955  002B  0087               	movwf	7
  4956  002C  3042               	movlw	66
  4957  002D  2711               	fcall	init_ram
  4958                           
  4959                           ; Clear objects allocated to COMMON
  4960  002E  01FA               	clrf	__pbssCOMMON& (0+127)
  4961  002F  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  4962                           
  4963                           ; Clear objects allocated to BANK0
  4964  0030  3020               	movlw	low __pbssBANK0
  4965  0031  0084               	movwf	4
  4966  0032  3000               	movlw	high __pbssBANK0
  4967  0033  0085               	movwf	5
  4968  0034  301A               	movlw	26
  4969  0035  2717               	fcall	clear_ram0
  4970  0036                     end_of_initialization:	
  4971                           ;End of C runtime variable initialization code
  4972                           
  4973  0036                     __end_of__initialization:
  4974  0036  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4975  0037  0140               	movlb	0
  4976  0038  2A72               	ljmp	_main	;jump to C main() function
  4977                           
  4978                           	psect	bssCOMMON
  4979  007A                     __pbssCOMMON:
  4980  007A                     _timer0ReloadVal16bit:
  4981  007A                     	ds	2
  4982                           
  4983                           	psect	bssBANK0
  4984  0020                     __pbssBANK0:
  4985  0020                     _Random:
  4986  0020                     	ds	2
  4987  0022                     _AdcResultAvg:
  4988  0022                     	ds	2
  4989  0024                     _AdcResultSample:
  4990  0024                     	ds	2
  4991  0026                     _TMR1_InterruptHandler:
  4992  0026                     	ds	2
  4993  0028                     _timer1ReloadVal:
  4994  0028                     	ds	2
  4995  002A                     _TMR0_InterruptHandler:
  4996  002A                     	ds	2
  4997  002C                     _ADC_InterruptHandler:
  4998  002C                     	ds	2
  4999  002E                     _ReturnVal:
  5000  002E                     	ds	1
  5001  002F                     _pAdcResult:
  5002  002F                     	ds	1
  5003  0030                     _AdcState:
  5004  0030                     	ds	1
  5005  0031                     _CarrOff:
  5006  0031                     	ds	1
  5007  0032                     _BattProtect:
  5008  0032                     	ds	1
  5009  0033                     _UpdateVbatt:
  5010  0033                     	ds	1
  5011  0034                     _UpdateRcs:
  5012  0034                     	ds	1
  5013  0035                     _UpdateLeds:
  5014  0035                     	ds	1
  5015  0036                     _seed:
  5016  0036                     	ds	4
  5017                           
  5018                           	psect	dataBANK0
  5019  004D                     __pdataBANK0:
  5020  004D                     _AdcResult:
  5021  004D                     	ds	16
  5022                           
  5023                           	psect	dataBANK1
  5024  00A0                     __pdataBANK1:
  5025  00A0                     _LedBit:
  5026  00A0                     	ds	66
  5027                           
  5028                           	psect	inittext
  5029  0711                     init_ram:
  5030  0711  00FE               	movwf	126
  5031  0712                     initloop:
  5032  0712  0012               	moviw fsr0++
  5033  0713  001E               	movwi fsr1++
  5034  0714  0BFE               	decfsz	126,f
  5035  0715  2F12               	goto	initloop
  5036  0716  3400               	retlw	0
  5037                           
  5038                           	psect	clrtext
  5039  0717                     clear_ram0:	
  5040                           ;	Called with FSR0 containing the base address, and
  5041                           ;	WREG with the size to clear
  5042                           
  5043  0717  0064               	clrwdt	;clear the watchdog before getting into this loop
  5044  0718                     clrloop0:
  5045  0718  0180               	clrf	0	;clear RAM location pointed to by FSR
  5046  0719  3101               	addfsr 0,1
  5047  071A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5048  071B  2F18               	goto	clrloop0	;have we reached the end yet?
  5049  071C  3400               	retlw	0	;all done for this memory range, return
  5050                           
  5051                           	psect	cstackCOMMON
  5052  0070                     __pcstackCOMMON:
  5053  0070                     ?_IOCCF1_DefaultInterruptHandler:
  5054  0070                     ??_IOCCF1_DefaultInterruptHandler:	
  5055                           ; 1 bytes @ 0x0
  5056                           
  5057  0070                     ?_IOCCF1_ISR:	
  5058                           ; 1 bytes @ 0x0
  5059                           
  5060  0070                     ?_PMD_Initialize:	
  5061                           ; 1 bytes @ 0x0
  5062                           
  5063  0070                     ?_OSCILLATOR_Initialize:	
  5064                           ; 1 bytes @ 0x0
  5065                           
  5066  0070                     ?_PWM2_Initialize:	
  5067                           ; 1 bytes @ 0x0
  5068                           
  5069  0070                     ?_TMR0_Initialize:	
  5070                           ; 1 bytes @ 0x0
  5071                           
  5072  0070                     ?_PWM1_Initialize:	
  5073                           ; 1 bytes @ 0x0
  5074                           
  5075  0070                     ?_TMR1_Initialize:	
  5076                           ; 1 bytes @ 0x0
  5077                           
  5078  0070                     ?_TMR0_ISR:	
  5079                           ; 1 bytes @ 0x0
  5080                           
  5081  0070                     ??_TMR0_ISR:	
  5082                           ; 1 bytes @ 0x0
  5083                           
  5084  0070                     ?_TMR1_ISR:	
  5085                           ; 1 bytes @ 0x0
  5086                           
  5087  0070                     ?_TMR0_DefaultInterruptHandler:	
  5088                           ; 1 bytes @ 0x0
  5089                           
  5090  0070                     ??_TMR0_DefaultInterruptHandler:	
  5091                           ; 1 bytes @ 0x0
  5092                           
  5093  0070                     ?_TMR1_DefaultInterruptHandler:	
  5094                           ; 1 bytes @ 0x0
  5095                           
  5096  0070                     ??_TMR1_DefaultInterruptHandler:	
  5097                           ; 1 bytes @ 0x0
  5098                           
  5099  0070                     ?_TMR0_INT:	
  5100                           ; 1 bytes @ 0x0
  5101                           
  5102  0070                     ??_TMR0_INT:	
  5103                           ; 1 bytes @ 0x0
  5104                           
  5105  0070                     ?_TMR1_INT:	
  5106                           ; 1 bytes @ 0x0
  5107                           
  5108  0070                     ??_TMR1_INT:	
  5109                           ; 1 bytes @ 0x0
  5110                           
  5111  0070                     ?_RCS_INT:	
  5112                           ; 1 bytes @ 0x0
  5113                           
  5114  0070                     ?_INITxEXECUTER:	
  5115                           ; 1 bytes @ 0x0
  5116                           
  5117  0070                     ?_EXECUTExEFFECT:	
  5118                           ; 1 bytes @ 0x0
  5119                           
  5120  0070                     ?_RCSxLED:	
  5121                           ; 1 bytes @ 0x0
  5122                           
  5123  0070                     ?_BATTxPROTECT:	
  5124                           ; 1 bytes @ 0x0
  5125                           
  5126  0070                     ?_CalcPwm:	
  5127                           ; 1 bytes @ 0x0
  5128                           
  5129  0070                     ?_TMR2_Initialize:	
  5130                           ; 1 bytes @ 0x0
  5131                           
  5132  0070                     ?_ADC_Initialize:	
  5133                           ; 1 bytes @ 0x0
  5134                           
  5135  0070                     ?_ADC_SelectChannel:	
  5136                           ; 1 bytes @ 0x0
  5137                           
  5138  0070                     ?_ADC_StartConversion:	
  5139                           ; 1 bytes @ 0x0
  5140                           
  5141  0070                     ?_ADC_IsConversionDone:	
  5142                           ; 1 bytes @ 0x0
  5143                           
  5144  0070                     ?_PWM4_Initialize:	
  5145                           ; 1 bytes @ 0x0
  5146                           
  5147  0070                     ?_PWM3_Initialize:	
  5148                           ; 1 bytes @ 0x0
  5149                           
  5150  0070                     ?_PWM6_Initialize:	
  5151                           ; 1 bytes @ 0x0
  5152                           
  5153  0070                     ?_PWM5_Initialize:	
  5154                           ; 1 bytes @ 0x0
  5155                           
  5156  0070                     ?_FVR_Initialize:	
  5157                           ; 1 bytes @ 0x0
  5158                           
  5159  0070                     ?_PIN_MANAGER_Initialize:	
  5160                           ; 1 bytes @ 0x0
  5161                           
  5162  0070                     ?_PIN_MANAGER_IOC:	
  5163                           ; 1 bytes @ 0x0
  5164                           
  5165  0070                     ?_SYSTEM_Initialize:	
  5166                           ; 1 bytes @ 0x0
  5167                           
  5168  0070                     ?_INTERRUPT_InterruptManager:	
  5169                           ; 1 bytes @ 0x0
  5170                           
  5171  0070                     ?_TMR1_WriteTimer:	
  5172                           ; 1 bytes @ 0x0
  5173                           
  5174  0070                     ?_TMR1_Reload:	
  5175                           ; 1 bytes @ 0x0
  5176                           
  5177  0070                     ?_main:	
  5178                           ; 1 bytes @ 0x0
  5179                           
  5180  0070                     TMR1_WriteTimer@timerVal:	
  5181                           ; 1 bytes @ 0x0
  5182                           
  5183                           
  5184                           ; 2 bytes @ 0x0
  5185  0070                     	ds	2
  5186  0072                     ?_IOCCF1_SetInterruptHandler:
  5187  0072                     ??_IOCCF1_ISR:	
  5188                           ; 1 bytes @ 0x2
  5189                           
  5190  0072                     ??_PMD_Initialize:	
  5191                           ; 1 bytes @ 0x2
  5192                           
  5193  0072                     ??_OSCILLATOR_Initialize:	
  5194                           ; 1 bytes @ 0x2
  5195                           
  5196  0072                     ??_PWM2_Initialize:	
  5197                           ; 1 bytes @ 0x2
  5198                           
  5199  0072                     ??_PWM1_Initialize:	
  5200                           ; 1 bytes @ 0x2
  5201                           
  5202  0072                     ??_TMR1_ISR:	
  5203                           ; 1 bytes @ 0x2
  5204                           
  5205  0072                     ?_TMR0_SetInterruptHandler:	
  5206                           ; 1 bytes @ 0x2
  5207                           
  5208  0072                     ?_TMR1_SetInterruptHandler:	
  5209                           ; 1 bytes @ 0x2
  5210                           
  5211  0072                     ??_RCS_INT:	
  5212                           ; 1 bytes @ 0x2
  5213                           
  5214  0072                     ??_BATTxPROTECT:	
  5215                           ; 1 bytes @ 0x2
  5216                           
  5217  0072                     ?_srand:	
  5218                           ; 1 bytes @ 0x2
  5219                           
  5220  0072                     ??_TMR2_Initialize:	
  5221                           ; 1 bytes @ 0x2
  5222                           
  5223  0072                     ??_ADC_Initialize:	
  5224                           ; 1 bytes @ 0x2
  5225                           
  5226  0072                     ??_ADC_SelectChannel:	
  5227                           ; 1 bytes @ 0x2
  5228                           
  5229  0072                     ??_ADC_StartConversion:	
  5230                           ; 1 bytes @ 0x2
  5231                           
  5232  0072                     ??_ADC_IsConversionDone:	
  5233                           ; 1 bytes @ 0x2
  5234                           
  5235  0072                     ??_PWM4_Initialize:	
  5236                           ; 1 bytes @ 0x2
  5237                           
  5238  0072                     ??_PWM3_Initialize:	
  5239                           ; 1 bytes @ 0x2
  5240                           
  5241  0072                     ??_PWM6_Initialize:	
  5242                           ; 1 bytes @ 0x2
  5243                           
  5244  0072                     ??_PWM5_Initialize:	
  5245                           ; 1 bytes @ 0x2
  5246                           
  5247  0072                     ??_FVR_Initialize:	
  5248                           ; 1 bytes @ 0x2
  5249                           
  5250  0072                     ??_PIN_MANAGER_IOC:	
  5251                           ; 1 bytes @ 0x2
  5252                           
  5253  0072                     ??_INTERRUPT_InterruptManager:	
  5254                           ; 1 bytes @ 0x2
  5255                           
  5256  0072                     ??_TMR1_WriteTimer:	
  5257                           ; 1 bytes @ 0x2
  5258                           
  5259  0072                     ??_TMR1_Reload:	
  5260                           ; 1 bytes @ 0x2
  5261                           
  5262  0072                     ?___bmul:	
  5263                           ; 1 bytes @ 0x2
  5264                           
  5265  0072                     ?_ADC_GetConversionResult:	
  5266                           ; 1 bytes @ 0x2
  5267                           
  5268  0072                     ?___lmul:	
  5269                           ; 2 bytes @ 0x2
  5270                           
  5271  0072                     ___bmul@multiplicand:	
  5272                           ; 4 bytes @ 0x2
  5273                           
  5274  0072                     IOCCF1_SetInterruptHandler@InterruptHandler:	
  5275                           ; 1 bytes @ 0x2
  5276                           
  5277  0072                     TMR0_SetInterruptHandler@InterruptHandler:	
  5278                           ; 2 bytes @ 0x2
  5279                           
  5280  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  5281                           ; 2 bytes @ 0x2
  5282                           
  5283  0072                     srand@s:	
  5284                           ; 2 bytes @ 0x2
  5285                           
  5286  0072                     ___lmul@multiplier:	
  5287                           ; 2 bytes @ 0x2
  5288                           
  5289                           
  5290                           ; 4 bytes @ 0x2
  5291  0072                     	ds	1
  5292  0073                     ??___bmul:
  5293  0073                     ADC_SelectChannel@channel:	
  5294                           ; 1 bytes @ 0x3
  5295                           
  5296                           
  5297                           ; 1 bytes @ 0x3
  5298  0073                     	ds	1
  5299  0074                     ??_IOCCF1_SetInterruptHandler:
  5300  0074                     ??_TMR0_Initialize:	
  5301                           ; 1 bytes @ 0x4
  5302                           
  5303  0074                     ??_TMR1_Initialize:	
  5304                           ; 1 bytes @ 0x4
  5305                           
  5306  0074                     ??_TMR0_SetInterruptHandler:	
  5307                           ; 1 bytes @ 0x4
  5308                           
  5309  0074                     ??_TMR1_SetInterruptHandler:	
  5310                           ; 1 bytes @ 0x4
  5311                           
  5312  0074                     ??_srand:	
  5313                           ; 1 bytes @ 0x4
  5314                           
  5315  0074                     ??_ADC_GetConversionResult:	
  5316                           ; 1 bytes @ 0x4
  5317                           
  5318  0074                     ??_PIN_MANAGER_Initialize:	
  5319                           ; 1 bytes @ 0x4
  5320                           
  5321  0074                     ??_SYSTEM_Initialize:	
  5322                           ; 1 bytes @ 0x4
  5323                           
  5324  0074                     ___bmul@product:	
  5325                           ; 1 bytes @ 0x4
  5326                           
  5327                           
  5328                           ; 1 bytes @ 0x4
  5329  0074                     	ds	1
  5330  0075                     ___bmul@multiplier:
  5331                           
  5332                           ; 1 bytes @ 0x5
  5333  0075                     	ds	1
  5334  0076                     ?_PWM4_LoadDutyValue:
  5335  0076                     ?_PWM3_LoadDutyValue:	
  5336                           ; 1 bytes @ 0x6
  5337                           
  5338  0076                     ?_PWM6_LoadDutyValue:	
  5339                           ; 1 bytes @ 0x6
  5340                           
  5341  0076                     ?_PWM5_LoadDutyValue:	
  5342                           ; 1 bytes @ 0x6
  5343                           
  5344  0076                     ?_PWM2_LoadDutyValue:	
  5345                           ; 1 bytes @ 0x6
  5346                           
  5347  0076                     ?_PWM1_LoadDutyValue:	
  5348                           ; 1 bytes @ 0x6
  5349                           
  5350  0076                     PWM4_LoadDutyValue@dutyValue:	
  5351                           ; 1 bytes @ 0x6
  5352                           
  5353  0076                     PWM3_LoadDutyValue@dutyValue:	
  5354                           ; 2 bytes @ 0x6
  5355                           
  5356  0076                     PWM6_LoadDutyValue@dutyValue:	
  5357                           ; 2 bytes @ 0x6
  5358                           
  5359  0076                     PWM5_LoadDutyValue@dutyValue:	
  5360                           ; 2 bytes @ 0x6
  5361                           
  5362  0076                     PWM2_LoadDutyValue@dutyValue:	
  5363                           ; 2 bytes @ 0x6
  5364                           
  5365  0076                     PWM1_LoadDutyValue@dutyValue:	
  5366                           ; 2 bytes @ 0x6
  5367                           
  5368  0076                     ___lmul@multiplicand:	
  5369                           ; 2 bytes @ 0x6
  5370                           
  5371                           
  5372                           ; 4 bytes @ 0x6
  5373  0076                     	ds	2
  5374  0078                     ??_PWM4_LoadDutyValue:
  5375  0078                     ??_PWM3_LoadDutyValue:	
  5376                           ; 1 bytes @ 0x8
  5377                           
  5378  0078                     ??_PWM6_LoadDutyValue:	
  5379                           ; 1 bytes @ 0x8
  5380                           
  5381  0078                     ??_PWM5_LoadDutyValue:	
  5382                           ; 1 bytes @ 0x8
  5383                           
  5384  0078                     ??_PWM2_LoadDutyValue:	
  5385                           ; 1 bytes @ 0x8
  5386                           
  5387  0078                     ??_PWM1_LoadDutyValue:	
  5388                           ; 1 bytes @ 0x8
  5389                           
  5390                           
  5391                           ; 1 bytes @ 0x8
  5392  0078                     	ds	2
  5393  007A                     ??_INITxEXECUTER:
  5394  007A                     ??___lmul:	
  5395                           ; 1 bytes @ 0xA
  5396                           
  5397                           
  5398                           	psect	cstackBANK0
  5399  003A                     __pcstackBANK0:	
  5400                           ; 1 bytes @ 0xA
  5401                           
  5402  003A                     ??_CalcPwm:
  5403  003A                     ___lmul@product:	
  5404                           ; 1 bytes @ 0x0
  5405                           
  5406                           
  5407                           ; 4 bytes @ 0x0
  5408  003A                     	ds	4
  5409  003E                     ?_rand:
  5410  003E                     CalcPwm@Led:	
  5411                           ; 2 bytes @ 0x4
  5412                           
  5413                           
  5414                           ; 1 bytes @ 0x4
  5415  003E                     	ds	1
  5416  003F                     ?_LedOff:
  5417  003F                     ?_LedFlash:	
  5418                           ; 1 bytes @ 0x5
  5419                           
  5420  003F                     ?_LedNom:	
  5421                           ; 1 bytes @ 0x5
  5422                           
  5423  003F                     ?_LedSlFl:	
  5424                           ; 1 bytes @ 0x5
  5425                           
  5426  003F                     ?_LedBrake:	
  5427                           ; 1 bytes @ 0x5
  5428                           
  5429  003F                     LedOff@Led:	
  5430                           ; 1 bytes @ 0x5
  5431                           
  5432  003F                     LedNom@Led:	
  5433                           ; 1 bytes @ 0x5
  5434                           
  5435  003F                     LedBrake@Led:	
  5436                           ; 1 bytes @ 0x5
  5437                           
  5438  003F                     LedSlFl@Led:	
  5439                           ; 1 bytes @ 0x5
  5440                           
  5441  003F                     LedFlash@Led:	
  5442                           ; 1 bytes @ 0x5
  5443                           
  5444                           
  5445                           ; 1 bytes @ 0x5
  5446  003F                     	ds	1
  5447  0040                     ??_LedOff:
  5448  0040                     ??_rand:	
  5449                           ; 1 bytes @ 0x6
  5450                           
  5451  0040                     ??_LedFlash:	
  5452                           ; 1 bytes @ 0x6
  5453                           
  5454  0040                     ??_LedNom:	
  5455                           ; 1 bytes @ 0x6
  5456                           
  5457  0040                     ??_LedSlFl:	
  5458                           ; 1 bytes @ 0x6
  5459                           
  5460  0040                     ??_LedBrake:	
  5461                           ; 1 bytes @ 0x6
  5462                           
  5463                           
  5464                           ; 1 bytes @ 0x6
  5465  0040                     	ds	3
  5466  0043                     LedSlFl@ReturnVal:
  5467  0043                     LedFlash@ReturnVal:	
  5468                           ; 1 bytes @ 0x9
  5469                           
  5470                           
  5471                           ; 1 bytes @ 0x9
  5472  0043                     	ds	1
  5473  0044                     ??_EXECUTExEFFECT:
  5474  0044                     ??_RCSxLED:	
  5475                           ; 1 bytes @ 0xA
  5476                           
  5477                           
  5478                           ; 1 bytes @ 0xA
  5479  0044                     	ds	2
  5480  0046                     _EXECUTExEFFECT$1858:
  5481                           
  5482                           ; 2 bytes @ 0xC
  5483  0046                     	ds	2
  5484  0048                     EXECUTExEFFECT@ReturnData:
  5485                           
  5486                           ; 1 bytes @ 0xE
  5487  0048                     	ds	1
  5488  0049                     EXECUTExEFFECT@x:
  5489                           
  5490                           ; 1 bytes @ 0xF
  5491  0049                     	ds	1
  5492  004A                     ??_main:
  5493                           
  5494                           ; 1 bytes @ 0x10
  5495  004A                     	ds	2
  5496  004C                     main@i:
  5497                           
  5498                           ; 1 bytes @ 0x12
  5499  004C                     	ds	1
  5500                           
  5501                           	psect	maintext
  5502  0272                     __pmaintext:	
  5503 ;;
  5504 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5505 ;;
  5506 ;; *************** function _main *****************
  5507 ;; Defined at:
  5508 ;;		line 71 in file "Main.c"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;		None
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;  i               1   18[BANK0 ] unsigned char 
  5513 ;; Return value:  Size  Location     Type
  5514 ;;                  1    wreg      void 
  5515 ;; Registers used:
  5516 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5517 ;; Tracked objects:
  5518 ;;		On entry : B3F/0
  5519 ;;		On exit  : 0/0
  5520 ;;		Unchanged: 0/0
  5521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5522 ;;      Params:         0       0       0       0
  5523 ;;      Locals:         0       1       0       0
  5524 ;;      Temps:          0       2       0       0
  5525 ;;      Totals:         0       3       0       0
  5526 ;;Total ram usage:        3 bytes
  5527 ;; Hardware stack levels required when called:   10
  5528 ;; This function calls:
  5529 ;;		_ADC_GetConversionResult
  5530 ;;		_ADC_IsConversionDone
  5531 ;;		_ADC_SelectChannel
  5532 ;;		_ADC_StartConversion
  5533 ;;		_BATTxPROTECT
  5534 ;;		_EXECUTExEFFECT
  5535 ;;		_INITxEXECUTER
  5536 ;;		_IOCCF1_SetInterruptHandler
  5537 ;;		_RCSxLED
  5538 ;;		_SYSTEM_Initialize
  5539 ;;		_TMR0_SetInterruptHandler
  5540 ;;		_TMR1_SetInterruptHandler
  5541 ;; This function is called by:
  5542 ;;		Startup code after reset
  5543 ;; This function uses a non-reentrant model
  5544 ;;
  5545                           
  5546                           
  5547                           ;psect for function _main
  5548  0272                     _main:
  5549                           
  5550                           ;Main.c: 74:     SYSTEM_Initialize();
  5551                           
  5552                           ;incstack = 0
  5553                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5554  0272  2654               	fcall	_SYSTEM_Initialize
  5555                           
  5556                           ;Main.c: 80:     (INTCONbits.GIE = 1);
  5557  0273  178B               	bsf	11,7	;volatile
  5558                           
  5559                           ;Main.c: 83:     (INTCONbits.PEIE = 1);
  5560  0274  170B               	bsf	11,6	;volatile
  5561                           
  5562                           ;Main.c: 92:     TMR0_SetInterruptHandler(TMR0_INT);
  5563  0275  3047               	movlw	low _TMR0_INT
  5564  0276  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  5565  0277  3007               	movlw	high _TMR0_INT
  5566  0278  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  5567  0279  2723               	fcall	_TMR0_SetInterruptHandler
  5568                           
  5569                           ;Main.c: 93:     TMR1_SetInterruptHandler(TMR1_INT);
  5570  027A  3043               	movlw	low _TMR1_INT
  5571  027B  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  5572  027C  3007               	movlw	high _TMR1_INT
  5573  027D  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  5574  027E  271D               	fcall	_TMR1_SetInterruptHandler
  5575                           
  5576                           ;Main.c: 95:     IOCCF1_SetInterruptHandler(RCS_INT);
  5577  027F  303A               	movlw	low _RCS_INT
  5578  0280  00F2               	movwf	IOCCF1_SetInterruptHandler@InterruptHandler
  5579  0281  3007               	movlw	high _RCS_INT
  5580  0282  00F3               	movwf	IOCCF1_SetInterruptHandler@InterruptHandler+1
  5581  0283  2729               	fcall	_IOCCF1_SetInterruptHandler
  5582                           
  5583                           ;Main.c: 97:     ADC_SelectChannel(Vbatt);
  5584  0284  3010               	movlw	16
  5585  0285  269A               	fcall	_ADC_SelectChannel
  5586                           
  5587                           ;Main.c: 99:     INITxEXECUTER();
  5588  0286  268D               	fcall	_INITxEXECUTER
  5589  0287                     l2760:
  5590                           
  5591                           ;Main.c: 102:     {;Main.c: 104:         if(UpdateLeds){
  5592  0287  0140               	movlb	0	; select bank0
  5593  0288  0835               	movf	_UpdateLeds,w
  5594  0289  1903               	btfsc	3,2
  5595  028A  2A91               	goto	l2766
  5596                           
  5597                           ;Main.c: 105:             if (EXECUTExEFFECT() == 1 )
  5598  028B  249F               	fcall	_EXECUTExEFFECT
  5599  028C  3A01               	xorlw	1
  5600  028D  1D03               	skipz
  5601  028E  2A91               	goto	l2766
  5602                           
  5603                           ;Main.c: 106:             {;Main.c: 107:                 UpdateLeds = 0;
  5604  028F  0140               	movlb	0	; select bank0
  5605  0290  01B5               	clrf	_UpdateLeds
  5606  0291                     l2766:
  5607                           
  5608                           ;Main.c: 112:         if(UpdateRcs && !CarrOff){
  5609  0291  0140               	movlb	0	; select bank0
  5610  0292  0834               	movf	_UpdateRcs,w
  5611  0293  1903               	btfsc	3,2
  5612  0294  2A9B               	goto	l2774
  5613  0295  0831               	movf	_CarrOff,w
  5614  0296  1D03               	btfss	3,2
  5615  0297  2A9B               	goto	l2774
  5616                           
  5617                           ;Main.c: 113:             RCSxLED();
  5618  0298  230A               	fcall	_RCSxLED
  5619                           
  5620                           ;Main.c: 114:             UpdateRcs = 0;
  5621  0299  0140               	movlb	0	; select bank0
  5622  029A  01B4               	clrf	_UpdateRcs
  5623  029B                     l2774:
  5624                           
  5625                           ;Main.c: 118:         if(UpdateVbatt){
  5626  029B  0833               	movf	_UpdateVbatt,w
  5627  029C  1D03               	btfss	3,2
  5628  029D  2AEF               	goto	l2816
  5629  029E  2AFF               	goto	l2818
  5630  029F                     l2778:
  5631  029F  274B               	fcall	_ADC_StartConversion
  5632                           
  5633                           ;Main.c: 121:                         AdcState = 1;
  5634  02A0  0140               	movlb	0	; select bank0
  5635  02A1  01B0               	clrf	_AdcState
  5636  02A2  0AB0               	incf	_AdcState,f
  5637                           
  5638                           ;Main.c: 122:                     break;
  5639  02A3  2AFF               	goto	l2818
  5640  02A4                     l2782:
  5641  02A4  2703               	fcall	_ADC_IsConversionDone
  5642  02A5  3A00               	xorlw	0
  5643  02A6  1903               	skipnz
  5644  02A7  2AFF               	goto	l2818
  5645                           
  5646                           ;Main.c: 124:                             AdcResultSample = ADC_GetConversionResult();
  5647  02A8  272F               	fcall	_ADC_GetConversionResult
  5648  02A9  0873               	movf	?_ADC_GetConversionResult+1,w
  5649  02AA  0140               	movlb	0	; select bank0
  5650  02AB  00A5               	movwf	_AdcResultSample+1
  5651  02AC  0872               	movf	?_ADC_GetConversionResult,w
  5652  02AD  00A4               	movwf	_AdcResultSample
  5653                           
  5654                           ;Main.c: 125:                             AdcResult[pAdcResult] = AdcResultSample;
  5655  02AE  352F               	lslf	_pAdcResult,w
  5656  02AF  3E4D               	addlw	(low (_AdcResult| 0))& (0+255)
  5657  02B0  0086               	movwf	6
  5658  02B1  0187               	clrf	7
  5659  02B2  0824               	movf	_AdcResultSample,w
  5660  02B3  3FC0               	movwi [0]fsr1
  5661  02B4  0825               	movf	_AdcResultSample+1,w
  5662  02B5  3FC1               	movwi [1]fsr1
  5663                           
  5664                           ;Main.c: 127:                             pAdcResult++;
  5665  02B6  3001               	movlw	1
  5666  02B7  00CA               	movwf	??_main
  5667  02B8  084A               	movf	??_main,w
  5668  02B9  07AF               	addwf	_pAdcResult,f
  5669                           
  5670                           ;Main.c: 128:                             if(pAdcResult > (8 - 1)){
  5671  02BA  3008               	movlw	8
  5672  02BB  022F               	subwf	_pAdcResult,w
  5673  02BC  1803               	btfsc	3,0
  5674                           
  5675                           ;Main.c: 129:                                 pAdcResult = 0;
  5676  02BD  01AF               	clrf	_pAdcResult
  5677                           
  5678                           ;Main.c: 132:                             AdcResultAvg = 0;
  5679                           
  5680                           ;Main.c: 130:                             }
  5681  02BE  01A2               	clrf	_AdcResultAvg
  5682  02BF  01A3               	clrf	_AdcResultAvg+1
  5683                           
  5684                           ;Main.c: 133:                             for(uint8_t i=0; i < 8; i++){
  5685  02C0  01CC               	clrf	main@i
  5686  02C1                     l2798:
  5687                           
  5688                           ;Main.c: 134:                                 AdcResultAvg += AdcResult[i];
  5689  02C1  354C               	lslf	main@i,w
  5690  02C2  3E4D               	addlw	(low (_AdcResult| 0))& (0+255)
  5691  02C3  0086               	movwf	6
  5692  02C4  0187               	clrf	7
  5693  02C5  3F40               	moviw [0]fsr1
  5694  02C6  00CA               	movwf	??_main
  5695  02C7  3F41               	moviw [1]fsr1
  5696  02C8  00CB               	movwf	??_main+1
  5697  02C9  084A               	movf	??_main,w
  5698  02CA  07A2               	addwf	_AdcResultAvg,f
  5699  02CB  084B               	movf	??_main+1,w
  5700  02CC  3DA3               	addwfc	_AdcResultAvg+1,f
  5701                           
  5702                           ;Main.c: 135:                             };
  5703  02CD  3001               	movlw	1
  5704  02CE  00CA               	movwf	??_main
  5705  02CF  084A               	movf	??_main,w
  5706  02D0  07CC               	addwf	main@i,f
  5707  02D1  3008               	movlw	8
  5708  02D2  024C               	subwf	main@i,w
  5709  02D3  1C03               	skipc
  5710  02D4  2AC1               	goto	l2798
  5711                           
  5712                           ;Main.c: 137:                             AdcResultAvg = AdcResultAvg >> 3;
  5713  02D5  0823               	movf	_AdcResultAvg+1,w
  5714  02D6  00CB               	movwf	??_main+1
  5715  02D7  0822               	movf	_AdcResultAvg,w
  5716  02D8  00CA               	movwf	??_main
  5717  02D9  36CB               	lsrf	??_main+1,f
  5718  02DA  0CCA               	rrf	??_main,f
  5719  02DB  36CB               	lsrf	??_main+1,f
  5720  02DC  0CCA               	rrf	??_main,f
  5721  02DD  36CB               	lsrf	??_main+1,f
  5722  02DE  0CCA               	rrf	??_main,f
  5723  02DF  084A               	movf	??_main,w
  5724  02E0  00A2               	movwf	_AdcResultAvg
  5725  02E1  084B               	movf	??_main+1,w
  5726  02E2  00A3               	movwf	_AdcResultAvg+1
  5727                           
  5728                           ;Main.c: 138:                             if (AdcResultAvg < 800){
  5729  02E3  3003               	movlw	3
  5730  02E4  0223               	subwf	_AdcResultAvg+1,w
  5731  02E5  3020               	movlw	32
  5732  02E6  1903               	skipnz
  5733  02E7  0222               	subwf	_AdcResultAvg,w
  5734  02E8  1803               	skipnc
  5735  02E9  2AEC               	goto	l2810
  5736                           
  5737                           ;Main.c: 139:                                BattProtect = 1;
  5738  02EA  01B2               	clrf	_BattProtect
  5739  02EB  0AB2               	incf	_BattProtect,f
  5740  02EC                     l2810:
  5741                           
  5742                           ;Main.c: 141:                             UpdateVbatt = 0;
  5743  02EC  01B3               	clrf	_UpdateVbatt
  5744  02ED                     l2812:	
  5745                           ;Main.c: 142:                             AdcState = 0;
  5746                           
  5747  02ED  01B0               	clrf	_AdcState
  5748                           
  5749                           ;Main.c: 147:                     break;
  5750  02EE  2AFF               	goto	l2818
  5751  02EF                     l2816:
  5752  02EF  0830               	movf	_AdcState,w
  5753  02F0  00CA               	movwf	??_main
  5754  02F1  01CB               	clrf	??_main+1
  5755                           
  5756                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5757                           ; Switch size 1, requested type "simple"
  5758                           ; Number of cases is 1, Range of values is 0 to 0
  5759                           ; switch strategies available:
  5760                           ; Name         Instructions Cycles
  5761                           ; simple_byte            4     3 (average)
  5762                           ; direct_byte            8     6 (fixed)
  5763                           ; jumptable            260     6 (fixed)
  5764                           ;	Chosen strategy is simple_byte
  5765  02F2  084B               	movf	??_main+1,w
  5766  02F3  3A00               	xorlw	0	; case 0
  5767  02F4  1903               	skipnz
  5768  02F5  2AF7               	goto	l2894
  5769  02F6  2AED               	goto	l2812
  5770  02F7                     l2894:
  5771                           
  5772                           ; Switch size 1, requested type "simple"
  5773                           ; Number of cases is 2, Range of values is 0 to 1
  5774                           ; switch strategies available:
  5775                           ; Name         Instructions Cycles
  5776                           ; simple_byte            7     4 (average)
  5777                           ; direct_byte           10     6 (fixed)
  5778                           ; jumptable            260     6 (fixed)
  5779                           ;	Chosen strategy is simple_byte
  5780  02F7  084A               	movf	??_main,w
  5781  02F8  3A00               	xorlw	0	; case 0
  5782  02F9  1903               	skipnz
  5783  02FA  2A9F               	goto	l2778
  5784  02FB  3A01               	xorlw	1	; case 1
  5785  02FC  1903               	skipnz
  5786  02FD  2AA4               	goto	l2782
  5787  02FE  2AED               	goto	l2812
  5788  02FF                     l2818:
  5789                           
  5790                           ;Main.c: 151:         if(BattProtect){
  5791  02FF  0140               	movlb	0	; select bank0
  5792  0300  0832               	movf	_BattProtect,w
  5793  0301  1903               	btfsc	3,2
  5794  0302  2B08               	goto	l561
  5795                           
  5796                           ;Main.c: 153:             BATTxPROTECT();
  5797  0303  2527               	fcall	_BATTxPROTECT
  5798                           
  5799                           ;Main.c: 154:             BattProtect = 0;
  5800  0304  0140               	movlb	0	; select bank0
  5801  0305  01B2               	clrf	_BattProtect
  5802                           
  5803                           ;Main.c: 156:             CarrOff = 1;
  5804  0306  01B1               	clrf	_CarrOff
  5805  0307  0AB1               	incf	_CarrOff,f
  5806  0308                     l561:	
  5807                           ;Main.c: 157:         }
  5808                           
  5809  0308  0064               	clrwdt	;# 
  5810  0309  2A87               	goto	l2760
  5811  030A                     __end_of_main:
  5812                           
  5813                           	psect	text1
  5814  0654                     __ptext1:	
  5815 ;; *************** function _SYSTEM_Initialize *****************
  5816 ;; Defined at:
  5817 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5818 ;; Parameters:    Size  Location     Type
  5819 ;;		None
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;		None
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  1    wreg      void 
  5824 ;; Registers used:
  5825 ;;		wreg, status,2, status,0, pclath, cstack
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5831 ;;      Params:         0       0       0       0
  5832 ;;      Locals:         0       0       0       0
  5833 ;;      Temps:          0       0       0       0
  5834 ;;      Totals:         0       0       0       0
  5835 ;;Total ram usage:        0 bytes
  5836 ;; Hardware stack levels used:    1
  5837 ;; Hardware stack levels required when called:    8
  5838 ;; This function calls:
  5839 ;;		_ADC_Initialize
  5840 ;;		_FVR_Initialize
  5841 ;;		_OSCILLATOR_Initialize
  5842 ;;		_PIN_MANAGER_Initialize
  5843 ;;		_PMD_Initialize
  5844 ;;		_PWM1_Initialize
  5845 ;;		_PWM2_Initialize
  5846 ;;		_PWM3_Initialize
  5847 ;;		_PWM4_Initialize
  5848 ;;		_PWM5_Initialize
  5849 ;;		_PWM6_Initialize
  5850 ;;		_TMR0_Initialize
  5851 ;;		_TMR1_Initialize
  5852 ;;		_TMR2_Initialize
  5853 ;; This function is called by:
  5854 ;;		_main
  5855 ;; This function uses a non-reentrant model
  5856 ;;
  5857                           
  5858                           
  5859                           ;psect for function _SYSTEM_Initialize
  5860  0654                     _SYSTEM_Initialize:
  5861                           
  5862                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  5863                           
  5864                           ;incstack = 0
  5865                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5866  0654  2680               	fcall	_PMD_Initialize
  5867                           
  5868                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  5869  0655  243B               	fcall	_PIN_MANAGER_Initialize
  5870                           
  5871                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  5872  0656  26B4               	fcall	_OSCILLATOR_Initialize
  5873                           
  5874                           ;mcc_generated_files/mcc.c: 55:     FVR_Initialize();
  5875  0657  273F               	fcall	_FVR_Initialize
  5876                           
  5877                           ;mcc_generated_files/mcc.c: 56:     PWM2_Initialize();
  5878  0658  26F3               	fcall	_PWM2_Initialize
  5879                           
  5880                           ;mcc_generated_files/mcc.c: 57:     PWM4_Initialize();
  5881  0659  26E3               	fcall	_PWM4_Initialize
  5882                           
  5883                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  5884  065A  2672               	fcall	_TMR2_Initialize
  5885                           
  5886                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  5887  065B  256A               	fcall	_TMR0_Initialize
  5888                           
  5889                           ;mcc_generated_files/mcc.c: 60:     PWM6_Initialize();
  5890  065C  26D3               	fcall	_PWM6_Initialize
  5891                           
  5892                           ;mcc_generated_files/mcc.c: 61:     PWM1_Initialize();
  5893  065D  26FB               	fcall	_PWM1_Initialize
  5894                           
  5895                           ;mcc_generated_files/mcc.c: 62:     ADC_Initialize();
  5896  065E  26CA               	fcall	_ADC_Initialize
  5897                           
  5898                           ;mcc_generated_files/mcc.c: 63:     PWM3_Initialize();
  5899  065F  26EB               	fcall	_PWM3_Initialize
  5900                           
  5901                           ;mcc_generated_files/mcc.c: 64:     PWM5_Initialize();
  5902  0660  26DB               	fcall	_PWM5_Initialize
  5903                           
  5904                           ;mcc_generated_files/mcc.c: 65:     TMR1_Initialize();
  5905  0661  254C               	fcall	_TMR1_Initialize
  5906  0662  0008               	return
  5907  0663                     __end_of_SYSTEM_Initialize:
  5908                           
  5909                           	psect	text2
  5910  0672                     __ptext2:	
  5911 ;; *************** function _TMR2_Initialize *****************
  5912 ;; Defined at:
  5913 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;		None
  5916 ;; Auto vars:     Size  Location     Type
  5917 ;;		None
  5918 ;; Return value:  Size  Location     Type
  5919 ;;                  1    wreg      void 
  5920 ;; Registers used:
  5921 ;;		wreg, status,2
  5922 ;; Tracked objects:
  5923 ;;		On entry : 0/0
  5924 ;;		On exit  : 0/0
  5925 ;;		Unchanged: 0/0
  5926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5927 ;;      Params:         0       0       0       0
  5928 ;;      Locals:         0       0       0       0
  5929 ;;      Temps:          0       0       0       0
  5930 ;;      Totals:         0       0       0       0
  5931 ;;Total ram usage:        0 bytes
  5932 ;; Hardware stack levels used:    1
  5933 ;; Hardware stack levels required when called:    6
  5934 ;; This function calls:
  5935 ;;		Nothing
  5936 ;; This function is called by:
  5937 ;;		_SYSTEM_Initialize
  5938 ;; This function uses a non-reentrant model
  5939 ;;
  5940                           
  5941                           
  5942                           ;psect for function _TMR2_Initialize
  5943  0672                     _TMR2_Initialize:
  5944                           
  5945                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
  5946                           
  5947                           ;incstack = 0
  5948                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  5949  0672  3001               	movlw	1
  5950  0673  0145               	movlb	5	; select bank5
  5951  0674  0090               	movwf	16	;volatile
  5952                           
  5953                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  5954  0675  018F               	clrf	15	;volatile
  5955                           
  5956                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  5957  0676  0191               	clrf	17	;volatile
  5958                           
  5959                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
  5960  0677  30FF               	movlw	255
  5961  0678  008D               	movwf	13	;volatile
  5962                           
  5963                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  5964  0679  018C               	clrf	12	;volatile
  5965                           
  5966                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  5967  067A  014E               	movlb	14	; select bank14
  5968  067B  1090               	bcf	16,1	;volatile
  5969                           
  5970                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0x80;
  5971  067C  3080               	movlw	128
  5972  067D  0145               	movlb	5	; select bank5
  5973  067E  008E               	movwf	14	;volatile
  5974  067F  0008               	return
  5975  0680                     __end_of_TMR2_Initialize:
  5976                           
  5977                           	psect	text3
  5978  054C                     __ptext3:	
  5979 ;; *************** function _TMR1_Initialize *****************
  5980 ;; Defined at:
  5981 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;		None
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;		None
  5986 ;; Return value:  Size  Location     Type
  5987 ;;                  1    wreg      void 
  5988 ;; Registers used:
  5989 ;;		wreg, status,2, status,0, pclath, cstack
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5995 ;;      Params:         0       0       0       0
  5996 ;;      Locals:         0       0       0       0
  5997 ;;      Temps:          0       0       0       0
  5998 ;;      Totals:         0       0       0       0
  5999 ;;Total ram usage:        0 bytes
  6000 ;; Hardware stack levels used:    1
  6001 ;; Hardware stack levels required when called:    7
  6002 ;; This function calls:
  6003 ;;		_TMR1_SetInterruptHandler
  6004 ;; This function is called by:
  6005 ;;		_SYSTEM_Initialize
  6006 ;; This function uses a non-reentrant model
  6007 ;;
  6008                           
  6009                           
  6010                           ;psect for function _TMR1_Initialize
  6011  054C                     _TMR1_Initialize:
  6012                           
  6013                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  6014                           
  6015                           ;incstack = 0
  6016                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6017  054C  0144               	movlb	4	; select bank4
  6018  054D  018F               	clrf	15	;volatile
  6019                           
  6020                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
  6021  054E  0190               	clrf	16	;volatile
  6022                           
  6023                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x09;
  6024  054F  3009               	movlw	9
  6025  0550  0091               	movwf	17	;volatile
  6026                           
  6027                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xF6;
  6028  0551  30F6               	movlw	246
  6029  0552  008D               	movwf	13	;volatile
  6030                           
  6031                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0x3C;
  6032  0553  303C               	movlw	60
  6033  0554  008C               	movwf	12	;volatile
  6034                           
  6035                           ;mcc_generated_files/tmr1.c: 84:     PIR4bits.TMR1IF = 0;
  6036  0555  014E               	movlb	14	; select bank14
  6037  0556  1010               	bcf	16,0	;volatile
  6038                           
  6039                           ;mcc_generated_files/tmr1.c: 87:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  6040  0557  0144               	movlb	4	; select bank4
  6041  0558  080D               	movf	13,w	;volatile
  6042  0559  0140               	movlb	0	; select bank0
  6043  055A  00A9               	movwf	_timer1ReloadVal+1	;volatile
  6044  055B  0144               	movlb	4	; select bank4
  6045  055C  080C               	movf	12,w	;volatile
  6046  055D  0140               	movlb	0	; select bank0
  6047  055E  00A8               	movwf	_timer1ReloadVal	;volatile
  6048                           
  6049                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
  6050  055F  014E               	movlb	14	; select bank14
  6051  0560  141A               	bsf	26,0	;volatile
  6052                           
  6053                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  6054  0561  304E               	movlw	low _TMR1_DefaultInterruptHandler
  6055  0562  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  6056  0563  3007               	movlw	high _TMR1_DefaultInterruptHandler
  6057  0564  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  6058  0565  271D               	fcall	_TMR1_SetInterruptHandler
  6059                           
  6060                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x11;
  6061  0566  3011               	movlw	17
  6062  0567  0144               	movlb	4	; select bank4
  6063  0568  008E               	movwf	14	;volatile
  6064  0569  0008               	return
  6065  056A                     __end_of_TMR1_Initialize:
  6066                           
  6067                           	psect	text4
  6068  071D                     __ptext4:	
  6069 ;; *************** function _TMR1_SetInterruptHandler *****************
  6070 ;; Defined at:
  6071 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  6072 ;; Parameters:    Size  Location     Type
  6073 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  6074 ;;		 -> TMR1_INT(1), TMR1_DefaultInterruptHandler(1), 
  6075 ;; Auto vars:     Size  Location     Type
  6076 ;;		None
  6077 ;; Return value:  Size  Location     Type
  6078 ;;                  1    wreg      void 
  6079 ;; Registers used:
  6080 ;;		wreg
  6081 ;; Tracked objects:
  6082 ;;		On entry : 0/0
  6083 ;;		On exit  : 0/0
  6084 ;;		Unchanged: 0/0
  6085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6086 ;;      Params:         2       0       0       0
  6087 ;;      Locals:         0       0       0       0
  6088 ;;      Temps:          0       0       0       0
  6089 ;;      Totals:         2       0       0       0
  6090 ;;Total ram usage:        2 bytes
  6091 ;; Hardware stack levels used:    1
  6092 ;; Hardware stack levels required when called:    6
  6093 ;; This function calls:
  6094 ;;		Nothing
  6095 ;; This function is called by:
  6096 ;;		_TMR1_Initialize
  6097 ;;		_main
  6098 ;; This function uses a non-reentrant model
  6099 ;;
  6100                           
  6101                           
  6102                           ;psect for function _TMR1_SetInterruptHandler
  6103  071D                     _TMR1_SetInterruptHandler:
  6104                           
  6105                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  6106                           
  6107                           ;incstack = 0
  6108                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  6109  071D  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  6110  071E  0140               	movlb	0	; select bank0
  6111  071F  00A7               	movwf	_TMR1_InterruptHandler+1
  6112  0720  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  6113  0721  00A6               	movwf	_TMR1_InterruptHandler
  6114  0722  0008               	return
  6115  0723                     __end_of_TMR1_SetInterruptHandler:
  6116                           
  6117                           	psect	text5
  6118  056A                     __ptext5:	
  6119 ;; *************** function _TMR0_Initialize *****************
  6120 ;; Defined at:
  6121 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  6122 ;; Parameters:    Size  Location     Type
  6123 ;;		None
  6124 ;; Auto vars:     Size  Location     Type
  6125 ;;		None
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  1    wreg      void 
  6128 ;; Registers used:
  6129 ;;		wreg, status,2, status,0, pclath, cstack
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6135 ;;      Params:         0       0       0       0
  6136 ;;      Locals:         0       0       0       0
  6137 ;;      Temps:          0       0       0       0
  6138 ;;      Totals:         0       0       0       0
  6139 ;;Total ram usage:        0 bytes
  6140 ;; Hardware stack levels used:    1
  6141 ;; Hardware stack levels required when called:    7
  6142 ;; This function calls:
  6143 ;;		_TMR0_SetInterruptHandler
  6144 ;; This function is called by:
  6145 ;;		_SYSTEM_Initialize
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149                           
  6150                           ;psect for function _TMR0_Initialize
  6151  056A                     _TMR0_Initialize:
  6152                           
  6153                           ;mcc_generated_files/tmr0.c: 71:     T0CON1 = 0x40;
  6154                           
  6155                           ;incstack = 0
  6156                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6157  056A  3040               	movlw	64
  6158  056B  014B               	movlb	11	; select bank11
  6159  056C  009F               	movwf	31	;volatile
  6160                           
  6161                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0xF0;
  6162  056D  30F0               	movlw	240
  6163  056E  009D               	movwf	29	;volatile
  6164                           
  6165                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0x60;
  6166  056F  3060               	movlw	96
  6167  0570  009C               	movwf	28	;volatile
  6168                           
  6169                           ;mcc_generated_files/tmr0.c: 80:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  6170  0571  081D               	movf	29,w	;volatile
  6171  0572  00FB               	movwf	_timer0ReloadVal16bit+1	;volatile
  6172  0573  081C               	movf	28,w	;volatile
  6173  0574  00FA               	movwf	_timer0ReloadVal16bit	;volatile
  6174                           
  6175                           ;mcc_generated_files/tmr0.c: 83:     PIR0bits.TMR0IF = 0;
  6176  0575  014E               	movlb	14	; select bank14
  6177  0576  128C               	bcf	12,5	;volatile
  6178                           
  6179                           ;mcc_generated_files/tmr0.c: 86:     PIE0bits.TMR0IE = 1;
  6180  0577  1696               	bsf	22,5	;volatile
  6181                           
  6182                           ;mcc_generated_files/tmr0.c: 89:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  6183  0578  304F               	movlw	low _TMR0_DefaultInterruptHandler
  6184  0579  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  6185  057A  3007               	movlw	high _TMR0_DefaultInterruptHandler
  6186  057B  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  6187  057C  2723               	fcall	_TMR0_SetInterruptHandler
  6188                           
  6189                           ;mcc_generated_files/tmr0.c: 92:     T0CON0 = 0x90;
  6190  057D  3090               	movlw	144
  6191  057E  014B               	movlb	11	; select bank11
  6192  057F  009E               	movwf	30	;volatile
  6193  0580  0008               	return
  6194  0581                     __end_of_TMR0_Initialize:
  6195                           
  6196                           	psect	text6
  6197  0723                     __ptext6:	
  6198 ;; *************** function _TMR0_SetInterruptHandler *****************
  6199 ;; Defined at:
  6200 ;;		line 151 in file "mcc_generated_files/tmr0.c"
  6201 ;; Parameters:    Size  Location     Type
  6202 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  6203 ;;		 -> TMR0_INT(1), TMR0_DefaultInterruptHandler(1), 
  6204 ;; Auto vars:     Size  Location     Type
  6205 ;;		None
  6206 ;; Return value:  Size  Location     Type
  6207 ;;                  1    wreg      void 
  6208 ;; Registers used:
  6209 ;;		wreg
  6210 ;; Tracked objects:
  6211 ;;		On entry : 0/0
  6212 ;;		On exit  : 0/0
  6213 ;;		Unchanged: 0/0
  6214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6215 ;;      Params:         2       0       0       0
  6216 ;;      Locals:         0       0       0       0
  6217 ;;      Temps:          0       0       0       0
  6218 ;;      Totals:         2       0       0       0
  6219 ;;Total ram usage:        2 bytes
  6220 ;; Hardware stack levels used:    1
  6221 ;; Hardware stack levels required when called:    6
  6222 ;; This function calls:
  6223 ;;		Nothing
  6224 ;; This function is called by:
  6225 ;;		_TMR0_Initialize
  6226 ;;		_main
  6227 ;; This function uses a non-reentrant model
  6228 ;;
  6229                           
  6230                           
  6231                           ;psect for function _TMR0_SetInterruptHandler
  6232  0723                     _TMR0_SetInterruptHandler:
  6233                           
  6234                           ;mcc_generated_files/tmr0.c: 152:     TMR0_InterruptHandler = InterruptHandler;
  6235                           
  6236                           ;incstack = 0
  6237                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  6238  0723  0873               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  6239  0724  0140               	movlb	0	; select bank0
  6240  0725  00AB               	movwf	_TMR0_InterruptHandler+1
  6241  0726  0872               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  6242  0727  00AA               	movwf	_TMR0_InterruptHandler
  6243  0728  0008               	return
  6244  0729                     __end_of_TMR0_SetInterruptHandler:
  6245                           
  6246                           	psect	text7
  6247  06D3                     __ptext7:	
  6248 ;; *************** function _PWM6_Initialize *****************
  6249 ;; Defined at:
  6250 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  6251 ;; Parameters:    Size  Location     Type
  6252 ;;		None
  6253 ;; Auto vars:     Size  Location     Type
  6254 ;;		None
  6255 ;; Return value:  Size  Location     Type
  6256 ;;                  1    wreg      void 
  6257 ;; Registers used:
  6258 ;;		wreg
  6259 ;; Tracked objects:
  6260 ;;		On entry : 0/0
  6261 ;;		On exit  : 0/0
  6262 ;;		Unchanged: 0/0
  6263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6264 ;;      Params:         0       0       0       0
  6265 ;;      Locals:         0       0       0       0
  6266 ;;      Temps:          0       0       0       0
  6267 ;;      Totals:         0       0       0       0
  6268 ;;Total ram usage:        0 bytes
  6269 ;; Hardware stack levels used:    1
  6270 ;; Hardware stack levels required when called:    6
  6271 ;; This function calls:
  6272 ;;		Nothing
  6273 ;; This function is called by:
  6274 ;;		_SYSTEM_Initialize
  6275 ;; This function uses a non-reentrant model
  6276 ;;
  6277                           
  6278                           
  6279                           ;psect for function _PWM6_Initialize
  6280  06D3                     _PWM6_Initialize:
  6281                           
  6282                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
  6283                           
  6284                           ;incstack = 0
  6285                           ; Regs used in _PWM6_Initialize: [wreg]
  6286  06D3  3080               	movlw	128
  6287  06D4  0147               	movlb	7	; select bank7
  6288  06D5  008E               	movwf	14	;volatile
  6289                           
  6290                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x7F;
  6291  06D6  307F               	movlw	127
  6292  06D7  008D               	movwf	13	;volatile
  6293                           
  6294                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0xC0;
  6295  06D8  30C0               	movlw	192
  6296  06D9  008C               	movwf	12	;volatile
  6297  06DA  0008               	return
  6298  06DB                     __end_of_PWM6_Initialize:
  6299                           
  6300                           	psect	text8
  6301  06DB                     __ptext8:	
  6302 ;; *************** function _PWM5_Initialize *****************
  6303 ;; Defined at:
  6304 ;;		line 58 in file "mcc_generated_files/pwm5.c"
  6305 ;; Parameters:    Size  Location     Type
  6306 ;;		None
  6307 ;; Auto vars:     Size  Location     Type
  6308 ;;		None
  6309 ;; Return value:  Size  Location     Type
  6310 ;;                  1    wreg      void 
  6311 ;; Registers used:
  6312 ;;		wreg
  6313 ;; Tracked objects:
  6314 ;;		On entry : 0/0
  6315 ;;		On exit  : 0/0
  6316 ;;		Unchanged: 0/0
  6317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6318 ;;      Params:         0       0       0       0
  6319 ;;      Locals:         0       0       0       0
  6320 ;;      Temps:          0       0       0       0
  6321 ;;      Totals:         0       0       0       0
  6322 ;;Total ram usage:        0 bytes
  6323 ;; Hardware stack levels used:    1
  6324 ;; Hardware stack levels required when called:    6
  6325 ;; This function calls:
  6326 ;;		Nothing
  6327 ;; This function is called by:
  6328 ;;		_SYSTEM_Initialize
  6329 ;; This function uses a non-reentrant model
  6330 ;;
  6331                           
  6332                           
  6333                           ;psect for function _PWM5_Initialize
  6334  06DB                     _PWM5_Initialize:
  6335                           
  6336                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
  6337                           
  6338                           ;incstack = 0
  6339                           ; Regs used in _PWM5_Initialize: [wreg]
  6340  06DB  3080               	movlw	128
  6341  06DC  0146               	movlb	6	; select bank6
  6342  06DD  009E               	movwf	30	;volatile
  6343                           
  6344                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x7F;
  6345  06DE  307F               	movlw	127
  6346  06DF  009D               	movwf	29	;volatile
  6347                           
  6348                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0xC0;
  6349  06E0  30C0               	movlw	192
  6350  06E1  009C               	movwf	28	;volatile
  6351  06E2  0008               	return
  6352  06E3                     __end_of_PWM5_Initialize:
  6353                           
  6354                           	psect	text9
  6355  06E3                     __ptext9:	
  6356 ;; *************** function _PWM4_Initialize *****************
  6357 ;; Defined at:
  6358 ;;		line 58 in file "mcc_generated_files/pwm4.c"
  6359 ;; Parameters:    Size  Location     Type
  6360 ;;		None
  6361 ;; Auto vars:     Size  Location     Type
  6362 ;;		None
  6363 ;; Return value:  Size  Location     Type
  6364 ;;                  1    wreg      void 
  6365 ;; Registers used:
  6366 ;;		wreg
  6367 ;; Tracked objects:
  6368 ;;		On entry : 0/0
  6369 ;;		On exit  : 0/0
  6370 ;;		Unchanged: 0/0
  6371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6372 ;;      Params:         0       0       0       0
  6373 ;;      Locals:         0       0       0       0
  6374 ;;      Temps:          0       0       0       0
  6375 ;;      Totals:         0       0       0       0
  6376 ;;Total ram usage:        0 bytes
  6377 ;; Hardware stack levels used:    1
  6378 ;; Hardware stack levels required when called:    6
  6379 ;; This function calls:
  6380 ;;		Nothing
  6381 ;; This function is called by:
  6382 ;;		_SYSTEM_Initialize
  6383 ;; This function uses a non-reentrant model
  6384 ;;
  6385                           
  6386                           
  6387                           ;psect for function _PWM4_Initialize
  6388  06E3                     _PWM4_Initialize:
  6389                           
  6390                           ;mcc_generated_files/pwm4.c: 62:     PWM4CON = 0x80;
  6391                           
  6392                           ;incstack = 0
  6393                           ; Regs used in _PWM4_Initialize: [wreg]
  6394  06E3  3080               	movlw	128
  6395  06E4  0146               	movlb	6	; select bank6
  6396  06E5  009A               	movwf	26	;volatile
  6397                           
  6398                           ;mcc_generated_files/pwm4.c: 65:     PWM4DCH = 0x7F;
  6399  06E6  307F               	movlw	127
  6400  06E7  0099               	movwf	25	;volatile
  6401                           
  6402                           ;mcc_generated_files/pwm4.c: 68:     PWM4DCL = 0xC0;
  6403  06E8  30C0               	movlw	192
  6404  06E9  0098               	movwf	24	;volatile
  6405  06EA  0008               	return
  6406  06EB                     __end_of_PWM4_Initialize:
  6407                           
  6408                           	psect	text10
  6409  06EB                     __ptext10:	
  6410 ;; *************** function _PWM3_Initialize *****************
  6411 ;; Defined at:
  6412 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  6413 ;; Parameters:    Size  Location     Type
  6414 ;;		None
  6415 ;; Auto vars:     Size  Location     Type
  6416 ;;		None
  6417 ;; Return value:  Size  Location     Type
  6418 ;;                  1    wreg      void 
  6419 ;; Registers used:
  6420 ;;		wreg
  6421 ;; Tracked objects:
  6422 ;;		On entry : 0/0
  6423 ;;		On exit  : 0/0
  6424 ;;		Unchanged: 0/0
  6425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6426 ;;      Params:         0       0       0       0
  6427 ;;      Locals:         0       0       0       0
  6428 ;;      Temps:          0       0       0       0
  6429 ;;      Totals:         0       0       0       0
  6430 ;;Total ram usage:        0 bytes
  6431 ;; Hardware stack levels used:    1
  6432 ;; Hardware stack levels required when called:    6
  6433 ;; This function calls:
  6434 ;;		Nothing
  6435 ;; This function is called by:
  6436 ;;		_SYSTEM_Initialize
  6437 ;; This function uses a non-reentrant model
  6438 ;;
  6439                           
  6440                           
  6441                           ;psect for function _PWM3_Initialize
  6442  06EB                     _PWM3_Initialize:
  6443                           
  6444                           ;mcc_generated_files/pwm3.c: 62:     PWM3CON = 0x80;
  6445                           
  6446                           ;incstack = 0
  6447                           ; Regs used in _PWM3_Initialize: [wreg]
  6448  06EB  3080               	movlw	128
  6449  06EC  0146               	movlb	6	; select bank6
  6450  06ED  0096               	movwf	22	;volatile
  6451                           
  6452                           ;mcc_generated_files/pwm3.c: 65:     PWM3DCH = 0x7F;
  6453  06EE  307F               	movlw	127
  6454  06EF  0095               	movwf	21	;volatile
  6455                           
  6456                           ;mcc_generated_files/pwm3.c: 68:     PWM3DCL = 0xC0;
  6457  06F0  30C0               	movlw	192
  6458  06F1  0094               	movwf	20	;volatile
  6459  06F2  0008               	return
  6460  06F3                     __end_of_PWM3_Initialize:
  6461                           
  6462                           	psect	text11
  6463  06F3                     __ptext11:	
  6464 ;; *************** function _PWM2_Initialize *****************
  6465 ;; Defined at:
  6466 ;;		line 64 in file "mcc_generated_files/pwm2.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;		None
  6469 ;; Auto vars:     Size  Location     Type
  6470 ;;		None
  6471 ;; Return value:  Size  Location     Type
  6472 ;;                  1    wreg      void 
  6473 ;; Registers used:
  6474 ;;		wreg
  6475 ;; Tracked objects:
  6476 ;;		On entry : 0/0
  6477 ;;		On exit  : 0/0
  6478 ;;		Unchanged: 0/0
  6479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6480 ;;      Params:         0       0       0       0
  6481 ;;      Locals:         0       0       0       0
  6482 ;;      Temps:          0       0       0       0
  6483 ;;      Totals:         0       0       0       0
  6484 ;;Total ram usage:        0 bytes
  6485 ;; Hardware stack levels used:    1
  6486 ;; Hardware stack levels required when called:    6
  6487 ;; This function calls:
  6488 ;;		Nothing
  6489 ;; This function is called by:
  6490 ;;		_SYSTEM_Initialize
  6491 ;; This function uses a non-reentrant model
  6492 ;;
  6493                           
  6494                           
  6495                           ;psect for function _PWM2_Initialize
  6496  06F3                     _PWM2_Initialize:
  6497                           
  6498                           ;mcc_generated_files/pwm2.c: 69:  CCP2CON = 0x8F;
  6499                           
  6500                           ;incstack = 0
  6501                           ; Regs used in _PWM2_Initialize: [wreg]
  6502  06F3  308F               	movlw	143
  6503  06F4  0146               	movlb	6	; select bank6
  6504  06F5  0092               	movwf	18	;volatile
  6505                           
  6506                           ;mcc_generated_files/pwm2.c: 72:  CCPR2H = 0x01;
  6507  06F6  3001               	movlw	1
  6508  06F7  0091               	movwf	17	;volatile
  6509                           
  6510                           ;mcc_generated_files/pwm2.c: 75:  CCPR2L = 0xFF;
  6511  06F8  30FF               	movlw	255
  6512  06F9  0090               	movwf	16	;volatile
  6513  06FA  0008               	return
  6514  06FB                     __end_of_PWM2_Initialize:
  6515                           
  6516                           	psect	text12
  6517  06FB                     __ptext12:	
  6518 ;; *************** function _PWM1_Initialize *****************
  6519 ;; Defined at:
  6520 ;;		line 64 in file "mcc_generated_files/pwm1.c"
  6521 ;; Parameters:    Size  Location     Type
  6522 ;;		None
  6523 ;; Auto vars:     Size  Location     Type
  6524 ;;		None
  6525 ;; Return value:  Size  Location     Type
  6526 ;;                  1    wreg      void 
  6527 ;; Registers used:
  6528 ;;		wreg
  6529 ;; Tracked objects:
  6530 ;;		On entry : 0/0
  6531 ;;		On exit  : 0/0
  6532 ;;		Unchanged: 0/0
  6533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6534 ;;      Params:         0       0       0       0
  6535 ;;      Locals:         0       0       0       0
  6536 ;;      Temps:          0       0       0       0
  6537 ;;      Totals:         0       0       0       0
  6538 ;;Total ram usage:        0 bytes
  6539 ;; Hardware stack levels used:    1
  6540 ;; Hardware stack levels required when called:    6
  6541 ;; This function calls:
  6542 ;;		Nothing
  6543 ;; This function is called by:
  6544 ;;		_SYSTEM_Initialize
  6545 ;; This function uses a non-reentrant model
  6546 ;;
  6547                           
  6548                           
  6549                           ;psect for function _PWM1_Initialize
  6550  06FB                     _PWM1_Initialize:
  6551                           
  6552                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8F;
  6553                           
  6554                           ;incstack = 0
  6555                           ; Regs used in _PWM1_Initialize: [wreg]
  6556  06FB  308F               	movlw	143
  6557  06FC  0146               	movlb	6	; select bank6
  6558  06FD  008E               	movwf	14	;volatile
  6559                           
  6560                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x01;
  6561  06FE  3001               	movlw	1
  6562  06FF  008D               	movwf	13	;volatile
  6563                           
  6564                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0xFF;
  6565  0700  30FF               	movlw	255
  6566  0701  008C               	movwf	12	;volatile
  6567  0702  0008               	return
  6568  0703                     __end_of_PWM1_Initialize:
  6569                           
  6570                           	psect	text13
  6571  0680                     __ptext13:	
  6572 ;; *************** function _PMD_Initialize *****************
  6573 ;; Defined at:
  6574 ;;		line 88 in file "mcc_generated_files/mcc.c"
  6575 ;; Parameters:    Size  Location     Type
  6576 ;;		None
  6577 ;; Auto vars:     Size  Location     Type
  6578 ;;		None
  6579 ;; Return value:  Size  Location     Type
  6580 ;;                  1    wreg      void 
  6581 ;; Registers used:
  6582 ;;		wreg, status,2
  6583 ;; Tracked objects:
  6584 ;;		On entry : 0/0
  6585 ;;		On exit  : 0/0
  6586 ;;		Unchanged: 0/0
  6587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6588 ;;      Params:         0       0       0       0
  6589 ;;      Locals:         0       0       0       0
  6590 ;;      Temps:          0       0       0       0
  6591 ;;      Totals:         0       0       0       0
  6592 ;;Total ram usage:        0 bytes
  6593 ;; Hardware stack levels used:    1
  6594 ;; Hardware stack levels required when called:    6
  6595 ;; This function calls:
  6596 ;;		Nothing
  6597 ;; This function is called by:
  6598 ;;		_SYSTEM_Initialize
  6599 ;; This function uses a non-reentrant model
  6600 ;;
  6601                           
  6602                           
  6603                           ;psect for function _PMD_Initialize
  6604  0680                     _PMD_Initialize:
  6605                           
  6606                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x06;
  6607                           
  6608                           ;incstack = 0
  6609                           ; Regs used in _PMD_Initialize: [wreg+status,2]
  6610  0680  3006               	movlw	6
  6611  0681  014F               	movlb	15	; select bank15
  6612  0682  0096               	movwf	22	;volatile
  6613                           
  6614                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x80;
  6615  0683  3080               	movlw	128
  6616  0684  0097               	movwf	23	;volatile
  6617                           
  6618                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x47;
  6619  0685  3047               	movlw	71
  6620  0686  0098               	movwf	24	;volatile
  6621                           
  6622                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
  6623  0687  0199               	clrf	25	;volatile
  6624                           
  6625                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0xD1;
  6626  0688  30D1               	movlw	209
  6627  0689  009A               	movwf	26	;volatile
  6628                           
  6629                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x1E;
  6630  068A  301E               	movlw	30
  6631  068B  009B               	movwf	27	;volatile
  6632  068C  0008               	return
  6633  068D                     __end_of_PMD_Initialize:
  6634                           
  6635                           	psect	text14
  6636  043B                     __ptext14:	
  6637 ;; *************** function _PIN_MANAGER_Initialize *****************
  6638 ;; Defined at:
  6639 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  6640 ;; Parameters:    Size  Location     Type
  6641 ;;		None
  6642 ;; Auto vars:     Size  Location     Type
  6643 ;;		None
  6644 ;; Return value:  Size  Location     Type
  6645 ;;                  1    wreg      void 
  6646 ;; Registers used:
  6647 ;;		wreg, status,2, status,0, pclath, cstack
  6648 ;; Tracked objects:
  6649 ;;		On entry : 0/0
  6650 ;;		On exit  : 0/0
  6651 ;;		Unchanged: 0/0
  6652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6653 ;;      Params:         0       0       0       0
  6654 ;;      Locals:         0       0       0       0
  6655 ;;      Temps:          0       0       0       0
  6656 ;;      Totals:         0       0       0       0
  6657 ;;Total ram usage:        0 bytes
  6658 ;; Hardware stack levels used:    1
  6659 ;; Hardware stack levels required when called:    7
  6660 ;; This function calls:
  6661 ;;		_IOCCF1_SetInterruptHandler
  6662 ;; This function is called by:
  6663 ;;		_SYSTEM_Initialize
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           
  6667                           
  6668                           ;psect for function _PIN_MANAGER_Initialize
  6669  043B                     _PIN_MANAGER_Initialize:
  6670                           
  6671                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  6672                           
  6673                           ;incstack = 0
  6674                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6675  043B  0140               	movlb	0	; select bank0
  6676  043C  0198               	clrf	24	;volatile
  6677                           
  6678                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
  6679  043D  019A               	clrf	26	;volatile
  6680                           
  6681                           ;mcc_generated_files/pin_manager.c: 68:     TRISA = 0x0A;
  6682  043E  300A               	movlw	10
  6683  043F  0092               	movwf	18	;volatile
  6684                           
  6685                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x03;
  6686  0440  3003               	movlw	3
  6687  0441  0094               	movwf	20	;volatile
  6688                           
  6689                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x01;
  6690  0442  3001               	movlw	1
  6691  0443  017E               	movlb	62	; select bank62
  6692  0444  00CE               	movwf	78	;volatile
  6693                           
  6694                           ;mcc_generated_files/pin_manager.c: 75:     ANSELA = 0x00;
  6695  0445  01B8               	clrf	56	;volatile
  6696                           
  6697                           ;mcc_generated_files/pin_manager.c: 80:     WPUA = 0x00;
  6698  0446  01B9               	clrf	57	;volatile
  6699                           
  6700                           ;mcc_generated_files/pin_manager.c: 81:     WPUC = 0x00;
  6701  0447  01CF               	clrf	79	;volatile
  6702                           
  6703                           ;mcc_generated_files/pin_manager.c: 86:     ODCONA = 0x00;
  6704  0448  01BA               	clrf	58	;volatile
  6705                           
  6706                           ;mcc_generated_files/pin_manager.c: 87:     ODCONC = 0x00;
  6707  0449  01D0               	clrf	80	;volatile
  6708                           
  6709                           ;mcc_generated_files/pin_manager.c: 92:     SLRCONA = 0x3F;
  6710  044A  303F               	movlw	63
  6711  044B  00BB               	movwf	59	;volatile
  6712                           
  6713                           ;mcc_generated_files/pin_manager.c: 93:     SLRCONC = 0x3F;
  6714  044C  303F               	movlw	63
  6715  044D  00D1               	movwf	81	;volatile
  6716                           
  6717                           ;mcc_generated_files/pin_manager.c: 98:     INLVLA = 0x3F;
  6718  044E  303F               	movlw	63
  6719  044F  00BC               	movwf	60	;volatile
  6720                           
  6721                           ;mcc_generated_files/pin_manager.c: 99:     INLVLC = 0x3F;
  6722  0450  303F               	movlw	63
  6723  0451  00D2               	movwf	82	;volatile
  6724                           
  6725                           ;mcc_generated_files/pin_manager.c: 106:     IOCCFbits.IOCCF1 = 0;
  6726  0452  10D5               	bcf	85,1	;volatile
  6727                           
  6728                           ;mcc_generated_files/pin_manager.c: 108:     IOCCNbits.IOCCN1 = 1;
  6729  0453  14D4               	bsf	84,1	;volatile
  6730                           
  6731                           ;mcc_generated_files/pin_manager.c: 110:     IOCCPbits.IOCCP1 = 1;
  6732  0454  14D3               	bsf	83,1	;volatile
  6733                           
  6734                           ;mcc_generated_files/pin_manager.c: 115:     IOCCF1_SetInterruptHandler(IOCCF1_DefaultIn
      +                          terruptHandler);
  6735  0455  3050               	movlw	low _IOCCF1_DefaultInterruptHandler
  6736  0456  00F2               	movwf	IOCCF1_SetInterruptHandler@InterruptHandler
  6737  0457  3007               	movlw	high _IOCCF1_DefaultInterruptHandler
  6738  0458  00F3               	movwf	IOCCF1_SetInterruptHandler@InterruptHandler+1
  6739  0459  2729               	fcall	_IOCCF1_SetInterruptHandler
  6740                           
  6741                           ;mcc_generated_files/pin_manager.c: 118:     PIE0bits.IOCIE = 1;
  6742  045A  014E               	movlb	14	; select bank14
  6743  045B  1616               	bsf	22,4	;volatile
  6744                           
  6745                           ;mcc_generated_files/pin_manager.c: 121:     ADACTPPS = 0x01;
  6746  045C  3001               	movlw	1
  6747  045D  017D               	movlb	61	; select bank61
  6748  045E  00C3               	movwf	67	;volatile
  6749                           
  6750                           ;mcc_generated_files/pin_manager.c: 122:     RA4PPS = 0x0C;
  6751  045F  300C               	movlw	12
  6752  0460  017E               	movlb	62	; select bank62
  6753  0461  0094               	movwf	20	;volatile
  6754                           
  6755                           ;mcc_generated_files/pin_manager.c: 123:     RC3PPS = 0x09;
  6756  0462  3009               	movlw	9
  6757  0463  00A3               	movwf	35	;volatile
  6758                           
  6759                           ;mcc_generated_files/pin_manager.c: 124:     RC4PPS = 0x0E;
  6760  0464  300E               	movlw	14
  6761  0465  00A4               	movwf	36	;volatile
  6762                           
  6763                           ;mcc_generated_files/pin_manager.c: 125:     RA5PPS = 0x0B;
  6764  0466  300B               	movlw	11
  6765  0467  0095               	movwf	21	;volatile
  6766                           
  6767                           ;mcc_generated_files/pin_manager.c: 126:     RC2PPS = 0x0A;
  6768  0468  300A               	movlw	10
  6769  0469  00A2               	movwf	34	;volatile
  6770                           
  6771                           ;mcc_generated_files/pin_manager.c: 127:     RC5PPS = 0x0D;
  6772  046A  300D               	movlw	13
  6773  046B  00A5               	movwf	37	;volatile
  6774  046C  0008               	return
  6775  046D                     __end_of_PIN_MANAGER_Initialize:
  6776                           
  6777                           	psect	text15
  6778  0729                     __ptext15:	
  6779 ;; *************** function _IOCCF1_SetInterruptHandler *****************
  6780 ;; Defined at:
  6781 ;;		line 157 in file "mcc_generated_files/pin_manager.c"
  6782 ;; Parameters:    Size  Location     Type
  6783 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  6784 ;;		 -> RCS_INT(1), IOCCF1_DefaultInterruptHandler(1), 
  6785 ;; Auto vars:     Size  Location     Type
  6786 ;;		None
  6787 ;; Return value:  Size  Location     Type
  6788 ;;                  1    wreg      void 
  6789 ;; Registers used:
  6790 ;;		wreg
  6791 ;; Tracked objects:
  6792 ;;		On entry : 0/0
  6793 ;;		On exit  : 0/0
  6794 ;;		Unchanged: 0/0
  6795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6796 ;;      Params:         2       0       0       0
  6797 ;;      Locals:         0       0       0       0
  6798 ;;      Temps:          0       0       0       0
  6799 ;;      Totals:         2       0       0       0
  6800 ;;Total ram usage:        2 bytes
  6801 ;; Hardware stack levels used:    1
  6802 ;; Hardware stack levels required when called:    6
  6803 ;; This function calls:
  6804 ;;		Nothing
  6805 ;; This function is called by:
  6806 ;;		_PIN_MANAGER_Initialize
  6807 ;;		_main
  6808 ;; This function uses a non-reentrant model
  6809 ;;
  6810                           
  6811                           
  6812                           ;psect for function _IOCCF1_SetInterruptHandler
  6813  0729                     _IOCCF1_SetInterruptHandler:
  6814                           
  6815                           ;mcc_generated_files/pin_manager.c: 158:     IOCCF1_InterruptHandler = InterruptHandler;
  6816                           
  6817                           ;incstack = 0
  6818                           ; Regs used in _IOCCF1_SetInterruptHandler: [wreg]
  6819  0729  0873               	movf	IOCCF1_SetInterruptHandler@InterruptHandler+1,w
  6820  072A  0140               	movlb	0	; select bank0
  6821  072B  00DE               	movwf	_IOCCF1_InterruptHandler+1
  6822  072C  0872               	movf	IOCCF1_SetInterruptHandler@InterruptHandler,w
  6823  072D  00DD               	movwf	_IOCCF1_InterruptHandler
  6824  072E  0008               	return
  6825  072F                     __end_of_IOCCF1_SetInterruptHandler:
  6826                           
  6827                           	psect	text16
  6828  06B4                     __ptext16:	
  6829 ;; *************** function _OSCILLATOR_Initialize *****************
  6830 ;; Defined at:
  6831 ;;		line 68 in file "mcc_generated_files/mcc.c"
  6832 ;; Parameters:    Size  Location     Type
  6833 ;;		None
  6834 ;; Auto vars:     Size  Location     Type
  6835 ;;		None
  6836 ;; Return value:  Size  Location     Type
  6837 ;;                  1    wreg      void 
  6838 ;; Registers used:
  6839 ;;		wreg, status,2
  6840 ;; Tracked objects:
  6841 ;;		On entry : 0/0
  6842 ;;		On exit  : 0/0
  6843 ;;		Unchanged: 0/0
  6844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6845 ;;      Params:         0       0       0       0
  6846 ;;      Locals:         0       0       0       0
  6847 ;;      Temps:          0       0       0       0
  6848 ;;      Totals:         0       0       0       0
  6849 ;;Total ram usage:        0 bytes
  6850 ;; Hardware stack levels used:    1
  6851 ;; Hardware stack levels required when called:    6
  6852 ;; This function calls:
  6853 ;;		Nothing
  6854 ;; This function is called by:
  6855 ;;		_SYSTEM_Initialize
  6856 ;; This function uses a non-reentrant model
  6857 ;;
  6858                           
  6859                           
  6860                           ;psect for function _OSCILLATOR_Initialize
  6861  06B4                     _OSCILLATOR_Initialize:
  6862                           
  6863                           ;mcc_generated_files/mcc.c: 71:     OSCCON1 = 0x10;
  6864                           
  6865                           ;incstack = 0
  6866                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6867  06B4  3010               	movlw	16
  6868  06B5  0151               	movlb	17	; select bank17
  6869  06B6  008D               	movwf	13	;volatile
  6870                           
  6871                           ;mcc_generated_files/mcc.c: 73:     OSCCON3 = 0x00;
  6872  06B7  018F               	clrf	15	;volatile
  6873                           
  6874                           ;mcc_generated_files/mcc.c: 75:     OSCEN = 0x00;
  6875  06B8  0191               	clrf	17	;volatile
  6876                           
  6877                           ;mcc_generated_files/mcc.c: 77:     OSCFRQ = 0x03;
  6878  06B9  3003               	movlw	3
  6879  06BA  0093               	movwf	19	;volatile
  6880                           
  6881                           ;mcc_generated_files/mcc.c: 79:     OSCSTAT = 0x00;
  6882  06BB  0190               	clrf	16	;volatile
  6883                           
  6884                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
  6885  06BC  0192               	clrf	18	;volatile
  6886  06BD                     l300:	
  6887                           ;mcc_generated_files/mcc.c: 84:     {;mcc_generated_files/mcc.c: 85:     }
  6888                           
  6889                           
  6890                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
  6891  06BD  1810               	btfsc	16,0	;volatile
  6892  06BE  0008               	return
  6893  06BF  2EBD               	goto	l300
  6894  06C0                     __end_of_OSCILLATOR_Initialize:
  6895                           
  6896                           	psect	text17
  6897  073F                     __ptext17:	
  6898 ;; *************** function _FVR_Initialize *****************
  6899 ;; Defined at:
  6900 ;;		line 58 in file "mcc_generated_files/fvr.c"
  6901 ;; Parameters:    Size  Location     Type
  6902 ;;		None
  6903 ;; Auto vars:     Size  Location     Type
  6904 ;;		None
  6905 ;; Return value:  Size  Location     Type
  6906 ;;                  1    wreg      void 
  6907 ;; Registers used:
  6908 ;;		wreg
  6909 ;; Tracked objects:
  6910 ;;		On entry : 0/0
  6911 ;;		On exit  : 0/0
  6912 ;;		Unchanged: 0/0
  6913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6914 ;;      Params:         0       0       0       0
  6915 ;;      Locals:         0       0       0       0
  6916 ;;      Temps:          0       0       0       0
  6917 ;;      Totals:         0       0       0       0
  6918 ;;Total ram usage:        0 bytes
  6919 ;; Hardware stack levels used:    1
  6920 ;; Hardware stack levels required when called:    6
  6921 ;; This function calls:
  6922 ;;		Nothing
  6923 ;; This function is called by:
  6924 ;;		_SYSTEM_Initialize
  6925 ;; This function uses a non-reentrant model
  6926 ;;
  6927                           
  6928                           
  6929                           ;psect for function _FVR_Initialize
  6930  073F                     _FVR_Initialize:
  6931                           
  6932                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x82;
  6933                           
  6934                           ;incstack = 0
  6935                           ; Regs used in _FVR_Initialize: [wreg]
  6936  073F  3082               	movlw	130
  6937  0740  0152               	movlb	18	; select bank18
  6938  0741  008C               	movwf	12	;volatile
  6939  0742  0008               	return
  6940  0743                     __end_of_FVR_Initialize:
  6941                           
  6942                           	psect	text18
  6943  06CA                     __ptext18:	
  6944 ;; *************** function _ADC_Initialize *****************
  6945 ;; Defined at:
  6946 ;;		line 67 in file "mcc_generated_files/adc.c"
  6947 ;; Parameters:    Size  Location     Type
  6948 ;;		None
  6949 ;; Auto vars:     Size  Location     Type
  6950 ;;		None
  6951 ;; Return value:  Size  Location     Type
  6952 ;;                  1    wreg      void 
  6953 ;; Registers used:
  6954 ;;		wreg, status,2
  6955 ;; Tracked objects:
  6956 ;;		On entry : 0/0
  6957 ;;		On exit  : 0/0
  6958 ;;		Unchanged: 0/0
  6959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6960 ;;      Params:         0       0       0       0
  6961 ;;      Locals:         0       0       0       0
  6962 ;;      Temps:          0       0       0       0
  6963 ;;      Totals:         0       0       0       0
  6964 ;;Total ram usage:        0 bytes
  6965 ;; Hardware stack levels used:    1
  6966 ;; Hardware stack levels required when called:    6
  6967 ;; This function calls:
  6968 ;;		Nothing
  6969 ;; This function is called by:
  6970 ;;		_SYSTEM_Initialize
  6971 ;; This function uses a non-reentrant model
  6972 ;;
  6973                           
  6974                           
  6975                           ;psect for function _ADC_Initialize
  6976  06CA                     _ADC_Initialize:
  6977                           
  6978                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xE3;
  6979                           
  6980                           ;incstack = 0
  6981                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  6982  06CA  30E3               	movlw	227
  6983  06CB  0141               	movlb	1	; select bank1
  6984  06CC  009E               	movwf	30	;volatile
  6985                           
  6986                           ;mcc_generated_files/adc.c: 75:     ADACT = 0x00;
  6987  06CD  019F               	clrf	31	;volatile
  6988                           
  6989                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
  6990  06CE  019B               	clrf	27	;volatile
  6991                           
  6992                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
  6993  06CF  019C               	clrf	28	;volatile
  6994                           
  6995                           ;mcc_generated_files/adc.c: 84:     ADCON0 = 0x01;
  6996  06D0  3001               	movlw	1
  6997  06D1  009D               	movwf	29	;volatile
  6998  06D2  0008               	return
  6999  06D3                     __end_of_ADC_Initialize:
  7000                           
  7001                           	psect	text19
  7002  068D                     __ptext19:	
  7003 ;; *************** function _INITxEXECUTER *****************
  7004 ;; Defined at:
  7005 ;;		line 35 in file "executer.c"
  7006 ;; Parameters:    Size  Location     Type
  7007 ;;		None
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;		None
  7010 ;; Return value:  Size  Location     Type
  7011 ;;                  1    wreg      void 
  7012 ;; Registers used:
  7013 ;;		wreg, status,2, status,0, pclath, cstack
  7014 ;; Tracked objects:
  7015 ;;		On entry : 0/0
  7016 ;;		On exit  : 0/0
  7017 ;;		Unchanged: 0/0
  7018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7019 ;;      Params:         0       0       0       0
  7020 ;;      Locals:         0       0       0       0
  7021 ;;      Temps:          0       0       0       0
  7022 ;;      Totals:         0       0       0       0
  7023 ;;Total ram usage:        0 bytes
  7024 ;; Hardware stack levels used:    1
  7025 ;; Hardware stack levels required when called:    9
  7026 ;; This function calls:
  7027 ;;		_RCSxLED
  7028 ;;		_rand
  7029 ;;		_srand
  7030 ;; This function is called by:
  7031 ;;		_main
  7032 ;; This function uses a non-reentrant model
  7033 ;;
  7034                           
  7035                           
  7036                           ;psect for function _INITxEXECUTER
  7037  068D                     _INITxEXECUTER:
  7038                           
  7039                           ;executer.c: 38:     srand(13);
  7040                           
  7041                           ;incstack = 0
  7042                           ; Regs used in _INITxEXECUTER: [wreg+status,2+status,0+pclath+cstack]
  7043  068D  300D               	movlw	13
  7044  068E  00F2               	movwf	srand@s
  7045  068F  3000               	movlw	0
  7046  0690  00F3               	movwf	srand@s+1
  7047  0691  26C0               	fcall	_srand
  7048                           
  7049                           ;executer.c: 39:     Random = rand();
  7050  0692  2408               	fcall	_rand
  7051  0693  0140               	movlb	0	; select bank0
  7052  0694  083F               	movf	?_rand+1,w
  7053  0695  00A1               	movwf	_Random+1
  7054  0696  083E               	movf	?_rand,w
  7055  0697  00A0               	movwf	_Random
  7056                           
  7057                           ;executer.c: 41:     RCSxLED();
  7058  0698  230A               	fcall	_RCSxLED
  7059  0699  0008               	return
  7060  069A                     __end_of_INITxEXECUTER:
  7061                           
  7062                           	psect	text20
  7063  06C0                     __ptext20:	
  7064 ;; *************** function _srand *****************
  7065 ;; Defined at:
  7066 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\rand.c"
  7067 ;; Parameters:    Size  Location     Type
  7068 ;;  s               2    2[COMMON] unsigned int 
  7069 ;; Auto vars:     Size  Location     Type
  7070 ;;		None
  7071 ;; Return value:  Size  Location     Type
  7072 ;;                  1    wreg      void 
  7073 ;; Registers used:
  7074 ;;		wreg, status,2, status,0
  7075 ;; Tracked objects:
  7076 ;;		On entry : 0/0
  7077 ;;		On exit  : 0/0
  7078 ;;		Unchanged: 0/0
  7079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7080 ;;      Params:         2       0       0       0
  7081 ;;      Locals:         0       0       0       0
  7082 ;;      Temps:          0       0       0       0
  7083 ;;      Totals:         2       0       0       0
  7084 ;;Total ram usage:        2 bytes
  7085 ;; Hardware stack levels used:    1
  7086 ;; Hardware stack levels required when called:    6
  7087 ;; This function calls:
  7088 ;;		Nothing
  7089 ;; This function is called by:
  7090 ;;		_INITxEXECUTER
  7091 ;; This function uses a non-reentrant model
  7092 ;;
  7093                           
  7094                           
  7095                           ;psect for function _srand
  7096  06C0                     _srand:
  7097                           
  7098                           ;incstack = 0
  7099                           ; Regs used in _srand: [wreg+status,2+status,0]
  7100  06C0  0872               	movf	srand@s,w
  7101  06C1  3EFF               	addlw	255
  7102  06C2  0140               	movlb	0	; select bank0
  7103  06C3  00B6               	movwf	_seed
  7104  06C4  30FF               	movlw	255
  7105  06C5  3D73               	addwfc	srand@s+1,w
  7106  06C6  00B7               	movwf	_seed+1
  7107  06C7  01B8               	clrf	_seed+2
  7108  06C8  01B9               	clrf	_seed+3
  7109  06C9  0008               	return
  7110  06CA                     __end_of_srand:
  7111                           
  7112                           	psect	text21
  7113  030A                     __ptext21:	
  7114 ;; *************** function _RCSxLED *****************
  7115 ;; Defined at:
  7116 ;;		line 81 in file "executer.c"
  7117 ;; Parameters:    Size  Location     Type
  7118 ;;		None
  7119 ;; Auto vars:     Size  Location     Type
  7120 ;;		None
  7121 ;; Return value:  Size  Location     Type
  7122 ;;                  1    wreg      void 
  7123 ;; Registers used:
  7124 ;;		wreg, status,2, status,0, pclath, cstack
  7125 ;; Tracked objects:
  7126 ;;		On entry : 0/0
  7127 ;;		On exit  : 0/0
  7128 ;;		Unchanged: 0/0
  7129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7130 ;;      Params:         0       0       0       0
  7131 ;;      Locals:         0       0       0       0
  7132 ;;      Temps:          0       1       0       0
  7133 ;;      Totals:         0       1       0       0
  7134 ;;Total ram usage:        1 bytes
  7135 ;; Hardware stack levels used:    1
  7136 ;; Hardware stack levels required when called:    8
  7137 ;; This function calls:
  7138 ;;		_rand
  7139 ;; This function is called by:
  7140 ;;		_main
  7141 ;;		_INITxEXECUTER
  7142 ;; This function uses a non-reentrant model
  7143 ;;
  7144                           
  7145                           
  7146                           ;psect for function _RCSxLED
  7147  030A                     _RCSxLED:
  7148                           
  7149                           ;executer.c: 83:     if(PORTCbits.RC1){
  7150                           
  7151                           ;incstack = 0
  7152                           ; Regs used in _RCSxLED: [wreg+status,2+status,0+pclath+cstack]
  7153  030A  0140               	movlb	0	; select bank0
  7154  030B  1C8E               	btfss	14,1	;volatile
  7155  030C  2B5F               	goto	l2616
  7156                           
  7157                           ;executer.c: 86:         LedBit[LedBackLeft].Prog = LedNom;
  7158  030D  30CA               	movlw	low _LedNom
  7159  030E  0141               	movlb	1	; select bank1
  7160  030F  00B8               	movwf	(low ((_LedBit| 0+24)))^(0+128)
  7161  0310  3003               	movlw	high _LedNom
  7162  0311  00B9               	movwf	((low ((_LedBit| 0+24)))^(0+128)+1)
  7163                           
  7164                           ;executer.c: 87:         LedBit[LedBackRight].Prog = LedNom;
  7165  0312  30CA               	movlw	low _LedNom
  7166  0313  00C3               	movwf	(low ((_LedBit| 0+35)))^(0+128)
  7167  0314  3003               	movlw	high _LedNom
  7168  0315  00C4               	movwf	((low ((_LedBit| 0+35)))^(0+128)+1)
  7169                           
  7170                           ;executer.c: 90:         if(Random > 16383)
  7171  0316  3040               	movlw	64
  7172  0317  0140               	movlb	0	; select bank0
  7173  0318  0221               	subwf	_Random+1,w
  7174  0319  3000               	movlw	0
  7175  031A  1903               	skipnz
  7176  031B  0220               	subwf	_Random,w
  7177  031C  1C03               	skipc
  7178  031D  2B5B               	goto	l2612
  7179                           
  7180                           ;executer.c: 91:         {;executer.c: 93:             LedBit[LedFlashLeft].Prog = LedFl
      +                          ash;
  7181  031E  30C2               	movlw	low _LedFlash
  7182  031F  0141               	movlb	1	; select bank1
  7183  0320  00A2               	movwf	(low ((_LedBit| 0+2)))^(0+128)
  7184  0321  3001               	movlw	high _LedFlash
  7185  0322  00A3               	movwf	((low ((_LedBit| 0+2)))^(0+128)+1)
  7186                           
  7187                           ;executer.c: 94:             LedBit[LedFlashLeft].Led = MAX;
  7188  0323  30FE               	movlw	254
  7189  0324  0140               	movlb	0	; select bank0
  7190  0325  00C4               	movwf	??_RCSxLED
  7191  0326  0844               	movf	??_RCSxLED,w
  7192  0327  0141               	movlb	1	; select bank1
  7193  0328  00A1               	movwf	(_LedBit^(0+128)+1)
  7194                           
  7195                           ;executer.c: 95:             LedBit[LedFlashLeft].Prog_State = 0;
  7196  0329  01A6               	clrf	(_LedBit^(0+128)+6)
  7197                           
  7198                           ;executer.c: 96:             LedBit[LedFlashLeft].Speed = 150;
  7199  032A  3096               	movlw	150
  7200  032B  0140               	movlb	0	; select bank0
  7201  032C  00C4               	movwf	??_RCSxLED
  7202  032D  0844               	movf	??_RCSxLED,w
  7203  032E  0141               	movlb	1	; select bank1
  7204  032F  00A4               	movwf	(_LedBit^(0+128)+4)
  7205                           
  7206                           ;executer.c: 98:             LedBit[LedFlashRight].Prog = LedFlash;
  7207  0330  30C2               	movlw	low _LedFlash
  7208  0331  00AD               	movwf	(low ((_LedBit| 0+13)))^(0+128)
  7209  0332  3001               	movlw	high _LedFlash
  7210  0333  00AE               	movwf	((low ((_LedBit| 0+13)))^(0+128)+1)
  7211                           
  7212                           ;executer.c: 99:             LedBit[LedFlashRight].Led = 0;
  7213  0334  01AC               	clrf	(_LedBit^(0+128)+12)
  7214                           
  7215                           ;executer.c: 100:             LedBit[LedFlashRight].Prog_State = 0;
  7216  0335  01B1               	clrf	(_LedBit^(0+128)+17)
  7217                           
  7218                           ;executer.c: 101:             LedBit[LedFlashRight].Speed = 150;
  7219  0336  3096               	movlw	150
  7220  0337  0140               	movlb	0	; select bank0
  7221  0338  00C4               	movwf	??_RCSxLED
  7222  0339  0844               	movf	??_RCSxLED,w
  7223  033A  0141               	movlb	1	; select bank1
  7224  033B  00AF               	movwf	(_LedBit^(0+128)+15)
  7225                           
  7226                           ;executer.c: 104:             LedBit[LedFrontLeft].Prog = LedSlFl;
  7227  033C  3039               	movlw	low _LedSlFl
  7228  033D  00CE               	movwf	(low ((_LedBit| 0+46)))^(0+128)
  7229  033E  3000               	movlw	high _LedSlFl
  7230  033F  00CF               	movwf	((low ((_LedBit| 0+46)))^(0+128)+1)
  7231                           
  7232                           ;executer.c: 105:             LedBit[LedFrontLeft].Led = FRONT_HIGH;
  7233  0340  30FF               	movlw	255
  7234  0341  0140               	movlb	0	; select bank0
  7235  0342  00C4               	movwf	??_RCSxLED
  7236  0343  0844               	movf	??_RCSxLED,w
  7237  0344  0141               	movlb	1	; select bank1
  7238  0345  00CD               	movwf	(_LedBit^(0+128)+45)
  7239                           
  7240                           ;executer.c: 106:             LedBit[LedFrontLeft].Prog_State = 2;
  7241  0346  3002               	movlw	2
  7242  0347  0140               	movlb	0	; select bank0
  7243  0348  00C4               	movwf	??_RCSxLED
  7244  0349  0844               	movf	??_RCSxLED,w
  7245  034A  0141               	movlb	1	; select bank1
  7246  034B  00D2               	movwf	(_LedBit^(0+128)+50)
  7247                           
  7248                           ;executer.c: 107:             LedBit[LedFrontLeft].Speed = 1;
  7249  034C  01D0               	clrf	(_LedBit^(0+128)+48)
  7250  034D  0AD0               	incf	(_LedBit^(0+128)+48),f
  7251                           
  7252                           ;executer.c: 109:             LedBit[LedFrontRight].Prog = LedSlFl;
  7253  034E  3039               	movlw	low _LedSlFl
  7254  034F  00D9               	movwf	(low ((_LedBit| 0+57)))^(0+128)
  7255  0350  3000               	movlw	high _LedSlFl
  7256  0351  00DA               	movwf	((low ((_LedBit| 0+57)))^(0+128)+1)
  7257                           
  7258                           ;executer.c: 110:             LedBit[LedFrontRight].Led = FRONT;
  7259  0352  3050               	movlw	80
  7260  0353  0140               	movlb	0	; select bank0
  7261  0354  00C4               	movwf	??_RCSxLED
  7262  0355  0844               	movf	??_RCSxLED,w
  7263  0356  0141               	movlb	1	; select bank1
  7264  0357  00D8               	movwf	(_LedBit^(0+128)+56)
  7265                           
  7266                           ;executer.c: 111:             LedBit[LedFrontRight].Prog_State = 0;
  7267  0358  01DD               	clrf	(_LedBit^(0+128)+61)
  7268                           
  7269                           ;executer.c: 112:             LedBit[LedFrontRight].Speed = 1;
  7270  0359  01DB               	clrf	(_LedBit^(0+128)+59)
  7271  035A  0ADB               	incf	(_LedBit^(0+128)+59),f
  7272  035B                     l2612:
  7273  035B  0140               	movlb	0	; select bank0
  7274  035C  1118               	bcf	24,2	;volatile
  7275                           
  7276                           ;executer.c: 119:         LATAbits.LATA0 = 1;
  7277  035D  1418               	bsf	24,0	;volatile
  7278                           
  7279                           ;executer.c: 120:     }
  7280  035E  2B81               	goto	l2618
  7281  035F                     l2616:
  7282                           
  7283                           ;executer.c: 124:         LedBit[LedBackLeft].Prog = LedBrake;
  7284  035F  30D9               	movlw	low _LedBrake
  7285  0360  0141               	movlb	1	; select bank1
  7286  0361  00B8               	movwf	(low ((_LedBit| 0+24)))^(0+128)
  7287  0362  3005               	movlw	high _LedBrake
  7288  0363  00B9               	movwf	((low ((_LedBit| 0+24)))^(0+128)+1)
  7289                           
  7290                           ;executer.c: 125:         LedBit[LedBackRight].Prog = LedBrake;
  7291  0364  30D9               	movlw	low _LedBrake
  7292  0365  00C3               	movwf	(low ((_LedBit| 0+35)))^(0+128)
  7293  0366  3005               	movlw	high _LedBrake
  7294  0367  00C4               	movwf	((low ((_LedBit| 0+35)))^(0+128)+1)
  7295                           
  7296                           ;executer.c: 128:         LedBit[LedFlashLeft].Prog = LedOff;
  7297  0368  30D0               	movlw	low _LedOff
  7298  0369  00A2               	movwf	(low ((_LedBit| 0+2)))^(0+128)
  7299  036A  3004               	movlw	high _LedOff
  7300  036B  00A3               	movwf	((low ((_LedBit| 0+2)))^(0+128)+1)
  7301                           
  7302                           ;executer.c: 129:         LedBit[LedFlashRight].Prog = LedOff;
  7303  036C  30D0               	movlw	low _LedOff
  7304  036D  00AD               	movwf	(low ((_LedBit| 0+13)))^(0+128)
  7305  036E  3004               	movlw	high _LedOff
  7306  036F  00AE               	movwf	((low ((_LedBit| 0+13)))^(0+128)+1)
  7307                           
  7308                           ;executer.c: 132:         LedBit[LedFrontLeft].Prog = LedNom;
  7309  0370  30CA               	movlw	low _LedNom
  7310  0371  00CE               	movwf	(low ((_LedBit| 0+46)))^(0+128)
  7311  0372  3003               	movlw	high _LedNom
  7312  0373  00CF               	movwf	((low ((_LedBit| 0+46)))^(0+128)+1)
  7313                           
  7314                           ;executer.c: 133:         LedBit[LedFrontRight].Prog = LedNom;
  7315  0374  30CA               	movlw	low _LedNom
  7316  0375  00D9               	movwf	(low ((_LedBit| 0+57)))^(0+128)
  7317  0376  3003               	movlw	high _LedNom
  7318  0377  00DA               	movwf	((low ((_LedBit| 0+57)))^(0+128)+1)
  7319                           
  7320                           ;executer.c: 135:         if(Random < 16383)
  7321  0378  303F               	movlw	63
  7322  0379  0140               	movlb	0	; select bank0
  7323  037A  0221               	subwf	_Random+1,w
  7324  037B  30FF               	movlw	255
  7325  037C  1903               	skipnz
  7326  037D  0220               	subwf	_Random,w
  7327  037E  1C03               	btfss	3,0
  7328                           
  7329                           ;executer.c: 136:         {;executer.c: 138:             do { LATAbits.LATA2 = 1; } whil
      +                          e(0);
  7330  037F  1518               	bsf	24,2	;volatile
  7331                           
  7332                           ;executer.c: 142:         LATAbits.LATA0 = 0;
  7333                           
  7334                           ;executer.c: 139:         }
  7335  0380  1018               	bcf	24,0	;volatile
  7336  0381                     l2618:
  7337                           
  7338                           ;executer.c: 146:     Random = rand();
  7339  0381  2408               	fcall	_rand
  7340  0382  0140               	movlb	0	; select bank0
  7341  0383  083F               	movf	?_rand+1,w
  7342  0384  00A1               	movwf	_Random+1
  7343  0385  083E               	movf	?_rand,w
  7344  0386  00A0               	movwf	_Random
  7345  0387  0008               	return
  7346  0388                     __end_of_RCSxLED:
  7347                           
  7348                           	psect	text22
  7349  0408                     __ptext22:	
  7350 ;; *************** function _rand *****************
  7351 ;; Defined at:
  7352 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\rand.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;		None
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;		None
  7357 ;; Return value:  Size  Location     Type
  7358 ;;                  2    4[BANK0 ] int 
  7359 ;; Registers used:
  7360 ;;		wreg, status,2, status,0, pclath, cstack
  7361 ;; Tracked objects:
  7362 ;;		On entry : 0/0
  7363 ;;		On exit  : 0/0
  7364 ;;		Unchanged: 0/0
  7365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7366 ;;      Params:         0       2       0       0
  7367 ;;      Locals:         0       0       0       0
  7368 ;;      Temps:          0       4       0       0
  7369 ;;      Totals:         0       6       0       0
  7370 ;;Total ram usage:        6 bytes
  7371 ;; Hardware stack levels used:    1
  7372 ;; Hardware stack levels required when called:    7
  7373 ;; This function calls:
  7374 ;;		___lmul
  7375 ;; This function is called by:
  7376 ;;		_INITxEXECUTER
  7377 ;;		_RCSxLED
  7378 ;; This function uses a non-reentrant model
  7379 ;;
  7380                           
  7381                           
  7382                           ;psect for function _rand
  7383  0408                     _rand:
  7384                           
  7385                           ;incstack = 0
  7386                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  7387  0408  0140               	movlb	0	; select bank0
  7388  0409  0839               	movf	_seed+3,w
  7389  040A  00F5               	movwf	___lmul@multiplier+3
  7390  040B  0838               	movf	_seed+2,w
  7391  040C  00F4               	movwf	___lmul@multiplier+2
  7392  040D  0837               	movf	_seed+1,w
  7393  040E  00F3               	movwf	___lmul@multiplier+1
  7394  040F  0836               	movf	_seed,w
  7395  0410  00F2               	movwf	___lmul@multiplier
  7396  0411  304C               	movlw	76
  7397  0412  00F9               	movwf	___lmul@multiplicand+3
  7398  0413  3095               	movlw	149
  7399  0414  00F8               	movwf	___lmul@multiplicand+2
  7400  0415  307F               	movlw	127
  7401  0416  00F7               	movwf	___lmul@multiplicand+1
  7402  0417  302D               	movlw	45
  7403  0418  00F6               	movwf	___lmul@multiplicand
  7404  0419  246D               	fcall	___lmul
  7405  041A  3001               	movlw	1
  7406  041B  0772               	addwf	?___lmul,w
  7407  041C  0140               	movlb	0	; select bank0
  7408  041D  00B6               	movwf	_seed
  7409  041E  3000               	movlw	0
  7410  041F  3D73               	addwfc	?___lmul+1,w
  7411  0420  00B7               	movwf	_seed+1
  7412  0421  3000               	movlw	0
  7413  0422  3D74               	addwfc	?___lmul+2,w
  7414  0423  00B8               	movwf	_seed+2
  7415  0424  3000               	movlw	0
  7416  0425  3D75               	addwfc	?___lmul+3,w
  7417  0426  00B9               	movwf	_seed+3
  7418  0427  0836               	movf	_seed,w
  7419  0428  00C0               	movwf	??_rand
  7420  0429  0837               	movf	_seed+1,w
  7421  042A  00C1               	movwf	??_rand+1
  7422  042B  0838               	movf	_seed+2,w
  7423  042C  00C2               	movwf	??_rand+2
  7424  042D  0839               	movf	_seed+3,w
  7425  042E  00C3               	movwf	??_rand+3
  7426  042F  3011               	movlw	17
  7427  0430                     u1175:
  7428  0430  36C3               	lsrf	??_rand+3,f
  7429  0431  0CC2               	rrf	??_rand+2,f
  7430  0432  0CC1               	rrf	??_rand+1,f
  7431  0433  0CC0               	rrf	??_rand,f
  7432  0434  0B89               	decfsz	9,f
  7433  0435  2C30               	goto	u1175
  7434  0436  0841               	movf	??_rand+1,w
  7435  0437  00BF               	movwf	?_rand+1
  7436  0438  0840               	movf	??_rand,w
  7437  0439  00BE               	movwf	?_rand
  7438  043A  0008               	return
  7439  043B                     __end_of_rand:
  7440                           
  7441                           	psect	text23
  7442  046D                     __ptext23:	
  7443 ;; *************** function ___lmul *****************
  7444 ;; Defined at:
  7445 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul32.c"
  7446 ;; Parameters:    Size  Location     Type
  7447 ;;  multiplier      4    2[COMMON] unsigned long 
  7448 ;;  multiplicand    4    6[COMMON] unsigned long 
  7449 ;; Auto vars:     Size  Location     Type
  7450 ;;  product         4    0[BANK0 ] unsigned long 
  7451 ;; Return value:  Size  Location     Type
  7452 ;;                  4    2[COMMON] unsigned long 
  7453 ;; Registers used:
  7454 ;;		wreg, status,2, status,0
  7455 ;; Tracked objects:
  7456 ;;		On entry : 0/0
  7457 ;;		On exit  : 0/0
  7458 ;;		Unchanged: 0/0
  7459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7460 ;;      Params:         8       0       0       0
  7461 ;;      Locals:         0       4       0       0
  7462 ;;      Temps:          0       0       0       0
  7463 ;;      Totals:         8       4       0       0
  7464 ;;Total ram usage:       12 bytes
  7465 ;; Hardware stack levels used:    1
  7466 ;; Hardware stack levels required when called:    6
  7467 ;; This function calls:
  7468 ;;		Nothing
  7469 ;; This function is called by:
  7470 ;;		_rand
  7471 ;; This function uses a non-reentrant model
  7472 ;;
  7473                           
  7474                           
  7475                           ;psect for function ___lmul
  7476  046D                     ___lmul:
  7477                           
  7478                           ;incstack = 0
  7479                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  7480  046D  3000               	movlw	0
  7481  046E  0140               	movlb	0	; select bank0
  7482  046F  00BD               	movwf	___lmul@product+3
  7483  0470  3000               	movlw	0
  7484  0471  00BC               	movwf	___lmul@product+2
  7485  0472  3000               	movlw	0
  7486  0473  00BB               	movwf	___lmul@product+1
  7487  0474  3000               	movlw	0
  7488  0475  00BA               	movwf	___lmul@product
  7489  0476                     l1970:
  7490  0476  1C72               	btfss	___lmul@multiplier,0
  7491  0477  2C81               	goto	l1974
  7492  0478  0876               	movf	___lmul@multiplicand,w
  7493  0479  0140               	movlb	0	; select bank0
  7494  047A  07BA               	addwf	___lmul@product,f
  7495  047B  0877               	movf	___lmul@multiplicand+1,w
  7496  047C  3DBB               	addwfc	___lmul@product+1,f
  7497  047D  0878               	movf	___lmul@multiplicand+2,w
  7498  047E  3DBC               	addwfc	___lmul@product+2,f
  7499  047F  0879               	movf	___lmul@multiplicand+3,w
  7500  0480  3DBD               	addwfc	___lmul@product+3,f
  7501  0481                     l1974:
  7502  0481  3001               	movlw	1
  7503  0482                     u655:
  7504  0482  35F6               	lslf	___lmul@multiplicand,f
  7505  0483  0DF7               	rlf	___lmul@multiplicand+1,f
  7506  0484  0DF8               	rlf	___lmul@multiplicand+2,f
  7507  0485  0DF9               	rlf	___lmul@multiplicand+3,f
  7508  0486  0B89               	decfsz	9,f
  7509  0487  2C82               	goto	u655
  7510  0488  3001               	movlw	1
  7511  0489                     u665:
  7512  0489  36F5               	lsrf	___lmul@multiplier+3,f
  7513  048A  0CF4               	rrf	___lmul@multiplier+2,f
  7514  048B  0CF3               	rrf	___lmul@multiplier+1,f
  7515  048C  0CF2               	rrf	___lmul@multiplier,f
  7516  048D  0B89               	decfsz	9,f
  7517  048E  2C89               	goto	u665
  7518  048F  0875               	movf	___lmul@multiplier+3,w
  7519  0490  0474               	iorwf	___lmul@multiplier+2,w
  7520  0491  0473               	iorwf	___lmul@multiplier+1,w
  7521  0492  0472               	iorwf	___lmul@multiplier,w
  7522  0493  1D03               	skipz
  7523  0494  2C76               	goto	l1970
  7524  0495  0140               	movlb	0	; select bank0
  7525  0496  083D               	movf	___lmul@product+3,w
  7526  0497  00F5               	movwf	?___lmul+3
  7527  0498  083C               	movf	___lmul@product+2,w
  7528  0499  00F4               	movwf	?___lmul+2
  7529  049A  083B               	movf	___lmul@product+1,w
  7530  049B  00F3               	movwf	?___lmul+1
  7531  049C  083A               	movf	___lmul@product,w
  7532  049D  00F2               	movwf	?___lmul
  7533  049E  0008               	return
  7534  049F                     __end_of___lmul:
  7535                           
  7536                           	psect	text24
  7537  049F                     __ptext24:	
  7538 ;; *************** function _EXECUTExEFFECT *****************
  7539 ;; Defined at:
  7540 ;;		line 152 in file "executer.c"
  7541 ;; Parameters:    Size  Location     Type
  7542 ;;		None
  7543 ;; Auto vars:     Size  Location     Type
  7544 ;;  x               1   15[BANK0 ] unsigned char 
  7545 ;;  ReturnData      1   14[BANK0 ] unsigned char 
  7546 ;; Return value:  Size  Location     Type
  7547 ;;                  1    wreg      unsigned char 
  7548 ;; Registers used:
  7549 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7550 ;; Tracked objects:
  7551 ;;		On entry : 0/0
  7552 ;;		On exit  : 0/0
  7553 ;;		Unchanged: 0/0
  7554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7555 ;;      Params:         0       0       0       0
  7556 ;;      Locals:         0       4       0       0
  7557 ;;      Temps:          0       2       0       0
  7558 ;;      Totals:         0       6       0       0
  7559 ;;Total ram usage:        6 bytes
  7560 ;; Hardware stack levels used:    1
  7561 ;; Hardware stack levels required when called:    9
  7562 ;; This function calls:
  7563 ;;		_LedBrake
  7564 ;;		_LedFlash
  7565 ;;		_LedNom
  7566 ;;		_LedOff
  7567 ;;		_LedSlFl
  7568 ;;		___bmul
  7569 ;; This function is called by:
  7570 ;;		_main
  7571 ;; This function uses a non-reentrant model
  7572 ;;
  7573                           
  7574                           
  7575                           ;psect for function _EXECUTExEFFECT
  7576  049F                     _EXECUTExEFFECT:
  7577                           
  7578                           ;executer.c: 154:     ReturnVal = 0;
  7579                           
  7580                           ;incstack = 0
  7581                           ; Regs used in _EXECUTExEFFECT: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7582  049F  0140               	movlb	0	; select bank0
  7583  04A0  01AE               	clrf	_ReturnVal
  7584                           
  7585                           ;executer.c: 155:     uint8_t ReturnData = 0;
  7586  04A1  01C8               	clrf	EXECUTExEFFECT@ReturnData
  7587                           
  7588                           ;executer.c: 157:     for(uint8_t x=0; x<6; x++)
  7589  04A2  01C9               	clrf	EXECUTExEFFECT@x
  7590  04A3                     l2734:
  7591                           
  7592                           ;executer.c: 158:     {;executer.c: 159:         ReturnData += LedBit[x].Prog(x);
  7593  04A3  300B               	movlw	11
  7594  04A4  00C4               	movwf	??_EXECUTExEFFECT
  7595  04A5  0844               	movf	??_EXECUTExEFFECT,w
  7596  04A6  00F2               	movwf	___bmul@multiplicand
  7597  04A7  0849               	movf	EXECUTExEFFECT@x,w
  7598  04A8  2611               	fcall	___bmul
  7599  04A9  3EA2               	addlw	(low ((_LedBit| 0+2)))& (0+255)
  7600  04AA  0086               	movwf	6
  7601  04AB  0187               	clrf	7
  7602  04AC  3F40               	moviw [0]fsr1
  7603  04AD  0140               	movlb	0	; select bank0
  7604  04AE  00C6               	movwf	_EXECUTExEFFECT$1858
  7605  04AF  3F41               	moviw [1]fsr1
  7606  04B0  00C7               	movwf	_EXECUTExEFFECT$1858+1
  7607                           
  7608                           ;executer.c: 158:     {;executer.c: 159:         ReturnData += LedBit[x].Prog(x);
  7609  04B1  0849               	movf	EXECUTExEFFECT@x,w
  7610  04B2  00C4               	movwf	??_EXECUTExEFFECT
  7611  04B3  0844               	movf	??_EXECUTExEFFECT,w
  7612  04B4  00BF               	movwf	LedBrake@Led
  7613  04B5  0847               	movf	_EXECUTExEFFECT$1858+1,w
  7614  04B6  008A               	movwf	10
  7615  04B7  0846               	movf	_EXECUTExEFFECT$1858,w
  7616  04B8  000A               	callw
  7617  04B9  3184               	pagesel	$
  7618  04BA  0140               	movlb	0	; select bank0
  7619  04BB  00C5               	movwf	??_EXECUTExEFFECT+1
  7620  04BC  0845               	movf	??_EXECUTExEFFECT+1,w
  7621  04BD  07C8               	addwf	EXECUTExEFFECT@ReturnData,f
  7622                           
  7623                           ;executer.c: 160:     }
  7624  04BE  3001               	movlw	1
  7625  04BF  00C4               	movwf	??_EXECUTExEFFECT
  7626  04C0  0844               	movf	??_EXECUTExEFFECT,w
  7627  04C1  07C9               	addwf	EXECUTExEFFECT@x,f
  7628  04C2  3006               	movlw	6
  7629  04C3  0249               	subwf	EXECUTExEFFECT@x,w
  7630  04C4  1C03               	skipc
  7631  04C5  2CA3               	goto	l2734
  7632                           
  7633                           ;executer.c: 161:     if(ReturnData >= 5)
  7634  04C6  3005               	movlw	5
  7635  04C7  0248               	subwf	EXECUTExEFFECT@ReturnData,w
  7636  04C8  1C03               	skipc
  7637  04C9  2CCD               	goto	l2746
  7638                           
  7639                           ;executer.c: 162:     {;executer.c: 163:         ReturnVal = 1;
  7640  04CA  01AE               	clrf	_ReturnVal
  7641  04CB  0AAE               	incf	_ReturnVal,f
  7642                           
  7643                           ;executer.c: 164:     }
  7644  04CC  2CCE               	goto	l2748
  7645  04CD                     l2746:
  7646                           
  7647                           ;executer.c: 166:         ReturnVal = 0;
  7648  04CD  01AE               	clrf	_ReturnVal
  7649  04CE                     l2748:
  7650                           
  7651                           ;executer.c: 168:     return ReturnVal;
  7652  04CE  082E               	movf	_ReturnVal,w
  7653  04CF  0008               	return
  7654  04D0                     __end_of_EXECUTExEFFECT:
  7655                           
  7656                           	psect	text25
  7657  05D9                     __ptext25:	
  7658 ;; *************** function _LedBrake *****************
  7659 ;; Defined at:
  7660 ;;		line 213 in file "executer.c"
  7661 ;; Parameters:    Size  Location     Type
  7662 ;;  Led             1    5[BANK0 ] unsigned char 
  7663 ;; Auto vars:     Size  Location     Type
  7664 ;;		None
  7665 ;; Return value:  Size  Location     Type
  7666 ;;                  1    wreg      unsigned char 
  7667 ;; Registers used:
  7668 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7669 ;; Tracked objects:
  7670 ;;		On entry : 0/0
  7671 ;;		On exit  : 0/0
  7672 ;;		Unchanged: 0/0
  7673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7674 ;;      Params:         0       1       0       0
  7675 ;;      Locals:         0       0       0       0
  7676 ;;      Temps:          0       2       0       0
  7677 ;;      Totals:         0       3       0       0
  7678 ;;Total ram usage:        3 bytes
  7679 ;; Hardware stack levels used:    1
  7680 ;; Hardware stack levels required when called:    8
  7681 ;; This function calls:
  7682 ;;		_CalcPwm
  7683 ;;		___bmul
  7684 ;; This function is called by:
  7685 ;;		_RCSxLED
  7686 ;;		_EXECUTExEFFECT
  7687 ;; This function uses a non-reentrant model
  7688 ;;
  7689                           
  7690                           
  7691                           ;psect for function _LedBrake
  7692  05D9                     _LedBrake:
  7693                           
  7694                           ;executer.c: 213: uint8_t LedBrake(uint8_t Led);executer.c: 214: {;executer.c: 215:     
      +                          LedBit[Led].Led = BRAKE;
  7695                           
  7696                           ;incstack = 0
  7697                           ; Regs used in _LedBrake: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7698  05D9  307F               	movlw	127
  7699  05DA  0140               	movlb	0	; select bank0
  7700  05DB  00C0               	movwf	??_LedBrake
  7701  05DC  300B               	movlw	11
  7702  05DD  00C1               	movwf	??_LedBrake+1
  7703  05DE  0841               	movf	??_LedBrake+1,w
  7704  05DF  00F2               	movwf	___bmul@multiplicand
  7705  05E0  083F               	movf	LedBrake@Led,w
  7706  05E1  2611               	fcall	___bmul
  7707  05E2  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  7708  05E3  0086               	movwf	6
  7709  05E4  0187               	clrf	7
  7710  05E5  0140               	movlb	0	; select bank0
  7711  05E6  0840               	movf	??_LedBrake,w
  7712  05E7  0081               	movwf	1
  7713                           
  7714                           ;executer.c: 216:     CalcPwm(Led);
  7715  05E8  083F               	movf	LedBrake@Led,w
  7716  05E9  2501               	fcall	_CalcPwm
  7717                           
  7718                           ;executer.c: 217:     return(1);
  7719  05EA  3001               	movlw	1
  7720  05EB  0008               	return
  7721  05EC                     __end_of_LedBrake:
  7722                           
  7723                           	psect	text26
  7724  03CA                     __ptext26:	
  7725 ;; *************** function _LedNom *****************
  7726 ;; Defined at:
  7727 ;;		line 187 in file "executer.c"
  7728 ;; Parameters:    Size  Location     Type
  7729 ;;  Led             1    5[BANK0 ] unsigned char 
  7730 ;; Auto vars:     Size  Location     Type
  7731 ;;		None
  7732 ;; Return value:  Size  Location     Type
  7733 ;;                  1    wreg      unsigned char 
  7734 ;; Registers used:
  7735 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7736 ;; Tracked objects:
  7737 ;;		On entry : 0/0
  7738 ;;		On exit  : 0/0
  7739 ;;		Unchanged: 0/0
  7740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7741 ;;      Params:         0       1       0       0
  7742 ;;      Locals:         0       0       0       0
  7743 ;;      Temps:          0       3       0       0
  7744 ;;      Totals:         0       4       0       0
  7745 ;;Total ram usage:        4 bytes
  7746 ;; Hardware stack levels used:    1
  7747 ;; Hardware stack levels required when called:    8
  7748 ;; This function calls:
  7749 ;;		_CalcPwm
  7750 ;;		___bmul
  7751 ;; This function is called by:
  7752 ;;		_RCSxLED
  7753 ;;		_EXECUTExEFFECT
  7754 ;; This function uses a non-reentrant model
  7755 ;;
  7756                           
  7757                           
  7758                           ;psect for function _LedNom
  7759  03CA                     _LedNom:
  7760                           
  7761                           ;executer.c: 187: uint8_t LedNom(uint8_t Led);executer.c: 188: {;executer.c: 189:     Le
      +                          dBit[Led].Led = LedBit[Led].nominal;
  7762                           
  7763                           ;incstack = 0
  7764                           ; Regs used in _LedNom: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7765  03CA  300B               	movlw	11
  7766  03CB  0140               	movlb	0	; select bank0
  7767  03CC  00C0               	movwf	??_LedNom
  7768  03CD  0840               	movf	??_LedNom,w
  7769  03CE  00F2               	movwf	___bmul@multiplicand
  7770  03CF  083F               	movf	LedNom@Led,w
  7771  03D0  2611               	fcall	___bmul
  7772  03D1  3EA5               	addlw	(low ((_LedBit| 0+5)))& (0+255)
  7773  03D2  0086               	movwf	6
  7774  03D3  0187               	clrf	7
  7775  03D4  0801               	movf	1,w
  7776  03D5  0140               	movlb	0	; select bank0
  7777  03D6  00C1               	movwf	??_LedNom+1
  7778  03D7  300B               	movlw	11
  7779  03D8  00C2               	movwf	??_LedNom+2
  7780  03D9  0842               	movf	??_LedNom+2,w
  7781  03DA  00F2               	movwf	___bmul@multiplicand
  7782  03DB  083F               	movf	LedNom@Led,w
  7783  03DC  2611               	fcall	___bmul
  7784  03DD  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  7785  03DE  0086               	movwf	6
  7786  03DF  0187               	clrf	7
  7787  03E0  0140               	movlb	0	; select bank0
  7788  03E1  0841               	movf	??_LedNom+1,w
  7789  03E2  0081               	movwf	1
  7790                           
  7791                           ;executer.c: 190:     LedBit[Led].Speed = 0;
  7792  03E3  300B               	movlw	11
  7793  03E4  00C0               	movwf	??_LedNom
  7794  03E5  0840               	movf	??_LedNom,w
  7795  03E6  00F2               	movwf	___bmul@multiplicand
  7796  03E7  083F               	movf	LedNom@Led,w
  7797  03E8  2611               	fcall	___bmul
  7798  03E9  3EA4               	addlw	(low ((_LedBit| 0+4)))& (0+255)
  7799  03EA  0086               	movwf	6
  7800  03EB  0187               	clrf	7
  7801  03EC  0181               	clrf	1
  7802                           
  7803                           ;executer.c: 191:     LedBit[Led].Prog_State = 0;
  7804  03ED  300B               	movlw	11
  7805  03EE  0140               	movlb	0	; select bank0
  7806  03EF  00C0               	movwf	??_LedNom
  7807  03F0  0840               	movf	??_LedNom,w
  7808  03F1  00F2               	movwf	___bmul@multiplicand
  7809  03F2  083F               	movf	LedNom@Led,w
  7810  03F3  2611               	fcall	___bmul
  7811  03F4  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  7812  03F5  0086               	movwf	6
  7813  03F6  0187               	clrf	7
  7814  03F7  0181               	clrf	1
  7815                           
  7816                           ;executer.c: 192:     LedBit[Led].Iteration = 0;
  7817  03F8  300B               	movlw	11
  7818  03F9  0140               	movlb	0	; select bank0
  7819  03FA  00C0               	movwf	??_LedNom
  7820  03FB  0840               	movf	??_LedNom,w
  7821  03FC  00F2               	movwf	___bmul@multiplicand
  7822  03FD  083F               	movf	LedNom@Led,w
  7823  03FE  2611               	fcall	___bmul
  7824  03FF  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  7825  0400  0086               	movwf	6
  7826  0401  0187               	clrf	7
  7827  0402  0181               	clrf	1
  7828                           
  7829                           ;executer.c: 193:     CalcPwm(Led);
  7830  0403  0140               	movlb	0	; select bank0
  7831  0404  083F               	movf	LedNom@Led,w
  7832  0405  2501               	fcall	_CalcPwm
  7833                           
  7834                           ;executer.c: 194:     return(1);
  7835  0406  3001               	movlw	1
  7836  0407  0008               	return
  7837  0408                     __end_of_LedNom:
  7838                           
  7839                           	psect	text27
  7840  01C2                     __ptext27:	
  7841 ;; *************** function _LedFlash *****************
  7842 ;; Defined at:
  7843 ;;		line 275 in file "executer.c"
  7844 ;; Parameters:    Size  Location     Type
  7845 ;;  Led             1    5[BANK0 ] unsigned char 
  7846 ;; Auto vars:     Size  Location     Type
  7847 ;;  ReturnVal       1    9[BANK0 ] unsigned char 
  7848 ;; Return value:  Size  Location     Type
  7849 ;;                  1    wreg      unsigned char 
  7850 ;; Registers used:
  7851 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7852 ;; Tracked objects:
  7853 ;;		On entry : 0/0
  7854 ;;		On exit  : 0/0
  7855 ;;		Unchanged: 0/0
  7856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7857 ;;      Params:         0       1       0       0
  7858 ;;      Locals:         0       1       0       0
  7859 ;;      Temps:          0       3       0       0
  7860 ;;      Totals:         0       5       0       0
  7861 ;;Total ram usage:        5 bytes
  7862 ;; Hardware stack levels used:    1
  7863 ;; Hardware stack levels required when called:    8
  7864 ;; This function calls:
  7865 ;;		_CalcPwm
  7866 ;;		___bmul
  7867 ;; This function is called by:
  7868 ;;		_BATTxPROTECT
  7869 ;;		_RCSxLED
  7870 ;;		_EXECUTExEFFECT
  7871 ;; This function uses a non-reentrant model
  7872 ;;
  7873                           
  7874                           
  7875                           ;psect for function _LedFlash
  7876  01C2                     _LedFlash:
  7877                           
  7878                           ;executer.c: 275: uint8_t LedFlash(uint8_t Led);executer.c: 276: {;executer.c: 277:     
      +                          uint8_t ReturnVal = 0;
  7879                           
  7880                           ;incstack = 0
  7881                           ; Regs used in _LedFlash: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7882  01C2  0140               	movlb	0	; select bank0
  7883  01C3  01C3               	clrf	LedFlash@ReturnVal
  7884                           
  7885                           ;executer.c: 279:     switch(LedBit[Led].Prog_State){
  7886  01C4  2A52               	goto	l2714
  7887  01C5                     l2694:
  7888  01C5  300B               	movlw	11
  7889  01C6  00C0               	movwf	??_LedFlash
  7890  01C7  0840               	movf	??_LedFlash,w
  7891  01C8  00F2               	movwf	___bmul@multiplicand
  7892  01C9  083F               	movf	LedFlash@Led,w
  7893  01CA  2611               	fcall	___bmul
  7894  01CB  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  7895  01CC  0086               	movwf	6
  7896  01CD  0187               	clrf	7
  7897  01CE  0181               	clrf	1
  7898                           
  7899                           ;executer.c: 281:                     LedBit[Led].Prog_State = 1;
  7900  01CF  300B               	movlw	11
  7901  01D0  0140               	movlb	0	; select bank0
  7902  01D1  00C0               	movwf	??_LedFlash
  7903  01D2  0840               	movf	??_LedFlash,w
  7904  01D3  00F2               	movwf	___bmul@multiplicand
  7905  01D4  083F               	movf	LedFlash@Led,w
  7906  01D5  2611               	fcall	___bmul
  7907  01D6  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  7908  01D7  0086               	movwf	6
  7909  01D8  0187               	clrf	7
  7910  01D9  0181               	clrf	1
  7911  01DA  0A81               	incf	1,f
  7912                           
  7913                           ;executer.c: 282:                     ReturnVal = 0;
  7914  01DB  0140               	movlb	0	; select bank0
  7915  01DC  01C3               	clrf	LedFlash@ReturnVal
  7916                           
  7917                           ;executer.c: 283:             break;
  7918  01DD  2A6C               	goto	l2716
  7919  01DE                     l2698:
  7920  01DE  3001               	movlw	1
  7921  01DF  00C0               	movwf	??_LedFlash
  7922  01E0  300B               	movlw	11
  7923  01E1  00C1               	movwf	??_LedFlash+1
  7924  01E2  0841               	movf	??_LedFlash+1,w
  7925  01E3  00F2               	movwf	___bmul@multiplicand
  7926  01E4  083F               	movf	LedFlash@Led,w
  7927  01E5  2611               	fcall	___bmul
  7928  01E6  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  7929  01E7  0086               	movwf	6
  7930  01E8  0187               	clrf	7
  7931  01E9  0140               	movlb	0	; select bank0
  7932  01EA  0840               	movf	??_LedFlash,w
  7933  01EB  0781               	addwf	1,f
  7934                           
  7935                           ;executer.c: 286:                     if(LedBit[Led].Iteration > LedBit[Led].Speed){
  7936  01EC  300B               	movlw	11
  7937  01ED  00C0               	movwf	??_LedFlash
  7938  01EE  0840               	movf	??_LedFlash,w
  7939  01EF  00F2               	movwf	___bmul@multiplicand
  7940  01F0  083F               	movf	LedFlash@Led,w
  7941  01F1  2611               	fcall	___bmul
  7942  01F2  3EA4               	addlw	(low ((_LedBit| 0+4)))& (0+255)
  7943  01F3  0086               	movwf	6
  7944  01F4  0187               	clrf	7
  7945  01F5  300B               	movlw	11
  7946  01F6  0140               	movlb	0	; select bank0
  7947  01F7  00C1               	movwf	??_LedFlash+1
  7948  01F8  0841               	movf	??_LedFlash+1,w
  7949  01F9  00F2               	movwf	___bmul@multiplicand
  7950  01FA  083F               	movf	LedFlash@Led,w
  7951  01FB  2611               	fcall	___bmul
  7952  01FC  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  7953  01FD  0084               	movwf	4
  7954  01FE  0185               	clrf	5
  7955  01FF  0800               	movf	0,w
  7956  0200  0201               	subwf	1,w
  7957  0201  1803               	skipnc
  7958  0202  2A37               	goto	l677
  7959                           
  7960                           ;executer.c: 287:                         LedBit[Led].Iteration = 0;
  7961  0203  300B               	movlw	11
  7962  0204  0140               	movlb	0	; select bank0
  7963  0205  00C0               	movwf	??_LedFlash
  7964  0206  0840               	movf	??_LedFlash,w
  7965  0207  00F2               	movwf	___bmul@multiplicand
  7966  0208  083F               	movf	LedFlash@Led,w
  7967  0209  2611               	fcall	___bmul
  7968  020A  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  7969  020B  0086               	movwf	6
  7970  020C  0187               	clrf	7
  7971  020D  0181               	clrf	1
  7972                           
  7973                           ;executer.c: 288:                         if(LedBit[Led].Led == MAX){
  7974  020E  300B               	movlw	11
  7975  020F  0140               	movlb	0	; select bank0
  7976  0210  00C0               	movwf	??_LedFlash
  7977  0211  0840               	movf	??_LedFlash,w
  7978  0212  00F2               	movwf	___bmul@multiplicand
  7979  0213  083F               	movf	LedFlash@Led,w
  7980  0214  2611               	fcall	___bmul
  7981  0215  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  7982  0216  0086               	movwf	6
  7983  0217  0187               	clrf	7
  7984  0218  30FE               	movlw	254
  7985  0219  0601               	xorwf	1,w
  7986  021A  1D03               	btfss	3,2
  7987  021B  2A28               	goto	l2706
  7988                           
  7989                           ;executer.c: 289:                             LedBit[Led].Led = 0;
  7990  021C  300B               	movlw	11
  7991  021D  0140               	movlb	0	; select bank0
  7992  021E  00C0               	movwf	??_LedFlash
  7993  021F  0840               	movf	??_LedFlash,w
  7994  0220  00F2               	movwf	___bmul@multiplicand
  7995  0221  083F               	movf	LedFlash@Led,w
  7996  0222  2611               	fcall	___bmul
  7997  0223  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  7998  0224  0086               	movwf	6
  7999  0225  0187               	clrf	7
  8000  0226  0181               	clrf	1
  8001                           
  8002                           ;executer.c: 290:                         }
  8003  0227  2A37               	goto	l677
  8004  0228                     l2706:
  8005                           
  8006                           ;executer.c: 292:                             LedBit[Led].Led = MAX;
  8007  0228  30FE               	movlw	254
  8008  0229  0140               	movlb	0	; select bank0
  8009  022A  00C0               	movwf	??_LedFlash
  8010  022B  300B               	movlw	11
  8011  022C  00C1               	movwf	??_LedFlash+1
  8012  022D  0841               	movf	??_LedFlash+1,w
  8013  022E  00F2               	movwf	___bmul@multiplicand
  8014  022F  083F               	movf	LedFlash@Led,w
  8015  0230  2611               	fcall	___bmul
  8016  0231  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8017  0232  0086               	movwf	6
  8018  0233  0187               	clrf	7
  8019  0234  0140               	movlb	0	; select bank0
  8020  0235  0840               	movf	??_LedFlash,w
  8021  0236  0081               	movwf	1
  8022  0237                     l677:	
  8023                           ;executer.c: 294:                     }
  8024                           
  8025                           
  8026                           ;executer.c: 295:                     LedBit[Led].Prog_State = 1;
  8027  0237  300B               	movlw	11
  8028  0238  0140               	movlb	0	; select bank0
  8029  0239  00C0               	movwf	??_LedFlash
  8030  023A  0840               	movf	??_LedFlash,w
  8031  023B  00F2               	movwf	___bmul@multiplicand
  8032  023C  083F               	movf	LedFlash@Led,w
  8033  023D  2611               	fcall	___bmul
  8034  023E  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8035  023F  0086               	movwf	6
  8036  0240  0187               	clrf	7
  8037  0241  0181               	clrf	1
  8038  0242  0A81               	incf	1,f
  8039                           
  8040                           ;executer.c: 296:                     ReturnVal = 1;
  8041  0243  0140               	movlb	0	; select bank0
  8042  0244  01C3               	clrf	LedFlash@ReturnVal
  8043  0245  0AC3               	incf	LedFlash@ReturnVal,f
  8044                           
  8045                           ;executer.c: 297:             break;
  8046  0246  2A6C               	goto	l2716
  8047  0247                     l2710:
  8048  0247  300B               	movlw	11
  8049  0248  00C0               	movwf	??_LedFlash
  8050  0249  0840               	movf	??_LedFlash,w
  8051  024A  00F2               	movwf	___bmul@multiplicand
  8052  024B  083F               	movf	LedFlash@Led,w
  8053  024C  2611               	fcall	___bmul
  8054  024D  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8055  024E  0086               	movwf	6
  8056  024F  0187               	clrf	7
  8057  0250  0181               	clrf	1
  8058                           
  8059                           ;executer.c: 300:         break;
  8060  0251  2A6C               	goto	l2716
  8061  0252                     l2714:
  8062  0252  300B               	movlw	11
  8063  0253  00C0               	movwf	??_LedFlash
  8064  0254  0840               	movf	??_LedFlash,w
  8065  0255  00F2               	movwf	___bmul@multiplicand
  8066  0256  083F               	movf	LedFlash@Led,w
  8067  0257  2611               	fcall	___bmul
  8068  0258  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8069  0259  0086               	movwf	6
  8070  025A  0187               	clrf	7
  8071  025B  0801               	movf	1,w
  8072  025C  0140               	movlb	0	; select bank0
  8073  025D  00C1               	movwf	??_LedFlash+1
  8074  025E  01C2               	clrf	??_LedFlash+2
  8075                           
  8076                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8077                           ; Switch size 1, requested type "simple"
  8078                           ; Number of cases is 1, Range of values is 0 to 0
  8079                           ; switch strategies available:
  8080                           ; Name         Instructions Cycles
  8081                           ; simple_byte            4     3 (average)
  8082                           ; direct_byte            8     6 (fixed)
  8083                           ; jumptable            260     6 (fixed)
  8084                           ;	Chosen strategy is simple_byte
  8085  025F  0842               	movf	??_LedFlash+2,w
  8086  0260  3A00               	xorlw	0	; case 0
  8087  0261  1903               	skipnz
  8088  0262  2A64               	goto	l2896
  8089  0263  2A47               	goto	l2710
  8090  0264                     l2896:
  8091                           
  8092                           ; Switch size 1, requested type "simple"
  8093                           ; Number of cases is 2, Range of values is 0 to 1
  8094                           ; switch strategies available:
  8095                           ; Name         Instructions Cycles
  8096                           ; simple_byte            7     4 (average)
  8097                           ; direct_byte           10     6 (fixed)
  8098                           ; jumptable            260     6 (fixed)
  8099                           ;	Chosen strategy is simple_byte
  8100  0264  0841               	movf	??_LedFlash+1,w
  8101  0265  3A00               	xorlw	0	; case 0
  8102  0266  1903               	skipnz
  8103  0267  29C5               	goto	l2694
  8104  0268  3A01               	xorlw	1	; case 1
  8105  0269  1903               	skipnz
  8106  026A  29DE               	goto	l2698
  8107  026B  2A47               	goto	l2710
  8108  026C                     l2716:
  8109                           
  8110                           ;executer.c: 303:     CalcPwm(Led);
  8111  026C  0140               	movlb	0	; select bank0
  8112  026D  083F               	movf	LedFlash@Led,w
  8113  026E  2501               	fcall	_CalcPwm
  8114                           
  8115                           ;executer.c: 304:     return(ReturnVal);
  8116  026F  0140               	movlb	0	; select bank0
  8117  0270  0843               	movf	LedFlash@ReturnVal,w
  8118  0271  0008               	return
  8119  0272                     __end_of_LedFlash:
  8120                           
  8121                           	psect	text28
  8122  04D0                     __ptext28:	
  8123 ;; *************** function _LedOff *****************
  8124 ;; Defined at:
  8125 ;;		line 174 in file "executer.c"
  8126 ;; Parameters:    Size  Location     Type
  8127 ;;  Led             1    5[BANK0 ] unsigned char 
  8128 ;; Auto vars:     Size  Location     Type
  8129 ;;		None
  8130 ;; Return value:  Size  Location     Type
  8131 ;;                  1    wreg      unsigned char 
  8132 ;; Registers used:
  8133 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8134 ;; Tracked objects:
  8135 ;;		On entry : 0/0
  8136 ;;		On exit  : 0/0
  8137 ;;		Unchanged: 0/0
  8138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8139 ;;      Params:         0       1       0       0
  8140 ;;      Locals:         0       0       0       0
  8141 ;;      Temps:          0       1       0       0
  8142 ;;      Totals:         0       2       0       0
  8143 ;;Total ram usage:        2 bytes
  8144 ;; Hardware stack levels used:    1
  8145 ;; Hardware stack levels required when called:    8
  8146 ;; This function calls:
  8147 ;;		_CalcPwm
  8148 ;;		___bmul
  8149 ;; This function is called by:
  8150 ;;		_BATTxPROTECT
  8151 ;;		_RCSxLED
  8152 ;;		_EXECUTExEFFECT
  8153 ;; This function uses a non-reentrant model
  8154 ;;
  8155                           
  8156                           
  8157                           ;psect for function _LedOff
  8158  04D0                     _LedOff:
  8159                           
  8160                           ;executer.c: 174: uint8_t LedOff(uint8_t Led);executer.c: 175: {;executer.c: 176:     Le
      +                          dBit[Led].Led = 0;
  8161                           
  8162                           ;incstack = 0
  8163                           ; Regs used in _LedOff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8164  04D0  300B               	movlw	11
  8165  04D1  0140               	movlb	0	; select bank0
  8166  04D2  00C0               	movwf	??_LedOff
  8167  04D3  0840               	movf	??_LedOff,w
  8168  04D4  00F2               	movwf	___bmul@multiplicand
  8169  04D5  083F               	movf	LedOff@Led,w
  8170  04D6  2611               	fcall	___bmul
  8171  04D7  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8172  04D8  0086               	movwf	6
  8173  04D9  0187               	clrf	7
  8174  04DA  0181               	clrf	1
  8175                           
  8176                           ;executer.c: 177:     LedBit[Led].Speed = 0;
  8177  04DB  300B               	movlw	11
  8178  04DC  0140               	movlb	0	; select bank0
  8179  04DD  00C0               	movwf	??_LedOff
  8180  04DE  0840               	movf	??_LedOff,w
  8181  04DF  00F2               	movwf	___bmul@multiplicand
  8182  04E0  083F               	movf	LedOff@Led,w
  8183  04E1  2611               	fcall	___bmul
  8184  04E2  3EA4               	addlw	(low ((_LedBit| 0+4)))& (0+255)
  8185  04E3  0086               	movwf	6
  8186  04E4  0187               	clrf	7
  8187  04E5  0181               	clrf	1
  8188                           
  8189                           ;executer.c: 178:     LedBit[Led].Prog_State = 0;
  8190  04E6  300B               	movlw	11
  8191  04E7  0140               	movlb	0	; select bank0
  8192  04E8  00C0               	movwf	??_LedOff
  8193  04E9  0840               	movf	??_LedOff,w
  8194  04EA  00F2               	movwf	___bmul@multiplicand
  8195  04EB  083F               	movf	LedOff@Led,w
  8196  04EC  2611               	fcall	___bmul
  8197  04ED  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8198  04EE  0086               	movwf	6
  8199  04EF  0187               	clrf	7
  8200  04F0  0181               	clrf	1
  8201                           
  8202                           ;executer.c: 179:     LedBit[Led].Iteration = 0;
  8203  04F1  300B               	movlw	11
  8204  04F2  0140               	movlb	0	; select bank0
  8205  04F3  00C0               	movwf	??_LedOff
  8206  04F4  0840               	movf	??_LedOff,w
  8207  04F5  00F2               	movwf	___bmul@multiplicand
  8208  04F6  083F               	movf	LedOff@Led,w
  8209  04F7  2611               	fcall	___bmul
  8210  04F8  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8211  04F9  0086               	movwf	6
  8212  04FA  0187               	clrf	7
  8213  04FB  0181               	clrf	1
  8214                           
  8215                           ;executer.c: 180:     CalcPwm(Led);
  8216  04FC  0140               	movlb	0	; select bank0
  8217  04FD  083F               	movf	LedOff@Led,w
  8218  04FE  2501               	fcall	_CalcPwm
  8219                           
  8220                           ;executer.c: 181:     return(1);
  8221  04FF  3001               	movlw	1
  8222  0500  0008               	return
  8223  0501                     __end_of_LedOff:
  8224                           
  8225                           	psect	text29
  8226  0039                     __ptext29:	
  8227 ;; *************** function _LedSlFl *****************
  8228 ;; Defined at:
  8229 ;;		line 223 in file "executer.c"
  8230 ;; Parameters:    Size  Location     Type
  8231 ;;  Led             1    5[BANK0 ] unsigned char 
  8232 ;; Auto vars:     Size  Location     Type
  8233 ;;  ReturnVal       1    9[BANK0 ] unsigned char 
  8234 ;; Return value:  Size  Location     Type
  8235 ;;                  1    wreg      unsigned char 
  8236 ;; Registers used:
  8237 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8238 ;; Tracked objects:
  8239 ;;		On entry : 0/0
  8240 ;;		On exit  : 0/0
  8241 ;;		Unchanged: 0/0
  8242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8243 ;;      Params:         0       1       0       0
  8244 ;;      Locals:         0       1       0       0
  8245 ;;      Temps:          0       3       0       0
  8246 ;;      Totals:         0       5       0       0
  8247 ;;Total ram usage:        5 bytes
  8248 ;; Hardware stack levels used:    1
  8249 ;; Hardware stack levels required when called:    8
  8250 ;; This function calls:
  8251 ;;		_CalcPwm
  8252 ;;		___bmul
  8253 ;; This function is called by:
  8254 ;;		_RCSxLED
  8255 ;;		_EXECUTExEFFECT
  8256 ;; This function uses a non-reentrant model
  8257 ;;
  8258                           
  8259                           
  8260                           ;psect for function _LedSlFl
  8261  0039                     _LedSlFl:
  8262                           
  8263                           ;executer.c: 223: uint8_t LedSlFl(uint8_t Led);executer.c: 224: {;executer.c: 225:     u
      +                          int8_t ReturnVal = 0;
  8264                           
  8265                           ;incstack = 0
  8266                           ; Regs used in _LedSlFl: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8267  0039  0140               	movlb	0	; select bank0
  8268  003A  01C3               	clrf	LedSlFl@ReturnVal
  8269                           
  8270                           ;executer.c: 227:     switch(LedBit[Led].Prog_State){
  8271  003B  299F               	goto	l2680
  8272  003C                     l2640:
  8273  003C  300B               	movlw	11
  8274  003D  00C0               	movwf	??_LedSlFl
  8275  003E  0840               	movf	??_LedSlFl,w
  8276  003F  00F2               	movwf	___bmul@multiplicand
  8277  0040  083F               	movf	LedSlFl@Led,w
  8278  0041  2611               	fcall	___bmul
  8279  0042  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8280  0043  0086               	movwf	6
  8281  0044  0187               	clrf	7
  8282  0045  0181               	clrf	1
  8283                           
  8284                           ;executer.c: 229:                     LedBit[Led].Prog_State = 1;
  8285  0046  300B               	movlw	11
  8286  0047  0140               	movlb	0	; select bank0
  8287  0048  00C0               	movwf	??_LedSlFl
  8288  0049  0840               	movf	??_LedSlFl,w
  8289  004A  00F2               	movwf	___bmul@multiplicand
  8290  004B  083F               	movf	LedSlFl@Led,w
  8291  004C  2611               	fcall	___bmul
  8292  004D  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8293  004E  0086               	movwf	6
  8294  004F  0187               	clrf	7
  8295  0050  0181               	clrf	1
  8296  0051  0A81               	incf	1,f
  8297                           
  8298                           ;executer.c: 230:                     ReturnVal = 0;
  8299  0052  0140               	movlb	0	; select bank0
  8300  0053  01C3               	clrf	LedSlFl@ReturnVal
  8301                           
  8302                           ;executer.c: 231:             break;
  8303  0054  29BC               	goto	l2682
  8304  0055                     l2644:
  8305  0055  3001               	movlw	1
  8306  0056  00C0               	movwf	??_LedSlFl
  8307  0057  300B               	movlw	11
  8308  0058  00C1               	movwf	??_LedSlFl+1
  8309  0059  0841               	movf	??_LedSlFl+1,w
  8310  005A  00F2               	movwf	___bmul@multiplicand
  8311  005B  083F               	movf	LedSlFl@Led,w
  8312  005C  2611               	fcall	___bmul
  8313  005D  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8314  005E  0086               	movwf	6
  8315  005F  0187               	clrf	7
  8316  0060  0140               	movlb	0	; select bank0
  8317  0061  0840               	movf	??_LedSlFl,w
  8318  0062  0781               	addwf	1,f
  8319                           
  8320                           ;executer.c: 234:                     if(LedBit[Led].Iteration > LedBit[Led].Speed){
  8321  0063  300B               	movlw	11
  8322  0064  00C0               	movwf	??_LedSlFl
  8323  0065  0840               	movf	??_LedSlFl,w
  8324  0066  00F2               	movwf	___bmul@multiplicand
  8325  0067  083F               	movf	LedSlFl@Led,w
  8326  0068  2611               	fcall	___bmul
  8327  0069  3EA4               	addlw	(low ((_LedBit| 0+4)))& (0+255)
  8328  006A  0086               	movwf	6
  8329  006B  0187               	clrf	7
  8330  006C  300B               	movlw	11
  8331  006D  0140               	movlb	0	; select bank0
  8332  006E  00C1               	movwf	??_LedSlFl+1
  8333  006F  0841               	movf	??_LedSlFl+1,w
  8334  0070  00F2               	movwf	___bmul@multiplicand
  8335  0071  083F               	movf	LedSlFl@Led,w
  8336  0072  2611               	fcall	___bmul
  8337  0073  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8338  0074  0084               	movwf	4
  8339  0075  0185               	clrf	5
  8340  0076  0800               	movf	0,w
  8341  0077  0201               	subwf	1,w
  8342  0078  1803               	skipnc
  8343  0079  289E               	goto	l662
  8344                           
  8345                           ;executer.c: 235:                         LedBit[Led].Iteration = 0;
  8346  007A  300B               	movlw	11
  8347  007B  0140               	movlb	0	; select bank0
  8348  007C  00C0               	movwf	??_LedSlFl
  8349  007D  0840               	movf	??_LedSlFl,w
  8350  007E  00F2               	movwf	___bmul@multiplicand
  8351  007F  083F               	movf	LedSlFl@Led,w
  8352  0080  2611               	fcall	___bmul
  8353  0081  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8354  0082  0086               	movwf	6
  8355  0083  0187               	clrf	7
  8356  0084  0181               	clrf	1
  8357                           
  8358                           ;executer.c: 236:                         LedBit[Led].Led += LedBit[Led].StepSize;
  8359  0085  300B               	movlw	11
  8360  0086  0140               	movlb	0	; select bank0
  8361  0087  00C0               	movwf	??_LedSlFl
  8362  0088  0840               	movf	??_LedSlFl,w
  8363  0089  00F2               	movwf	___bmul@multiplicand
  8364  008A  083F               	movf	LedSlFl@Led,w
  8365  008B  2611               	fcall	___bmul
  8366  008C  3EA8               	addlw	(low ((_LedBit| 0+8)))& (0+255)
  8367  008D  0086               	movwf	6
  8368  008E  0187               	clrf	7
  8369  008F  0801               	movf	1,w
  8370  0090  0140               	movlb	0	; select bank0
  8371  0091  00C1               	movwf	??_LedSlFl+1
  8372  0092  300B               	movlw	11
  8373  0093  00C2               	movwf	??_LedSlFl+2
  8374  0094  0842               	movf	??_LedSlFl+2,w
  8375  0095  00F2               	movwf	___bmul@multiplicand
  8376  0096  083F               	movf	LedSlFl@Led,w
  8377  0097  2611               	fcall	___bmul
  8378  0098  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8379  0099  0086               	movwf	6
  8380  009A  0187               	clrf	7
  8381  009B  0140               	movlb	0	; select bank0
  8382  009C  0841               	movf	??_LedSlFl+1,w
  8383  009D  0781               	addwf	1,f
  8384  009E                     l662:	
  8385                           ;executer.c: 237:                     }
  8386                           
  8387                           
  8388                           ;executer.c: 238:                     if(LedBit[Led].Led > MAX){
  8389  009E  300B               	movlw	11
  8390  009F  0140               	movlb	0	; select bank0
  8391  00A0  00C0               	movwf	??_LedSlFl
  8392  00A1  0840               	movf	??_LedSlFl,w
  8393  00A2  00F2               	movwf	___bmul@multiplicand
  8394  00A3  083F               	movf	LedSlFl@Led,w
  8395  00A4  2611               	fcall	___bmul
  8396  00A5  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8397  00A6  0086               	movwf	6
  8398  00A7  0187               	clrf	7
  8399  00A8  0A01               	incf	1,w
  8400  00A9  1D03               	btfss	3,2
  8401  00AA  28D2               	goto	l2652
  8402                           
  8403                           ;executer.c: 239:                         LedBit[Led].Led = MAX;
  8404  00AB  30FE               	movlw	254
  8405  00AC  0140               	movlb	0	; select bank0
  8406  00AD  00C0               	movwf	??_LedSlFl
  8407  00AE  300B               	movlw	11
  8408  00AF  00C1               	movwf	??_LedSlFl+1
  8409  00B0  0841               	movf	??_LedSlFl+1,w
  8410  00B1  00F2               	movwf	___bmul@multiplicand
  8411  00B2  083F               	movf	LedSlFl@Led,w
  8412  00B3  2611               	fcall	___bmul
  8413  00B4  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8414  00B5  0086               	movwf	6
  8415  00B6  0187               	clrf	7
  8416  00B7  0140               	movlb	0	; select bank0
  8417  00B8  0840               	movf	??_LedSlFl,w
  8418  00B9  0081               	movwf	1
  8419                           
  8420                           ;executer.c: 240:                         LedBit[Led].Prog_State = 2;
  8421  00BA  3002               	movlw	2
  8422  00BB  00C0               	movwf	??_LedSlFl
  8423  00BC  300B               	movlw	11
  8424  00BD  00C1               	movwf	??_LedSlFl+1
  8425  00BE  0841               	movf	??_LedSlFl+1,w
  8426  00BF  00F2               	movwf	___bmul@multiplicand
  8427  00C0  083F               	movf	LedSlFl@Led,w
  8428  00C1  2611               	fcall	___bmul
  8429  00C2  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8430  00C3  0086               	movwf	6
  8431  00C4  0187               	clrf	7
  8432  00C5  0140               	movlb	0	; select bank0
  8433  00C6  0840               	movf	??_LedSlFl,w
  8434  00C7  0081               	movwf	1
  8435                           
  8436                           ;executer.c: 241:                         LedBit[Led].Iteration = 0;
  8437  00C8  300B               	movlw	11
  8438  00C9                     L2:
  8439  00C9  00C0               	movwf	??_LedSlFl
  8440  00CA  0840               	movf	??_LedSlFl,w
  8441  00CB  00F2               	movwf	___bmul@multiplicand
  8442  00CC  083F               	movf	LedSlFl@Led,w
  8443  00CD  2611               	fcall	___bmul
  8444  00CE  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8445  00CF  0086               	movwf	6
  8446  00D0  0187               	clrf	7
  8447  00D1  0181               	clrf	1
  8448  00D2                     l2652:
  8449                           
  8450                           ;executer.c: 243:                     ReturnVal = 1;
  8451  00D2  0140               	movlb	0	; select bank0
  8452  00D3  01C3               	clrf	LedSlFl@ReturnVal
  8453  00D4  0AC3               	incf	LedSlFl@ReturnVal,f
  8454                           
  8455                           ;executer.c: 244:             break;
  8456  00D5  29BC               	goto	l2682
  8457  00D6                     l2654:
  8458  00D6  3001               	movlw	1
  8459  00D7  00C0               	movwf	??_LedSlFl
  8460  00D8  300B               	movlw	11
  8461  00D9  00C1               	movwf	??_LedSlFl+1
  8462  00DA  0841               	movf	??_LedSlFl+1,w
  8463  00DB  00F2               	movwf	___bmul@multiplicand
  8464  00DC  083F               	movf	LedSlFl@Led,w
  8465  00DD  2611               	fcall	___bmul
  8466  00DE  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8467  00DF  0086               	movwf	6
  8468  00E0  0187               	clrf	7
  8469  00E1  0140               	movlb	0	; select bank0
  8470  00E2  0840               	movf	??_LedSlFl,w
  8471  00E3  0781               	addwf	1,f
  8472                           
  8473                           ;executer.c: 247:                     if(LedBit[Led].Iteration > LedBit[Led].Speed){
  8474  00E4  300B               	movlw	11
  8475  00E5  00C0               	movwf	??_LedSlFl
  8476  00E6  0840               	movf	??_LedSlFl,w
  8477  00E7  00F2               	movwf	___bmul@multiplicand
  8478  00E8  083F               	movf	LedSlFl@Led,w
  8479  00E9  2611               	fcall	___bmul
  8480  00EA  3EA4               	addlw	(low ((_LedBit| 0+4)))& (0+255)
  8481  00EB  0086               	movwf	6
  8482  00EC  0187               	clrf	7
  8483  00ED  300B               	movlw	11
  8484  00EE  0140               	movlb	0	; select bank0
  8485  00EF  00C1               	movwf	??_LedSlFl+1
  8486  00F0  0841               	movf	??_LedSlFl+1,w
  8487  00F1  00F2               	movwf	___bmul@multiplicand
  8488  00F2  083F               	movf	LedSlFl@Led,w
  8489  00F3  2611               	fcall	___bmul
  8490  00F4  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8491  00F5  0084               	movwf	4
  8492  00F6  0185               	clrf	5
  8493  00F7  0800               	movf	0,w
  8494  00F8  0201               	subwf	1,w
  8495  00F9  1803               	skipnc
  8496  00FA  291C               	goto	l2662
  8497                           
  8498                           ;executer.c: 248:                         LedBit[Led].Iteration = 0;
  8499  00FB  300B               	movlw	11
  8500  00FC  0140               	movlb	0	; select bank0
  8501  00FD  00C0               	movwf	??_LedSlFl
  8502  00FE  0840               	movf	??_LedSlFl,w
  8503  00FF  00F2               	movwf	___bmul@multiplicand
  8504  0100  083F               	movf	LedSlFl@Led,w
  8505  0101  2611               	fcall	___bmul
  8506  0102  3EA7               	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8507  0103  0086               	movwf	6
  8508  0104  0187               	clrf	7
  8509  0105  0181               	clrf	1
  8510                           
  8511                           ;executer.c: 249:                         LedBit[Led].Led -= LedBit[Led].StepSize;
  8512  0106  300B               	movlw	11
  8513  0107  0140               	movlb	0	; select bank0
  8514  0108  00C0               	movwf	??_LedSlFl
  8515  0109  0840               	movf	??_LedSlFl,w
  8516  010A  00F2               	movwf	___bmul@multiplicand
  8517  010B  083F               	movf	LedSlFl@Led,w
  8518  010C  2611               	fcall	___bmul
  8519  010D  3EA8               	addlw	(low ((_LedBit| 0+8)))& (0+255)
  8520  010E  0086               	movwf	6
  8521  010F  0187               	clrf	7
  8522  0110  300B               	movlw	11
  8523  0111  0140               	movlb	0	; select bank0
  8524  0112  00C1               	movwf	??_LedSlFl+1
  8525  0113  0841               	movf	??_LedSlFl+1,w
  8526  0114  00F2               	movwf	___bmul@multiplicand
  8527  0115  083F               	movf	LedSlFl@Led,w
  8528  0116  2611               	fcall	___bmul
  8529  0117  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8530  0118  0084               	movwf	4
  8531  0119  0185               	clrf	5
  8532  011A  0801               	movf	1,w
  8533  011B  0280               	subwf	0,f
  8534  011C                     l2662:
  8535                           
  8536                           ;executer.c: 251:                     if((LedBit[Led].nominal != MAX) && (LedBit[Led].Le
      +                          d <= LedBit[Led].nominal)){
  8537  011C  300B               	movlw	11
  8538  011D  0140               	movlb	0	; select bank0
  8539  011E  00C0               	movwf	??_LedSlFl
  8540  011F  0840               	movf	??_LedSlFl,w
  8541  0120  00F2               	movwf	___bmul@multiplicand
  8542  0121  083F               	movf	LedSlFl@Led,w
  8543  0122  2611               	fcall	___bmul
  8544  0123  3EA5               	addlw	(low ((_LedBit| 0+5)))& (0+255)
  8545  0124  0086               	movwf	6
  8546  0125  0187               	clrf	7
  8547  0126  30FE               	movlw	254
  8548  0127  0601               	xorwf	1,w
  8549  0128  1903               	btfsc	3,2
  8550  0129  295D               	goto	l2668
  8551  012A  300B               	movlw	11
  8552  012B  0140               	movlb	0	; select bank0
  8553  012C  00C0               	movwf	??_LedSlFl
  8554  012D  0840               	movf	??_LedSlFl,w
  8555  012E  00F2               	movwf	___bmul@multiplicand
  8556  012F  083F               	movf	LedSlFl@Led,w
  8557  0130  2611               	fcall	___bmul
  8558  0131  3EA5               	addlw	(low ((_LedBit| 0+5)))& (0+255)
  8559  0132  0086               	movwf	6
  8560  0133  0187               	clrf	7
  8561  0134  300B               	movlw	11
  8562  0135  0140               	movlb	0	; select bank0
  8563  0136  00C1               	movwf	??_LedSlFl+1
  8564  0137  0841               	movf	??_LedSlFl+1,w
  8565  0138  00F2               	movwf	___bmul@multiplicand
  8566  0139  083F               	movf	LedSlFl@Led,w
  8567  013A  2611               	fcall	___bmul
  8568  013B  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8569  013C  0084               	movwf	4
  8570  013D  0185               	clrf	5
  8571  013E  0800               	movf	0,w
  8572  013F  0201               	subwf	1,w
  8573  0140  1C03               	skipc
  8574  0141  295D               	goto	l2668
  8575                           
  8576                           ;executer.c: 252:                         LedBit[Led].Led = LedBit[Led].nominal;
  8577  0142  300B               	movlw	11
  8578  0143  0140               	movlb	0	; select bank0
  8579  0144  00C0               	movwf	??_LedSlFl
  8580  0145  0840               	movf	??_LedSlFl,w
  8581  0146  00F2               	movwf	___bmul@multiplicand
  8582  0147  083F               	movf	LedSlFl@Led,w
  8583  0148  2611               	fcall	___bmul
  8584  0149  3EA5               	addlw	(low ((_LedBit| 0+5)))& (0+255)
  8585  014A  0086               	movwf	6
  8586  014B  0187               	clrf	7
  8587  014C  0801               	movf	1,w
  8588  014D  0140               	movlb	0	; select bank0
  8589  014E  00C1               	movwf	??_LedSlFl+1
  8590  014F  300B               	movlw	11
  8591  0150  00C2               	movwf	??_LedSlFl+2
  8592  0151  0842               	movf	??_LedSlFl+2,w
  8593  0152  00F2               	movwf	___bmul@multiplicand
  8594  0153  083F               	movf	LedSlFl@Led,w
  8595  0154  2611               	fcall	___bmul
  8596  0155  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8597  0156  0086               	movwf	6
  8598  0157  0187               	clrf	7
  8599  0158  0140               	movlb	0	; select bank0
  8600  0159  0841               	movf	??_LedSlFl+1,w
  8601  015A  0081               	movwf	1
  8602                           
  8603                           ;executer.c: 253:                         LedBit[Led].Prog_State = 1;
  8604  015B  300B               	movlw	11
  8605  015C  2987               	goto	L4
  8606  015D                     l2668:	
  8607                           ;executer.c: 255:                     }
  8608                           
  8609                           ;executer.c: 254:                         LedBit[Led].Iteration = 0;
  8610                           
  8611  015D  300B               	movlw	11
  8612  015E  0140               	movlb	0	; select bank0
  8613  015F  00C0               	movwf	??_LedSlFl
  8614  0160  0840               	movf	??_LedSlFl,w
  8615  0161  00F2               	movwf	___bmul@multiplicand
  8616  0162  083F               	movf	LedSlFl@Led,w
  8617  0163  2611               	fcall	___bmul
  8618  0164  3EA5               	addlw	(low ((_LedBit| 0+5)))& (0+255)
  8619  0165  0086               	movwf	6
  8620  0166  0187               	clrf	7
  8621  0167  30FE               	movlw	254
  8622  0168  0601               	xorwf	1,w
  8623  0169  1D03               	btfss	3,2
  8624  016A  28D2               	goto	l2652
  8625  016B  300B               	movlw	11
  8626  016C  0140               	movlb	0	; select bank0
  8627  016D  00C0               	movwf	??_LedSlFl
  8628  016E  0840               	movf	??_LedSlFl,w
  8629  016F  00F2               	movwf	___bmul@multiplicand
  8630  0170  083F               	movf	LedSlFl@Led,w
  8631  0171  2611               	fcall	___bmul
  8632  0172  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8633  0173  0086               	movwf	6
  8634  0174  0187               	clrf	7
  8635  0175  3002               	movlw	2
  8636  0176  0201               	subwf	1,w
  8637  0177  1803               	skipnc
  8638  0178  28D2               	goto	l2652
  8639                           
  8640                           ;executer.c: 257:                         LedBit[Led].Led = MIN;
  8641  0179  300B               	movlw	11
  8642  017A  0140               	movlb	0	; select bank0
  8643  017B  00C0               	movwf	??_LedSlFl
  8644  017C  0840               	movf	??_LedSlFl,w
  8645  017D  00F2               	movwf	___bmul@multiplicand
  8646  017E  083F               	movf	LedSlFl@Led,w
  8647  017F  2611               	fcall	___bmul
  8648  0180  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8649  0181  0086               	movwf	6
  8650  0182  0187               	clrf	7
  8651  0183  0181               	clrf	1
  8652  0184  0A81               	incf	1,f
  8653                           
  8654                           ;executer.c: 258:                         LedBit[Led].Prog_State = 1;
  8655  0185  300B               	movlw	11
  8656  0186  0140               	movlb	0	; select bank0
  8657  0187                     L4:
  8658  0187  00C0               	movwf	??_LedSlFl
  8659  0188  0840               	movf	??_LedSlFl,w
  8660  0189  00F2               	movwf	___bmul@multiplicand
  8661  018A  083F               	movf	LedSlFl@Led,w
  8662  018B  2611               	fcall	___bmul
  8663  018C  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8664  018D  0086               	movwf	6
  8665  018E  0187               	clrf	7
  8666  018F  0181               	clrf	1
  8667  0190  0A81               	incf	1,f
  8668                           
  8669                           ;executer.c: 259:                         LedBit[Led].Iteration = 0;
  8670  0191  300B               	movlw	11
  8671  0192  0140               	movlb	0	; select bank0
  8672  0193  28C9               	goto	L2
  8673  0194                     l2676:
  8674  0194  300B               	movlw	11
  8675  0195  00C0               	movwf	??_LedSlFl
  8676  0196  0840               	movf	??_LedSlFl,w
  8677  0197  00F2               	movwf	___bmul@multiplicand
  8678  0198  083F               	movf	LedSlFl@Led,w
  8679  0199  2611               	fcall	___bmul
  8680  019A  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8681  019B  0086               	movwf	6
  8682  019C  0187               	clrf	7
  8683  019D  0181               	clrf	1
  8684                           
  8685                           ;executer.c: 265:         break;
  8686  019E  29BC               	goto	l2682
  8687  019F                     l2680:
  8688  019F  300B               	movlw	11
  8689  01A0  00C0               	movwf	??_LedSlFl
  8690  01A1  0840               	movf	??_LedSlFl,w
  8691  01A2  00F2               	movwf	___bmul@multiplicand
  8692  01A3  083F               	movf	LedSlFl@Led,w
  8693  01A4  2611               	fcall	___bmul
  8694  01A5  3EA6               	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8695  01A6  0086               	movwf	6
  8696  01A7  0187               	clrf	7
  8697  01A8  0801               	movf	1,w
  8698  01A9  0140               	movlb	0	; select bank0
  8699  01AA  00C1               	movwf	??_LedSlFl+1
  8700  01AB  01C2               	clrf	??_LedSlFl+2
  8701                           
  8702                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8703                           ; Switch size 1, requested type "simple"
  8704                           ; Number of cases is 1, Range of values is 0 to 0
  8705                           ; switch strategies available:
  8706                           ; Name         Instructions Cycles
  8707                           ; simple_byte            4     3 (average)
  8708                           ; direct_byte            8     6 (fixed)
  8709                           ; jumptable            260     6 (fixed)
  8710                           ;	Chosen strategy is simple_byte
  8711  01AC  0842               	movf	??_LedSlFl+2,w
  8712  01AD  3A00               	xorlw	0	; case 0
  8713  01AE  1903               	skipnz
  8714  01AF  29B1               	goto	l2898
  8715  01B0  2994               	goto	l2676
  8716  01B1                     l2898:
  8717                           
  8718                           ; Switch size 1, requested type "simple"
  8719                           ; Number of cases is 3, Range of values is 0 to 2
  8720                           ; switch strategies available:
  8721                           ; Name         Instructions Cycles
  8722                           ; simple_byte           10     6 (average)
  8723                           ; direct_byte           12     6 (fixed)
  8724                           ; jumptable            260     6 (fixed)
  8725                           ;	Chosen strategy is simple_byte
  8726  01B1  0841               	movf	??_LedSlFl+1,w
  8727  01B2  3A00               	xorlw	0	; case 0
  8728  01B3  1903               	skipnz
  8729  01B4  283C               	goto	l2640
  8730  01B5  3A01               	xorlw	1	; case 1
  8731  01B6  1903               	skipnz
  8732  01B7  2855               	goto	l2644
  8733  01B8  3A03               	xorlw	3	; case 2
  8734  01B9  1903               	skipnz
  8735  01BA  28D6               	goto	l2654
  8736  01BB  2994               	goto	l2676
  8737  01BC                     l2682:
  8738                           
  8739                           ;executer.c: 268:     CalcPwm(Led);
  8740  01BC  0140               	movlb	0	; select bank0
  8741  01BD  083F               	movf	LedSlFl@Led,w
  8742  01BE  2501               	fcall	_CalcPwm
  8743                           
  8744                           ;executer.c: 269:     return(ReturnVal);
  8745  01BF  0140               	movlb	0	; select bank0
  8746  01C0  0843               	movf	LedSlFl@ReturnVal,w
  8747  01C1  0008               	return
  8748  01C2                     __end_of_LedSlFl:
  8749                           
  8750                           	psect	text30
  8751  0501                     __ptext30:	
  8752 ;; *************** function _CalcPwm *****************
  8753 ;; Defined at:
  8754 ;;		line 310 in file "executer.c"
  8755 ;; Parameters:    Size  Location     Type
  8756 ;;  Led             1    wreg     unsigned char 
  8757 ;; Auto vars:     Size  Location     Type
  8758 ;;  Led             1    4[BANK0 ] unsigned char 
  8759 ;; Return value:  Size  Location     Type
  8760 ;;                  1    wreg      void 
  8761 ;; Registers used:
  8762 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8763 ;; Tracked objects:
  8764 ;;		On entry : 0/0
  8765 ;;		On exit  : 0/0
  8766 ;;		Unchanged: 0/0
  8767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8768 ;;      Params:         0       0       0       0
  8769 ;;      Locals:         0       1       0       0
  8770 ;;      Temps:          0       4       0       0
  8771 ;;      Totals:         0       5       0       0
  8772 ;;Total ram usage:        5 bytes
  8773 ;; Hardware stack levels used:    1
  8774 ;; Hardware stack levels required when called:    7
  8775 ;; This function calls:
  8776 ;;		_PWM1_LoadDutyValue
  8777 ;;		_PWM2_LoadDutyValue
  8778 ;;		_PWM3_LoadDutyValue
  8779 ;;		_PWM4_LoadDutyValue
  8780 ;;		_PWM5_LoadDutyValue
  8781 ;;		_PWM6_LoadDutyValue
  8782 ;;		___bmul
  8783 ;; This function is called by:
  8784 ;;		_LedOff
  8785 ;;		_LedNom
  8786 ;;		_LedBrake
  8787 ;;		_LedSlFl
  8788 ;;		_LedFlash
  8789 ;;		_LedMax
  8790 ;; This function uses a non-reentrant model
  8791 ;;
  8792                           
  8793                           
  8794                           ;psect for function _CalcPwm
  8795  0501                     _CalcPwm:
  8796                           
  8797                           ;incstack = 0
  8798                           ; Regs used in _CalcPwm: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8799                           ;CalcPwm@Led stored from wreg
  8800  0501  0140               	movlb	0	; select bank0
  8801  0502  00BE               	movwf	CalcPwm@Led
  8802                           
  8803                           ;executer.c: 311:     LedBit[Led].PWM((uint16_t)LedBit[Led].Led * 4);
  8804  0503  300B               	movlw	11
  8805  0504  00BA               	movwf	??_CalcPwm
  8806  0505  083A               	movf	??_CalcPwm,w
  8807  0506  00F2               	movwf	___bmul@multiplicand
  8808  0507  083E               	movf	CalcPwm@Led,w
  8809  0508  2611               	fcall	___bmul
  8810  0509  3EA1               	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8811  050A  0086               	movwf	6
  8812  050B  0187               	clrf	7
  8813  050C  0801               	movf	1,w
  8814  050D  0140               	movlb	0	; select bank0
  8815  050E  00BB               	movwf	??_CalcPwm+1
  8816  050F  01BC               	clrf	??_CalcPwm+2
  8817  0510  35BB               	lslf	??_CalcPwm+1,f
  8818  0511  0DBC               	rlf	??_CalcPwm+2,f
  8819  0512  35BB               	lslf	??_CalcPwm+1,f
  8820  0513  0DBC               	rlf	??_CalcPwm+2,f
  8821  0514  083B               	movf	??_CalcPwm+1,w
  8822  0515  00F6               	movwf	PWM1_LoadDutyValue@dutyValue
  8823  0516  083C               	movf	??_CalcPwm+2,w
  8824  0517  00F7               	movwf	PWM1_LoadDutyValue@dutyValue+1
  8825  0518  300B               	movlw	11
  8826  0519  00BD               	movwf	??_CalcPwm+3
  8827  051A  083D               	movf	??_CalcPwm+3,w
  8828  051B  00F2               	movwf	___bmul@multiplicand
  8829  051C  083E               	movf	CalcPwm@Led,w
  8830  051D  2611               	fcall	___bmul
  8831  051E  3EA9               	addlw	(low ((_LedBit| 0+9)))& (0+255)
  8832  051F  0086               	movwf	6
  8833  0520  0187               	clrf	7
  8834  0521  3F41               	moviw [1]fsr1
  8835  0522  008A               	movwf	10
  8836  0523  3F40               	moviw [0]fsr1
  8837  0524  000A               	callw
  8838  0525  3185               	pagesel	$
  8839  0526  0008               	return
  8840  0527                     __end_of_CalcPwm:
  8841                           
  8842                           	psect	text31
  8843  0611                     __ptext31:	
  8844 ;; *************** function ___bmul *****************
  8845 ;; Defined at:
  8846 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul8.c"
  8847 ;; Parameters:    Size  Location     Type
  8848 ;;  multiplier      1    wreg     unsigned char 
  8849 ;;  multiplicand    1    2[COMMON] unsigned char 
  8850 ;; Auto vars:     Size  Location     Type
  8851 ;;  multiplier      1    5[COMMON] unsigned char 
  8852 ;;  product         1    4[COMMON] unsigned char 
  8853 ;; Return value:  Size  Location     Type
  8854 ;;                  1    wreg      unsigned char 
  8855 ;; Registers used:
  8856 ;;		wreg, status,2, status,0
  8857 ;; Tracked objects:
  8858 ;;		On entry : 0/0
  8859 ;;		On exit  : 0/0
  8860 ;;		Unchanged: 0/0
  8861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8862 ;;      Params:         1       0       0       0
  8863 ;;      Locals:         2       0       0       0
  8864 ;;      Temps:          1       0       0       0
  8865 ;;      Totals:         4       0       0       0
  8866 ;;Total ram usage:        4 bytes
  8867 ;; Hardware stack levels used:    1
  8868 ;; Hardware stack levels required when called:    6
  8869 ;; This function calls:
  8870 ;;		Nothing
  8871 ;; This function is called by:
  8872 ;;		_EXECUTExEFFECT
  8873 ;;		_LedOff
  8874 ;;		_LedNom
  8875 ;;		_LedBrake
  8876 ;;		_LedSlFl
  8877 ;;		_LedFlash
  8878 ;;		_CalcPwm
  8879 ;;		_LedMax
  8880 ;; This function uses a non-reentrant model
  8881 ;;
  8882                           
  8883                           
  8884                           ;psect for function ___bmul
  8885  0611                     ___bmul:
  8886                           
  8887                           ;incstack = 0
  8888                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  8889                           ;___bmul@multiplier stored from wreg
  8890  0611  00F5               	movwf	___bmul@multiplier
  8891  0612  01F4               	clrf	___bmul@product
  8892  0613                     l2558:
  8893  0613  1C75               	btfss	___bmul@multiplier,0
  8894  0614  2E19               	goto	l2562
  8895  0615  0872               	movf	___bmul@multiplicand,w
  8896  0616  00F3               	movwf	??___bmul
  8897  0617  0873               	movf	??___bmul,w
  8898  0618  07F4               	addwf	___bmul@product,f
  8899  0619                     l2562:
  8900  0619  1003               	clrc
  8901  061A  0DF2               	rlf	___bmul@multiplicand,f
  8902  061B  1003               	clrc
  8903  061C  0CF5               	rrf	___bmul@multiplier,f
  8904  061D  0875               	movf	___bmul@multiplier,w
  8905  061E  1D03               	btfss	3,2
  8906  061F  2E13               	goto	l2558
  8907  0620  0874               	movf	___bmul@product,w
  8908  0621  0008               	return
  8909  0622                     __end_of___bmul:
  8910                           
  8911                           	psect	text32
  8912  0622                     __ptext32:	
  8913 ;; *************** function _PWM1_LoadDutyValue *****************
  8914 ;; Defined at:
  8915 ;;		line 80 in file "mcc_generated_files/pwm1.c"
  8916 ;; Parameters:    Size  Location     Type
  8917 ;;  dutyValue       2    6[COMMON] unsigned short 
  8918 ;; Auto vars:     Size  Location     Type
  8919 ;;		None
  8920 ;; Return value:  Size  Location     Type
  8921 ;;                  1    wreg      void 
  8922 ;; Registers used:
  8923 ;;		wreg, status,2
  8924 ;; Tracked objects:
  8925 ;;		On entry : 0/0
  8926 ;;		On exit  : 0/0
  8927 ;;		Unchanged: 0/0
  8928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8929 ;;      Params:         2       0       0       0
  8930 ;;      Locals:         0       0       0       0
  8931 ;;      Temps:          0       0       0       0
  8932 ;;      Totals:         2       0       0       0
  8933 ;;Total ram usage:        2 bytes
  8934 ;; Hardware stack levels used:    1
  8935 ;; Hardware stack levels required when called:    6
  8936 ;; This function calls:
  8937 ;;		Nothing
  8938 ;; This function is called by:
  8939 ;;		_CalcPwm
  8940 ;; This function uses a non-reentrant model
  8941 ;;
  8942                           
  8943                           
  8944                           ;psect for function _PWM1_LoadDutyValue
  8945  0622                     _PWM1_LoadDutyValue:
  8946                           
  8947                           ;mcc_generated_files/pwm1.c: 80: void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm1.c: 81: {;mcc_generated_files/pwm1.c: 82:     dutyValue &= 0x03FF;
  8948                           
  8949                           ;incstack = 0
  8950                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2]
  8951  0622  30FF               	movlw	255
  8952  0623  05F6               	andwf	PWM1_LoadDutyValue@dutyValue,f
  8953  0624  3003               	movlw	3
  8954  0625  05F7               	andwf	PWM1_LoadDutyValue@dutyValue+1,f
  8955                           
  8956                           ;mcc_generated_files/pwm1.c: 85:     if(CCP1CONbits.CCP1FMT)
  8957  0626  0146               	movlb	6	; select bank6
  8958  0627  1E0E               	btfss	14,4	;volatile
  8959  0628  2E2E               	goto	l2548
  8960                           
  8961                           ;mcc_generated_files/pwm1.c: 86:     {;mcc_generated_files/pwm1.c: 87:         dutyValue
      +                           <<= 6;
  8962  0629  3006               	movlw	6
  8963  062A                     u1145:
  8964  062A  35F6               	lslf	PWM1_LoadDutyValue@dutyValue,f
  8965  062B  0DF7               	rlf	PWM1_LoadDutyValue@dutyValue+1,f
  8966  062C  0B89               	decfsz	9,f
  8967  062D  2E2A               	goto	u1145
  8968  062E                     l2548:
  8969                           
  8970                           ;mcc_generated_files/pwm1.c: 88:         CCPR1H = dutyValue >> 8;
  8971  062E  0877               	movf	PWM1_LoadDutyValue@dutyValue+1,w
  8972  062F  008D               	movwf	13	;volatile
  8973                           
  8974                           ;mcc_generated_files/pwm1.c: 89:         CCPR1L = dutyValue;
  8975  0630  0876               	movf	PWM1_LoadDutyValue@dutyValue,w
  8976  0631  008C               	movwf	12	;volatile
  8977                           
  8978                           ;mcc_generated_files/pwm1.c: 90:     }
  8979  0632  0008               	return
  8980  0633                     __end_of_PWM1_LoadDutyValue:
  8981                           
  8982                           	psect	text33
  8983  0633                     __ptext33:	
  8984 ;; *************** function _PWM2_LoadDutyValue *****************
  8985 ;; Defined at:
  8986 ;;		line 80 in file "mcc_generated_files/pwm2.c"
  8987 ;; Parameters:    Size  Location     Type
  8988 ;;  dutyValue       2    6[COMMON] unsigned short 
  8989 ;; Auto vars:     Size  Location     Type
  8990 ;;		None
  8991 ;; Return value:  Size  Location     Type
  8992 ;;                  1    wreg      void 
  8993 ;; Registers used:
  8994 ;;		wreg, status,2
  8995 ;; Tracked objects:
  8996 ;;		On entry : 0/0
  8997 ;;		On exit  : 0/0
  8998 ;;		Unchanged: 0/0
  8999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9000 ;;      Params:         2       0       0       0
  9001 ;;      Locals:         0       0       0       0
  9002 ;;      Temps:          0       0       0       0
  9003 ;;      Totals:         2       0       0       0
  9004 ;;Total ram usage:        2 bytes
  9005 ;; Hardware stack levels used:    1
  9006 ;; Hardware stack levels required when called:    6
  9007 ;; This function calls:
  9008 ;;		Nothing
  9009 ;; This function is called by:
  9010 ;;		_CalcPwm
  9011 ;; This function uses a non-reentrant model
  9012 ;;
  9013                           
  9014                           
  9015                           ;psect for function _PWM2_LoadDutyValue
  9016  0633                     _PWM2_LoadDutyValue:
  9017                           
  9018                           ;mcc_generated_files/pwm2.c: 80: void PWM2_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm2.c: 81: {;mcc_generated_files/pwm2.c: 82:     dutyValue &= 0x03FF;
  9019                           
  9020                           ;incstack = 0
  9021                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2]
  9022  0633  30FF               	movlw	255
  9023  0634  05F6               	andwf	PWM2_LoadDutyValue@dutyValue,f
  9024  0635  3003               	movlw	3
  9025  0636  05F7               	andwf	PWM2_LoadDutyValue@dutyValue+1,f
  9026                           
  9027                           ;mcc_generated_files/pwm2.c: 85:     if(CCP2CONbits.CCP2FMT)
  9028  0637  0146               	movlb	6	; select bank6
  9029  0638  1E12               	btfss	18,4	;volatile
  9030  0639  2E3F               	goto	l2534
  9031                           
  9032                           ;mcc_generated_files/pwm2.c: 86:     {;mcc_generated_files/pwm2.c: 87:         dutyValue
      +                           <<= 6;
  9033  063A  3006               	movlw	6
  9034  063B                     u1125:
  9035  063B  35F6               	lslf	PWM2_LoadDutyValue@dutyValue,f
  9036  063C  0DF7               	rlf	PWM2_LoadDutyValue@dutyValue+1,f
  9037  063D  0B89               	decfsz	9,f
  9038  063E  2E3B               	goto	u1125
  9039  063F                     l2534:
  9040                           
  9041                           ;mcc_generated_files/pwm2.c: 88:         CCPR2H = dutyValue >> 8;
  9042  063F  0877               	movf	PWM2_LoadDutyValue@dutyValue+1,w
  9043  0640  0091               	movwf	17	;volatile
  9044                           
  9045                           ;mcc_generated_files/pwm2.c: 89:         CCPR2L = dutyValue;
  9046  0641  0876               	movf	PWM2_LoadDutyValue@dutyValue,w
  9047  0642  0090               	movwf	16	;volatile
  9048                           
  9049                           ;mcc_generated_files/pwm2.c: 90:     }
  9050  0643  0008               	return
  9051  0644                     __end_of_PWM2_LoadDutyValue:
  9052                           
  9053                           	psect	text34
  9054  0581                     __ptext34:	
  9055 ;; *************** function _PWM5_LoadDutyValue *****************
  9056 ;; Defined at:
  9057 ;;		line 72 in file "mcc_generated_files/pwm5.c"
  9058 ;; Parameters:    Size  Location     Type
  9059 ;;  dutyValue       2    6[COMMON] unsigned short 
  9060 ;; Auto vars:     Size  Location     Type
  9061 ;;		None
  9062 ;; Return value:  Size  Location     Type
  9063 ;;                  1    wreg      void 
  9064 ;; Registers used:
  9065 ;;		wreg, status,2, status,0
  9066 ;; Tracked objects:
  9067 ;;		On entry : 0/0
  9068 ;;		On exit  : 0/0
  9069 ;;		Unchanged: 0/0
  9070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9071 ;;      Params:         2       0       0       0
  9072 ;;      Locals:         0       0       0       0
  9073 ;;      Temps:          2       0       0       0
  9074 ;;      Totals:         4       0       0       0
  9075 ;;Total ram usage:        4 bytes
  9076 ;; Hardware stack levels used:    1
  9077 ;; Hardware stack levels required when called:    6
  9078 ;; This function calls:
  9079 ;;		Nothing
  9080 ;; This function is called by:
  9081 ;;		_CalcPwm
  9082 ;; This function uses a non-reentrant model
  9083 ;;
  9084                           
  9085                           
  9086                           ;psect for function _PWM5_LoadDutyValue
  9087  0581                     _PWM5_LoadDutyValue:
  9088                           
  9089                           ;mcc_generated_files/pwm5.c: 72:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 73:  {;mcc_generated_files/pwm5.c: 75:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9090                           
  9091                           ;incstack = 0
  9092                           ; Regs used in _PWM5_LoadDutyValue: [wreg+status,2+status,0]
  9093  0581  0877               	movf	PWM5_LoadDutyValue@dutyValue+1,w
  9094  0582  00F9               	movwf	??_PWM5_LoadDutyValue+1
  9095  0583  0876               	movf	PWM5_LoadDutyValue@dutyValue,w
  9096  0584  00F8               	movwf	??_PWM5_LoadDutyValue
  9097  0585  36F9               	lsrf	??_PWM5_LoadDutyValue+1,f
  9098  0586  0CF8               	rrf	??_PWM5_LoadDutyValue,f
  9099  0587  36F9               	lsrf	??_PWM5_LoadDutyValue+1,f
  9100  0588  0CF8               	rrf	??_PWM5_LoadDutyValue,f
  9101  0589  0878               	movf	??_PWM5_LoadDutyValue,w
  9102  058A  0146               	movlb	6	; select bank6
  9103  058B  009D               	movwf	29	;volatile
  9104                           
  9105                           ;mcc_generated_files/pwm5.c: 78:      PWM5DCL = (dutyValue & 0x0003)<<6;
  9106  058C  0876               	movf	PWM5_LoadDutyValue@dutyValue,w
  9107  058D  3903               	andlw	3
  9108  058E  00F8               	movwf	??_PWM5_LoadDutyValue
  9109  058F  3005               	movlw	5
  9110  0590                     u1105:
  9111  0590  35F8               	lslf	??_PWM5_LoadDutyValue,f
  9112  0591  3EFF               	addlw	-1
  9113  0592  1D03               	skipz
  9114  0593  2D90               	goto	u1105
  9115  0594  3578               	lslf	??_PWM5_LoadDutyValue,w
  9116  0595  009C               	movwf	28	;volatile
  9117  0596  0008               	return
  9118  0597                     __end_of_PWM5_LoadDutyValue:
  9119                           
  9120                           	psect	text35
  9121  0597                     __ptext35:	
  9122 ;; *************** function _PWM3_LoadDutyValue *****************
  9123 ;; Defined at:
  9124 ;;		line 72 in file "mcc_generated_files/pwm3.c"
  9125 ;; Parameters:    Size  Location     Type
  9126 ;;  dutyValue       2    6[COMMON] unsigned short 
  9127 ;; Auto vars:     Size  Location     Type
  9128 ;;		None
  9129 ;; Return value:  Size  Location     Type
  9130 ;;                  1    wreg      void 
  9131 ;; Registers used:
  9132 ;;		wreg, status,2, status,0
  9133 ;; Tracked objects:
  9134 ;;		On entry : 0/0
  9135 ;;		On exit  : 0/0
  9136 ;;		Unchanged: 0/0
  9137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9138 ;;      Params:         2       0       0       0
  9139 ;;      Locals:         0       0       0       0
  9140 ;;      Temps:          2       0       0       0
  9141 ;;      Totals:         4       0       0       0
  9142 ;;Total ram usage:        4 bytes
  9143 ;; Hardware stack levels used:    1
  9144 ;; Hardware stack levels required when called:    6
  9145 ;; This function calls:
  9146 ;;		Nothing
  9147 ;; This function is called by:
  9148 ;;		_CalcPwm
  9149 ;; This function uses a non-reentrant model
  9150 ;;
  9151                           
  9152                           
  9153                           ;psect for function _PWM3_LoadDutyValue
  9154  0597                     _PWM3_LoadDutyValue:
  9155                           
  9156                           ;mcc_generated_files/pwm3.c: 72:  void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm3.c: 73:  {;mcc_generated_files/pwm3.c: 75:      PWM3DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9157                           
  9158                           ;incstack = 0
  9159                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  9160  0597  0877               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  9161  0598  00F9               	movwf	??_PWM3_LoadDutyValue+1
  9162  0599  0876               	movf	PWM3_LoadDutyValue@dutyValue,w
  9163  059A  00F8               	movwf	??_PWM3_LoadDutyValue
  9164  059B  36F9               	lsrf	??_PWM3_LoadDutyValue+1,f
  9165  059C  0CF8               	rrf	??_PWM3_LoadDutyValue,f
  9166  059D  36F9               	lsrf	??_PWM3_LoadDutyValue+1,f
  9167  059E  0CF8               	rrf	??_PWM3_LoadDutyValue,f
  9168  059F  0878               	movf	??_PWM3_LoadDutyValue,w
  9169  05A0  0146               	movlb	6	; select bank6
  9170  05A1  0095               	movwf	21	;volatile
  9171                           
  9172                           ;mcc_generated_files/pwm3.c: 78:      PWM3DCL = (dutyValue & 0x0003)<<6;
  9173  05A2  0876               	movf	PWM3_LoadDutyValue@dutyValue,w
  9174  05A3  3903               	andlw	3
  9175  05A4  00F8               	movwf	??_PWM3_LoadDutyValue
  9176  05A5  3005               	movlw	5
  9177  05A6                     u1085:
  9178  05A6  35F8               	lslf	??_PWM3_LoadDutyValue,f
  9179  05A7  3EFF               	addlw	-1
  9180  05A8  1D03               	skipz
  9181  05A9  2DA6               	goto	u1085
  9182  05AA  3578               	lslf	??_PWM3_LoadDutyValue,w
  9183  05AB  0094               	movwf	20	;volatile
  9184  05AC  0008               	return
  9185  05AD                     __end_of_PWM3_LoadDutyValue:
  9186                           
  9187                           	psect	text36
  9188  05AD                     __ptext36:	
  9189 ;; *************** function _PWM4_LoadDutyValue *****************
  9190 ;; Defined at:
  9191 ;;		line 72 in file "mcc_generated_files/pwm4.c"
  9192 ;; Parameters:    Size  Location     Type
  9193 ;;  dutyValue       2    6[COMMON] unsigned short 
  9194 ;; Auto vars:     Size  Location     Type
  9195 ;;		None
  9196 ;; Return value:  Size  Location     Type
  9197 ;;                  1    wreg      void 
  9198 ;; Registers used:
  9199 ;;		wreg, status,2, status,0
  9200 ;; Tracked objects:
  9201 ;;		On entry : 0/0
  9202 ;;		On exit  : 0/0
  9203 ;;		Unchanged: 0/0
  9204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9205 ;;      Params:         2       0       0       0
  9206 ;;      Locals:         0       0       0       0
  9207 ;;      Temps:          2       0       0       0
  9208 ;;      Totals:         4       0       0       0
  9209 ;;Total ram usage:        4 bytes
  9210 ;; Hardware stack levels used:    1
  9211 ;; Hardware stack levels required when called:    6
  9212 ;; This function calls:
  9213 ;;		Nothing
  9214 ;; This function is called by:
  9215 ;;		_CalcPwm
  9216 ;; This function uses a non-reentrant model
  9217 ;;
  9218                           
  9219                           
  9220                           ;psect for function _PWM4_LoadDutyValue
  9221  05AD                     _PWM4_LoadDutyValue:
  9222                           
  9223                           ;mcc_generated_files/pwm4.c: 72:  void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm4.c: 73:  {;mcc_generated_files/pwm4.c: 75:      PWM4DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9224                           
  9225                           ;incstack = 0
  9226                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2+status,0]
  9227  05AD  0877               	movf	PWM4_LoadDutyValue@dutyValue+1,w
  9228  05AE  00F9               	movwf	??_PWM4_LoadDutyValue+1
  9229  05AF  0876               	movf	PWM4_LoadDutyValue@dutyValue,w
  9230  05B0  00F8               	movwf	??_PWM4_LoadDutyValue
  9231  05B1  36F9               	lsrf	??_PWM4_LoadDutyValue+1,f
  9232  05B2  0CF8               	rrf	??_PWM4_LoadDutyValue,f
  9233  05B3  36F9               	lsrf	??_PWM4_LoadDutyValue+1,f
  9234  05B4  0CF8               	rrf	??_PWM4_LoadDutyValue,f
  9235  05B5  0878               	movf	??_PWM4_LoadDutyValue,w
  9236  05B6  0146               	movlb	6	; select bank6
  9237  05B7  0099               	movwf	25	;volatile
  9238                           
  9239                           ;mcc_generated_files/pwm4.c: 78:      PWM4DCL = (dutyValue & 0x0003)<<6;
  9240  05B8  0876               	movf	PWM4_LoadDutyValue@dutyValue,w
  9241  05B9  3903               	andlw	3
  9242  05BA  00F8               	movwf	??_PWM4_LoadDutyValue
  9243  05BB  3005               	movlw	5
  9244  05BC                     u1075:
  9245  05BC  35F8               	lslf	??_PWM4_LoadDutyValue,f
  9246  05BD  3EFF               	addlw	-1
  9247  05BE  1D03               	skipz
  9248  05BF  2DBC               	goto	u1075
  9249  05C0  3578               	lslf	??_PWM4_LoadDutyValue,w
  9250  05C1  0098               	movwf	24	;volatile
  9251  05C2  0008               	return
  9252  05C3                     __end_of_PWM4_LoadDutyValue:
  9253                           
  9254                           	psect	text37
  9255  05C3                     __ptext37:	
  9256 ;; *************** function _PWM6_LoadDutyValue *****************
  9257 ;; Defined at:
  9258 ;;		line 72 in file "mcc_generated_files/pwm6.c"
  9259 ;; Parameters:    Size  Location     Type
  9260 ;;  dutyValue       2    6[COMMON] unsigned short 
  9261 ;; Auto vars:     Size  Location     Type
  9262 ;;		None
  9263 ;; Return value:  Size  Location     Type
  9264 ;;                  1    wreg      void 
  9265 ;; Registers used:
  9266 ;;		wreg, status,2, status,0
  9267 ;; Tracked objects:
  9268 ;;		On entry : 0/0
  9269 ;;		On exit  : 0/0
  9270 ;;		Unchanged: 0/0
  9271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9272 ;;      Params:         2       0       0       0
  9273 ;;      Locals:         0       0       0       0
  9274 ;;      Temps:          2       0       0       0
  9275 ;;      Totals:         4       0       0       0
  9276 ;;Total ram usage:        4 bytes
  9277 ;; Hardware stack levels used:    1
  9278 ;; Hardware stack levels required when called:    6
  9279 ;; This function calls:
  9280 ;;		Nothing
  9281 ;; This function is called by:
  9282 ;;		_CalcPwm
  9283 ;; This function uses a non-reentrant model
  9284 ;;
  9285                           
  9286                           
  9287                           ;psect for function _PWM6_LoadDutyValue
  9288  05C3                     _PWM6_LoadDutyValue:
  9289                           
  9290                           ;mcc_generated_files/pwm6.c: 72:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 73:  {;mcc_generated_files/pwm6.c: 75:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9291                           
  9292                           ;incstack = 0
  9293                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
  9294  05C3  0877               	movf	PWM6_LoadDutyValue@dutyValue+1,w
  9295  05C4  00F9               	movwf	??_PWM6_LoadDutyValue+1
  9296  05C5  0876               	movf	PWM6_LoadDutyValue@dutyValue,w
  9297  05C6  00F8               	movwf	??_PWM6_LoadDutyValue
  9298  05C7  36F9               	lsrf	??_PWM6_LoadDutyValue+1,f
  9299  05C8  0CF8               	rrf	??_PWM6_LoadDutyValue,f
  9300  05C9  36F9               	lsrf	??_PWM6_LoadDutyValue+1,f
  9301  05CA  0CF8               	rrf	??_PWM6_LoadDutyValue,f
  9302  05CB  0878               	movf	??_PWM6_LoadDutyValue,w
  9303  05CC  0147               	movlb	7	; select bank7
  9304  05CD  008D               	movwf	13	;volatile
  9305                           
  9306                           ;mcc_generated_files/pwm6.c: 78:      PWM6DCL = (dutyValue & 0x0003)<<6;
  9307  05CE  0876               	movf	PWM6_LoadDutyValue@dutyValue,w
  9308  05CF  3903               	andlw	3
  9309  05D0  00F8               	movwf	??_PWM6_LoadDutyValue
  9310  05D1  3005               	movlw	5
  9311  05D2                     u1095:
  9312  05D2  35F8               	lslf	??_PWM6_LoadDutyValue,f
  9313  05D3  3EFF               	addlw	-1
  9314  05D4  1D03               	skipz
  9315  05D5  2DD2               	goto	u1095
  9316  05D6  3578               	lslf	??_PWM6_LoadDutyValue,w
  9317  05D7  008C               	movwf	12	;volatile
  9318  05D8  0008               	return
  9319  05D9                     __end_of_PWM6_LoadDutyValue:
  9320                           
  9321                           	psect	text38
  9322  0527                     __ptext38:	
  9323 ;; *************** function _BATTxPROTECT *****************
  9324 ;; Defined at:
  9325 ;;		line 47 in file "executer.c"
  9326 ;; Parameters:    Size  Location     Type
  9327 ;;		None
  9328 ;; Auto vars:     Size  Location     Type
  9329 ;;		None
  9330 ;; Return value:  Size  Location     Type
  9331 ;;                  1    wreg      void 
  9332 ;; Registers used:
  9333 ;;		wreg
  9334 ;; Tracked objects:
  9335 ;;		On entry : 0/0
  9336 ;;		On exit  : 0/0
  9337 ;;		Unchanged: 0/0
  9338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9339 ;;      Params:         0       0       0       0
  9340 ;;      Locals:         0       0       0       0
  9341 ;;      Temps:          1       0       0       0
  9342 ;;      Totals:         1       0       0       0
  9343 ;;Total ram usage:        1 bytes
  9344 ;; Hardware stack levels used:    1
  9345 ;; Hardware stack levels required when called:    6
  9346 ;; This function calls:
  9347 ;;		Nothing
  9348 ;; This function is called by:
  9349 ;;		_main
  9350 ;; This function uses a non-reentrant model
  9351 ;;
  9352                           
  9353                           
  9354                           ;psect for function _BATTxPROTECT
  9355  0527                     _BATTxPROTECT:
  9356                           
  9357                           ;incstack = 0
  9358                           ; Regs used in _BATTxPROTECT: [wreg]
  9359                           ;executer.c: 49:     do { LATAbits.LATA2 = 0; } while(0);
  9360  0527  0140               	movlb	0	; select bank0
  9361  0528  1118               	bcf	24,2	;volatile
  9362                           
  9363                           ;executer.c: 51:     do { TRISAbits.TRISA0 = 1; } while(0);
  9364  0529  1412               	bsf	18,0	;volatile
  9365                           
  9366                           ;executer.c: 53:     LedBit[LedBackLeft].Prog = LedOff;
  9367  052A  30D0               	movlw	low _LedOff
  9368  052B  0141               	movlb	1	; select bank1
  9369  052C  00B8               	movwf	(low ((_LedBit| 0+24)))^(0+128)
  9370  052D  3004               	movlw	high _LedOff
  9371  052E  00B9               	movwf	((low ((_LedBit| 0+24)))^(0+128)+1)
  9372                           
  9373                           ;executer.c: 57:     LedBit[LedBackRight].Prog = LedOff;
  9374  052F  30D0               	movlw	low _LedOff
  9375  0530  00C3               	movwf	(low ((_LedBit| 0+35)))^(0+128)
  9376  0531  3004               	movlw	high _LedOff
  9377  0532  00C4               	movwf	((low ((_LedBit| 0+35)))^(0+128)+1)
  9378                           
  9379                           ;executer.c: 61:     LedBit[LedFlashLeft].Prog = LedFlash;
  9380  0533  30C2               	movlw	low _LedFlash
  9381  0534  00A2               	movwf	(low ((_LedBit| 0+2)))^(0+128)
  9382  0535  3001               	movlw	high _LedFlash
  9383  0536  00A3               	movwf	((low ((_LedBit| 0+2)))^(0+128)+1)
  9384                           
  9385                           ;executer.c: 62:     LedBit[LedFlashLeft].Led = MAX;
  9386  0537  30FE               	movlw	254
  9387  0538  00F2               	movwf	??_BATTxPROTECT
  9388  0539  0872               	movf	??_BATTxPROTECT,w
  9389  053A  00A1               	movwf	(_LedBit^(0+128)+1)
  9390                           
  9391                           ;executer.c: 63:     LedBit[LedFlashLeft].Speed = 10;
  9392  053B  300A               	movlw	10
  9393  053C  00F2               	movwf	??_BATTxPROTECT
  9394  053D  0872               	movf	??_BATTxPROTECT,w
  9395  053E  00A4               	movwf	(_LedBit^(0+128)+4)
  9396                           
  9397                           ;executer.c: 65:     LedBit[LedFlashRight].Prog = LedOff;
  9398  053F  30D0               	movlw	low _LedOff
  9399  0540  00AD               	movwf	(low ((_LedBit| 0+13)))^(0+128)
  9400  0541  3004               	movlw	high _LedOff
  9401  0542  00AE               	movwf	((low ((_LedBit| 0+13)))^(0+128)+1)
  9402                           
  9403                           ;executer.c: 69:     LedBit[LedFrontLeft].Prog = LedOff;
  9404  0543  30D0               	movlw	low _LedOff
  9405  0544  00CE               	movwf	(low ((_LedBit| 0+46)))^(0+128)
  9406  0545  3004               	movlw	high _LedOff
  9407  0546  00CF               	movwf	((low ((_LedBit| 0+46)))^(0+128)+1)
  9408                           
  9409                           ;executer.c: 73:     LedBit[LedFrontRight].Prog = LedOff;
  9410  0547  30D0               	movlw	low _LedOff
  9411  0548  00D9               	movwf	(low ((_LedBit| 0+57)))^(0+128)
  9412  0549  3004               	movlw	high _LedOff
  9413  054A  00DA               	movwf	((low ((_LedBit| 0+57)))^(0+128)+1)
  9414  054B  0008               	return
  9415  054C                     __end_of_BATTxPROTECT:
  9416                           
  9417                           	psect	text39
  9418  074B                     __ptext39:	
  9419 ;; *************** function _ADC_StartConversion *****************
  9420 ;; Defined at:
  9421 ;;		line 96 in file "mcc_generated_files/adc.c"
  9422 ;; Parameters:    Size  Location     Type
  9423 ;;		None
  9424 ;; Auto vars:     Size  Location     Type
  9425 ;;		None
  9426 ;; Return value:  Size  Location     Type
  9427 ;;                  1    wreg      void 
  9428 ;; Registers used:
  9429 ;;		None
  9430 ;; Tracked objects:
  9431 ;;		On entry : 0/0
  9432 ;;		On exit  : 0/0
  9433 ;;		Unchanged: 0/0
  9434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9435 ;;      Params:         0       0       0       0
  9436 ;;      Locals:         0       0       0       0
  9437 ;;      Temps:          0       0       0       0
  9438 ;;      Totals:         0       0       0       0
  9439 ;;Total ram usage:        0 bytes
  9440 ;; Hardware stack levels used:    1
  9441 ;; Hardware stack levels required when called:    6
  9442 ;; This function calls:
  9443 ;;		Nothing
  9444 ;; This function is called by:
  9445 ;;		_main
  9446 ;; This function uses a non-reentrant model
  9447 ;;
  9448                           
  9449                           
  9450                           ;psect for function _ADC_StartConversion
  9451  074B                     _ADC_StartConversion:
  9452                           
  9453                           ;mcc_generated_files/adc.c: 99:     ADCON0bits.GOnDONE = 1;
  9454                           
  9455                           ;incstack = 0
  9456                           ; Regs used in _ADC_StartConversion: []
  9457  074B  0141               	movlb	1	; select bank1
  9458  074C  149D               	bsf	29,1	;volatile
  9459  074D  0008               	return
  9460  074E                     __end_of_ADC_StartConversion:
  9461                           
  9462                           	psect	text40
  9463  069A                     __ptext40:	
  9464 ;; *************** function _ADC_SelectChannel *****************
  9465 ;; Defined at:
  9466 ;;		line 88 in file "mcc_generated_files/adc.c"
  9467 ;; Parameters:    Size  Location     Type
  9468 ;;  channel         1    wreg     enum E6234
  9469 ;; Auto vars:     Size  Location     Type
  9470 ;;  channel         1    3[COMMON] enum E6234
  9471 ;; Return value:  Size  Location     Type
  9472 ;;                  1    wreg      void 
  9473 ;; Registers used:
  9474 ;;		wreg, status,2, status,0
  9475 ;; Tracked objects:
  9476 ;;		On entry : 0/0
  9477 ;;		On exit  : 0/0
  9478 ;;		Unchanged: 0/0
  9479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9480 ;;      Params:         0       0       0       0
  9481 ;;      Locals:         1       0       0       0
  9482 ;;      Temps:          1       0       0       0
  9483 ;;      Totals:         2       0       0       0
  9484 ;;Total ram usage:        2 bytes
  9485 ;; Hardware stack levels used:    1
  9486 ;; Hardware stack levels required when called:    6
  9487 ;; This function calls:
  9488 ;;		Nothing
  9489 ;; This function is called by:
  9490 ;;		_main
  9491 ;; This function uses a non-reentrant model
  9492 ;;
  9493                           
  9494                           
  9495                           ;psect for function _ADC_SelectChannel
  9496  069A                     _ADC_SelectChannel:
  9497                           
  9498                           ;incstack = 0
  9499                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
  9500                           ;ADC_SelectChannel@channel stored from wreg
  9501  069A  00F3               	movwf	ADC_SelectChannel@channel
  9502                           
  9503                           ;mcc_generated_files/adc.c: 88: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 89: {;mcc_generated_files/adc.c: 91:     ADCON0bits.CHS = channel;
  9504  069B  0873               	movf	ADC_SelectChannel@channel,w
  9505  069C  00F2               	movwf	??_ADC_SelectChannel
  9506  069D  0DF2               	rlf	??_ADC_SelectChannel,f
  9507  069E  0DF2               	rlf	??_ADC_SelectChannel,f
  9508  069F  0141               	movlb	1	; select bank1
  9509  06A0  081D               	movf	29,w	;volatile
  9510  06A1  0672               	xorwf	??_ADC_SelectChannel,w
  9511  06A2  3903               	andlw	-253
  9512  06A3  0672               	xorwf	??_ADC_SelectChannel,w
  9513  06A4  009D               	movwf	29	;volatile
  9514                           
  9515                           ;mcc_generated_files/adc.c: 93:     ADCON0bits.ADON = 1;
  9516  06A5  141D               	bsf	29,0	;volatile
  9517  06A6  0008               	return
  9518  06A7                     __end_of_ADC_SelectChannel:
  9519                           
  9520                           	psect	text41
  9521  0703                     __ptext41:	
  9522 ;; *************** function _ADC_IsConversionDone *****************
  9523 ;; Defined at:
  9524 ;;		line 103 in file "mcc_generated_files/adc.c"
  9525 ;; Parameters:    Size  Location     Type
  9526 ;;		None
  9527 ;; Auto vars:     Size  Location     Type
  9528 ;;		None
  9529 ;; Return value:  Size  Location     Type
  9530 ;;                  1    wreg      _Bool 
  9531 ;; Registers used:
  9532 ;;		wreg, status,0
  9533 ;; Tracked objects:
  9534 ;;		On entry : 0/0
  9535 ;;		On exit  : 0/0
  9536 ;;		Unchanged: 0/0
  9537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9538 ;;      Params:         0       0       0       0
  9539 ;;      Locals:         0       0       0       0
  9540 ;;      Temps:          0       0       0       0
  9541 ;;      Totals:         0       0       0       0
  9542 ;;Total ram usage:        0 bytes
  9543 ;; Hardware stack levels used:    1
  9544 ;; Hardware stack levels required when called:    6
  9545 ;; This function calls:
  9546 ;;		Nothing
  9547 ;; This function is called by:
  9548 ;;		_main
  9549 ;; This function uses a non-reentrant model
  9550 ;;
  9551                           
  9552                           
  9553                           ;psect for function _ADC_IsConversionDone
  9554  0703                     _ADC_IsConversionDone:
  9555                           
  9556                           ;mcc_generated_files/adc.c: 106:    return ((_Bool)(!ADCON0bits.GOnDONE));
  9557                           
  9558                           ;incstack = 0
  9559                           ; Regs used in _ADC_IsConversionDone: [wreg+status,0]
  9560  0703  1003               	clrc
  9561  0704  0141               	movlb	1	; select bank1
  9562  0705  1C9D               	btfss	29,1	;volatile
  9563  0706  1403               	setc
  9564  0707  3000               	movlw	0
  9565  0708  3D09               	addwfc	9,w
  9566  0709  0008               	return
  9567  070A                     __end_of_ADC_IsConversionDone:
  9568                           
  9569                           	psect	text42
  9570  072F                     __ptext42:	
  9571 ;; *************** function _ADC_GetConversionResult *****************
  9572 ;; Defined at:
  9573 ;;		line 109 in file "mcc_generated_files/adc.c"
  9574 ;; Parameters:    Size  Location     Type
  9575 ;;		None
  9576 ;; Auto vars:     Size  Location     Type
  9577 ;;		None
  9578 ;; Return value:  Size  Location     Type
  9579 ;;                  2    2[COMMON] unsigned short 
  9580 ;; Registers used:
  9581 ;;		wreg
  9582 ;; Tracked objects:
  9583 ;;		On entry : 0/0
  9584 ;;		On exit  : 0/0
  9585 ;;		Unchanged: 0/0
  9586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9587 ;;      Params:         2       0       0       0
  9588 ;;      Locals:         0       0       0       0
  9589 ;;      Temps:          0       0       0       0
  9590 ;;      Totals:         2       0       0       0
  9591 ;;Total ram usage:        2 bytes
  9592 ;; Hardware stack levels used:    1
  9593 ;; Hardware stack levels required when called:    6
  9594 ;; This function calls:
  9595 ;;		Nothing
  9596 ;; This function is called by:
  9597 ;;		_main
  9598 ;; This function uses a non-reentrant model
  9599 ;;
  9600                           
  9601                           
  9602                           ;psect for function _ADC_GetConversionResult
  9603  072F                     _ADC_GetConversionResult:
  9604                           
  9605                           ;mcc_generated_files/adc.c: 112:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  9606                           
  9607                           ;incstack = 0
  9608                           ; Regs used in _ADC_GetConversionResult: [wreg]
  9609  072F  0141               	movlb	1	; select bank1
  9610  0730  081C               	movf	28,w	;volatile
  9611  0731  00F3               	movwf	?_ADC_GetConversionResult+1
  9612  0732  081B               	movf	27,w	;volatile
  9613  0733  00F2               	movwf	?_ADC_GetConversionResult
  9614  0734  0008               	return
  9615  0735                     __end_of_ADC_GetConversionResult:
  9616                           
  9617                           	psect	intentry
  9618  0004                     __pintentry:	
  9619 ;; *************** function _INTERRUPT_InterruptManager *****************
  9620 ;; Defined at:
  9621 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9622 ;; Parameters:    Size  Location     Type
  9623 ;;		None
  9624 ;; Auto vars:     Size  Location     Type
  9625 ;;		None
  9626 ;; Return value:  Size  Location     Type
  9627 ;;                  1    wreg      void 
  9628 ;; Registers used:
  9629 ;;		wreg, status,2, status,0, pclath, cstack
  9630 ;; Tracked objects:
  9631 ;;		On entry : 0/0
  9632 ;;		On exit  : 0/0
  9633 ;;		Unchanged: 0/0
  9634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9635 ;;      Params:         0       0       0       0
  9636 ;;      Locals:         0       0       0       0
  9637 ;;      Temps:          0       0       0       0
  9638 ;;      Totals:         0       0       0       0
  9639 ;;Total ram usage:        0 bytes
  9640 ;; Hardware stack levels used:    1
  9641 ;; Hardware stack levels required when called:    5
  9642 ;; This function calls:
  9643 ;;		_PIN_MANAGER_IOC
  9644 ;;		_TMR0_ISR
  9645 ;;		_TMR1_ISR
  9646 ;; This function is called by:
  9647 ;;		Interrupt level 1
  9648 ;; This function uses a non-reentrant model
  9649 ;;
  9650                           
  9651  0004                     _INTERRUPT_InterruptManager:
  9652                           
  9653                           ;incstack = 0
  9654  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  9655                           
  9656                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  9657  0005  3180               	pagesel	$
  9658                           
  9659                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
  9660  0006  014E               	movlb	14	; select bank14
  9661  0007  1A96               	btfsc	22,5	;volatile
  9662  0008  1E8C               	btfss	12,5	;volatile
  9663  0009  280C               	goto	i1l365
  9664                           
  9665                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  9666  000A  25FF               	fcall	_TMR0_ISR
  9667                           
  9668                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  9669  000B  2817               	goto	i1l373
  9670  000C                     i1l365:	
  9671                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.IOCIE == 1 && PIR0bit
      +                          s.IOCIF == 1)
  9672                           
  9673  000C  1A16               	btfsc	22,4	;volatile
  9674  000D  1E0C               	btfss	12,4	;volatile
  9675  000E  2811               	goto	i1l367
  9676                           
  9677                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         PIN_MANAGER_IOC();
  9678  000F  2735               	fcall	_PIN_MANAGER_IOC
  9679                           
  9680                           ;mcc_generated_files/interrupt_manager.c: 62:     }
  9681  0010  2817               	goto	i1l373
  9682  0011                     i1l367:	
  9683                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
  9684                           
  9685  0011  1B0B               	btfsc	11,6	;volatile
  9686                           
  9687                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
  9688  0012  1C1A               	btfss	26,0	;volatile
  9689  0013  2817               	goto	i1l373
  9690  0014  1C10               	btfss	16,0	;volatile
  9691  0015  2817               	goto	i1l373
  9692                           
  9693                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR1_ISR();
  9694  0016  25EC               	fcall	_TMR1_ISR
  9695  0017                     i1l373:	
  9696                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  9697                           
  9698  0017  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9699  0018  0009               	retfie
  9700  0019                     __end_of_INTERRUPT_InterruptManager:
  9701                           
  9702                           	psect	text44
  9703  05EC                     __ptext44:	
  9704 ;; *************** function _TMR1_ISR *****************
  9705 ;; Defined at:
  9706 ;;		line 164 in file "mcc_generated_files/tmr1.c"
  9707 ;; Parameters:    Size  Location     Type
  9708 ;;		None
  9709 ;; Auto vars:     Size  Location     Type
  9710 ;;		None
  9711 ;; Return value:  Size  Location     Type
  9712 ;;                  1    wreg      void 
  9713 ;; Registers used:
  9714 ;;		wreg, status,2, status,0, pclath, cstack
  9715 ;; Tracked objects:
  9716 ;;		On entry : 0/0
  9717 ;;		On exit  : 0/0
  9718 ;;		Unchanged: 0/0
  9719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9720 ;;      Params:         0       0       0       0
  9721 ;;      Locals:         0       0       0       0
  9722 ;;      Temps:          0       0       0       0
  9723 ;;      Totals:         0       0       0       0
  9724 ;;Total ram usage:        0 bytes
  9725 ;; Hardware stack levels used:    1
  9726 ;; Hardware stack levels required when called:    1
  9727 ;; This function calls:
  9728 ;;		Absolute function
  9729 ;;		_TMR1_DefaultInterruptHandler
  9730 ;;		_TMR1_INT
  9731 ;;		_TMR1_WriteTimer
  9732 ;; This function is called by:
  9733 ;;		_INTERRUPT_InterruptManager
  9734 ;; This function uses a non-reentrant model
  9735 ;;
  9736                           
  9737                           
  9738                           ;psect for function _TMR1_ISR
  9739  05EC                     _TMR1_ISR:
  9740                           
  9741                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
  9742                           
  9743                           ;incstack = 0
  9744                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  9745  05EC  014E               	movlb	14	; select bank14
  9746  05ED  1010               	bcf	16,0	;volatile
  9747                           
  9748                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
  9749  05EE  0140               	movlb	0	; select bank0
  9750  05EF  0829               	movf	_timer1ReloadVal+1,w	;volatile
  9751  05F0  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  9752  05F1  0828               	movf	_timer1ReloadVal,w	;volatile
  9753  05F2  00F0               	movwf	TMR1_WriteTimer@timerVal
  9754  05F3  2663               	fcall	_TMR1_WriteTimer
  9755                           
  9756                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
  9757  05F4  0140               	movlb	0	; select bank0
  9758  05F5  0826               	movf	_TMR1_InterruptHandler,w
  9759  05F6  0427               	iorwf	_TMR1_InterruptHandler+1,w
  9760  05F7  1903               	btfsc	3,2
  9761  05F8  0008               	return
  9762                           
  9763                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
  9764  05F9  0827               	movf	_TMR1_InterruptHandler+1,w
  9765  05FA  008A               	movwf	10
  9766  05FB  0826               	movf	_TMR1_InterruptHandler,w
  9767  05FC  000A               	callw
  9768  05FD  3185               	pagesel	$
  9769  05FE  0008               	return
  9770  05FF                     __end_of_TMR1_ISR:
  9771                           
  9772                           	psect	text45
  9773  074E                     __ptext45:	
  9774 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  9775 ;; Defined at:
  9776 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  9777 ;; Parameters:    Size  Location     Type
  9778 ;;		None
  9779 ;; Auto vars:     Size  Location     Type
  9780 ;;		None
  9781 ;; Return value:  Size  Location     Type
  9782 ;;                  1    wreg      void 
  9783 ;; Registers used:
  9784 ;;		None
  9785 ;; Tracked objects:
  9786 ;;		On entry : 0/0
  9787 ;;		On exit  : 0/0
  9788 ;;		Unchanged: 0/0
  9789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9790 ;;      Params:         0       0       0       0
  9791 ;;      Locals:         0       0       0       0
  9792 ;;      Temps:          0       0       0       0
  9793 ;;      Totals:         0       0       0       0
  9794 ;;Total ram usage:        0 bytes
  9795 ;; Hardware stack levels used:    1
  9796 ;; This function calls:
  9797 ;;		Nothing
  9798 ;; This function is called by:
  9799 ;;		_TMR1_Initialize
  9800 ;;		_TMR1_ISR
  9801 ;; This function uses a non-reentrant model
  9802 ;;
  9803                           
  9804                           
  9805                           ;psect for function _TMR1_DefaultInterruptHandler
  9806  074E                     _TMR1_DefaultInterruptHandler:
  9807                           
  9808                           ;incstack = 0
  9809                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  9810  074E  0008               	return
  9811  074F                     __end_of_TMR1_DefaultInterruptHandler:
  9812                           
  9813                           	psect	text46
  9814  0743                     __ptext46:	
  9815 ;; *************** function _TMR1_INT *****************
  9816 ;; Defined at:
  9817 ;;		line 170 in file "Main.c"
  9818 ;; Parameters:    Size  Location     Type
  9819 ;;		None
  9820 ;; Auto vars:     Size  Location     Type
  9821 ;;		None
  9822 ;; Return value:  Size  Location     Type
  9823 ;;                  1    wreg      void 
  9824 ;; Registers used:
  9825 ;;		None
  9826 ;; Tracked objects:
  9827 ;;		On entry : 0/0
  9828 ;;		On exit  : 0/0
  9829 ;;		Unchanged: 0/0
  9830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9831 ;;      Params:         0       0       0       0
  9832 ;;      Locals:         0       0       0       0
  9833 ;;      Temps:          0       0       0       0
  9834 ;;      Totals:         0       0       0       0
  9835 ;;Total ram usage:        0 bytes
  9836 ;; Hardware stack levels used:    1
  9837 ;; This function calls:
  9838 ;;		Nothing
  9839 ;; This function is called by:
  9840 ;;		_main
  9841 ;;		_TMR1_ISR
  9842 ;; This function uses a non-reentrant model
  9843 ;;
  9844                           
  9845                           
  9846                           ;psect for function _TMR1_INT
  9847  0743                     _TMR1_INT:
  9848                           
  9849                           ;Main.c: 172:     UpdateVbatt = 1;
  9850                           
  9851                           ;incstack = 0
  9852                           ; Regs used in _TMR1_INT: []
  9853  0743  0140               	movlb	0	; select bank0
  9854  0744  01B3               	clrf	_UpdateVbatt
  9855  0745  0AB3               	incf	_UpdateVbatt,f
  9856  0746  0008               	return
  9857  0747                     __end_of_TMR1_INT:
  9858                           
  9859                           	psect	text47
  9860  05FF                     __ptext47:	
  9861 ;; *************** function _TMR0_ISR *****************
  9862 ;; Defined at:
  9863 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  9864 ;; Parameters:    Size  Location     Type
  9865 ;;		None
  9866 ;; Auto vars:     Size  Location     Type
  9867 ;;		None
  9868 ;; Return value:  Size  Location     Type
  9869 ;;                  1    wreg      void 
  9870 ;; Registers used:
  9871 ;;		wreg, status,2, status,0, pclath, cstack
  9872 ;; Tracked objects:
  9873 ;;		On entry : 0/0
  9874 ;;		On exit  : 0/0
  9875 ;;		Unchanged: 0/0
  9876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9877 ;;      Params:         0       0       0       0
  9878 ;;      Locals:         0       0       0       0
  9879 ;;      Temps:          0       0       0       0
  9880 ;;      Totals:         0       0       0       0
  9881 ;;Total ram usage:        0 bytes
  9882 ;; Hardware stack levels used:    1
  9883 ;; Hardware stack levels required when called:    1
  9884 ;; This function calls:
  9885 ;;		Absolute function
  9886 ;;		_TMR0_DefaultInterruptHandler
  9887 ;;		_TMR0_INT
  9888 ;; This function is called by:
  9889 ;;		_INTERRUPT_InterruptManager
  9890 ;; This function uses a non-reentrant model
  9891 ;;
  9892                           
  9893                           
  9894                           ;psect for function _TMR0_ISR
  9895  05FF                     _TMR0_ISR:
  9896                           
  9897                           ;mcc_generated_files/tmr0.c: 137:     PIR0bits.TMR0IF = 0;
  9898                           
  9899                           ;incstack = 0
  9900                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  9901  05FF  014E               	movlb	14	; select bank14
  9902  0600  128C               	bcf	12,5	;volatile
  9903                           
  9904                           ;mcc_generated_files/tmr0.c: 139:     TMR0H = timer0ReloadVal16bit >> 8;
  9905  0601  087B               	movf	_timer0ReloadVal16bit+1,w	;volatile
  9906  0602  014B               	movlb	11	; select bank11
  9907  0603  009D               	movwf	29	;volatile
  9908                           
  9909                           ;mcc_generated_files/tmr0.c: 140:     TMR0L = (uint8_t) timer0ReloadVal16bit;
  9910  0604  087A               	movf	_timer0ReloadVal16bit,w	;volatile
  9911  0605  009C               	movwf	28	;volatile
  9912                           
  9913                           ;mcc_generated_files/tmr0.c: 142:     if(TMR0_InterruptHandler)
  9914  0606  0140               	movlb	0	; select bank0
  9915  0607  082A               	movf	_TMR0_InterruptHandler,w
  9916  0608  042B               	iorwf	_TMR0_InterruptHandler+1,w
  9917  0609  1903               	btfsc	3,2
  9918  060A  0008               	return
  9919                           
  9920                           ;mcc_generated_files/tmr0.c: 143:     {;mcc_generated_files/tmr0.c: 144:         TMR0_In
      +                          terruptHandler();
  9921  060B  082B               	movf	_TMR0_InterruptHandler+1,w
  9922  060C  008A               	movwf	10
  9923  060D  082A               	movf	_TMR0_InterruptHandler,w
  9924  060E  000A               	callw
  9925  060F  3185               	pagesel	$
  9926  0610  0008               	return
  9927  0611                     __end_of_TMR0_ISR:
  9928                           
  9929                           	psect	text48
  9930  074F                     __ptext48:	
  9931 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  9932 ;; Defined at:
  9933 ;;		line 155 in file "mcc_generated_files/tmr0.c"
  9934 ;; Parameters:    Size  Location     Type
  9935 ;;		None
  9936 ;; Auto vars:     Size  Location     Type
  9937 ;;		None
  9938 ;; Return value:  Size  Location     Type
  9939 ;;                  1    wreg      void 
  9940 ;; Registers used:
  9941 ;;		None
  9942 ;; Tracked objects:
  9943 ;;		On entry : 0/0
  9944 ;;		On exit  : 0/0
  9945 ;;		Unchanged: 0/0
  9946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9947 ;;      Params:         0       0       0       0
  9948 ;;      Locals:         0       0       0       0
  9949 ;;      Temps:          0       0       0       0
  9950 ;;      Totals:         0       0       0       0
  9951 ;;Total ram usage:        0 bytes
  9952 ;; Hardware stack levels used:    1
  9953 ;; This function calls:
  9954 ;;		Nothing
  9955 ;; This function is called by:
  9956 ;;		_TMR0_Initialize
  9957 ;;		_TMR0_ISR
  9958 ;; This function uses a non-reentrant model
  9959 ;;
  9960                           
  9961                           
  9962                           ;psect for function _TMR0_DefaultInterruptHandler
  9963  074F                     _TMR0_DefaultInterruptHandler:
  9964                           
  9965                           ;incstack = 0
  9966                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  9967  074F  0008               	return
  9968  0750                     __end_of_TMR0_DefaultInterruptHandler:
  9969                           
  9970                           	psect	text49
  9971  0747                     __ptext49:	
  9972 ;; *************** function _TMR0_INT *****************
  9973 ;; Defined at:
  9974 ;;		line 165 in file "Main.c"
  9975 ;; Parameters:    Size  Location     Type
  9976 ;;		None
  9977 ;; Auto vars:     Size  Location     Type
  9978 ;;		None
  9979 ;; Return value:  Size  Location     Type
  9980 ;;                  1    wreg      void 
  9981 ;; Registers used:
  9982 ;;		None
  9983 ;; Tracked objects:
  9984 ;;		On entry : 0/0
  9985 ;;		On exit  : 0/0
  9986 ;;		Unchanged: 0/0
  9987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9988 ;;      Params:         0       0       0       0
  9989 ;;      Locals:         0       0       0       0
  9990 ;;      Temps:          0       0       0       0
  9991 ;;      Totals:         0       0       0       0
  9992 ;;Total ram usage:        0 bytes
  9993 ;; Hardware stack levels used:    1
  9994 ;; This function calls:
  9995 ;;		Nothing
  9996 ;; This function is called by:
  9997 ;;		_main
  9998 ;;		_TMR0_ISR
  9999 ;; This function uses a non-reentrant model
 10000 ;;
 10001                           
 10002                           
 10003                           ;psect for function _TMR0_INT
 10004  0747                     _TMR0_INT:
 10005                           
 10006                           ;Main.c: 167:     UpdateLeds = 1;
 10007                           
 10008                           ;incstack = 0
 10009                           ; Regs used in _TMR0_INT: []
 10010  0747  0140               	movlb	0	; select bank0
 10011  0748  01B5               	clrf	_UpdateLeds
 10012  0749  0AB5               	incf	_UpdateLeds,f
 10013  074A  0008               	return
 10014  074B                     __end_of_TMR0_INT:
 10015                           
 10016                           	psect	text50
 10017  0735                     __ptext50:	
 10018 ;; *************** function _PIN_MANAGER_IOC *****************
 10019 ;; Defined at:
 10020 ;;		line 130 in file "mcc_generated_files/pin_manager.c"
 10021 ;; Parameters:    Size  Location     Type
 10022 ;;		None
 10023 ;; Auto vars:     Size  Location     Type
 10024 ;;		None
 10025 ;; Return value:  Size  Location     Type
 10026 ;;                  1    wreg      void 
 10027 ;; Registers used:
 10028 ;;		wreg, status,2, status,0, pclath, cstack
 10029 ;; Tracked objects:
 10030 ;;		On entry : 0/0
 10031 ;;		On exit  : 0/0
 10032 ;;		Unchanged: 0/0
 10033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10034 ;;      Params:         0       0       0       0
 10035 ;;      Locals:         0       0       0       0
 10036 ;;      Temps:          0       0       0       0
 10037 ;;      Totals:         0       0       0       0
 10038 ;;Total ram usage:        0 bytes
 10039 ;; Hardware stack levels used:    1
 10040 ;; Hardware stack levels required when called:    4
 10041 ;; This function calls:
 10042 ;;		_IOCCF1_ISR
 10043 ;; This function is called by:
 10044 ;;		_INTERRUPT_InterruptManager
 10045 ;; This function uses a non-reentrant model
 10046 ;;
 10047                           
 10048                           
 10049                           ;psect for function _PIN_MANAGER_IOC
 10050  0735                     _PIN_MANAGER_IOC:
 10051                           
 10052                           ;mcc_generated_files/pin_manager.c: 133:     if(IOCCFbits.IOCCF1 == 1)
 10053                           
 10054                           ;incstack = 0
 10055                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 10056  0735  017E               	movlb	62	; select bank62
 10057  0736  1CD5               	btfss	85,1	;volatile
 10058  0737  0008               	return
 10059                           
 10060                           ;mcc_generated_files/pin_manager.c: 134:     {;mcc_generated_files/pin_manager.c: 135:  
      +                                 IOCCF1_ISR();
 10061  0738  26A7               	fcall	_IOCCF1_ISR
 10062  0739  0008               	return
 10063  073A                     __end_of_PIN_MANAGER_IOC:
 10064                           
 10065                           	psect	text51
 10066  06A7                     __ptext51:	
 10067 ;; *************** function _IOCCF1_ISR *****************
 10068 ;; Defined at:
 10069 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 10070 ;; Parameters:    Size  Location     Type
 10071 ;;		None
 10072 ;; Auto vars:     Size  Location     Type
 10073 ;;		None
 10074 ;; Return value:  Size  Location     Type
 10075 ;;                  1    wreg      void 
 10076 ;; Registers used:
 10077 ;;		wreg, status,2, status,0, pclath, cstack
 10078 ;; Tracked objects:
 10079 ;;		On entry : 0/0
 10080 ;;		On exit  : 0/0
 10081 ;;		Unchanged: 0/0
 10082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10083 ;;      Params:         0       0       0       0
 10084 ;;      Locals:         0       0       0       0
 10085 ;;      Temps:          0       0       0       0
 10086 ;;      Totals:         0       0       0       0
 10087 ;;Total ram usage:        0 bytes
 10088 ;; Hardware stack levels used:    1
 10089 ;; Hardware stack levels required when called:    3
 10090 ;; This function calls:
 10091 ;;		Absolute function
 10092 ;;		_IOCCF1_DefaultInterruptHandler
 10093 ;;		_RCS_INT
 10094 ;; This function is called by:
 10095 ;;		_PIN_MANAGER_IOC
 10096 ;; This function uses a non-reentrant model
 10097 ;;
 10098                           
 10099                           
 10100                           ;psect for function _IOCCF1_ISR
 10101  06A7                     _IOCCF1_ISR:
 10102                           
 10103                           ;mcc_generated_files/pin_manager.c: 147:     if(IOCCF1_InterruptHandler)
 10104                           
 10105                           ;incstack = 0
 10106                           ; Regs used in _IOCCF1_ISR: [wreg+status,2+status,0+pclath+cstack]
 10107  06A7  0140               	movlb	0	; select bank0
 10108  06A8  085D               	movf	_IOCCF1_InterruptHandler,w
 10109  06A9  045E               	iorwf	_IOCCF1_InterruptHandler+1,w
 10110  06AA  1903               	btfsc	3,2
 10111  06AB  2EB1               	goto	i1l2092
 10112                           
 10113                           ;mcc_generated_files/pin_manager.c: 148:     {;mcc_generated_files/pin_manager.c: 149:  
      +                                 IOCCF1_InterruptHandler();
 10114  06AC  085E               	movf	_IOCCF1_InterruptHandler+1,w
 10115  06AD  008A               	movwf	10
 10116  06AE  085D               	movf	_IOCCF1_InterruptHandler,w
 10117  06AF  000A               	callw
 10118  06B0  3186               	pagesel	$
 10119  06B1                     i1l2092:
 10120                           
 10121                           ;mcc_generated_files/pin_manager.c: 151:     IOCCFbits.IOCCF1 = 0;
 10122  06B1  017E               	movlb	62	; select bank62
 10123  06B2  10D5               	bcf	85,1	;volatile
 10124  06B3  0008               	return
 10125  06B4                     __end_of_IOCCF1_ISR:
 10126                           
 10127                           	psect	text52
 10128  0750                     __ptext52:	
 10129 ;; *************** function _IOCCF1_DefaultInterruptHandler *****************
 10130 ;; Defined at:
 10131 ;;		line 164 in file "mcc_generated_files/pin_manager.c"
 10132 ;; Parameters:    Size  Location     Type
 10133 ;;		None
 10134 ;; Auto vars:     Size  Location     Type
 10135 ;;		None
 10136 ;; Return value:  Size  Location     Type
 10137 ;;                  1    wreg      void 
 10138 ;; Registers used:
 10139 ;;		None
 10140 ;; Tracked objects:
 10141 ;;		On entry : 0/0
 10142 ;;		On exit  : 0/0
 10143 ;;		Unchanged: 0/0
 10144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10145 ;;      Params:         0       0       0       0
 10146 ;;      Locals:         0       0       0       0
 10147 ;;      Temps:          0       0       0       0
 10148 ;;      Totals:         0       0       0       0
 10149 ;;Total ram usage:        0 bytes
 10150 ;; Hardware stack levels used:    1
 10151 ;; This function calls:
 10152 ;;		Nothing
 10153 ;; This function is called by:
 10154 ;;		_PIN_MANAGER_Initialize
 10155 ;;		_IOCCF1_ISR
 10156 ;; This function uses a non-reentrant model
 10157 ;;
 10158                           
 10159                           
 10160                           ;psect for function _IOCCF1_DefaultInterruptHandler
 10161  0750                     _IOCCF1_DefaultInterruptHandler:
 10162                           
 10163                           ;incstack = 0
 10164                           ; Regs used in _IOCCF1_DefaultInterruptHandler: []
 10165  0750  0008               	return
 10166  0751                     __end_of_IOCCF1_DefaultInterruptHandler:
 10167                           
 10168                           	psect	text53
 10169  073A                     __ptext53:	
 10170 ;; *************** function _RCS_INT *****************
 10171 ;; Defined at:
 10172 ;;		line 178 in file "Main.c"
 10173 ;; Parameters:    Size  Location     Type
 10174 ;;		None
 10175 ;; Auto vars:     Size  Location     Type
 10176 ;;		None
 10177 ;; Return value:  Size  Location     Type
 10178 ;;                  1    wreg      void 
 10179 ;; Registers used:
 10180 ;;		wreg, status,2, status,0, pclath, cstack
 10181 ;; Tracked objects:
 10182 ;;		On entry : 0/0
 10183 ;;		On exit  : 0/0
 10184 ;;		Unchanged: 0/0
 10185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10186 ;;      Params:         0       0       0       0
 10187 ;;      Locals:         0       0       0       0
 10188 ;;      Temps:          0       0       0       0
 10189 ;;      Totals:         0       0       0       0
 10190 ;;Total ram usage:        0 bytes
 10191 ;; Hardware stack levels used:    1
 10192 ;; Hardware stack levels required when called:    2
 10193 ;; This function calls:
 10194 ;;		_TMR1_Reload
 10195 ;; This function is called by:
 10196 ;;		_main
 10197 ;;		_IOCCF1_ISR
 10198 ;; This function uses a non-reentrant model
 10199 ;;
 10200                           
 10201                           
 10202                           ;psect for function _RCS_INT
 10203  073A                     _RCS_INT:
 10204                           
 10205                           ;Main.c: 181:     UpdateRcs = 1;
 10206                           
 10207                           ;incstack = 0
 10208                           ; Regs used in _RCS_INT: [wreg+status,2+status,0+pclath+cstack]
 10209  073A  0140               	movlb	0	; select bank0
 10210  073B  01B4               	clrf	_UpdateRcs
 10211  073C  0AB4               	incf	_UpdateRcs,f
 10212                           
 10213                           ;Main.c: 183:     TMR1_Reload();
 10214  073D  270A               	fcall	_TMR1_Reload
 10215  073E  0008               	return
 10216  073F                     __end_of_RCS_INT:
 10217                           
 10218                           	psect	text54
 10219  070A                     __ptext54:	
 10220 ;; *************** function _TMR1_Reload *****************
 10221 ;; Defined at:
 10222 ;;		line 149 in file "mcc_generated_files/tmr1.c"
 10223 ;; Parameters:    Size  Location     Type
 10224 ;;		None
 10225 ;; Auto vars:     Size  Location     Type
 10226 ;;		None
 10227 ;; Return value:  Size  Location     Type
 10228 ;;                  1    wreg      void 
 10229 ;; Registers used:
 10230 ;;		wreg, status,2, status,0, pclath, cstack
 10231 ;; Tracked objects:
 10232 ;;		On entry : 0/0
 10233 ;;		On exit  : 0/0
 10234 ;;		Unchanged: 0/0
 10235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10236 ;;      Params:         0       0       0       0
 10237 ;;      Locals:         0       0       0       0
 10238 ;;      Temps:          0       0       0       0
 10239 ;;      Totals:         0       0       0       0
 10240 ;;Total ram usage:        0 bytes
 10241 ;; Hardware stack levels used:    1
 10242 ;; Hardware stack levels required when called:    1
 10243 ;; This function calls:
 10244 ;;		_TMR1_WriteTimer
 10245 ;; This function is called by:
 10246 ;;		_RCS_INT
 10247 ;; This function uses a non-reentrant model
 10248 ;;
 10249                           
 10250                           
 10251                           ;psect for function _TMR1_Reload
 10252  070A                     _TMR1_Reload:
 10253                           
 10254                           ;mcc_generated_files/tmr1.c: 151:     TMR1_WriteTimer(timer1ReloadVal);
 10255                           
 10256                           ;incstack = 0
 10257                           ; Regs used in _TMR1_Reload: [wreg+status,2+status,0+pclath+cstack]
 10258  070A  0140               	movlb	0	; select bank0
 10259  070B  0829               	movf	_timer1ReloadVal+1,w	;volatile
 10260  070C  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 10261  070D  0828               	movf	_timer1ReloadVal,w	;volatile
 10262  070E  00F0               	movwf	TMR1_WriteTimer@timerVal
 10263  070F  2663               	fcall	_TMR1_WriteTimer
 10264  0710  0008               	return
 10265  0711                     __end_of_TMR1_Reload:
 10266                           
 10267                           	psect	text55
 10268  0663                     __ptext55:	
 10269 ;; *************** function _TMR1_WriteTimer *****************
 10270 ;; Defined at:
 10271 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 10272 ;; Parameters:    Size  Location     Type
 10273 ;;  timerVal        2    0[COMMON] unsigned short 
 10274 ;; Auto vars:     Size  Location     Type
 10275 ;;		None
 10276 ;; Return value:  Size  Location     Type
 10277 ;;                  1    wreg      void 
 10278 ;; Registers used:
 10279 ;;		wreg, status,2
 10280 ;; Tracked objects:
 10281 ;;		On entry : 0/0
 10282 ;;		On exit  : 0/0
 10283 ;;		Unchanged: 0/0
 10284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10285 ;;      Params:         2       0       0       0
 10286 ;;      Locals:         0       0       0       0
 10287 ;;      Temps:          0       0       0       0
 10288 ;;      Totals:         2       0       0       0
 10289 ;;Total ram usage:        2 bytes
 10290 ;; Hardware stack levels used:    1
 10291 ;; This function calls:
 10292 ;;		Nothing
 10293 ;; This function is called by:
 10294 ;;		_TMR1_Reload
 10295 ;;		_TMR1_ISR
 10296 ;; This function uses a non-reentrant model
 10297 ;;
 10298                           
 10299                           
 10300                           ;psect for function _TMR1_WriteTimer
 10301  0663                     _TMR1_WriteTimer:
 10302                           
 10303                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 10304                           
 10305                           ;incstack = 0
 10306                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 10307  0663  0144               	movlb	4	; select bank4
 10308  0664  1D0E               	btfss	14,2	;volatile
 10309  0665  2E6D               	goto	i1l1926
 10310                           
 10311                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 10312  0666  100E               	bcf	14,0	;volatile
 10313                           
 10314                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (uint8_t)(timerVal >> 8);
 10315  0667  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 10316  0668  008D               	movwf	13	;volatile
 10317                           
 10318                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = (uint8_t)timerVal;
 10319  0669  0870               	movf	TMR1_WriteTimer@timerVal,w
 10320  066A  008C               	movwf	12	;volatile
 10321                           
 10322                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 10323  066B  140E               	bsf	14,0	;volatile
 10324                           
 10325                           ;mcc_generated_files/tmr1.c: 140:     }
 10326  066C  0008               	return
 10327  066D                     i1l1926:
 10328                           
 10329                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 10330  066D  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 10331  066E  008D               	movwf	13	;volatile
 10332                           
 10333                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = (uint8_t)timerVal;
 10334  066F  0870               	movf	TMR1_WriteTimer@timerVal,w
 10335  0670  008C               	movwf	12	;volatile
 10336  0671  0008               	return
 10337  0672                     __end_of_TMR1_WriteTimer:
 10338  007E                     btemp	set	126	;btemp
 10339  007E                     int$flags	set	126
 10340  007E                     wtemp0	set	126
 10341                           
 10342                           	psect	idloc
 10343                           
 10344                           ;Config register IDLOC0 @ 0x8000
 10345                           ;	unspecified, using default values
 10346  8000                     	org	32768
 10347  8000  3FFF               	dw	16383
 10348                           
 10349                           ;Config register IDLOC1 @ 0x8001
 10350                           ;	unspecified, using default values
 10351  8001                     	org	32769
 10352  8001  3FFF               	dw	16383
 10353                           
 10354                           ;Config register IDLOC2 @ 0x8002
 10355                           ;	unspecified, using default values
 10356  8002                     	org	32770
 10357  8002  3FFF               	dw	16383
 10358                           
 10359                           ;Config register IDLOC3 @ 0x8003
 10360                           ;	unspecified, using default values
 10361  8003                     	org	32771
 10362  8003  3FFF               	dw	16383
 10363                           
 10364                           	psect	config
 10365                           
 10366                           ;Config register CONFIG1 @ 0x8007
 10367                           ;	External Oscillator mode selection bits
 10368                           ;	FEXTOSC = OFF, Oscillator not enabled
 10369                           ;	Power-up default value for COSC bits
 10370                           ;	RSTOSC = HFINTPLL, HFINTOSC with 2x PLL, with OSCFRQ = 16 MHz and CDIV = 1:1 (FOSC = 3
      +                          2 MHz)
 10371                           ;	Clock Out Enable bit
 10372                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 10373                           ;	Clock Switch Enable bit
 10374                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 10375                           ;	Fail-Safe Clock Monitor Enable bit
 10376                           ;	FCMEN = OFF, FSCM timer disabled
 10377  8007                     	org	32775
 10378  8007  1F9C               	dw	8092
 10379                           
 10380                           ;Config register CONFIG2 @ 0x8008
 10381                           ;	Master Clear Enable bit
 10382                           ;	MCLRE = OFF, MCLR pin function is port defined function
 10383                           ;	Power-up Timer Enable bit
 10384                           ;	PWRTE = OFF, PWRT disabled
 10385                           ;	Low-Power BOR enable bit
 10386                           ;	LPBOREN = OFF, ULPBOR disabled
 10387                           ;	Brown-out reset enable bits
 10388                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 10389                           ;	Brown-out Reset Voltage Selection
 10390                           ;	BORV = HI, Brown-out Reset Voltage (VBOR) is set to 2.7V
 10391                           ;	Zero-cross detect disable
 10392                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 10393                           ;	Peripheral Pin Select one-way control
 10394                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 10395                           ;	Stack Overflow/Underflow Reset Enable bit
 10396                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 10397  8008                     	org	32776
 10398  8008  3DFE               	dw	15870
 10399                           
 10400                           ;Config register CONFIG3 @ 0x8009
 10401                           ;	WDT Period Select bits
 10402                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10403                           ;	WDT operating mode
 10404                           ;	WDTE = ON, WDT enabled regardless of sleep; SWDTEN ignored
 10405                           ;	WDT Window Select bits
 10406                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 10407                           ;	WDT input clock selector
 10408                           ;	WDTCCS = SC, Software Control
 10409  8009                     	org	32777
 10410  8009  3FFF               	dw	16383
 10411                           
 10412                           ;Config register CONFIG4 @ 0x800A
 10413                           ;	Boot Block Size Selection bits
 10414                           ;	BBSIZE = BB512, 512 words boot block size
 10415                           ;	Boot Block Enable bit
 10416                           ;	BBEN = OFF, Boot Block disabled
 10417                           ;	SAF Enable bit
 10418                           ;	SAFEN = OFF, SAF disabled
 10419                           ;	Application Block Write Protection bit
 10420                           ;	WRTAPP = OFF, Application Block not write protected
 10421                           ;	Boot Block Write Protection bit
 10422                           ;	WRTB = OFF, Boot Block not write protected
 10423                           ;	Configuration Register Write Protection bit
 10424                           ;	WRTC = OFF, Configuration Register not write protected
 10425                           ;	Storage Area Flash Write Protection bit
 10426                           ;	WRTSAF = OFF, SAF not write protected
 10427                           ;	Low Voltage Programming Enable bit
 10428                           ;	LVP = OFF, High Voltage on MCLR/Vpp must be used for programming
 10429  800A                     	org	32778
 10430  800A  1FFF               	dw	8191
 10431                           
 10432                           ;Config register CONFIG5 @ 0x800B
 10433                           ;	UserNVM Program memory code protection bit
 10434                           ;	CP = OFF, UserNVM code protection disabled
 10435  800B                     	org	32779
 10436  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        82
    BSS         28
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     19      63
    BANK1            80      0      66
    BANK2            80      0       0

Pointer List with Targets:

    EXECUTExEFFECT$1858	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> LedBrake(), LedSlFl(), LedNom(), LedFlash(), 
		 -> LedOff(), 

    EXECUTExEFFECT$1853	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> LedBrake(), LedSlFl(), LedNom(), LedFlash(), 
		 -> LedOff(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S1107$PWM	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> PWM1_LoadDutyValue(), PWM2_LoadDutyValue(), PWM5_LoadDutyValue(), PWM6_LoadDutyValue(), 
		 -> PWM3_LoadDutyValue(), PWM4_LoadDutyValue(), 

    LedBit.PWM	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> PWM1_LoadDutyValue(), PWM2_LoadDutyValue(), PWM5_LoadDutyValue(), PWM6_LoadDutyValue(), 
		 -> PWM3_LoadDutyValue(), PWM4_LoadDutyValue(), 

    S1107$Prog	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> LedBrake(), LedSlFl(), LedNom(), LedFlash(), 
		 -> LedOff(), 

    LedBit.Prog	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> LedBrake(), LedSlFl(), LedNom(), LedFlash(), 
		 -> LedOff(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_INT(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_INT(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_INT(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_INT(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCCF1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> RCS_INT(), IOCCF1_DefaultInterruptHandler(), 

    IOCCF1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> RCS_INT(), Absolute function(), IOCCF1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF1_SetInterruptHandler
    _rand->___lmul
    _CalcPwm->_PWM3_LoadDutyValue
    _CalcPwm->_PWM4_LoadDutyValue
    _CalcPwm->_PWM5_LoadDutyValue
    _CalcPwm->_PWM6_LoadDutyValue
    _PWM6_LoadDutyValue->___bmul
    _PWM5_LoadDutyValue->___bmul
    _PWM4_LoadDutyValue->___bmul
    _PWM3_LoadDutyValue->___bmul
    _PWM2_LoadDutyValue->___bmul
    _PWM1_LoadDutyValue->___bmul

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer
    _TMR1_Reload->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_EXECUTExEFFECT
    _INITxEXECUTER->_RCSxLED
    _RCSxLED->_rand
    _rand->___lmul
    _EXECUTExEFFECT->_LedFlash
    _EXECUTExEFFECT->_LedSlFl
    _LedSlFl->_CalcPwm
    _LedOff->_CalcPwm
    _LedNom->_CalcPwm
    _LedFlash->_CalcPwm
    _LedBrake->_CalcPwm

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   32329
                                             16 BANK0      3     3      0
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                  _ADC_SelectChannel
                _ADC_StartConversion
                       _BATTxPROTECT
                     _EXECUTExEFFECT
                      _INITxEXECUTER
         _IOCCF1_SetInterruptHandler
                            _RCSxLED
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     522
                     _ADC_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
         _IOCCF1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF1_SetInterruptHandler                           2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INITxEXECUTER                                        0     0      0     586
                            _RCSxLED
                               _rand
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RCSxLED                                              1     1      0     244
                                             10 BANK0      1     1      0
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 6     4      2     244
                                              4 BANK0      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     244
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _EXECUTExEFFECT                                       6     6      0   30334
                                             10 BANK0      6     6      0
                           _LedBrake *
                           _LedFlash *
                             _LedNom *
                             _LedOff *
                            _LedSlFl *
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LedSlFl                                              5     4      1    6243
                                              5 BANK0      5     4      1
                            _CalcPwm
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LedOff                                               2     1      1    5332
                                              5 BANK0      2     1      1
                            _CalcPwm
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LedNom                                               4     3      1    5363
                                              5 BANK0      4     3      1
                            _CalcPwm
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LedFlash                                             5     4      1    5620
                                              5 BANK0      5     4      1
                            _CalcPwm
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LedBrake                                             3     2      1    5304
                                              5 BANK0      3     2      1
                            _CalcPwm
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) _CalcPwm                                              5     5      0    2906
                                              0 BANK0      5     5      0
                 _PWM1_LoadDutyValue *
                 _PWM2_LoadDutyValue *
                 _PWM3_LoadDutyValue *
                 _PWM4_LoadDutyValue *
                 _PWM5_LoadDutyValue *
                 _PWM6_LoadDutyValue *
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1    2271
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2      62
                                              6 COMMON     4     2      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM5_LoadDutyValue                                   4     2      2      62
                                              6 COMMON     4     2      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM4_LoadDutyValue                                   4     2      2      62
                                              6 COMMON     4     2      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM3_LoadDutyValue                                   4     2      2      62
                                              6 COMMON     4     2      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM2_LoadDutyValue                                   2     0      2     130
                                              6 COMMON     2     0      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM1_LoadDutyValue                                   2     0      2     195
                                              6 COMMON     2     0      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _BATTxPROTECT                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversionResult                              2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0     480
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                           _TMR1_INT *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_INT                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _TMR0_INT *
 ---------------------------------------------------------------------------------
 (7) _TMR0_INT                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _PIN_MANAGER_IOC                                      0     0      0     240
                         _IOCCF1_ISR
 ---------------------------------------------------------------------------------
 (7) _IOCCF1_ISR                                           0     0      0     240
                   Absolute function *
     _IOCCF1_DefaultInterruptHandler *
                            _RCS_INT *
 ---------------------------------------------------------------------------------
 (8) _RCS_INT                                              0     0      0     240
                        _TMR1_Reload
 ---------------------------------------------------------------------------------
 (9) _TMR1_Reload                                          0     0      0     240
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _IOCCF1_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversionResult
   _ADC_IsConversionDone
   _ADC_SelectChannel
   _ADC_StartConversion
   _BATTxPROTECT
   _EXECUTExEFFECT
     _LedBrake *
       _CalcPwm
         _PWM1_LoadDutyValue *
           ___bmul (ARG)
         _PWM2_LoadDutyValue *
           ___bmul (ARG)
         _PWM3_LoadDutyValue *
           ___bmul (ARG)
         _PWM4_LoadDutyValue *
           ___bmul (ARG)
         _PWM5_LoadDutyValue *
           ___bmul (ARG)
         _PWM6_LoadDutyValue *
           ___bmul (ARG)
         ___bmul *
       ___bmul
     _LedFlash *
       _CalcPwm
         _PWM1_LoadDutyValue *
           ___bmul (ARG)
         _PWM2_LoadDutyValue *
           ___bmul (ARG)
         _PWM3_LoadDutyValue *
           ___bmul (ARG)
         _PWM4_LoadDutyValue *
           ___bmul (ARG)
         _PWM5_LoadDutyValue *
           ___bmul (ARG)
         _PWM6_LoadDutyValue *
           ___bmul (ARG)
         ___bmul *
       ___bmul
     _LedNom *
       _CalcPwm
         _PWM1_LoadDutyValue *
           ___bmul (ARG)
         _PWM2_LoadDutyValue *
           ___bmul (ARG)
         _PWM3_LoadDutyValue *
           ___bmul (ARG)
         _PWM4_LoadDutyValue *
           ___bmul (ARG)
         _PWM5_LoadDutyValue *
           ___bmul (ARG)
         _PWM6_LoadDutyValue *
           ___bmul (ARG)
         ___bmul *
       ___bmul
     _LedOff *
       _CalcPwm
         _PWM1_LoadDutyValue *
           ___bmul (ARG)
         _PWM2_LoadDutyValue *
           ___bmul (ARG)
         _PWM3_LoadDutyValue *
           ___bmul (ARG)
         _PWM4_LoadDutyValue *
           ___bmul (ARG)
         _PWM5_LoadDutyValue *
           ___bmul (ARG)
         _PWM6_LoadDutyValue *
           ___bmul (ARG)
         ___bmul *
       ___bmul
     _LedSlFl *
       _CalcPwm
         _PWM1_LoadDutyValue *
           ___bmul (ARG)
         _PWM2_LoadDutyValue *
           ___bmul (ARG)
         _PWM3_LoadDutyValue *
           ___bmul (ARG)
         _PWM4_LoadDutyValue *
           ___bmul (ARG)
         _PWM5_LoadDutyValue *
           ___bmul (ARG)
         _PWM6_LoadDutyValue *
           ___bmul (ARG)
         ___bmul *
       ___bmul
     ___bmul *
   _INITxEXECUTER
     _RCSxLED
       _rand
         ___lmul
     _rand
       ___lmul
     _srand
   _IOCCF1_SetInterruptHandler
   _RCSxLED
     _rand
       ___lmul
   _SYSTEM_Initialize
     _ADC_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF1_SetInterruptHandler
     _PMD_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
   _TMR0_SetInterruptHandler
   _TMR1_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCCF1_ISR
       Absolute function(Fake) *
       _IOCCF1_DefaultInterruptHandler *
       _RCS_INT *
         _TMR1_Reload
           _TMR1_WriteTimer
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _TMR0_INT *
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_INT *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      3F       5       78.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      42       7       82.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
ABS                  0      0      8D      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      8D      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Dec 21 23:33:59 2022

                            ___bmul@product 0074                      __end_of_FVR_Initialize 0743  
               __size_of_PWM6_LoadDutyValue 0016                                         l300 06BD  
                      __end_of_BATTxPROTECT 054C                                         l561 0308  
                                       l662 009E                                         l677 0237  
                                       _PR2 028D                                         u655 0482  
                                       u665 0489                             _timer1ReloadVal 0028  
                   __size_of_PMD_Initialize 000D                             _TMR2_Initialize 0672  
                           _PWM4_Initialize 06E3                                         wreg 0009  
                                      l2612 035B                                        l2534 063F  
                                      l2710 0247                                        l2640 003C  
                                      l2616 035F                                        l2562 0619  
                                      l2706 0228                                        l2714 0252  
                                      l2618 0381                                        l2810 02EC  
                                      l2548 062E                                        l2652 00D2  
                                      l2644 0055                                        l2716 026C  
                                      l2812 02ED                                        l2558 0613  
                                      l2662 011C                                        l2654 00D6  
                                      l2734 04A3                                        l2680 019F  
                                      l2816 02EF                                        l2760 0287  
                                      l2682 01BC                                        l2746 04CD  
                                      l1970 0476                                        l2818 02FF  
                                      l2676 0194                                        l2668 015D  
                                      l2748 04CE                                        l2694 01C5  
                                      l1974 0481                                        l2782 02A4  
                                      l2774 029B                                        l2766 0291  
                                      l2698 01DE                                        l2778 029F  
                                      l2894 02F7                                        l2798 02C1  
                                      l2896 0264                                        l2898 01B1  
                   __end_of_PWM1_Initialize 0703                                        u1105 0590  
                                      u1125 063B                                        u1145 062A  
                                      u1075 05BC                                        u1085 05A6  
                                      _LATA 0018                                        u1095 05D2  
                                      u1175 0430                                        _LATC 001A  
                                      _T2PR 028D                                        _PMD0 0796  
                                      _PMD1 0797                                        _PMD2 0798  
                                      _PMD3 0799                                        _PMD4 079A  
                                      _PMD5 079B                                        _PLLR 4480  
                                      _TMR2 028C                                        _WPUA 1F39  
                                      _WPUC 1F4F                             __end_of_RCS_INT 073F  
                           ?_EXECUTExEFFECT 0070                             __end_of_RCSxLED 0388  
                                      _main 0272                                        _rand 0408  
                                      _seed 0036                                        fsr0h 0005  
                                      fsr1h 0007                                        indf0 0000  
                                      fsr0l 0004                                        indf1 0001  
                                      fsr1l 0006                                        btemp 007E  
                           __end_of_CalcPwm 0527                                        start 0019  
                           _PWM5_Initialize 06DB                             __end_of_LedSlFl 01C2  
                ??_TMR1_SetInterruptHandler 0074                           ___bmul@multiplier 0075  
                __end_of_PWM5_LoadDutyValue 0597                     __end_of_PWM2_Initialize 06FB  
                   __end_of_TMR0_Initialize 0581              ??_TMR0_DefaultInterruptHandler 0070  
                           ?_FVR_Initialize 0070              __size_of_OSCILLATOR_Initialize 000C  
             __end_of_OSCILLATOR_Initialize 06C0                         __size_of_IOCCF1_ISR 000D  
                                     _ADACT 009F                                       ?_main 0070  
                                     ?_rand 003E                                       _T1CLK 0211  
                                     _T1CON 020E                                       _T2CON 028E  
                                     _T2HLT 028F                                       _T2TMR 028C  
                                     _T2RST 0291                                       i1l373 0017  
                                     i1l365 000C                                       i1l367 0011  
                                     _OSCEN 0891                          _PWM4_LoadDutyValue 05AD  
                                     _TMR0H 059D                                       _TMR1H 020D  
                                     _TMR0L 059C                                       _TMR1L 020C  
                                     _TRISA 0012                                       _TRISC 0014  
                               _BattProtect 0032            __size_of_ADC_GetConversionResult 0006  
         __size_of_TMR0_SetInterruptHandler 0006                             _PWM6_Initialize 06D3  
                       ___lmul@multiplicand 0076                   ?_TMR0_SetInterruptHandler 0072  
                          __end_of_TMR0_INT 074B                            __end_of_TMR0_ISR 0611  
                          __end_of_TMR1_INT 0747                            __end_of_TMR1_ISR 05FF  
                   __end_of_PIN_MANAGER_IOC 073A                         ?_PWM4_LoadDutyValue 0076  
                                     _srand 06C0                                       main@i 004C  
                   __end_of_PWM3_Initialize 06F3                     __end_of_TMR1_Initialize 056A  
                                     pclath 000A                                       status 0003  
                    __size_of_INITxEXECUTER 000D                                       wtemp0 007E  
                           _TMR1_WriteTimer 0663                            __end_of_LedBrake 05EC  
                          __end_of_LedFlash 0272                             __initialization 001A  
                              __end_of_main 030A                                __end_of_rand 043B  
                      ??_PWM4_LoadDutyValue 0078                     __end_of_PWM4_Initialize 06EB  
                   __end_of_TMR2_Initialize 0680                 ?_INTERRUPT_InterruptManager 0070  
                                    ??_main 004A                                      ??_rand 0040  
             __size_of_ADC_IsConversionDone 0007                                   ??_RCS_INT 0072  
                                 ??_RCSxLED 0044                                      _ADCON0 009D  
                                    _ADCON1 009E                ??_IOCCF1_SetInterruptHandler 0074  
                                    _ADRESH 009C                                      _ADRESL 009B  
                                    _CCPR1H 030D                                      _CCPR2H 0311  
                                    _CCPR1L 030C                                      _CCPR2L 0310  
                                    ?_srand 0072                                      _ANSELA 1F38  
                                    _ANSELC 1F4E                                      _T0CON0 059E  
                                    _T0CON1 059F                                      _T1GATE 0210  
                                    _T1GCON 020F                                   ??_CalcPwm 003A  
                                    _RA4PPS 1F14                                      _RA5PPS 1F15  
                                    _RC2PPS 1F22                                      _RC3PPS 1F23  
                   TMR1_WriteTimer@timerVal 0070                                      _RC4PPS 1F24  
                          ?_PWM1_Initialize 0070                                      _RC5PPS 1F25  
                                    _ODCONA 1F3A                                      _ODCONC 1F50  
                                    i1l2092 06B1                     __end_of_PWM5_Initialize 06E3  
                                    i1l1926 066D                                      _INLVLA 1F3C  
                                    _INLVLC 1F52                                      _FVRCON 090C  
                                    _OSCFRQ 0893                                   ??_LedSlFl 0040  
                                    _LedBit 00A0                                      _LedOff 04D0  
                                    _LedNom 03CA                                      _Random 0020  
      __end_of_TMR1_DefaultInterruptHandler 074F       __size_of_TMR1_DefaultInterruptHandler 0001  
              _TMR1_DefaultInterruptHandler 074E                                      ___bmul 0611  
                                    ___lmul 046D                 __size_of_PWM3_LoadDutyValue 0016  
                              ?_TMR1_Reload 0070                       __size_of_BATTxPROTECT 0025  
                          ?_TMR0_Initialize 0070                            ?_PWM2_Initialize 0070  
                   __end_of_PWM6_Initialize 06DB                               _INITxEXECUTER 068D  
       __size_of_IOCCF1_SetInterruptHandler 0006                            LedSlFl@ReturnVal 0043  
                            _PMD_Initialize 0680                                  _UpdateLeds 0035  
                                    srand@s 0072    TMR1_SetInterruptHandler@InterruptHandler 0072  
  TMR0_SetInterruptHandler@InterruptHandler 0072  IOCCF1_SetInterruptHandler@InterruptHandler 0072  
                          ?_PIN_MANAGER_IOC 0070                     __end_of_TMR1_WriteTimer 0672  
                              ??_IOCCF1_ISR 0072                            ?_PWM3_Initialize 0070  
                          ?_TMR1_Initialize 0070                                  _pAdcResult 002F  
                         _SYSTEM_Initialize 0654                     __end_of__initialization 0036  
                        ?_SYSTEM_Initialize 0070                                _BATTxPROTECT 0527  
                __end_of_PWM2_LoadDutyValue 0644                 PWM1_LoadDutyValue@dutyValue 0076  
                       ___bmul@multiplicand 0072                __size_of_ADC_StartConversion 0003  
                            __pcstackCOMMON 0070                                __pidataBANK0 0644  
                              __pidataBANK1 0388                         ??_SYSTEM_Initialize 0074  
                                 ?_TMR0_INT 0070                                   ?_TMR0_ISR 0070  
                                 ?_TMR1_INT 0070                                   ?_TMR1_ISR 0070  
             ?_TMR1_DefaultInterruptHandler 0070                               __end_of_srand 06CA  
                        _PWM1_LoadDutyValue 0622                            ?_PWM4_Initialize 0070  
                          ?_TMR2_Initialize 0070                              ?_INITxEXECUTER 0070  
                    __end_of_PMD_Initialize 068D                 PWM4_LoadDutyValue@dutyValue 0076  
                        __end_of_IOCCF1_ISR 06B4                     _ADC_GetConversionResult 072F  
                       ?_PWM1_LoadDutyValue 0076                                   ?_LedBrake 003F  
                                 ?_LedFlash 003F                            ??_EXECUTExEFFECT 0044  
                 __end_of_SYSTEM_Initialize 0663                                     ??_srand 0074  
                                __pbssBANK0 0020                            ?_PWM5_Initialize 0070  
                                   ?_LedOff 003F                                     ?_LedNom 003F  
                      ??_PWM1_LoadDutyValue 0078                            ??_FVR_Initialize 0072  
                                __pmaintext 0272                                     ?___bmul 0072  
          __end_of_TMR0_SetInterruptHandler 0729                                     ?___lmul 0072  
                                ??_TMR0_INT 0070                                  ??_TMR0_ISR 0070  
                                ??_TMR1_INT 0070                                  ??_TMR1_ISR 0072  
                __end_of_PWM6_LoadDutyValue 05D9                                  __pintentry 0004  
                                   _CCP1CON 030E                                     _CCP2CON 0312  
                            ___lmul@product 003A                            ?_PWM6_Initialize 0070  
                           ?_PMD_Initialize 0070                     __size_of_ADC_Initialize 0009  
                        _PWM5_LoadDutyValue 0581                                     _OSCCON1 088D  
                                   _OSCCON3 088F                                     _OSCSTAT 0890  
        __end_of_IOCCF1_SetInterruptHandler 072F                  _IOCCF1_SetInterruptHandler 0729  
                                ??_LedBrake 0040                                     _RCS_INT 073A  
                                   _OSCTUNE 0892                                     _PWM3DCH 0315  
                                   _PWM3DCL 0314                                     _PWM4DCH 0319  
                                   _PWM4DCL 0318                                     _PWM5DCH 031D  
                                ??_LedFlash 0040                                     _PWM5DCL 031C  
                                   _PWM6DCH 038D                                     _PWM3CON 0316  
                                   _PWM6DCL 038C                                     _PWM4CON 031A  
                                   _PWM5CON 031E                                     _PWM6CON 038E  
                                   _SLRCONA 1F3B                                     _SLRCONC 1F51  
                                   _RCSxLED 030A                            ?_TMR1_WriteTimer 0070  
                                   _CalcPwm 0501                         ?_PWM5_LoadDutyValue 0076  
                                   _CarrOff 0031                                     _LedSlFl 0039  
                           __size_of_LedOff 0031                             __size_of_LedNom 003E  
                      _ADC_InterruptHandler 002C                             __size_of___bmul 0011  
                           __size_of___lmul 0032                             ??_INITxEXECUTER 007A  
                         LedFlash@ReturnVal 0043                        ??_PWM5_LoadDutyValue 0078  
                 ??_ADC_GetConversionResult 0074                        __size_of_TMR1_Reload 0007  
                                   __ptext1 0654                                     __ptext2 0672  
                                   __ptext3 054C                                     __ptext4 071D  
                                   __ptext5 056A                                     __ptext6 0723  
                                   __ptext7 06D3                                     __ptext8 06DB  
                                   __ptext9 06E3              ??_TMR1_DefaultInterruptHandler 0070  
                                 _T1CONbits 020E                       _OSCILLATOR_Initialize 06B4  
                                 _T2CONbits 028E           __size_of_TMR1_SetInterruptHandler 0006  
                  ??_PIN_MANAGER_Initialize 0074                   ?_TMR1_SetInterruptHandler 0072  
                                 _T2HLTbits 028F                                   _IOCCFbits 1F55  
                                 _IOCCNbits 1F54                                   _IOCCPbits 1F53  
                __size_of_SYSTEM_Initialize 000F                                     clrloop0 0718  
                      end_of_initialization 0036                                   _T2RSTbits 0291  
                                   init_ram 0711                                     initloop 0712  
                               _UpdateVbatt 0033                __end_of_ADC_IsConversionDone 070A  
                                 LedOff@Led 003F                                   LedNom@Led 003F  
               __size_of_PWM4_LoadDutyValue 0016                    _TMR0_SetInterruptHandler 0723  
                                 _PORTCbits 000E                                   _AdcResult 004D  
                                 _TRISAbits 0012                         _ADC_StartConversion 074B  
                               _CCP1CONbits 030E                                 _CCP2CONbits 0312  
                __end_of_PWM3_LoadDutyValue 05AD                              __end_of_LedOff 0501  
                  __size_of_PWM1_Initialize 0008                              __end_of_LedNom 0408  
                      ?_ADC_StartConversion 0070                        _timer0ReloadVal16bit 007A  
                            __end_of___bmul 0622                              __end_of___lmul 049F  
                         __size_of_TMR0_INT 0004                           __size_of_TMR0_ISR 0012  
                         __size_of_TMR1_INT 0004                           __size_of_TMR1_ISR 0013  
                        _PWM2_LoadDutyValue 0633                              _ADC_Initialize 06CA  
                    ?_OSCILLATOR_Initialize 0070                         _EXECUTExEFFECT$1858 0046  
                       start_initialization 001A                    __size_of_PWM2_Initialize 0008  
                  __size_of_TMR0_Initialize 0017                         ?_PWM2_LoadDutyValue 0076  
           __size_of_PIN_MANAGER_Initialize 0032                           __size_of_LedBrake 0013  
                         __size_of_LedFlash 00B0                                    ??_LedOff 0040  
                                  ??_LedNom 0040                    __size_of_PIN_MANAGER_IOC 0005  
                     ??_ADC_StartConversion 0072                        ??_PWM2_LoadDutyValue 0078  
                  __size_of_PWM3_Initialize 0008                    __size_of_TMR1_Initialize 001E  
                                  ??___bmul 0073                 PWM2_LoadDutyValue@dutyValue 0076  
                          ??_PMD_Initialize 0072                                    ??___lmul 007A  
                                 _ReturnVal 002E                      __end_of_ADC_Initialize 06D3  
                               __pdataBANK0 004D                                 __pdataBANK1 00A0  
                                 _UpdateRcs 0034                 PWM5_LoadDutyValue@dutyValue 0076  
                               __pbssCOMMON 007A                                   ___latbits 0000  
                             __pcstackBANK0 003A                        _ADC_IsConversionDone 0703  
                        _PWM6_LoadDutyValue 05C3                    __size_of_PWM4_Initialize 0008  
                  __size_of_TMR2_Initialize 000E                                    ?_RCS_INT 0070  
               ?_IOCCF1_SetInterruptHandler 0072                                    ?_RCSxLED 0070  
                                  ?_CalcPwm 0070                         ?_PWM6_LoadDutyValue 0076  
                                  ?_LedSlFl 003F                       _TMR0_InterruptHandler 002A  
                                 __pnvBANK0 005D                 __size_of_PWM1_LoadDutyValue 0011  
                    _PIN_MANAGER_Initialize 043B                    __size_of_PWM5_Initialize 0008  
                         _ADC_SelectChannel 069A            __end_of_TMR1_SetInterruptHandler 0723  
                           ?_ADC_Initialize 0070                          ?_ADC_SelectChannel 0070  
                      ??_PWM6_LoadDutyValue 0078                           ??_PWM1_Initialize 0072  
              ??_INTERRUPT_InterruptManager 0072                                    _ADACTPPS 1EC3  
          ??_IOCCF1_DefaultInterruptHandler 0070             ?_IOCCF1_DefaultInterruptHandler 0070  
                       ??_ADC_SelectChannel 0072                       ?_ADC_IsConversionDone 0070  
                  __size_of_PWM6_Initialize 0008                                    _T2CLKCON 0290  
                            __size_of_srand 000A                             _AdcResultSample 0024  
                         ??_TMR0_Initialize 0074                           ??_PWM2_Initialize 0072  
                                  _LATAbits 0018                                   clear_ram0 0717  
                                  _PIE0bits 0716                                    _PIE4bits 071A  
                   __size_of_EXECUTExEFFECT 0031                   __end_of_ADC_SelectChannel 06A7  
                  __size_of_TMR1_WriteTimer 000F         __size_of_INTERRUPT_InterruptManager 0015  
                ??_TMR0_SetInterruptHandler 0074                                    _PIR0bits 070C  
                                  _PIR4bits 0710                               ??_TMR1_Reload 0072  
                                  _TMR0_INT 0747                                    _TMR0_ISR 05FF  
                                  _TMR1_INT 0743                                    _TMR1_ISR 05EC  
                         ??_PIN_MANAGER_IOC 0072                 __size_of_PWM5_LoadDutyValue 0016  
                     __end_of_INITxEXECUTER 069A                                    _AdcState 0030  
                         ??_TMR1_Initialize 0074                           ??_PWM3_Initialize 0072  
                                _ADCON0bits 009D                    ADC_SelectChannel@channel 0073  
                   __size_of_FVR_Initialize 0004                                    _LedBrake 05D9  
                                  _LedFlash 01C2                            __size_of_RCS_INT 0005  
                         ___lmul@multiplier 0072                            __size_of_RCSxLED 007E  
                           EXECUTExEFFECT@x 0049                            __size_of_CalcPwm 0026  
                         ??_PWM4_Initialize 0072                           ??_TMR2_Initialize 0072  
                             ?_BATTxPROTECT 0070                            __size_of_LedSlFl 0189  
                __end_of_PWM4_LoadDutyValue 05C3                    ?_ADC_GetConversionResult 0072  
                   ??_OSCILLATOR_Initialize 0072                                  CalcPwm@Led 003E  
                         ??_PWM5_Initialize 0072                    _TMR1_SetInterruptHandler 071D  
                        _PWM3_LoadDutyValue 0597                         __end_of_TMR1_Reload 0711  
                     _TMR1_InterruptHandler 0026                      ??_ADC_IsConversionDone 0072  
                                _T0CON0bits 059E                                    __ptext10 06EB  
                                  __ptext11 06F3                                    __ptext20 06C0  
                                  __ptext12 06FB                                    __ptext21 030A  
                                  __ptext13 0680                                  _T1GCONbits 020F  
                                  __ptext30 0501                                    __ptext22 0408  
                                  __ptext14 043B                                    __ptext31 0611  
                                  __ptext23 046D                                    __ptext15 0729  
                                  __ptext40 069A                                    __ptext32 0622  
                                  __ptext24 049F                                    __ptext16 06B4  
                                  __ptext41 0703                                    __ptext33 0633  
                                  __ptext25 05D9                                    __ptext17 073F  
                                  __ptext50 0735                                    __ptext42 072F  
                                  __ptext34 0581                                    __ptext26 03CA  
                                  __ptext18 06CA                                    __ptext51 06A7  
                                  __ptext35 0597                                    __ptext27 01C2  
                                  __ptext19 068D                                    __ptext52 0750  
                                  __ptext44 05EC                                    __ptext36 05AD  
                                  __ptext28 04D0                                    __ptext53 073A  
                                  __ptext45 074E                                    __ptext37 05C3  
                                  __ptext29 0039                                    __ptext54 070A  
                                  __ptext46 0743                                    __ptext38 0527  
                                  __ptext55 0663                                    __ptext47 05FF  
                                  __ptext39 074B                                    __ptext48 074F  
                                  __ptext49 0747                         ?_PWM3_LoadDutyValue 0076  
                                _IOCCF1_ISR 06A7                              ??_BATTxPROTECT 0072  
                         ??_PWM6_Initialize 0072                               __size_of_main 0098  
                             __size_of_rand 0033                                 LedBrake@Led 003F  
      __end_of_TMR0_DefaultInterruptHandler 0750       __size_of_TMR0_DefaultInterruptHandler 0001  
              _TMR0_DefaultInterruptHandler 074F                  __size_of_ADC_SelectChannel 000D  
                               LedFlash@Led 003F                        ??_PWM3_LoadDutyValue 0078  
                                  int$flags 007E          __end_of_INTERRUPT_InterruptManager 0019  
                _INTERRUPT_InterruptManager 0004                           ??_TMR1_WriteTimer 0072  
                                _INTCONbits 000B                                  _FVRCONbits 090C  
                  EXECUTExEFFECT@ReturnData 0048                                    intlevel1 0000  
               __end_of_ADC_StartConversion 074E                     ?_PIN_MANAGER_Initialize 0070  
           __end_of_ADC_GetConversionResult 0735                              _EXECUTExEFFECT 049F  
                           _PWM1_Initialize 06FB                            ??_ADC_Initialize 0072  
             ?_TMR0_DefaultInterruptHandler 0070                 __size_of_PWM2_LoadDutyValue 0011  
                               _TMR1_Reload 070A                                  LedSlFl@Led 003F  
               PWM3_LoadDutyValue@dutyValue 0076                              _FVR_Initialize 073F  
                           _TMR0_Initialize 056A                             _PWM2_Initialize 06F3  
                              _AdcResultAvg 0022                 PWM6_LoadDutyValue@dutyValue 0076  
                               ?_IOCCF1_ISR 0070              __end_of_PIN_MANAGER_Initialize 046D  
                    __end_of_EXECUTExEFFECT 04D0      __end_of_IOCCF1_DefaultInterruptHandler 0751  
   __size_of_IOCCF1_DefaultInterruptHandler 0001              _IOCCF1_DefaultInterruptHandler 0750  
                __end_of_PWM1_LoadDutyValue 0633                             _PIN_MANAGER_IOC 0735  
                   _IOCCF1_InterruptHandler 005D                             _TMR1_Initialize 054C  
                           _PWM3_Initialize 06EB  
