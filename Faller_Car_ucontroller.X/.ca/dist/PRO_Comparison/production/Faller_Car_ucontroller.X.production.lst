

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Dec 21 23:34:04 2022

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F15323
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	intentry,global,class=CODE,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,delta=2
    64                           	psect	text48,local,class=CODE,merge=1,delta=2
    65                           	psect	text49,local,class=CODE,merge=1,delta=2
    66                           	psect	text50,local,class=CODE,merge=1,delta=2
    67                           	psect	text51,local,class=CODE,merge=1,delta=2
    68                           	psect	text52,local,class=CODE,merge=1,delta=2
    69                           	psect	text53,local,class=CODE,merge=1,delta=2
    70                           	psect	text54,local,class=CODE,merge=1,delta=2
    71                           	psect	text55,local,class=CODE,merge=1,delta=2
    72                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    73                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    74                           	dabs	1,0x7E,2
    75  0000                     
    76                           ; Generated 19/07/2022 GMT
    77                           ; 
    78                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution. Publication is not required when
    92                           ;        this file is used in an embedded application.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC16F15323 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000E                     	;# 
   124  0012                     	;# 
   125  0014                     	;# 
   126  0018                     	;# 
   127  001A                     	;# 
   128  009B                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0119                     	;# 
   135  0119                     	;# 
   136  0119                     	;# 
   137  011A                     	;# 
   138  011A                     	;# 
   139  011A                     	;# 
   140  011B                     	;# 
   141  011B                     	;# 
   142  011B                     	;# 
   143  011B                     	;# 
   144  011B                     	;# 
   145  011C                     	;# 
   146  011C                     	;# 
   147  011C                     	;# 
   148  011D                     	;# 
   149  011D                     	;# 
   150  011D                     	;# 
   151  011E                     	;# 
   152  011E                     	;# 
   153  011E                     	;# 
   154  011F                     	;# 
   155  011F                     	;# 
   156  011F                     	;# 
   157  011F                     	;# 
   158  011F                     	;# 
   159  018C                     	;# 
   160  018D                     	;# 
   161  018E                     	;# 
   162  018F                     	;# 
   163  0190                     	;# 
   164  0191                     	;# 
   165  0192                     	;# 
   166  020C                     	;# 
   167  020C                     	;# 
   168  020D                     	;# 
   169  020E                     	;# 
   170  020F                     	;# 
   171  020F                     	;# 
   172  0210                     	;# 
   173  0210                     	;# 
   174  0211                     	;# 
   175  0211                     	;# 
   176  028C                     	;# 
   177  028C                     	;# 
   178  028D                     	;# 
   179  028D                     	;# 
   180  028E                     	;# 
   181  028F                     	;# 
   182  0290                     	;# 
   183  0291                     	;# 
   184  030C                     	;# 
   185  030C                     	;# 
   186  030D                     	;# 
   187  030E                     	;# 
   188  030F                     	;# 
   189  0310                     	;# 
   190  0310                     	;# 
   191  0311                     	;# 
   192  0312                     	;# 
   193  0313                     	;# 
   194  0314                     	;# 
   195  0314                     	;# 
   196  0315                     	;# 
   197  0316                     	;# 
   198  0318                     	;# 
   199  0318                     	;# 
   200  0319                     	;# 
   201  031A                     	;# 
   202  031C                     	;# 
   203  031C                     	;# 
   204  031D                     	;# 
   205  031E                     	;# 
   206  038C                     	;# 
   207  038C                     	;# 
   208  038D                     	;# 
   209  038E                     	;# 
   210  058C                     	;# 
   211  058C                     	;# 
   212  058D                     	;# 
   213  058E                     	;# 
   214  058F                     	;# 
   215  058F                     	;# 
   216  0590                     	;# 
   217  0591                     	;# 
   218  0592                     	;# 
   219  0593                     	;# 
   220  059C                     	;# 
   221  059C                     	;# 
   222  059D                     	;# 
   223  059D                     	;# 
   224  059E                     	;# 
   225  059F                     	;# 
   226  060C                     	;# 
   227  060D                     	;# 
   228  060E                     	;# 
   229  060F                     	;# 
   230  0610                     	;# 
   231  0611                     	;# 
   232  0612                     	;# 
   233  0613                     	;# 
   234  0614                     	;# 
   235  070C                     	;# 
   236  070D                     	;# 
   237  070E                     	;# 
   238  070F                     	;# 
   239  0710                     	;# 
   240  0711                     	;# 
   241  0712                     	;# 
   242  0713                     	;# 
   243  0716                     	;# 
   244  0717                     	;# 
   245  0718                     	;# 
   246  0719                     	;# 
   247  071A                     	;# 
   248  071B                     	;# 
   249  071C                     	;# 
   250  071D                     	;# 
   251  0796                     	;# 
   252  0797                     	;# 
   253  0798                     	;# 
   254  0799                     	;# 
   255  079A                     	;# 
   256  079B                     	;# 
   257  080C                     	;# 
   258  080D                     	;# 
   259  080E                     	;# 
   260  080F                     	;# 
   261  0810                     	;# 
   262  0811                     	;# 
   263  0812                     	;# 
   264  0813                     	;# 
   265  0814                     	;# 
   266  081A                     	;# 
   267  081A                     	;# 
   268  081B                     	;# 
   269  081C                     	;# 
   270  081C                     	;# 
   271  081D                     	;# 
   272  081E                     	;# 
   273  081F                     	;# 
   274  088C                     	;# 
   275  088D                     	;# 
   276  088E                     	;# 
   277  088F                     	;# 
   278  0890                     	;# 
   279  0891                     	;# 
   280  0892                     	;# 
   281  0893                     	;# 
   282  0895                     	;# 
   283  0896                     	;# 
   284  090C                     	;# 
   285  090E                     	;# 
   286  090F                     	;# 
   287  091F                     	;# 
   288  098F                     	;# 
   289  098F                     	;# 
   290  0990                     	;# 
   291  0991                     	;# 
   292  0992                     	;# 
   293  0993                     	;# 
   294  0994                     	;# 
   295  0995                     	;# 
   296  0996                     	;# 
   297  0997                     	;# 
   298  1E0F                     	;# 
   299  1E10                     	;# 
   300  1E11                     	;# 
   301  1E12                     	;# 
   302  1E13                     	;# 
   303  1E14                     	;# 
   304  1E15                     	;# 
   305  1E16                     	;# 
   306  1E17                     	;# 
   307  1E18                     	;# 
   308  1E19                     	;# 
   309  1E1A                     	;# 
   310  1E1B                     	;# 
   311  1E1C                     	;# 
   312  1E1D                     	;# 
   313  1E1E                     	;# 
   314  1E1F                     	;# 
   315  1E20                     	;# 
   316  1E21                     	;# 
   317  1E22                     	;# 
   318  1E23                     	;# 
   319  1E24                     	;# 
   320  1E25                     	;# 
   321  1E26                     	;# 
   322  1E27                     	;# 
   323  1E28                     	;# 
   324  1E29                     	;# 
   325  1E2A                     	;# 
   326  1E2B                     	;# 
   327  1E2C                     	;# 
   328  1E2D                     	;# 
   329  1E2E                     	;# 
   330  1E2F                     	;# 
   331  1E30                     	;# 
   332  1E31                     	;# 
   333  1E32                     	;# 
   334  1E33                     	;# 
   335  1E34                     	;# 
   336  1E35                     	;# 
   337  1E36                     	;# 
   338  1E37                     	;# 
   339  1E8F                     	;# 
   340  1E90                     	;# 
   341  1E91                     	;# 
   342  1E92                     	;# 
   343  1E93                     	;# 
   344  1E9C                     	;# 
   345  1EA1                     	;# 
   346  1EA2                     	;# 
   347  1EB1                     	;# 
   348  1EBB                     	;# 
   349  1EBC                     	;# 
   350  1EBD                     	;# 
   351  1EBE                     	;# 
   352  1EC3                     	;# 
   353  1EC5                     	;# 
   354  1EC6                     	;# 
   355  1EC7                     	;# 
   356  1ECB                     	;# 
   357  1ECC                     	;# 
   358  1F10                     	;# 
   359  1F11                     	;# 
   360  1F12                     	;# 
   361  1F13                     	;# 
   362  1F14                     	;# 
   363  1F15                     	;# 
   364  1F20                     	;# 
   365  1F21                     	;# 
   366  1F22                     	;# 
   367  1F23                     	;# 
   368  1F24                     	;# 
   369  1F25                     	;# 
   370  1F38                     	;# 
   371  1F39                     	;# 
   372  1F3A                     	;# 
   373  1F3B                     	;# 
   374  1F3C                     	;# 
   375  1F3D                     	;# 
   376  1F3E                     	;# 
   377  1F3F                     	;# 
   378  1F4E                     	;# 
   379  1F4F                     	;# 
   380  1F50                     	;# 
   381  1F51                     	;# 
   382  1F52                     	;# 
   383  1F53                     	;# 
   384  1F54                     	;# 
   385  1F55                     	;# 
   386  1FE4                     	;# 
   387  1FE5                     	;# 
   388  1FE6                     	;# 
   389  1FE7                     	;# 
   390  1FE8                     	;# 
   391  1FE8                     	;# 
   392  1FE9                     	;# 
   393  1FEA                     	;# 
   394  1FEA                     	;# 
   395  1FEB                     	;# 
   396  1FED                     	;# 
   397  1FEE                     	;# 
   398  1FEF                     	;# 
   399  0000                     	;# 
   400  0001                     	;# 
   401  0002                     	;# 
   402  0003                     	;# 
   403  0004                     	;# 
   404  0005                     	;# 
   405  0006                     	;# 
   406  0007                     	;# 
   407  0008                     	;# 
   408  0009                     	;# 
   409  000A                     	;# 
   410  000B                     	;# 
   411  000C                     	;# 
   412  000E                     	;# 
   413  0012                     	;# 
   414  0014                     	;# 
   415  0018                     	;# 
   416  001A                     	;# 
   417  009B                     	;# 
   418  009B                     	;# 
   419  009C                     	;# 
   420  009D                     	;# 
   421  009E                     	;# 
   422  009F                     	;# 
   423  0119                     	;# 
   424  0119                     	;# 
   425  0119                     	;# 
   426  011A                     	;# 
   427  011A                     	;# 
   428  011A                     	;# 
   429  011B                     	;# 
   430  011B                     	;# 
   431  011B                     	;# 
   432  011B                     	;# 
   433  011B                     	;# 
   434  011C                     	;# 
   435  011C                     	;# 
   436  011C                     	;# 
   437  011D                     	;# 
   438  011D                     	;# 
   439  011D                     	;# 
   440  011E                     	;# 
   441  011E                     	;# 
   442  011E                     	;# 
   443  011F                     	;# 
   444  011F                     	;# 
   445  011F                     	;# 
   446  011F                     	;# 
   447  011F                     	;# 
   448  018C                     	;# 
   449  018D                     	;# 
   450  018E                     	;# 
   451  018F                     	;# 
   452  0190                     	;# 
   453  0191                     	;# 
   454  0192                     	;# 
   455  020C                     	;# 
   456  020C                     	;# 
   457  020D                     	;# 
   458  020E                     	;# 
   459  020F                     	;# 
   460  020F                     	;# 
   461  0210                     	;# 
   462  0210                     	;# 
   463  0211                     	;# 
   464  0211                     	;# 
   465  028C                     	;# 
   466  028C                     	;# 
   467  028D                     	;# 
   468  028D                     	;# 
   469  028E                     	;# 
   470  028F                     	;# 
   471  0290                     	;# 
   472  0291                     	;# 
   473  030C                     	;# 
   474  030C                     	;# 
   475  030D                     	;# 
   476  030E                     	;# 
   477  030F                     	;# 
   478  0310                     	;# 
   479  0310                     	;# 
   480  0311                     	;# 
   481  0312                     	;# 
   482  0313                     	;# 
   483  0314                     	;# 
   484  0314                     	;# 
   485  0315                     	;# 
   486  0316                     	;# 
   487  0318                     	;# 
   488  0318                     	;# 
   489  0319                     	;# 
   490  031A                     	;# 
   491  031C                     	;# 
   492  031C                     	;# 
   493  031D                     	;# 
   494  031E                     	;# 
   495  038C                     	;# 
   496  038C                     	;# 
   497  038D                     	;# 
   498  038E                     	;# 
   499  058C                     	;# 
   500  058C                     	;# 
   501  058D                     	;# 
   502  058E                     	;# 
   503  058F                     	;# 
   504  058F                     	;# 
   505  0590                     	;# 
   506  0591                     	;# 
   507  0592                     	;# 
   508  0593                     	;# 
   509  059C                     	;# 
   510  059C                     	;# 
   511  059D                     	;# 
   512  059D                     	;# 
   513  059E                     	;# 
   514  059F                     	;# 
   515  060C                     	;# 
   516  060D                     	;# 
   517  060E                     	;# 
   518  060F                     	;# 
   519  0610                     	;# 
   520  0611                     	;# 
   521  0612                     	;# 
   522  0613                     	;# 
   523  0614                     	;# 
   524  070C                     	;# 
   525  070D                     	;# 
   526  070E                     	;# 
   527  070F                     	;# 
   528  0710                     	;# 
   529  0711                     	;# 
   530  0712                     	;# 
   531  0713                     	;# 
   532  0716                     	;# 
   533  0717                     	;# 
   534  0718                     	;# 
   535  0719                     	;# 
   536  071A                     	;# 
   537  071B                     	;# 
   538  071C                     	;# 
   539  071D                     	;# 
   540  0796                     	;# 
   541  0797                     	;# 
   542  0798                     	;# 
   543  0799                     	;# 
   544  079A                     	;# 
   545  079B                     	;# 
   546  080C                     	;# 
   547  080D                     	;# 
   548  080E                     	;# 
   549  080F                     	;# 
   550  0810                     	;# 
   551  0811                     	;# 
   552  0812                     	;# 
   553  0813                     	;# 
   554  0814                     	;# 
   555  081A                     	;# 
   556  081A                     	;# 
   557  081B                     	;# 
   558  081C                     	;# 
   559  081C                     	;# 
   560  081D                     	;# 
   561  081E                     	;# 
   562  081F                     	;# 
   563  088C                     	;# 
   564  088D                     	;# 
   565  088E                     	;# 
   566  088F                     	;# 
   567  0890                     	;# 
   568  0891                     	;# 
   569  0892                     	;# 
   570  0893                     	;# 
   571  0895                     	;# 
   572  0896                     	;# 
   573  090C                     	;# 
   574  090E                     	;# 
   575  090F                     	;# 
   576  091F                     	;# 
   577  098F                     	;# 
   578  098F                     	;# 
   579  0990                     	;# 
   580  0991                     	;# 
   581  0992                     	;# 
   582  0993                     	;# 
   583  0994                     	;# 
   584  0995                     	;# 
   585  0996                     	;# 
   586  0997                     	;# 
   587  1E0F                     	;# 
   588  1E10                     	;# 
   589  1E11                     	;# 
   590  1E12                     	;# 
   591  1E13                     	;# 
   592  1E14                     	;# 
   593  1E15                     	;# 
   594  1E16                     	;# 
   595  1E17                     	;# 
   596  1E18                     	;# 
   597  1E19                     	;# 
   598  1E1A                     	;# 
   599  1E1B                     	;# 
   600  1E1C                     	;# 
   601  1E1D                     	;# 
   602  1E1E                     	;# 
   603  1E1F                     	;# 
   604  1E20                     	;# 
   605  1E21                     	;# 
   606  1E22                     	;# 
   607  1E23                     	;# 
   608  1E24                     	;# 
   609  1E25                     	;# 
   610  1E26                     	;# 
   611  1E27                     	;# 
   612  1E28                     	;# 
   613  1E29                     	;# 
   614  1E2A                     	;# 
   615  1E2B                     	;# 
   616  1E2C                     	;# 
   617  1E2D                     	;# 
   618  1E2E                     	;# 
   619  1E2F                     	;# 
   620  1E30                     	;# 
   621  1E31                     	;# 
   622  1E32                     	;# 
   623  1E33                     	;# 
   624  1E34                     	;# 
   625  1E35                     	;# 
   626  1E36                     	;# 
   627  1E37                     	;# 
   628  1E8F                     	;# 
   629  1E90                     	;# 
   630  1E91                     	;# 
   631  1E92                     	;# 
   632  1E93                     	;# 
   633  1E9C                     	;# 
   634  1EA1                     	;# 
   635  1EA2                     	;# 
   636  1EB1                     	;# 
   637  1EBB                     	;# 
   638  1EBC                     	;# 
   639  1EBD                     	;# 
   640  1EBE                     	;# 
   641  1EC3                     	;# 
   642  1EC5                     	;# 
   643  1EC6                     	;# 
   644  1EC7                     	;# 
   645  1ECB                     	;# 
   646  1ECC                     	;# 
   647  1F10                     	;# 
   648  1F11                     	;# 
   649  1F12                     	;# 
   650  1F13                     	;# 
   651  1F14                     	;# 
   652  1F15                     	;# 
   653  1F20                     	;# 
   654  1F21                     	;# 
   655  1F22                     	;# 
   656  1F23                     	;# 
   657  1F24                     	;# 
   658  1F25                     	;# 
   659  1F38                     	;# 
   660  1F39                     	;# 
   661  1F3A                     	;# 
   662  1F3B                     	;# 
   663  1F3C                     	;# 
   664  1F3D                     	;# 
   665  1F3E                     	;# 
   666  1F3F                     	;# 
   667  1F4E                     	;# 
   668  1F4F                     	;# 
   669  1F50                     	;# 
   670  1F51                     	;# 
   671  1F52                     	;# 
   672  1F53                     	;# 
   673  1F54                     	;# 
   674  1F55                     	;# 
   675  1FE4                     	;# 
   676  1FE5                     	;# 
   677  1FE6                     	;# 
   678  1FE7                     	;# 
   679  1FE8                     	;# 
   680  1FE8                     	;# 
   681  1FE9                     	;# 
   682  1FEA                     	;# 
   683  1FEA                     	;# 
   684  1FEB                     	;# 
   685  1FED                     	;# 
   686  1FEE                     	;# 
   687  1FEF                     	;# 
   688  0000                     	;# 
   689  0001                     	;# 
   690  0002                     	;# 
   691  0003                     	;# 
   692  0004                     	;# 
   693  0005                     	;# 
   694  0006                     	;# 
   695  0007                     	;# 
   696  0008                     	;# 
   697  0009                     	;# 
   698  000A                     	;# 
   699  000B                     	;# 
   700  000C                     	;# 
   701  000E                     	;# 
   702  0012                     	;# 
   703  0014                     	;# 
   704  0018                     	;# 
   705  001A                     	;# 
   706  009B                     	;# 
   707  009B                     	;# 
   708  009C                     	;# 
   709  009D                     	;# 
   710  009E                     	;# 
   711  009F                     	;# 
   712  0119                     	;# 
   713  0119                     	;# 
   714  0119                     	;# 
   715  011A                     	;# 
   716  011A                     	;# 
   717  011A                     	;# 
   718  011B                     	;# 
   719  011B                     	;# 
   720  011B                     	;# 
   721  011B                     	;# 
   722  011B                     	;# 
   723  011C                     	;# 
   724  011C                     	;# 
   725  011C                     	;# 
   726  011D                     	;# 
   727  011D                     	;# 
   728  011D                     	;# 
   729  011E                     	;# 
   730  011E                     	;# 
   731  011E                     	;# 
   732  011F                     	;# 
   733  011F                     	;# 
   734  011F                     	;# 
   735  011F                     	;# 
   736  011F                     	;# 
   737  018C                     	;# 
   738  018D                     	;# 
   739  018E                     	;# 
   740  018F                     	;# 
   741  0190                     	;# 
   742  0191                     	;# 
   743  0192                     	;# 
   744  020C                     	;# 
   745  020C                     	;# 
   746  020D                     	;# 
   747  020E                     	;# 
   748  020F                     	;# 
   749  020F                     	;# 
   750  0210                     	;# 
   751  0210                     	;# 
   752  0211                     	;# 
   753  0211                     	;# 
   754  028C                     	;# 
   755  028C                     	;# 
   756  028D                     	;# 
   757  028D                     	;# 
   758  028E                     	;# 
   759  028F                     	;# 
   760  0290                     	;# 
   761  0291                     	;# 
   762  030C                     	;# 
   763  030C                     	;# 
   764  030D                     	;# 
   765  030E                     	;# 
   766  030F                     	;# 
   767  0310                     	;# 
   768  0310                     	;# 
   769  0311                     	;# 
   770  0312                     	;# 
   771  0313                     	;# 
   772  0314                     	;# 
   773  0314                     	;# 
   774  0315                     	;# 
   775  0316                     	;# 
   776  0318                     	;# 
   777  0318                     	;# 
   778  0319                     	;# 
   779  031A                     	;# 
   780  031C                     	;# 
   781  031C                     	;# 
   782  031D                     	;# 
   783  031E                     	;# 
   784  038C                     	;# 
   785  038C                     	;# 
   786  038D                     	;# 
   787  038E                     	;# 
   788  058C                     	;# 
   789  058C                     	;# 
   790  058D                     	;# 
   791  058E                     	;# 
   792  058F                     	;# 
   793  058F                     	;# 
   794  0590                     	;# 
   795  0591                     	;# 
   796  0592                     	;# 
   797  0593                     	;# 
   798  059C                     	;# 
   799  059C                     	;# 
   800  059D                     	;# 
   801  059D                     	;# 
   802  059E                     	;# 
   803  059F                     	;# 
   804  060C                     	;# 
   805  060D                     	;# 
   806  060E                     	;# 
   807  060F                     	;# 
   808  0610                     	;# 
   809  0611                     	;# 
   810  0612                     	;# 
   811  0613                     	;# 
   812  0614                     	;# 
   813  070C                     	;# 
   814  070D                     	;# 
   815  070E                     	;# 
   816  070F                     	;# 
   817  0710                     	;# 
   818  0711                     	;# 
   819  0712                     	;# 
   820  0713                     	;# 
   821  0716                     	;# 
   822  0717                     	;# 
   823  0718                     	;# 
   824  0719                     	;# 
   825  071A                     	;# 
   826  071B                     	;# 
   827  071C                     	;# 
   828  071D                     	;# 
   829  0796                     	;# 
   830  0797                     	;# 
   831  0798                     	;# 
   832  0799                     	;# 
   833  079A                     	;# 
   834  079B                     	;# 
   835  080C                     	;# 
   836  080D                     	;# 
   837  080E                     	;# 
   838  080F                     	;# 
   839  0810                     	;# 
   840  0811                     	;# 
   841  0812                     	;# 
   842  0813                     	;# 
   843  0814                     	;# 
   844  081A                     	;# 
   845  081A                     	;# 
   846  081B                     	;# 
   847  081C                     	;# 
   848  081C                     	;# 
   849  081D                     	;# 
   850  081E                     	;# 
   851  081F                     	;# 
   852  088C                     	;# 
   853  088D                     	;# 
   854  088E                     	;# 
   855  088F                     	;# 
   856  0890                     	;# 
   857  0891                     	;# 
   858  0892                     	;# 
   859  0893                     	;# 
   860  0895                     	;# 
   861  0896                     	;# 
   862  090C                     	;# 
   863  090E                     	;# 
   864  090F                     	;# 
   865  091F                     	;# 
   866  098F                     	;# 
   867  098F                     	;# 
   868  0990                     	;# 
   869  0991                     	;# 
   870  0992                     	;# 
   871  0993                     	;# 
   872  0994                     	;# 
   873  0995                     	;# 
   874  0996                     	;# 
   875  0997                     	;# 
   876  1E0F                     	;# 
   877  1E10                     	;# 
   878  1E11                     	;# 
   879  1E12                     	;# 
   880  1E13                     	;# 
   881  1E14                     	;# 
   882  1E15                     	;# 
   883  1E16                     	;# 
   884  1E17                     	;# 
   885  1E18                     	;# 
   886  1E19                     	;# 
   887  1E1A                     	;# 
   888  1E1B                     	;# 
   889  1E1C                     	;# 
   890  1E1D                     	;# 
   891  1E1E                     	;# 
   892  1E1F                     	;# 
   893  1E20                     	;# 
   894  1E21                     	;# 
   895  1E22                     	;# 
   896  1E23                     	;# 
   897  1E24                     	;# 
   898  1E25                     	;# 
   899  1E26                     	;# 
   900  1E27                     	;# 
   901  1E28                     	;# 
   902  1E29                     	;# 
   903  1E2A                     	;# 
   904  1E2B                     	;# 
   905  1E2C                     	;# 
   906  1E2D                     	;# 
   907  1E2E                     	;# 
   908  1E2F                     	;# 
   909  1E30                     	;# 
   910  1E31                     	;# 
   911  1E32                     	;# 
   912  1E33                     	;# 
   913  1E34                     	;# 
   914  1E35                     	;# 
   915  1E36                     	;# 
   916  1E37                     	;# 
   917  1E8F                     	;# 
   918  1E90                     	;# 
   919  1E91                     	;# 
   920  1E92                     	;# 
   921  1E93                     	;# 
   922  1E9C                     	;# 
   923  1EA1                     	;# 
   924  1EA2                     	;# 
   925  1EB1                     	;# 
   926  1EBB                     	;# 
   927  1EBC                     	;# 
   928  1EBD                     	;# 
   929  1EBE                     	;# 
   930  1EC3                     	;# 
   931  1EC5                     	;# 
   932  1EC6                     	;# 
   933  1EC7                     	;# 
   934  1ECB                     	;# 
   935  1ECC                     	;# 
   936  1F10                     	;# 
   937  1F11                     	;# 
   938  1F12                     	;# 
   939  1F13                     	;# 
   940  1F14                     	;# 
   941  1F15                     	;# 
   942  1F20                     	;# 
   943  1F21                     	;# 
   944  1F22                     	;# 
   945  1F23                     	;# 
   946  1F24                     	;# 
   947  1F25                     	;# 
   948  1F38                     	;# 
   949  1F39                     	;# 
   950  1F3A                     	;# 
   951  1F3B                     	;# 
   952  1F3C                     	;# 
   953  1F3D                     	;# 
   954  1F3E                     	;# 
   955  1F3F                     	;# 
   956  1F4E                     	;# 
   957  1F4F                     	;# 
   958  1F50                     	;# 
   959  1F51                     	;# 
   960  1F52                     	;# 
   961  1F53                     	;# 
   962  1F54                     	;# 
   963  1F55                     	;# 
   964  1FE4                     	;# 
   965  1FE5                     	;# 
   966  1FE6                     	;# 
   967  1FE7                     	;# 
   968  1FE8                     	;# 
   969  1FE8                     	;# 
   970  1FE9                     	;# 
   971  1FEA                     	;# 
   972  1FEA                     	;# 
   973  1FEB                     	;# 
   974  1FED                     	;# 
   975  1FEE                     	;# 
   976  1FEF                     	;# 
   977  0000                     	;# 
   978  0001                     	;# 
   979  0002                     	;# 
   980  0003                     	;# 
   981  0004                     	;# 
   982  0005                     	;# 
   983  0006                     	;# 
   984  0007                     	;# 
   985  0008                     	;# 
   986  0009                     	;# 
   987  000A                     	;# 
   988  000B                     	;# 
   989  000C                     	;# 
   990  000E                     	;# 
   991  0012                     	;# 
   992  0014                     	;# 
   993  0018                     	;# 
   994  001A                     	;# 
   995  009B                     	;# 
   996  009B                     	;# 
   997  009C                     	;# 
   998  009D                     	;# 
   999  009E                     	;# 
  1000  009F                     	;# 
  1001  0119                     	;# 
  1002  0119                     	;# 
  1003  0119                     	;# 
  1004  011A                     	;# 
  1005  011A                     	;# 
  1006  011A                     	;# 
  1007  011B                     	;# 
  1008  011B                     	;# 
  1009  011B                     	;# 
  1010  011B                     	;# 
  1011  011B                     	;# 
  1012  011C                     	;# 
  1013  011C                     	;# 
  1014  011C                     	;# 
  1015  011D                     	;# 
  1016  011D                     	;# 
  1017  011D                     	;# 
  1018  011E                     	;# 
  1019  011E                     	;# 
  1020  011E                     	;# 
  1021  011F                     	;# 
  1022  011F                     	;# 
  1023  011F                     	;# 
  1024  011F                     	;# 
  1025  011F                     	;# 
  1026  018C                     	;# 
  1027  018D                     	;# 
  1028  018E                     	;# 
  1029  018F                     	;# 
  1030  0190                     	;# 
  1031  0191                     	;# 
  1032  0192                     	;# 
  1033  020C                     	;# 
  1034  020C                     	;# 
  1035  020D                     	;# 
  1036  020E                     	;# 
  1037  020F                     	;# 
  1038  020F                     	;# 
  1039  0210                     	;# 
  1040  0210                     	;# 
  1041  0211                     	;# 
  1042  0211                     	;# 
  1043  028C                     	;# 
  1044  028C                     	;# 
  1045  028D                     	;# 
  1046  028D                     	;# 
  1047  028E                     	;# 
  1048  028F                     	;# 
  1049  0290                     	;# 
  1050  0291                     	;# 
  1051  030C                     	;# 
  1052  030C                     	;# 
  1053  030D                     	;# 
  1054  030E                     	;# 
  1055  030F                     	;# 
  1056  0310                     	;# 
  1057  0310                     	;# 
  1058  0311                     	;# 
  1059  0312                     	;# 
  1060  0313                     	;# 
  1061  0314                     	;# 
  1062  0314                     	;# 
  1063  0315                     	;# 
  1064  0316                     	;# 
  1065  0318                     	;# 
  1066  0318                     	;# 
  1067  0319                     	;# 
  1068  031A                     	;# 
  1069  031C                     	;# 
  1070  031C                     	;# 
  1071  031D                     	;# 
  1072  031E                     	;# 
  1073  038C                     	;# 
  1074  038C                     	;# 
  1075  038D                     	;# 
  1076  038E                     	;# 
  1077  058C                     	;# 
  1078  058C                     	;# 
  1079  058D                     	;# 
  1080  058E                     	;# 
  1081  058F                     	;# 
  1082  058F                     	;# 
  1083  0590                     	;# 
  1084  0591                     	;# 
  1085  0592                     	;# 
  1086  0593                     	;# 
  1087  059C                     	;# 
  1088  059C                     	;# 
  1089  059D                     	;# 
  1090  059D                     	;# 
  1091  059E                     	;# 
  1092  059F                     	;# 
  1093  060C                     	;# 
  1094  060D                     	;# 
  1095  060E                     	;# 
  1096  060F                     	;# 
  1097  0610                     	;# 
  1098  0611                     	;# 
  1099  0612                     	;# 
  1100  0613                     	;# 
  1101  0614                     	;# 
  1102  070C                     	;# 
  1103  070D                     	;# 
  1104  070E                     	;# 
  1105  070F                     	;# 
  1106  0710                     	;# 
  1107  0711                     	;# 
  1108  0712                     	;# 
  1109  0713                     	;# 
  1110  0716                     	;# 
  1111  0717                     	;# 
  1112  0718                     	;# 
  1113  0719                     	;# 
  1114  071A                     	;# 
  1115  071B                     	;# 
  1116  071C                     	;# 
  1117  071D                     	;# 
  1118  0796                     	;# 
  1119  0797                     	;# 
  1120  0798                     	;# 
  1121  0799                     	;# 
  1122  079A                     	;# 
  1123  079B                     	;# 
  1124  080C                     	;# 
  1125  080D                     	;# 
  1126  080E                     	;# 
  1127  080F                     	;# 
  1128  0810                     	;# 
  1129  0811                     	;# 
  1130  0812                     	;# 
  1131  0813                     	;# 
  1132  0814                     	;# 
  1133  081A                     	;# 
  1134  081A                     	;# 
  1135  081B                     	;# 
  1136  081C                     	;# 
  1137  081C                     	;# 
  1138  081D                     	;# 
  1139  081E                     	;# 
  1140  081F                     	;# 
  1141  088C                     	;# 
  1142  088D                     	;# 
  1143  088E                     	;# 
  1144  088F                     	;# 
  1145  0890                     	;# 
  1146  0891                     	;# 
  1147  0892                     	;# 
  1148  0893                     	;# 
  1149  0895                     	;# 
  1150  0896                     	;# 
  1151  090C                     	;# 
  1152  090E                     	;# 
  1153  090F                     	;# 
  1154  091F                     	;# 
  1155  098F                     	;# 
  1156  098F                     	;# 
  1157  0990                     	;# 
  1158  0991                     	;# 
  1159  0992                     	;# 
  1160  0993                     	;# 
  1161  0994                     	;# 
  1162  0995                     	;# 
  1163  0996                     	;# 
  1164  0997                     	;# 
  1165  1E0F                     	;# 
  1166  1E10                     	;# 
  1167  1E11                     	;# 
  1168  1E12                     	;# 
  1169  1E13                     	;# 
  1170  1E14                     	;# 
  1171  1E15                     	;# 
  1172  1E16                     	;# 
  1173  1E17                     	;# 
  1174  1E18                     	;# 
  1175  1E19                     	;# 
  1176  1E1A                     	;# 
  1177  1E1B                     	;# 
  1178  1E1C                     	;# 
  1179  1E1D                     	;# 
  1180  1E1E                     	;# 
  1181  1E1F                     	;# 
  1182  1E20                     	;# 
  1183  1E21                     	;# 
  1184  1E22                     	;# 
  1185  1E23                     	;# 
  1186  1E24                     	;# 
  1187  1E25                     	;# 
  1188  1E26                     	;# 
  1189  1E27                     	;# 
  1190  1E28                     	;# 
  1191  1E29                     	;# 
  1192  1E2A                     	;# 
  1193  1E2B                     	;# 
  1194  1E2C                     	;# 
  1195  1E2D                     	;# 
  1196  1E2E                     	;# 
  1197  1E2F                     	;# 
  1198  1E30                     	;# 
  1199  1E31                     	;# 
  1200  1E32                     	;# 
  1201  1E33                     	;# 
  1202  1E34                     	;# 
  1203  1E35                     	;# 
  1204  1E36                     	;# 
  1205  1E37                     	;# 
  1206  1E8F                     	;# 
  1207  1E90                     	;# 
  1208  1E91                     	;# 
  1209  1E92                     	;# 
  1210  1E93                     	;# 
  1211  1E9C                     	;# 
  1212  1EA1                     	;# 
  1213  1EA2                     	;# 
  1214  1EB1                     	;# 
  1215  1EBB                     	;# 
  1216  1EBC                     	;# 
  1217  1EBD                     	;# 
  1218  1EBE                     	;# 
  1219  1EC3                     	;# 
  1220  1EC5                     	;# 
  1221  1EC6                     	;# 
  1222  1EC7                     	;# 
  1223  1ECB                     	;# 
  1224  1ECC                     	;# 
  1225  1F10                     	;# 
  1226  1F11                     	;# 
  1227  1F12                     	;# 
  1228  1F13                     	;# 
  1229  1F14                     	;# 
  1230  1F15                     	;# 
  1231  1F20                     	;# 
  1232  1F21                     	;# 
  1233  1F22                     	;# 
  1234  1F23                     	;# 
  1235  1F24                     	;# 
  1236  1F25                     	;# 
  1237  1F38                     	;# 
  1238  1F39                     	;# 
  1239  1F3A                     	;# 
  1240  1F3B                     	;# 
  1241  1F3C                     	;# 
  1242  1F3D                     	;# 
  1243  1F3E                     	;# 
  1244  1F3F                     	;# 
  1245  1F4E                     	;# 
  1246  1F4F                     	;# 
  1247  1F50                     	;# 
  1248  1F51                     	;# 
  1249  1F52                     	;# 
  1250  1F53                     	;# 
  1251  1F54                     	;# 
  1252  1F55                     	;# 
  1253  1FE4                     	;# 
  1254  1FE5                     	;# 
  1255  1FE6                     	;# 
  1256  1FE7                     	;# 
  1257  1FE8                     	;# 
  1258  1FE8                     	;# 
  1259  1FE9                     	;# 
  1260  1FEA                     	;# 
  1261  1FEA                     	;# 
  1262  1FEB                     	;# 
  1263  1FED                     	;# 
  1264  1FEE                     	;# 
  1265  1FEF                     	;# 
  1266  0000                     	;# 
  1267  0001                     	;# 
  1268  0002                     	;# 
  1269  0003                     	;# 
  1270  0004                     	;# 
  1271  0005                     	;# 
  1272  0006                     	;# 
  1273  0007                     	;# 
  1274  0008                     	;# 
  1275  0009                     	;# 
  1276  000A                     	;# 
  1277  000B                     	;# 
  1278  000C                     	;# 
  1279  000E                     	;# 
  1280  0012                     	;# 
  1281  0014                     	;# 
  1282  0018                     	;# 
  1283  001A                     	;# 
  1284  009B                     	;# 
  1285  009B                     	;# 
  1286  009C                     	;# 
  1287  009D                     	;# 
  1288  009E                     	;# 
  1289  009F                     	;# 
  1290  0119                     	;# 
  1291  0119                     	;# 
  1292  0119                     	;# 
  1293  011A                     	;# 
  1294  011A                     	;# 
  1295  011A                     	;# 
  1296  011B                     	;# 
  1297  011B                     	;# 
  1298  011B                     	;# 
  1299  011B                     	;# 
  1300  011B                     	;# 
  1301  011C                     	;# 
  1302  011C                     	;# 
  1303  011C                     	;# 
  1304  011D                     	;# 
  1305  011D                     	;# 
  1306  011D                     	;# 
  1307  011E                     	;# 
  1308  011E                     	;# 
  1309  011E                     	;# 
  1310  011F                     	;# 
  1311  011F                     	;# 
  1312  011F                     	;# 
  1313  011F                     	;# 
  1314  011F                     	;# 
  1315  018C                     	;# 
  1316  018D                     	;# 
  1317  018E                     	;# 
  1318  018F                     	;# 
  1319  0190                     	;# 
  1320  0191                     	;# 
  1321  0192                     	;# 
  1322  020C                     	;# 
  1323  020C                     	;# 
  1324  020D                     	;# 
  1325  020E                     	;# 
  1326  020F                     	;# 
  1327  020F                     	;# 
  1328  0210                     	;# 
  1329  0210                     	;# 
  1330  0211                     	;# 
  1331  0211                     	;# 
  1332  028C                     	;# 
  1333  028C                     	;# 
  1334  028D                     	;# 
  1335  028D                     	;# 
  1336  028E                     	;# 
  1337  028F                     	;# 
  1338  0290                     	;# 
  1339  0291                     	;# 
  1340  030C                     	;# 
  1341  030C                     	;# 
  1342  030D                     	;# 
  1343  030E                     	;# 
  1344  030F                     	;# 
  1345  0310                     	;# 
  1346  0310                     	;# 
  1347  0311                     	;# 
  1348  0312                     	;# 
  1349  0313                     	;# 
  1350  0314                     	;# 
  1351  0314                     	;# 
  1352  0315                     	;# 
  1353  0316                     	;# 
  1354  0318                     	;# 
  1355  0318                     	;# 
  1356  0319                     	;# 
  1357  031A                     	;# 
  1358  031C                     	;# 
  1359  031C                     	;# 
  1360  031D                     	;# 
  1361  031E                     	;# 
  1362  038C                     	;# 
  1363  038C                     	;# 
  1364  038D                     	;# 
  1365  038E                     	;# 
  1366  058C                     	;# 
  1367  058C                     	;# 
  1368  058D                     	;# 
  1369  058E                     	;# 
  1370  058F                     	;# 
  1371  058F                     	;# 
  1372  0590                     	;# 
  1373  0591                     	;# 
  1374  0592                     	;# 
  1375  0593                     	;# 
  1376  059C                     	;# 
  1377  059C                     	;# 
  1378  059D                     	;# 
  1379  059D                     	;# 
  1380  059E                     	;# 
  1381  059F                     	;# 
  1382  060C                     	;# 
  1383  060D                     	;# 
  1384  060E                     	;# 
  1385  060F                     	;# 
  1386  0610                     	;# 
  1387  0611                     	;# 
  1388  0612                     	;# 
  1389  0613                     	;# 
  1390  0614                     	;# 
  1391  070C                     	;# 
  1392  070D                     	;# 
  1393  070E                     	;# 
  1394  070F                     	;# 
  1395  0710                     	;# 
  1396  0711                     	;# 
  1397  0712                     	;# 
  1398  0713                     	;# 
  1399  0716                     	;# 
  1400  0717                     	;# 
  1401  0718                     	;# 
  1402  0719                     	;# 
  1403  071A                     	;# 
  1404  071B                     	;# 
  1405  071C                     	;# 
  1406  071D                     	;# 
  1407  0796                     	;# 
  1408  0797                     	;# 
  1409  0798                     	;# 
  1410  0799                     	;# 
  1411  079A                     	;# 
  1412  079B                     	;# 
  1413  080C                     	;# 
  1414  080D                     	;# 
  1415  080E                     	;# 
  1416  080F                     	;# 
  1417  0810                     	;# 
  1418  0811                     	;# 
  1419  0812                     	;# 
  1420  0813                     	;# 
  1421  0814                     	;# 
  1422  081A                     	;# 
  1423  081A                     	;# 
  1424  081B                     	;# 
  1425  081C                     	;# 
  1426  081C                     	;# 
  1427  081D                     	;# 
  1428  081E                     	;# 
  1429  081F                     	;# 
  1430  088C                     	;# 
  1431  088D                     	;# 
  1432  088E                     	;# 
  1433  088F                     	;# 
  1434  0890                     	;# 
  1435  0891                     	;# 
  1436  0892                     	;# 
  1437  0893                     	;# 
  1438  0895                     	;# 
  1439  0896                     	;# 
  1440  090C                     	;# 
  1441  090E                     	;# 
  1442  090F                     	;# 
  1443  091F                     	;# 
  1444  098F                     	;# 
  1445  098F                     	;# 
  1446  0990                     	;# 
  1447  0991                     	;# 
  1448  0992                     	;# 
  1449  0993                     	;# 
  1450  0994                     	;# 
  1451  0995                     	;# 
  1452  0996                     	;# 
  1453  0997                     	;# 
  1454  1E0F                     	;# 
  1455  1E10                     	;# 
  1456  1E11                     	;# 
  1457  1E12                     	;# 
  1458  1E13                     	;# 
  1459  1E14                     	;# 
  1460  1E15                     	;# 
  1461  1E16                     	;# 
  1462  1E17                     	;# 
  1463  1E18                     	;# 
  1464  1E19                     	;# 
  1465  1E1A                     	;# 
  1466  1E1B                     	;# 
  1467  1E1C                     	;# 
  1468  1E1D                     	;# 
  1469  1E1E                     	;# 
  1470  1E1F                     	;# 
  1471  1E20                     	;# 
  1472  1E21                     	;# 
  1473  1E22                     	;# 
  1474  1E23                     	;# 
  1475  1E24                     	;# 
  1476  1E25                     	;# 
  1477  1E26                     	;# 
  1478  1E27                     	;# 
  1479  1E28                     	;# 
  1480  1E29                     	;# 
  1481  1E2A                     	;# 
  1482  1E2B                     	;# 
  1483  1E2C                     	;# 
  1484  1E2D                     	;# 
  1485  1E2E                     	;# 
  1486  1E2F                     	;# 
  1487  1E30                     	;# 
  1488  1E31                     	;# 
  1489  1E32                     	;# 
  1490  1E33                     	;# 
  1491  1E34                     	;# 
  1492  1E35                     	;# 
  1493  1E36                     	;# 
  1494  1E37                     	;# 
  1495  1E8F                     	;# 
  1496  1E90                     	;# 
  1497  1E91                     	;# 
  1498  1E92                     	;# 
  1499  1E93                     	;# 
  1500  1E9C                     	;# 
  1501  1EA1                     	;# 
  1502  1EA2                     	;# 
  1503  1EB1                     	;# 
  1504  1EBB                     	;# 
  1505  1EBC                     	;# 
  1506  1EBD                     	;# 
  1507  1EBE                     	;# 
  1508  1EC3                     	;# 
  1509  1EC5                     	;# 
  1510  1EC6                     	;# 
  1511  1EC7                     	;# 
  1512  1ECB                     	;# 
  1513  1ECC                     	;# 
  1514  1F10                     	;# 
  1515  1F11                     	;# 
  1516  1F12                     	;# 
  1517  1F13                     	;# 
  1518  1F14                     	;# 
  1519  1F15                     	;# 
  1520  1F20                     	;# 
  1521  1F21                     	;# 
  1522  1F22                     	;# 
  1523  1F23                     	;# 
  1524  1F24                     	;# 
  1525  1F25                     	;# 
  1526  1F38                     	;# 
  1527  1F39                     	;# 
  1528  1F3A                     	;# 
  1529  1F3B                     	;# 
  1530  1F3C                     	;# 
  1531  1F3D                     	;# 
  1532  1F3E                     	;# 
  1533  1F3F                     	;# 
  1534  1F4E                     	;# 
  1535  1F4F                     	;# 
  1536  1F50                     	;# 
  1537  1F51                     	;# 
  1538  1F52                     	;# 
  1539  1F53                     	;# 
  1540  1F54                     	;# 
  1541  1F55                     	;# 
  1542  1FE4                     	;# 
  1543  1FE5                     	;# 
  1544  1FE6                     	;# 
  1545  1FE7                     	;# 
  1546  1FE8                     	;# 
  1547  1FE8                     	;# 
  1548  1FE9                     	;# 
  1549  1FEA                     	;# 
  1550  1FEA                     	;# 
  1551  1FEB                     	;# 
  1552  1FED                     	;# 
  1553  1FEE                     	;# 
  1554  1FEF                     	;# 
  1555  0000                     	;# 
  1556  0001                     	;# 
  1557  0002                     	;# 
  1558  0003                     	;# 
  1559  0004                     	;# 
  1560  0005                     	;# 
  1561  0006                     	;# 
  1562  0007                     	;# 
  1563  0008                     	;# 
  1564  0009                     	;# 
  1565  000A                     	;# 
  1566  000B                     	;# 
  1567  000C                     	;# 
  1568  000E                     	;# 
  1569  0012                     	;# 
  1570  0014                     	;# 
  1571  0018                     	;# 
  1572  001A                     	;# 
  1573  009B                     	;# 
  1574  009B                     	;# 
  1575  009C                     	;# 
  1576  009D                     	;# 
  1577  009E                     	;# 
  1578  009F                     	;# 
  1579  0119                     	;# 
  1580  0119                     	;# 
  1581  0119                     	;# 
  1582  011A                     	;# 
  1583  011A                     	;# 
  1584  011A                     	;# 
  1585  011B                     	;# 
  1586  011B                     	;# 
  1587  011B                     	;# 
  1588  011B                     	;# 
  1589  011B                     	;# 
  1590  011C                     	;# 
  1591  011C                     	;# 
  1592  011C                     	;# 
  1593  011D                     	;# 
  1594  011D                     	;# 
  1595  011D                     	;# 
  1596  011E                     	;# 
  1597  011E                     	;# 
  1598  011E                     	;# 
  1599  011F                     	;# 
  1600  011F                     	;# 
  1601  011F                     	;# 
  1602  011F                     	;# 
  1603  011F                     	;# 
  1604  018C                     	;# 
  1605  018D                     	;# 
  1606  018E                     	;# 
  1607  018F                     	;# 
  1608  0190                     	;# 
  1609  0191                     	;# 
  1610  0192                     	;# 
  1611  020C                     	;# 
  1612  020C                     	;# 
  1613  020D                     	;# 
  1614  020E                     	;# 
  1615  020F                     	;# 
  1616  020F                     	;# 
  1617  0210                     	;# 
  1618  0210                     	;# 
  1619  0211                     	;# 
  1620  0211                     	;# 
  1621  028C                     	;# 
  1622  028C                     	;# 
  1623  028D                     	;# 
  1624  028D                     	;# 
  1625  028E                     	;# 
  1626  028F                     	;# 
  1627  0290                     	;# 
  1628  0291                     	;# 
  1629  030C                     	;# 
  1630  030C                     	;# 
  1631  030D                     	;# 
  1632  030E                     	;# 
  1633  030F                     	;# 
  1634  0310                     	;# 
  1635  0310                     	;# 
  1636  0311                     	;# 
  1637  0312                     	;# 
  1638  0313                     	;# 
  1639  0314                     	;# 
  1640  0314                     	;# 
  1641  0315                     	;# 
  1642  0316                     	;# 
  1643  0318                     	;# 
  1644  0318                     	;# 
  1645  0319                     	;# 
  1646  031A                     	;# 
  1647  031C                     	;# 
  1648  031C                     	;# 
  1649  031D                     	;# 
  1650  031E                     	;# 
  1651  038C                     	;# 
  1652  038C                     	;# 
  1653  038D                     	;# 
  1654  038E                     	;# 
  1655  058C                     	;# 
  1656  058C                     	;# 
  1657  058D                     	;# 
  1658  058E                     	;# 
  1659  058F                     	;# 
  1660  058F                     	;# 
  1661  0590                     	;# 
  1662  0591                     	;# 
  1663  0592                     	;# 
  1664  0593                     	;# 
  1665  059C                     	;# 
  1666  059C                     	;# 
  1667  059D                     	;# 
  1668  059D                     	;# 
  1669  059E                     	;# 
  1670  059F                     	;# 
  1671  060C                     	;# 
  1672  060D                     	;# 
  1673  060E                     	;# 
  1674  060F                     	;# 
  1675  0610                     	;# 
  1676  0611                     	;# 
  1677  0612                     	;# 
  1678  0613                     	;# 
  1679  0614                     	;# 
  1680  070C                     	;# 
  1681  070D                     	;# 
  1682  070E                     	;# 
  1683  070F                     	;# 
  1684  0710                     	;# 
  1685  0711                     	;# 
  1686  0712                     	;# 
  1687  0713                     	;# 
  1688  0716                     	;# 
  1689  0717                     	;# 
  1690  0718                     	;# 
  1691  0719                     	;# 
  1692  071A                     	;# 
  1693  071B                     	;# 
  1694  071C                     	;# 
  1695  071D                     	;# 
  1696  0796                     	;# 
  1697  0797                     	;# 
  1698  0798                     	;# 
  1699  0799                     	;# 
  1700  079A                     	;# 
  1701  079B                     	;# 
  1702  080C                     	;# 
  1703  080D                     	;# 
  1704  080E                     	;# 
  1705  080F                     	;# 
  1706  0810                     	;# 
  1707  0811                     	;# 
  1708  0812                     	;# 
  1709  0813                     	;# 
  1710  0814                     	;# 
  1711  081A                     	;# 
  1712  081A                     	;# 
  1713  081B                     	;# 
  1714  081C                     	;# 
  1715  081C                     	;# 
  1716  081D                     	;# 
  1717  081E                     	;# 
  1718  081F                     	;# 
  1719  088C                     	;# 
  1720  088D                     	;# 
  1721  088E                     	;# 
  1722  088F                     	;# 
  1723  0890                     	;# 
  1724  0891                     	;# 
  1725  0892                     	;# 
  1726  0893                     	;# 
  1727  0895                     	;# 
  1728  0896                     	;# 
  1729  090C                     	;# 
  1730  090E                     	;# 
  1731  090F                     	;# 
  1732  091F                     	;# 
  1733  098F                     	;# 
  1734  098F                     	;# 
  1735  0990                     	;# 
  1736  0991                     	;# 
  1737  0992                     	;# 
  1738  0993                     	;# 
  1739  0994                     	;# 
  1740  0995                     	;# 
  1741  0996                     	;# 
  1742  0997                     	;# 
  1743  1E0F                     	;# 
  1744  1E10                     	;# 
  1745  1E11                     	;# 
  1746  1E12                     	;# 
  1747  1E13                     	;# 
  1748  1E14                     	;# 
  1749  1E15                     	;# 
  1750  1E16                     	;# 
  1751  1E17                     	;# 
  1752  1E18                     	;# 
  1753  1E19                     	;# 
  1754  1E1A                     	;# 
  1755  1E1B                     	;# 
  1756  1E1C                     	;# 
  1757  1E1D                     	;# 
  1758  1E1E                     	;# 
  1759  1E1F                     	;# 
  1760  1E20                     	;# 
  1761  1E21                     	;# 
  1762  1E22                     	;# 
  1763  1E23                     	;# 
  1764  1E24                     	;# 
  1765  1E25                     	;# 
  1766  1E26                     	;# 
  1767  1E27                     	;# 
  1768  1E28                     	;# 
  1769  1E29                     	;# 
  1770  1E2A                     	;# 
  1771  1E2B                     	;# 
  1772  1E2C                     	;# 
  1773  1E2D                     	;# 
  1774  1E2E                     	;# 
  1775  1E2F                     	;# 
  1776  1E30                     	;# 
  1777  1E31                     	;# 
  1778  1E32                     	;# 
  1779  1E33                     	;# 
  1780  1E34                     	;# 
  1781  1E35                     	;# 
  1782  1E36                     	;# 
  1783  1E37                     	;# 
  1784  1E8F                     	;# 
  1785  1E90                     	;# 
  1786  1E91                     	;# 
  1787  1E92                     	;# 
  1788  1E93                     	;# 
  1789  1E9C                     	;# 
  1790  1EA1                     	;# 
  1791  1EA2                     	;# 
  1792  1EB1                     	;# 
  1793  1EBB                     	;# 
  1794  1EBC                     	;# 
  1795  1EBD                     	;# 
  1796  1EBE                     	;# 
  1797  1EC3                     	;# 
  1798  1EC5                     	;# 
  1799  1EC6                     	;# 
  1800  1EC7                     	;# 
  1801  1ECB                     	;# 
  1802  1ECC                     	;# 
  1803  1F10                     	;# 
  1804  1F11                     	;# 
  1805  1F12                     	;# 
  1806  1F13                     	;# 
  1807  1F14                     	;# 
  1808  1F15                     	;# 
  1809  1F20                     	;# 
  1810  1F21                     	;# 
  1811  1F22                     	;# 
  1812  1F23                     	;# 
  1813  1F24                     	;# 
  1814  1F25                     	;# 
  1815  1F38                     	;# 
  1816  1F39                     	;# 
  1817  1F3A                     	;# 
  1818  1F3B                     	;# 
  1819  1F3C                     	;# 
  1820  1F3D                     	;# 
  1821  1F3E                     	;# 
  1822  1F3F                     	;# 
  1823  1F4E                     	;# 
  1824  1F4F                     	;# 
  1825  1F50                     	;# 
  1826  1F51                     	;# 
  1827  1F52                     	;# 
  1828  1F53                     	;# 
  1829  1F54                     	;# 
  1830  1F55                     	;# 
  1831  1FE4                     	;# 
  1832  1FE5                     	;# 
  1833  1FE6                     	;# 
  1834  1FE7                     	;# 
  1835  1FE8                     	;# 
  1836  1FE8                     	;# 
  1837  1FE9                     	;# 
  1838  1FEA                     	;# 
  1839  1FEA                     	;# 
  1840  1FEB                     	;# 
  1841  1FED                     	;# 
  1842  1FEE                     	;# 
  1843  1FEF                     	;# 
  1844  0000                     	;# 
  1845  0001                     	;# 
  1846  0002                     	;# 
  1847  0003                     	;# 
  1848  0004                     	;# 
  1849  0005                     	;# 
  1850  0006                     	;# 
  1851  0007                     	;# 
  1852  0008                     	;# 
  1853  0009                     	;# 
  1854  000A                     	;# 
  1855  000B                     	;# 
  1856  000C                     	;# 
  1857  000E                     	;# 
  1858  0012                     	;# 
  1859  0014                     	;# 
  1860  0018                     	;# 
  1861  001A                     	;# 
  1862  009B                     	;# 
  1863  009B                     	;# 
  1864  009C                     	;# 
  1865  009D                     	;# 
  1866  009E                     	;# 
  1867  009F                     	;# 
  1868  0119                     	;# 
  1869  0119                     	;# 
  1870  0119                     	;# 
  1871  011A                     	;# 
  1872  011A                     	;# 
  1873  011A                     	;# 
  1874  011B                     	;# 
  1875  011B                     	;# 
  1876  011B                     	;# 
  1877  011B                     	;# 
  1878  011B                     	;# 
  1879  011C                     	;# 
  1880  011C                     	;# 
  1881  011C                     	;# 
  1882  011D                     	;# 
  1883  011D                     	;# 
  1884  011D                     	;# 
  1885  011E                     	;# 
  1886  011E                     	;# 
  1887  011E                     	;# 
  1888  011F                     	;# 
  1889  011F                     	;# 
  1890  011F                     	;# 
  1891  011F                     	;# 
  1892  011F                     	;# 
  1893  018C                     	;# 
  1894  018D                     	;# 
  1895  018E                     	;# 
  1896  018F                     	;# 
  1897  0190                     	;# 
  1898  0191                     	;# 
  1899  0192                     	;# 
  1900  020C                     	;# 
  1901  020C                     	;# 
  1902  020D                     	;# 
  1903  020E                     	;# 
  1904  020F                     	;# 
  1905  020F                     	;# 
  1906  0210                     	;# 
  1907  0210                     	;# 
  1908  0211                     	;# 
  1909  0211                     	;# 
  1910  028C                     	;# 
  1911  028C                     	;# 
  1912  028D                     	;# 
  1913  028D                     	;# 
  1914  028E                     	;# 
  1915  028F                     	;# 
  1916  0290                     	;# 
  1917  0291                     	;# 
  1918  030C                     	;# 
  1919  030C                     	;# 
  1920  030D                     	;# 
  1921  030E                     	;# 
  1922  030F                     	;# 
  1923  0310                     	;# 
  1924  0310                     	;# 
  1925  0311                     	;# 
  1926  0312                     	;# 
  1927  0313                     	;# 
  1928  0314                     	;# 
  1929  0314                     	;# 
  1930  0315                     	;# 
  1931  0316                     	;# 
  1932  0318                     	;# 
  1933  0318                     	;# 
  1934  0319                     	;# 
  1935  031A                     	;# 
  1936  031C                     	;# 
  1937  031C                     	;# 
  1938  031D                     	;# 
  1939  031E                     	;# 
  1940  038C                     	;# 
  1941  038C                     	;# 
  1942  038D                     	;# 
  1943  038E                     	;# 
  1944  058C                     	;# 
  1945  058C                     	;# 
  1946  058D                     	;# 
  1947  058E                     	;# 
  1948  058F                     	;# 
  1949  058F                     	;# 
  1950  0590                     	;# 
  1951  0591                     	;# 
  1952  0592                     	;# 
  1953  0593                     	;# 
  1954  059C                     	;# 
  1955  059C                     	;# 
  1956  059D                     	;# 
  1957  059D                     	;# 
  1958  059E                     	;# 
  1959  059F                     	;# 
  1960  060C                     	;# 
  1961  060D                     	;# 
  1962  060E                     	;# 
  1963  060F                     	;# 
  1964  0610                     	;# 
  1965  0611                     	;# 
  1966  0612                     	;# 
  1967  0613                     	;# 
  1968  0614                     	;# 
  1969  070C                     	;# 
  1970  070D                     	;# 
  1971  070E                     	;# 
  1972  070F                     	;# 
  1973  0710                     	;# 
  1974  0711                     	;# 
  1975  0712                     	;# 
  1976  0713                     	;# 
  1977  0716                     	;# 
  1978  0717                     	;# 
  1979  0718                     	;# 
  1980  0719                     	;# 
  1981  071A                     	;# 
  1982  071B                     	;# 
  1983  071C                     	;# 
  1984  071D                     	;# 
  1985  0796                     	;# 
  1986  0797                     	;# 
  1987  0798                     	;# 
  1988  0799                     	;# 
  1989  079A                     	;# 
  1990  079B                     	;# 
  1991  080C                     	;# 
  1992  080D                     	;# 
  1993  080E                     	;# 
  1994  080F                     	;# 
  1995  0810                     	;# 
  1996  0811                     	;# 
  1997  0812                     	;# 
  1998  0813                     	;# 
  1999  0814                     	;# 
  2000  081A                     	;# 
  2001  081A                     	;# 
  2002  081B                     	;# 
  2003  081C                     	;# 
  2004  081C                     	;# 
  2005  081D                     	;# 
  2006  081E                     	;# 
  2007  081F                     	;# 
  2008  088C                     	;# 
  2009  088D                     	;# 
  2010  088E                     	;# 
  2011  088F                     	;# 
  2012  0890                     	;# 
  2013  0891                     	;# 
  2014  0892                     	;# 
  2015  0893                     	;# 
  2016  0895                     	;# 
  2017  0896                     	;# 
  2018  090C                     	;# 
  2019  090E                     	;# 
  2020  090F                     	;# 
  2021  091F                     	;# 
  2022  098F                     	;# 
  2023  098F                     	;# 
  2024  0990                     	;# 
  2025  0991                     	;# 
  2026  0992                     	;# 
  2027  0993                     	;# 
  2028  0994                     	;# 
  2029  0995                     	;# 
  2030  0996                     	;# 
  2031  0997                     	;# 
  2032  1E0F                     	;# 
  2033  1E10                     	;# 
  2034  1E11                     	;# 
  2035  1E12                     	;# 
  2036  1E13                     	;# 
  2037  1E14                     	;# 
  2038  1E15                     	;# 
  2039  1E16                     	;# 
  2040  1E17                     	;# 
  2041  1E18                     	;# 
  2042  1E19                     	;# 
  2043  1E1A                     	;# 
  2044  1E1B                     	;# 
  2045  1E1C                     	;# 
  2046  1E1D                     	;# 
  2047  1E1E                     	;# 
  2048  1E1F                     	;# 
  2049  1E20                     	;# 
  2050  1E21                     	;# 
  2051  1E22                     	;# 
  2052  1E23                     	;# 
  2053  1E24                     	;# 
  2054  1E25                     	;# 
  2055  1E26                     	;# 
  2056  1E27                     	;# 
  2057  1E28                     	;# 
  2058  1E29                     	;# 
  2059  1E2A                     	;# 
  2060  1E2B                     	;# 
  2061  1E2C                     	;# 
  2062  1E2D                     	;# 
  2063  1E2E                     	;# 
  2064  1E2F                     	;# 
  2065  1E30                     	;# 
  2066  1E31                     	;# 
  2067  1E32                     	;# 
  2068  1E33                     	;# 
  2069  1E34                     	;# 
  2070  1E35                     	;# 
  2071  1E36                     	;# 
  2072  1E37                     	;# 
  2073  1E8F                     	;# 
  2074  1E90                     	;# 
  2075  1E91                     	;# 
  2076  1E92                     	;# 
  2077  1E93                     	;# 
  2078  1E9C                     	;# 
  2079  1EA1                     	;# 
  2080  1EA2                     	;# 
  2081  1EB1                     	;# 
  2082  1EBB                     	;# 
  2083  1EBC                     	;# 
  2084  1EBD                     	;# 
  2085  1EBE                     	;# 
  2086  1EC3                     	;# 
  2087  1EC5                     	;# 
  2088  1EC6                     	;# 
  2089  1EC7                     	;# 
  2090  1ECB                     	;# 
  2091  1ECC                     	;# 
  2092  1F10                     	;# 
  2093  1F11                     	;# 
  2094  1F12                     	;# 
  2095  1F13                     	;# 
  2096  1F14                     	;# 
  2097  1F15                     	;# 
  2098  1F20                     	;# 
  2099  1F21                     	;# 
  2100  1F22                     	;# 
  2101  1F23                     	;# 
  2102  1F24                     	;# 
  2103  1F25                     	;# 
  2104  1F38                     	;# 
  2105  1F39                     	;# 
  2106  1F3A                     	;# 
  2107  1F3B                     	;# 
  2108  1F3C                     	;# 
  2109  1F3D                     	;# 
  2110  1F3E                     	;# 
  2111  1F3F                     	;# 
  2112  1F4E                     	;# 
  2113  1F4F                     	;# 
  2114  1F50                     	;# 
  2115  1F51                     	;# 
  2116  1F52                     	;# 
  2117  1F53                     	;# 
  2118  1F54                     	;# 
  2119  1F55                     	;# 
  2120  1FE4                     	;# 
  2121  1FE5                     	;# 
  2122  1FE6                     	;# 
  2123  1FE7                     	;# 
  2124  1FE8                     	;# 
  2125  1FE8                     	;# 
  2126  1FE9                     	;# 
  2127  1FEA                     	;# 
  2128  1FEA                     	;# 
  2129  1FEB                     	;# 
  2130  1FED                     	;# 
  2131  1FEE                     	;# 
  2132  1FEF                     	;# 
  2133  0000                     	;# 
  2134  0001                     	;# 
  2135  0002                     	;# 
  2136  0003                     	;# 
  2137  0004                     	;# 
  2138  0005                     	;# 
  2139  0006                     	;# 
  2140  0007                     	;# 
  2141  0008                     	;# 
  2142  0009                     	;# 
  2143  000A                     	;# 
  2144  000B                     	;# 
  2145  000C                     	;# 
  2146  000E                     	;# 
  2147  0012                     	;# 
  2148  0014                     	;# 
  2149  0018                     	;# 
  2150  001A                     	;# 
  2151  009B                     	;# 
  2152  009B                     	;# 
  2153  009C                     	;# 
  2154  009D                     	;# 
  2155  009E                     	;# 
  2156  009F                     	;# 
  2157  0119                     	;# 
  2158  0119                     	;# 
  2159  0119                     	;# 
  2160  011A                     	;# 
  2161  011A                     	;# 
  2162  011A                     	;# 
  2163  011B                     	;# 
  2164  011B                     	;# 
  2165  011B                     	;# 
  2166  011B                     	;# 
  2167  011B                     	;# 
  2168  011C                     	;# 
  2169  011C                     	;# 
  2170  011C                     	;# 
  2171  011D                     	;# 
  2172  011D                     	;# 
  2173  011D                     	;# 
  2174  011E                     	;# 
  2175  011E                     	;# 
  2176  011E                     	;# 
  2177  011F                     	;# 
  2178  011F                     	;# 
  2179  011F                     	;# 
  2180  011F                     	;# 
  2181  011F                     	;# 
  2182  018C                     	;# 
  2183  018D                     	;# 
  2184  018E                     	;# 
  2185  018F                     	;# 
  2186  0190                     	;# 
  2187  0191                     	;# 
  2188  0192                     	;# 
  2189  020C                     	;# 
  2190  020C                     	;# 
  2191  020D                     	;# 
  2192  020E                     	;# 
  2193  020F                     	;# 
  2194  020F                     	;# 
  2195  0210                     	;# 
  2196  0210                     	;# 
  2197  0211                     	;# 
  2198  0211                     	;# 
  2199  028C                     	;# 
  2200  028C                     	;# 
  2201  028D                     	;# 
  2202  028D                     	;# 
  2203  028E                     	;# 
  2204  028F                     	;# 
  2205  0290                     	;# 
  2206  0291                     	;# 
  2207  030C                     	;# 
  2208  030C                     	;# 
  2209  030D                     	;# 
  2210  030E                     	;# 
  2211  030F                     	;# 
  2212  0310                     	;# 
  2213  0310                     	;# 
  2214  0311                     	;# 
  2215  0312                     	;# 
  2216  0313                     	;# 
  2217  0314                     	;# 
  2218  0314                     	;# 
  2219  0315                     	;# 
  2220  0316                     	;# 
  2221  0318                     	;# 
  2222  0318                     	;# 
  2223  0319                     	;# 
  2224  031A                     	;# 
  2225  031C                     	;# 
  2226  031C                     	;# 
  2227  031D                     	;# 
  2228  031E                     	;# 
  2229  038C                     	;# 
  2230  038C                     	;# 
  2231  038D                     	;# 
  2232  038E                     	;# 
  2233  058C                     	;# 
  2234  058C                     	;# 
  2235  058D                     	;# 
  2236  058E                     	;# 
  2237  058F                     	;# 
  2238  058F                     	;# 
  2239  0590                     	;# 
  2240  0591                     	;# 
  2241  0592                     	;# 
  2242  0593                     	;# 
  2243  059C                     	;# 
  2244  059C                     	;# 
  2245  059D                     	;# 
  2246  059D                     	;# 
  2247  059E                     	;# 
  2248  059F                     	;# 
  2249  060C                     	;# 
  2250  060D                     	;# 
  2251  060E                     	;# 
  2252  060F                     	;# 
  2253  0610                     	;# 
  2254  0611                     	;# 
  2255  0612                     	;# 
  2256  0613                     	;# 
  2257  0614                     	;# 
  2258  070C                     	;# 
  2259  070D                     	;# 
  2260  070E                     	;# 
  2261  070F                     	;# 
  2262  0710                     	;# 
  2263  0711                     	;# 
  2264  0712                     	;# 
  2265  0713                     	;# 
  2266  0716                     	;# 
  2267  0717                     	;# 
  2268  0718                     	;# 
  2269  0719                     	;# 
  2270  071A                     	;# 
  2271  071B                     	;# 
  2272  071C                     	;# 
  2273  071D                     	;# 
  2274  0796                     	;# 
  2275  0797                     	;# 
  2276  0798                     	;# 
  2277  0799                     	;# 
  2278  079A                     	;# 
  2279  079B                     	;# 
  2280  080C                     	;# 
  2281  080D                     	;# 
  2282  080E                     	;# 
  2283  080F                     	;# 
  2284  0810                     	;# 
  2285  0811                     	;# 
  2286  0812                     	;# 
  2287  0813                     	;# 
  2288  0814                     	;# 
  2289  081A                     	;# 
  2290  081A                     	;# 
  2291  081B                     	;# 
  2292  081C                     	;# 
  2293  081C                     	;# 
  2294  081D                     	;# 
  2295  081E                     	;# 
  2296  081F                     	;# 
  2297  088C                     	;# 
  2298  088D                     	;# 
  2299  088E                     	;# 
  2300  088F                     	;# 
  2301  0890                     	;# 
  2302  0891                     	;# 
  2303  0892                     	;# 
  2304  0893                     	;# 
  2305  0895                     	;# 
  2306  0896                     	;# 
  2307  090C                     	;# 
  2308  090E                     	;# 
  2309  090F                     	;# 
  2310  091F                     	;# 
  2311  098F                     	;# 
  2312  098F                     	;# 
  2313  0990                     	;# 
  2314  0991                     	;# 
  2315  0992                     	;# 
  2316  0993                     	;# 
  2317  0994                     	;# 
  2318  0995                     	;# 
  2319  0996                     	;# 
  2320  0997                     	;# 
  2321  1E0F                     	;# 
  2322  1E10                     	;# 
  2323  1E11                     	;# 
  2324  1E12                     	;# 
  2325  1E13                     	;# 
  2326  1E14                     	;# 
  2327  1E15                     	;# 
  2328  1E16                     	;# 
  2329  1E17                     	;# 
  2330  1E18                     	;# 
  2331  1E19                     	;# 
  2332  1E1A                     	;# 
  2333  1E1B                     	;# 
  2334  1E1C                     	;# 
  2335  1E1D                     	;# 
  2336  1E1E                     	;# 
  2337  1E1F                     	;# 
  2338  1E20                     	;# 
  2339  1E21                     	;# 
  2340  1E22                     	;# 
  2341  1E23                     	;# 
  2342  1E24                     	;# 
  2343  1E25                     	;# 
  2344  1E26                     	;# 
  2345  1E27                     	;# 
  2346  1E28                     	;# 
  2347  1E29                     	;# 
  2348  1E2A                     	;# 
  2349  1E2B                     	;# 
  2350  1E2C                     	;# 
  2351  1E2D                     	;# 
  2352  1E2E                     	;# 
  2353  1E2F                     	;# 
  2354  1E30                     	;# 
  2355  1E31                     	;# 
  2356  1E32                     	;# 
  2357  1E33                     	;# 
  2358  1E34                     	;# 
  2359  1E35                     	;# 
  2360  1E36                     	;# 
  2361  1E37                     	;# 
  2362  1E8F                     	;# 
  2363  1E90                     	;# 
  2364  1E91                     	;# 
  2365  1E92                     	;# 
  2366  1E93                     	;# 
  2367  1E9C                     	;# 
  2368  1EA1                     	;# 
  2369  1EA2                     	;# 
  2370  1EB1                     	;# 
  2371  1EBB                     	;# 
  2372  1EBC                     	;# 
  2373  1EBD                     	;# 
  2374  1EBE                     	;# 
  2375  1EC3                     	;# 
  2376  1EC5                     	;# 
  2377  1EC6                     	;# 
  2378  1EC7                     	;# 
  2379  1ECB                     	;# 
  2380  1ECC                     	;# 
  2381  1F10                     	;# 
  2382  1F11                     	;# 
  2383  1F12                     	;# 
  2384  1F13                     	;# 
  2385  1F14                     	;# 
  2386  1F15                     	;# 
  2387  1F20                     	;# 
  2388  1F21                     	;# 
  2389  1F22                     	;# 
  2390  1F23                     	;# 
  2391  1F24                     	;# 
  2392  1F25                     	;# 
  2393  1F38                     	;# 
  2394  1F39                     	;# 
  2395  1F3A                     	;# 
  2396  1F3B                     	;# 
  2397  1F3C                     	;# 
  2398  1F3D                     	;# 
  2399  1F3E                     	;# 
  2400  1F3F                     	;# 
  2401  1F4E                     	;# 
  2402  1F4F                     	;# 
  2403  1F50                     	;# 
  2404  1F51                     	;# 
  2405  1F52                     	;# 
  2406  1F53                     	;# 
  2407  1F54                     	;# 
  2408  1F55                     	;# 
  2409  1FE4                     	;# 
  2410  1FE5                     	;# 
  2411  1FE6                     	;# 
  2412  1FE7                     	;# 
  2413  1FE8                     	;# 
  2414  1FE8                     	;# 
  2415  1FE9                     	;# 
  2416  1FEA                     	;# 
  2417  1FEA                     	;# 
  2418  1FEB                     	;# 
  2419  1FED                     	;# 
  2420  1FEE                     	;# 
  2421  1FEF                     	;# 
  2422  0000                     	;# 
  2423  0001                     	;# 
  2424  0002                     	;# 
  2425  0003                     	;# 
  2426  0004                     	;# 
  2427  0005                     	;# 
  2428  0006                     	;# 
  2429  0007                     	;# 
  2430  0008                     	;# 
  2431  0009                     	;# 
  2432  000A                     	;# 
  2433  000B                     	;# 
  2434  000C                     	;# 
  2435  000E                     	;# 
  2436  0012                     	;# 
  2437  0014                     	;# 
  2438  0018                     	;# 
  2439  001A                     	;# 
  2440  009B                     	;# 
  2441  009B                     	;# 
  2442  009C                     	;# 
  2443  009D                     	;# 
  2444  009E                     	;# 
  2445  009F                     	;# 
  2446  0119                     	;# 
  2447  0119                     	;# 
  2448  0119                     	;# 
  2449  011A                     	;# 
  2450  011A                     	;# 
  2451  011A                     	;# 
  2452  011B                     	;# 
  2453  011B                     	;# 
  2454  011B                     	;# 
  2455  011B                     	;# 
  2456  011B                     	;# 
  2457  011C                     	;# 
  2458  011C                     	;# 
  2459  011C                     	;# 
  2460  011D                     	;# 
  2461  011D                     	;# 
  2462  011D                     	;# 
  2463  011E                     	;# 
  2464  011E                     	;# 
  2465  011E                     	;# 
  2466  011F                     	;# 
  2467  011F                     	;# 
  2468  011F                     	;# 
  2469  011F                     	;# 
  2470  011F                     	;# 
  2471  018C                     	;# 
  2472  018D                     	;# 
  2473  018E                     	;# 
  2474  018F                     	;# 
  2475  0190                     	;# 
  2476  0191                     	;# 
  2477  0192                     	;# 
  2478  020C                     	;# 
  2479  020C                     	;# 
  2480  020D                     	;# 
  2481  020E                     	;# 
  2482  020F                     	;# 
  2483  020F                     	;# 
  2484  0210                     	;# 
  2485  0210                     	;# 
  2486  0211                     	;# 
  2487  0211                     	;# 
  2488  028C                     	;# 
  2489  028C                     	;# 
  2490  028D                     	;# 
  2491  028D                     	;# 
  2492  028E                     	;# 
  2493  028F                     	;# 
  2494  0290                     	;# 
  2495  0291                     	;# 
  2496  030C                     	;# 
  2497  030C                     	;# 
  2498  030D                     	;# 
  2499  030E                     	;# 
  2500  030F                     	;# 
  2501  0310                     	;# 
  2502  0310                     	;# 
  2503  0311                     	;# 
  2504  0312                     	;# 
  2505  0313                     	;# 
  2506  0314                     	;# 
  2507  0314                     	;# 
  2508  0315                     	;# 
  2509  0316                     	;# 
  2510  0318                     	;# 
  2511  0318                     	;# 
  2512  0319                     	;# 
  2513  031A                     	;# 
  2514  031C                     	;# 
  2515  031C                     	;# 
  2516  031D                     	;# 
  2517  031E                     	;# 
  2518  038C                     	;# 
  2519  038C                     	;# 
  2520  038D                     	;# 
  2521  038E                     	;# 
  2522  058C                     	;# 
  2523  058C                     	;# 
  2524  058D                     	;# 
  2525  058E                     	;# 
  2526  058F                     	;# 
  2527  058F                     	;# 
  2528  0590                     	;# 
  2529  0591                     	;# 
  2530  0592                     	;# 
  2531  0593                     	;# 
  2532  059C                     	;# 
  2533  059C                     	;# 
  2534  059D                     	;# 
  2535  059D                     	;# 
  2536  059E                     	;# 
  2537  059F                     	;# 
  2538  060C                     	;# 
  2539  060D                     	;# 
  2540  060E                     	;# 
  2541  060F                     	;# 
  2542  0610                     	;# 
  2543  0611                     	;# 
  2544  0612                     	;# 
  2545  0613                     	;# 
  2546  0614                     	;# 
  2547  070C                     	;# 
  2548  070D                     	;# 
  2549  070E                     	;# 
  2550  070F                     	;# 
  2551  0710                     	;# 
  2552  0711                     	;# 
  2553  0712                     	;# 
  2554  0713                     	;# 
  2555  0716                     	;# 
  2556  0717                     	;# 
  2557  0718                     	;# 
  2558  0719                     	;# 
  2559  071A                     	;# 
  2560  071B                     	;# 
  2561  071C                     	;# 
  2562  071D                     	;# 
  2563  0796                     	;# 
  2564  0797                     	;# 
  2565  0798                     	;# 
  2566  0799                     	;# 
  2567  079A                     	;# 
  2568  079B                     	;# 
  2569  080C                     	;# 
  2570  080D                     	;# 
  2571  080E                     	;# 
  2572  080F                     	;# 
  2573  0810                     	;# 
  2574  0811                     	;# 
  2575  0812                     	;# 
  2576  0813                     	;# 
  2577  0814                     	;# 
  2578  081A                     	;# 
  2579  081A                     	;# 
  2580  081B                     	;# 
  2581  081C                     	;# 
  2582  081C                     	;# 
  2583  081D                     	;# 
  2584  081E                     	;# 
  2585  081F                     	;# 
  2586  088C                     	;# 
  2587  088D                     	;# 
  2588  088E                     	;# 
  2589  088F                     	;# 
  2590  0890                     	;# 
  2591  0891                     	;# 
  2592  0892                     	;# 
  2593  0893                     	;# 
  2594  0895                     	;# 
  2595  0896                     	;# 
  2596  090C                     	;# 
  2597  090E                     	;# 
  2598  090F                     	;# 
  2599  091F                     	;# 
  2600  098F                     	;# 
  2601  098F                     	;# 
  2602  0990                     	;# 
  2603  0991                     	;# 
  2604  0992                     	;# 
  2605  0993                     	;# 
  2606  0994                     	;# 
  2607  0995                     	;# 
  2608  0996                     	;# 
  2609  0997                     	;# 
  2610  1E0F                     	;# 
  2611  1E10                     	;# 
  2612  1E11                     	;# 
  2613  1E12                     	;# 
  2614  1E13                     	;# 
  2615  1E14                     	;# 
  2616  1E15                     	;# 
  2617  1E16                     	;# 
  2618  1E17                     	;# 
  2619  1E18                     	;# 
  2620  1E19                     	;# 
  2621  1E1A                     	;# 
  2622  1E1B                     	;# 
  2623  1E1C                     	;# 
  2624  1E1D                     	;# 
  2625  1E1E                     	;# 
  2626  1E1F                     	;# 
  2627  1E20                     	;# 
  2628  1E21                     	;# 
  2629  1E22                     	;# 
  2630  1E23                     	;# 
  2631  1E24                     	;# 
  2632  1E25                     	;# 
  2633  1E26                     	;# 
  2634  1E27                     	;# 
  2635  1E28                     	;# 
  2636  1E29                     	;# 
  2637  1E2A                     	;# 
  2638  1E2B                     	;# 
  2639  1E2C                     	;# 
  2640  1E2D                     	;# 
  2641  1E2E                     	;# 
  2642  1E2F                     	;# 
  2643  1E30                     	;# 
  2644  1E31                     	;# 
  2645  1E32                     	;# 
  2646  1E33                     	;# 
  2647  1E34                     	;# 
  2648  1E35                     	;# 
  2649  1E36                     	;# 
  2650  1E37                     	;# 
  2651  1E8F                     	;# 
  2652  1E90                     	;# 
  2653  1E91                     	;# 
  2654  1E92                     	;# 
  2655  1E93                     	;# 
  2656  1E9C                     	;# 
  2657  1EA1                     	;# 
  2658  1EA2                     	;# 
  2659  1EB1                     	;# 
  2660  1EBB                     	;# 
  2661  1EBC                     	;# 
  2662  1EBD                     	;# 
  2663  1EBE                     	;# 
  2664  1EC3                     	;# 
  2665  1EC5                     	;# 
  2666  1EC6                     	;# 
  2667  1EC7                     	;# 
  2668  1ECB                     	;# 
  2669  1ECC                     	;# 
  2670  1F10                     	;# 
  2671  1F11                     	;# 
  2672  1F12                     	;# 
  2673  1F13                     	;# 
  2674  1F14                     	;# 
  2675  1F15                     	;# 
  2676  1F20                     	;# 
  2677  1F21                     	;# 
  2678  1F22                     	;# 
  2679  1F23                     	;# 
  2680  1F24                     	;# 
  2681  1F25                     	;# 
  2682  1F38                     	;# 
  2683  1F39                     	;# 
  2684  1F3A                     	;# 
  2685  1F3B                     	;# 
  2686  1F3C                     	;# 
  2687  1F3D                     	;# 
  2688  1F3E                     	;# 
  2689  1F3F                     	;# 
  2690  1F4E                     	;# 
  2691  1F4F                     	;# 
  2692  1F50                     	;# 
  2693  1F51                     	;# 
  2694  1F52                     	;# 
  2695  1F53                     	;# 
  2696  1F54                     	;# 
  2697  1F55                     	;# 
  2698  1FE4                     	;# 
  2699  1FE5                     	;# 
  2700  1FE6                     	;# 
  2701  1FE7                     	;# 
  2702  1FE8                     	;# 
  2703  1FE8                     	;# 
  2704  1FE9                     	;# 
  2705  1FEA                     	;# 
  2706  1FEA                     	;# 
  2707  1FEB                     	;# 
  2708  1FED                     	;# 
  2709  1FEE                     	;# 
  2710  1FEF                     	;# 
  2711  0000                     	;# 
  2712  0001                     	;# 
  2713  0002                     	;# 
  2714  0003                     	;# 
  2715  0004                     	;# 
  2716  0005                     	;# 
  2717  0006                     	;# 
  2718  0007                     	;# 
  2719  0008                     	;# 
  2720  0009                     	;# 
  2721  000A                     	;# 
  2722  000B                     	;# 
  2723  000C                     	;# 
  2724  000E                     	;# 
  2725  0012                     	;# 
  2726  0014                     	;# 
  2727  0018                     	;# 
  2728  001A                     	;# 
  2729  009B                     	;# 
  2730  009B                     	;# 
  2731  009C                     	;# 
  2732  009D                     	;# 
  2733  009E                     	;# 
  2734  009F                     	;# 
  2735  0119                     	;# 
  2736  0119                     	;# 
  2737  0119                     	;# 
  2738  011A                     	;# 
  2739  011A                     	;# 
  2740  011A                     	;# 
  2741  011B                     	;# 
  2742  011B                     	;# 
  2743  011B                     	;# 
  2744  011B                     	;# 
  2745  011B                     	;# 
  2746  011C                     	;# 
  2747  011C                     	;# 
  2748  011C                     	;# 
  2749  011D                     	;# 
  2750  011D                     	;# 
  2751  011D                     	;# 
  2752  011E                     	;# 
  2753  011E                     	;# 
  2754  011E                     	;# 
  2755  011F                     	;# 
  2756  011F                     	;# 
  2757  011F                     	;# 
  2758  011F                     	;# 
  2759  011F                     	;# 
  2760  018C                     	;# 
  2761  018D                     	;# 
  2762  018E                     	;# 
  2763  018F                     	;# 
  2764  0190                     	;# 
  2765  0191                     	;# 
  2766  0192                     	;# 
  2767  020C                     	;# 
  2768  020C                     	;# 
  2769  020D                     	;# 
  2770  020E                     	;# 
  2771  020F                     	;# 
  2772  020F                     	;# 
  2773  0210                     	;# 
  2774  0210                     	;# 
  2775  0211                     	;# 
  2776  0211                     	;# 
  2777  028C                     	;# 
  2778  028C                     	;# 
  2779  028D                     	;# 
  2780  028D                     	;# 
  2781  028E                     	;# 
  2782  028F                     	;# 
  2783  0290                     	;# 
  2784  0291                     	;# 
  2785  030C                     	;# 
  2786  030C                     	;# 
  2787  030D                     	;# 
  2788  030E                     	;# 
  2789  030F                     	;# 
  2790  0310                     	;# 
  2791  0310                     	;# 
  2792  0311                     	;# 
  2793  0312                     	;# 
  2794  0313                     	;# 
  2795  0314                     	;# 
  2796  0314                     	;# 
  2797  0315                     	;# 
  2798  0316                     	;# 
  2799  0318                     	;# 
  2800  0318                     	;# 
  2801  0319                     	;# 
  2802  031A                     	;# 
  2803  031C                     	;# 
  2804  031C                     	;# 
  2805  031D                     	;# 
  2806  031E                     	;# 
  2807  038C                     	;# 
  2808  038C                     	;# 
  2809  038D                     	;# 
  2810  038E                     	;# 
  2811  058C                     	;# 
  2812  058C                     	;# 
  2813  058D                     	;# 
  2814  058E                     	;# 
  2815  058F                     	;# 
  2816  058F                     	;# 
  2817  0590                     	;# 
  2818  0591                     	;# 
  2819  0592                     	;# 
  2820  0593                     	;# 
  2821  059C                     	;# 
  2822  059C                     	;# 
  2823  059D                     	;# 
  2824  059D                     	;# 
  2825  059E                     	;# 
  2826  059F                     	;# 
  2827  060C                     	;# 
  2828  060D                     	;# 
  2829  060E                     	;# 
  2830  060F                     	;# 
  2831  0610                     	;# 
  2832  0611                     	;# 
  2833  0612                     	;# 
  2834  0613                     	;# 
  2835  0614                     	;# 
  2836  070C                     	;# 
  2837  070D                     	;# 
  2838  070E                     	;# 
  2839  070F                     	;# 
  2840  0710                     	;# 
  2841  0711                     	;# 
  2842  0712                     	;# 
  2843  0713                     	;# 
  2844  0716                     	;# 
  2845  0717                     	;# 
  2846  0718                     	;# 
  2847  0719                     	;# 
  2848  071A                     	;# 
  2849  071B                     	;# 
  2850  071C                     	;# 
  2851  071D                     	;# 
  2852  0796                     	;# 
  2853  0797                     	;# 
  2854  0798                     	;# 
  2855  0799                     	;# 
  2856  079A                     	;# 
  2857  079B                     	;# 
  2858  080C                     	;# 
  2859  080D                     	;# 
  2860  080E                     	;# 
  2861  080F                     	;# 
  2862  0810                     	;# 
  2863  0811                     	;# 
  2864  0812                     	;# 
  2865  0813                     	;# 
  2866  0814                     	;# 
  2867  081A                     	;# 
  2868  081A                     	;# 
  2869  081B                     	;# 
  2870  081C                     	;# 
  2871  081C                     	;# 
  2872  081D                     	;# 
  2873  081E                     	;# 
  2874  081F                     	;# 
  2875  088C                     	;# 
  2876  088D                     	;# 
  2877  088E                     	;# 
  2878  088F                     	;# 
  2879  0890                     	;# 
  2880  0891                     	;# 
  2881  0892                     	;# 
  2882  0893                     	;# 
  2883  0895                     	;# 
  2884  0896                     	;# 
  2885  090C                     	;# 
  2886  090E                     	;# 
  2887  090F                     	;# 
  2888  091F                     	;# 
  2889  098F                     	;# 
  2890  098F                     	;# 
  2891  0990                     	;# 
  2892  0991                     	;# 
  2893  0992                     	;# 
  2894  0993                     	;# 
  2895  0994                     	;# 
  2896  0995                     	;# 
  2897  0996                     	;# 
  2898  0997                     	;# 
  2899  1E0F                     	;# 
  2900  1E10                     	;# 
  2901  1E11                     	;# 
  2902  1E12                     	;# 
  2903  1E13                     	;# 
  2904  1E14                     	;# 
  2905  1E15                     	;# 
  2906  1E16                     	;# 
  2907  1E17                     	;# 
  2908  1E18                     	;# 
  2909  1E19                     	;# 
  2910  1E1A                     	;# 
  2911  1E1B                     	;# 
  2912  1E1C                     	;# 
  2913  1E1D                     	;# 
  2914  1E1E                     	;# 
  2915  1E1F                     	;# 
  2916  1E20                     	;# 
  2917  1E21                     	;# 
  2918  1E22                     	;# 
  2919  1E23                     	;# 
  2920  1E24                     	;# 
  2921  1E25                     	;# 
  2922  1E26                     	;# 
  2923  1E27                     	;# 
  2924  1E28                     	;# 
  2925  1E29                     	;# 
  2926  1E2A                     	;# 
  2927  1E2B                     	;# 
  2928  1E2C                     	;# 
  2929  1E2D                     	;# 
  2930  1E2E                     	;# 
  2931  1E2F                     	;# 
  2932  1E30                     	;# 
  2933  1E31                     	;# 
  2934  1E32                     	;# 
  2935  1E33                     	;# 
  2936  1E34                     	;# 
  2937  1E35                     	;# 
  2938  1E36                     	;# 
  2939  1E37                     	;# 
  2940  1E8F                     	;# 
  2941  1E90                     	;# 
  2942  1E91                     	;# 
  2943  1E92                     	;# 
  2944  1E93                     	;# 
  2945  1E9C                     	;# 
  2946  1EA1                     	;# 
  2947  1EA2                     	;# 
  2948  1EB1                     	;# 
  2949  1EBB                     	;# 
  2950  1EBC                     	;# 
  2951  1EBD                     	;# 
  2952  1EBE                     	;# 
  2953  1EC3                     	;# 
  2954  1EC5                     	;# 
  2955  1EC6                     	;# 
  2956  1EC7                     	;# 
  2957  1ECB                     	;# 
  2958  1ECC                     	;# 
  2959  1F10                     	;# 
  2960  1F11                     	;# 
  2961  1F12                     	;# 
  2962  1F13                     	;# 
  2963  1F14                     	;# 
  2964  1F15                     	;# 
  2965  1F20                     	;# 
  2966  1F21                     	;# 
  2967  1F22                     	;# 
  2968  1F23                     	;# 
  2969  1F24                     	;# 
  2970  1F25                     	;# 
  2971  1F38                     	;# 
  2972  1F39                     	;# 
  2973  1F3A                     	;# 
  2974  1F3B                     	;# 
  2975  1F3C                     	;# 
  2976  1F3D                     	;# 
  2977  1F3E                     	;# 
  2978  1F3F                     	;# 
  2979  1F4E                     	;# 
  2980  1F4F                     	;# 
  2981  1F50                     	;# 
  2982  1F51                     	;# 
  2983  1F52                     	;# 
  2984  1F53                     	;# 
  2985  1F54                     	;# 
  2986  1F55                     	;# 
  2987  1FE4                     	;# 
  2988  1FE5                     	;# 
  2989  1FE6                     	;# 
  2990  1FE7                     	;# 
  2991  1FE8                     	;# 
  2992  1FE8                     	;# 
  2993  1FE9                     	;# 
  2994  1FEA                     	;# 
  2995  1FEA                     	;# 
  2996  1FEB                     	;# 
  2997  1FED                     	;# 
  2998  1FEE                     	;# 
  2999  1FEF                     	;# 
  3000  0000                     	;# 
  3001  0001                     	;# 
  3002  0002                     	;# 
  3003  0003                     	;# 
  3004  0004                     	;# 
  3005  0005                     	;# 
  3006  0006                     	;# 
  3007  0007                     	;# 
  3008  0008                     	;# 
  3009  0009                     	;# 
  3010  000A                     	;# 
  3011  000B                     	;# 
  3012  000C                     	;# 
  3013  000E                     	;# 
  3014  0012                     	;# 
  3015  0014                     	;# 
  3016  0018                     	;# 
  3017  001A                     	;# 
  3018  009B                     	;# 
  3019  009B                     	;# 
  3020  009C                     	;# 
  3021  009D                     	;# 
  3022  009E                     	;# 
  3023  009F                     	;# 
  3024  0119                     	;# 
  3025  0119                     	;# 
  3026  0119                     	;# 
  3027  011A                     	;# 
  3028  011A                     	;# 
  3029  011A                     	;# 
  3030  011B                     	;# 
  3031  011B                     	;# 
  3032  011B                     	;# 
  3033  011B                     	;# 
  3034  011B                     	;# 
  3035  011C                     	;# 
  3036  011C                     	;# 
  3037  011C                     	;# 
  3038  011D                     	;# 
  3039  011D                     	;# 
  3040  011D                     	;# 
  3041  011E                     	;# 
  3042  011E                     	;# 
  3043  011E                     	;# 
  3044  011F                     	;# 
  3045  011F                     	;# 
  3046  011F                     	;# 
  3047  011F                     	;# 
  3048  011F                     	;# 
  3049  018C                     	;# 
  3050  018D                     	;# 
  3051  018E                     	;# 
  3052  018F                     	;# 
  3053  0190                     	;# 
  3054  0191                     	;# 
  3055  0192                     	;# 
  3056  020C                     	;# 
  3057  020C                     	;# 
  3058  020D                     	;# 
  3059  020E                     	;# 
  3060  020F                     	;# 
  3061  020F                     	;# 
  3062  0210                     	;# 
  3063  0210                     	;# 
  3064  0211                     	;# 
  3065  0211                     	;# 
  3066  028C                     	;# 
  3067  028C                     	;# 
  3068  028D                     	;# 
  3069  028D                     	;# 
  3070  028E                     	;# 
  3071  028F                     	;# 
  3072  0290                     	;# 
  3073  0291                     	;# 
  3074  030C                     	;# 
  3075  030C                     	;# 
  3076  030D                     	;# 
  3077  030E                     	;# 
  3078  030F                     	;# 
  3079  0310                     	;# 
  3080  0310                     	;# 
  3081  0311                     	;# 
  3082  0312                     	;# 
  3083  0313                     	;# 
  3084  0314                     	;# 
  3085  0314                     	;# 
  3086  0315                     	;# 
  3087  0316                     	;# 
  3088  0318                     	;# 
  3089  0318                     	;# 
  3090  0319                     	;# 
  3091  031A                     	;# 
  3092  031C                     	;# 
  3093  031C                     	;# 
  3094  031D                     	;# 
  3095  031E                     	;# 
  3096  038C                     	;# 
  3097  038C                     	;# 
  3098  038D                     	;# 
  3099  038E                     	;# 
  3100  058C                     	;# 
  3101  058C                     	;# 
  3102  058D                     	;# 
  3103  058E                     	;# 
  3104  058F                     	;# 
  3105  058F                     	;# 
  3106  0590                     	;# 
  3107  0591                     	;# 
  3108  0592                     	;# 
  3109  0593                     	;# 
  3110  059C                     	;# 
  3111  059C                     	;# 
  3112  059D                     	;# 
  3113  059D                     	;# 
  3114  059E                     	;# 
  3115  059F                     	;# 
  3116  060C                     	;# 
  3117  060D                     	;# 
  3118  060E                     	;# 
  3119  060F                     	;# 
  3120  0610                     	;# 
  3121  0611                     	;# 
  3122  0612                     	;# 
  3123  0613                     	;# 
  3124  0614                     	;# 
  3125  070C                     	;# 
  3126  070D                     	;# 
  3127  070E                     	;# 
  3128  070F                     	;# 
  3129  0710                     	;# 
  3130  0711                     	;# 
  3131  0712                     	;# 
  3132  0713                     	;# 
  3133  0716                     	;# 
  3134  0717                     	;# 
  3135  0718                     	;# 
  3136  0719                     	;# 
  3137  071A                     	;# 
  3138  071B                     	;# 
  3139  071C                     	;# 
  3140  071D                     	;# 
  3141  0796                     	;# 
  3142  0797                     	;# 
  3143  0798                     	;# 
  3144  0799                     	;# 
  3145  079A                     	;# 
  3146  079B                     	;# 
  3147  080C                     	;# 
  3148  080D                     	;# 
  3149  080E                     	;# 
  3150  080F                     	;# 
  3151  0810                     	;# 
  3152  0811                     	;# 
  3153  0812                     	;# 
  3154  0813                     	;# 
  3155  0814                     	;# 
  3156  081A                     	;# 
  3157  081A                     	;# 
  3158  081B                     	;# 
  3159  081C                     	;# 
  3160  081C                     	;# 
  3161  081D                     	;# 
  3162  081E                     	;# 
  3163  081F                     	;# 
  3164  088C                     	;# 
  3165  088D                     	;# 
  3166  088E                     	;# 
  3167  088F                     	;# 
  3168  0890                     	;# 
  3169  0891                     	;# 
  3170  0892                     	;# 
  3171  0893                     	;# 
  3172  0895                     	;# 
  3173  0896                     	;# 
  3174  090C                     	;# 
  3175  090E                     	;# 
  3176  090F                     	;# 
  3177  091F                     	;# 
  3178  098F                     	;# 
  3179  098F                     	;# 
  3180  0990                     	;# 
  3181  0991                     	;# 
  3182  0992                     	;# 
  3183  0993                     	;# 
  3184  0994                     	;# 
  3185  0995                     	;# 
  3186  0996                     	;# 
  3187  0997                     	;# 
  3188  1E0F                     	;# 
  3189  1E10                     	;# 
  3190  1E11                     	;# 
  3191  1E12                     	;# 
  3192  1E13                     	;# 
  3193  1E14                     	;# 
  3194  1E15                     	;# 
  3195  1E16                     	;# 
  3196  1E17                     	;# 
  3197  1E18                     	;# 
  3198  1E19                     	;# 
  3199  1E1A                     	;# 
  3200  1E1B                     	;# 
  3201  1E1C                     	;# 
  3202  1E1D                     	;# 
  3203  1E1E                     	;# 
  3204  1E1F                     	;# 
  3205  1E20                     	;# 
  3206  1E21                     	;# 
  3207  1E22                     	;# 
  3208  1E23                     	;# 
  3209  1E24                     	;# 
  3210  1E25                     	;# 
  3211  1E26                     	;# 
  3212  1E27                     	;# 
  3213  1E28                     	;# 
  3214  1E29                     	;# 
  3215  1E2A                     	;# 
  3216  1E2B                     	;# 
  3217  1E2C                     	;# 
  3218  1E2D                     	;# 
  3219  1E2E                     	;# 
  3220  1E2F                     	;# 
  3221  1E30                     	;# 
  3222  1E31                     	;# 
  3223  1E32                     	;# 
  3224  1E33                     	;# 
  3225  1E34                     	;# 
  3226  1E35                     	;# 
  3227  1E36                     	;# 
  3228  1E37                     	;# 
  3229  1E8F                     	;# 
  3230  1E90                     	;# 
  3231  1E91                     	;# 
  3232  1E92                     	;# 
  3233  1E93                     	;# 
  3234  1E9C                     	;# 
  3235  1EA1                     	;# 
  3236  1EA2                     	;# 
  3237  1EB1                     	;# 
  3238  1EBB                     	;# 
  3239  1EBC                     	;# 
  3240  1EBD                     	;# 
  3241  1EBE                     	;# 
  3242  1EC3                     	;# 
  3243  1EC5                     	;# 
  3244  1EC6                     	;# 
  3245  1EC7                     	;# 
  3246  1ECB                     	;# 
  3247  1ECC                     	;# 
  3248  1F10                     	;# 
  3249  1F11                     	;# 
  3250  1F12                     	;# 
  3251  1F13                     	;# 
  3252  1F14                     	;# 
  3253  1F15                     	;# 
  3254  1F20                     	;# 
  3255  1F21                     	;# 
  3256  1F22                     	;# 
  3257  1F23                     	;# 
  3258  1F24                     	;# 
  3259  1F25                     	;# 
  3260  1F38                     	;# 
  3261  1F39                     	;# 
  3262  1F3A                     	;# 
  3263  1F3B                     	;# 
  3264  1F3C                     	;# 
  3265  1F3D                     	;# 
  3266  1F3E                     	;# 
  3267  1F3F                     	;# 
  3268  1F4E                     	;# 
  3269  1F4F                     	;# 
  3270  1F50                     	;# 
  3271  1F51                     	;# 
  3272  1F52                     	;# 
  3273  1F53                     	;# 
  3274  1F54                     	;# 
  3275  1F55                     	;# 
  3276  1FE4                     	;# 
  3277  1FE5                     	;# 
  3278  1FE6                     	;# 
  3279  1FE7                     	;# 
  3280  1FE8                     	;# 
  3281  1FE8                     	;# 
  3282  1FE9                     	;# 
  3283  1FEA                     	;# 
  3284  1FEA                     	;# 
  3285  1FEB                     	;# 
  3286  1FED                     	;# 
  3287  1FEE                     	;# 
  3288  1FEF                     	;# 
  3289  0000                     	;# 
  3290  0001                     	;# 
  3291  0002                     	;# 
  3292  0003                     	;# 
  3293  0004                     	;# 
  3294  0005                     	;# 
  3295  0006                     	;# 
  3296  0007                     	;# 
  3297  0008                     	;# 
  3298  0009                     	;# 
  3299  000A                     	;# 
  3300  000B                     	;# 
  3301  000C                     	;# 
  3302  000E                     	;# 
  3303  0012                     	;# 
  3304  0014                     	;# 
  3305  0018                     	;# 
  3306  001A                     	;# 
  3307  009B                     	;# 
  3308  009B                     	;# 
  3309  009C                     	;# 
  3310  009D                     	;# 
  3311  009E                     	;# 
  3312  009F                     	;# 
  3313  0119                     	;# 
  3314  0119                     	;# 
  3315  0119                     	;# 
  3316  011A                     	;# 
  3317  011A                     	;# 
  3318  011A                     	;# 
  3319  011B                     	;# 
  3320  011B                     	;# 
  3321  011B                     	;# 
  3322  011B                     	;# 
  3323  011B                     	;# 
  3324  011C                     	;# 
  3325  011C                     	;# 
  3326  011C                     	;# 
  3327  011D                     	;# 
  3328  011D                     	;# 
  3329  011D                     	;# 
  3330  011E                     	;# 
  3331  011E                     	;# 
  3332  011E                     	;# 
  3333  011F                     	;# 
  3334  011F                     	;# 
  3335  011F                     	;# 
  3336  011F                     	;# 
  3337  011F                     	;# 
  3338  018C                     	;# 
  3339  018D                     	;# 
  3340  018E                     	;# 
  3341  018F                     	;# 
  3342  0190                     	;# 
  3343  0191                     	;# 
  3344  0192                     	;# 
  3345  020C                     	;# 
  3346  020C                     	;# 
  3347  020D                     	;# 
  3348  020E                     	;# 
  3349  020F                     	;# 
  3350  020F                     	;# 
  3351  0210                     	;# 
  3352  0210                     	;# 
  3353  0211                     	;# 
  3354  0211                     	;# 
  3355  028C                     	;# 
  3356  028C                     	;# 
  3357  028D                     	;# 
  3358  028D                     	;# 
  3359  028E                     	;# 
  3360  028F                     	;# 
  3361  0290                     	;# 
  3362  0291                     	;# 
  3363  030C                     	;# 
  3364  030C                     	;# 
  3365  030D                     	;# 
  3366  030E                     	;# 
  3367  030F                     	;# 
  3368  0310                     	;# 
  3369  0310                     	;# 
  3370  0311                     	;# 
  3371  0312                     	;# 
  3372  0313                     	;# 
  3373  0314                     	;# 
  3374  0314                     	;# 
  3375  0315                     	;# 
  3376  0316                     	;# 
  3377  0318                     	;# 
  3378  0318                     	;# 
  3379  0319                     	;# 
  3380  031A                     	;# 
  3381  031C                     	;# 
  3382  031C                     	;# 
  3383  031D                     	;# 
  3384  031E                     	;# 
  3385  038C                     	;# 
  3386  038C                     	;# 
  3387  038D                     	;# 
  3388  038E                     	;# 
  3389  058C                     	;# 
  3390  058C                     	;# 
  3391  058D                     	;# 
  3392  058E                     	;# 
  3393  058F                     	;# 
  3394  058F                     	;# 
  3395  0590                     	;# 
  3396  0591                     	;# 
  3397  0592                     	;# 
  3398  0593                     	;# 
  3399  059C                     	;# 
  3400  059C                     	;# 
  3401  059D                     	;# 
  3402  059D                     	;# 
  3403  059E                     	;# 
  3404  059F                     	;# 
  3405  060C                     	;# 
  3406  060D                     	;# 
  3407  060E                     	;# 
  3408  060F                     	;# 
  3409  0610                     	;# 
  3410  0611                     	;# 
  3411  0612                     	;# 
  3412  0613                     	;# 
  3413  0614                     	;# 
  3414  070C                     	;# 
  3415  070D                     	;# 
  3416  070E                     	;# 
  3417  070F                     	;# 
  3418  0710                     	;# 
  3419  0711                     	;# 
  3420  0712                     	;# 
  3421  0713                     	;# 
  3422  0716                     	;# 
  3423  0717                     	;# 
  3424  0718                     	;# 
  3425  0719                     	;# 
  3426  071A                     	;# 
  3427  071B                     	;# 
  3428  071C                     	;# 
  3429  071D                     	;# 
  3430  0796                     	;# 
  3431  0797                     	;# 
  3432  0798                     	;# 
  3433  0799                     	;# 
  3434  079A                     	;# 
  3435  079B                     	;# 
  3436  080C                     	;# 
  3437  080D                     	;# 
  3438  080E                     	;# 
  3439  080F                     	;# 
  3440  0810                     	;# 
  3441  0811                     	;# 
  3442  0812                     	;# 
  3443  0813                     	;# 
  3444  0814                     	;# 
  3445  081A                     	;# 
  3446  081A                     	;# 
  3447  081B                     	;# 
  3448  081C                     	;# 
  3449  081C                     	;# 
  3450  081D                     	;# 
  3451  081E                     	;# 
  3452  081F                     	;# 
  3453  088C                     	;# 
  3454  088D                     	;# 
  3455  088E                     	;# 
  3456  088F                     	;# 
  3457  0890                     	;# 
  3458  0891                     	;# 
  3459  0892                     	;# 
  3460  0893                     	;# 
  3461  0895                     	;# 
  3462  0896                     	;# 
  3463  090C                     	;# 
  3464  090E                     	;# 
  3465  090F                     	;# 
  3466  091F                     	;# 
  3467  098F                     	;# 
  3468  098F                     	;# 
  3469  0990                     	;# 
  3470  0991                     	;# 
  3471  0992                     	;# 
  3472  0993                     	;# 
  3473  0994                     	;# 
  3474  0995                     	;# 
  3475  0996                     	;# 
  3476  0997                     	;# 
  3477  1E0F                     	;# 
  3478  1E10                     	;# 
  3479  1E11                     	;# 
  3480  1E12                     	;# 
  3481  1E13                     	;# 
  3482  1E14                     	;# 
  3483  1E15                     	;# 
  3484  1E16                     	;# 
  3485  1E17                     	;# 
  3486  1E18                     	;# 
  3487  1E19                     	;# 
  3488  1E1A                     	;# 
  3489  1E1B                     	;# 
  3490  1E1C                     	;# 
  3491  1E1D                     	;# 
  3492  1E1E                     	;# 
  3493  1E1F                     	;# 
  3494  1E20                     	;# 
  3495  1E21                     	;# 
  3496  1E22                     	;# 
  3497  1E23                     	;# 
  3498  1E24                     	;# 
  3499  1E25                     	;# 
  3500  1E26                     	;# 
  3501  1E27                     	;# 
  3502  1E28                     	;# 
  3503  1E29                     	;# 
  3504  1E2A                     	;# 
  3505  1E2B                     	;# 
  3506  1E2C                     	;# 
  3507  1E2D                     	;# 
  3508  1E2E                     	;# 
  3509  1E2F                     	;# 
  3510  1E30                     	;# 
  3511  1E31                     	;# 
  3512  1E32                     	;# 
  3513  1E33                     	;# 
  3514  1E34                     	;# 
  3515  1E35                     	;# 
  3516  1E36                     	;# 
  3517  1E37                     	;# 
  3518  1E8F                     	;# 
  3519  1E90                     	;# 
  3520  1E91                     	;# 
  3521  1E92                     	;# 
  3522  1E93                     	;# 
  3523  1E9C                     	;# 
  3524  1EA1                     	;# 
  3525  1EA2                     	;# 
  3526  1EB1                     	;# 
  3527  1EBB                     	;# 
  3528  1EBC                     	;# 
  3529  1EBD                     	;# 
  3530  1EBE                     	;# 
  3531  1EC3                     	;# 
  3532  1EC5                     	;# 
  3533  1EC6                     	;# 
  3534  1EC7                     	;# 
  3535  1ECB                     	;# 
  3536  1ECC                     	;# 
  3537  1F10                     	;# 
  3538  1F11                     	;# 
  3539  1F12                     	;# 
  3540  1F13                     	;# 
  3541  1F14                     	;# 
  3542  1F15                     	;# 
  3543  1F20                     	;# 
  3544  1F21                     	;# 
  3545  1F22                     	;# 
  3546  1F23                     	;# 
  3547  1F24                     	;# 
  3548  1F25                     	;# 
  3549  1F38                     	;# 
  3550  1F39                     	;# 
  3551  1F3A                     	;# 
  3552  1F3B                     	;# 
  3553  1F3C                     	;# 
  3554  1F3D                     	;# 
  3555  1F3E                     	;# 
  3556  1F3F                     	;# 
  3557  1F4E                     	;# 
  3558  1F4F                     	;# 
  3559  1F50                     	;# 
  3560  1F51                     	;# 
  3561  1F52                     	;# 
  3562  1F53                     	;# 
  3563  1F54                     	;# 
  3564  1F55                     	;# 
  3565  1FE4                     	;# 
  3566  1FE5                     	;# 
  3567  1FE6                     	;# 
  3568  1FE7                     	;# 
  3569  1FE8                     	;# 
  3570  1FE8                     	;# 
  3571  1FE9                     	;# 
  3572  1FEA                     	;# 
  3573  1FEA                     	;# 
  3574  1FEB                     	;# 
  3575  1FED                     	;# 
  3576  1FEE                     	;# 
  3577  1FEF                     	;# 
  3578  0000                     	;# 
  3579  0001                     	;# 
  3580  0002                     	;# 
  3581  0003                     	;# 
  3582  0004                     	;# 
  3583  0005                     	;# 
  3584  0006                     	;# 
  3585  0007                     	;# 
  3586  0008                     	;# 
  3587  0009                     	;# 
  3588  000A                     	;# 
  3589  000B                     	;# 
  3590  000C                     	;# 
  3591  000E                     	;# 
  3592  0012                     	;# 
  3593  0014                     	;# 
  3594  0018                     	;# 
  3595  001A                     	;# 
  3596  009B                     	;# 
  3597  009B                     	;# 
  3598  009C                     	;# 
  3599  009D                     	;# 
  3600  009E                     	;# 
  3601  009F                     	;# 
  3602  0119                     	;# 
  3603  0119                     	;# 
  3604  0119                     	;# 
  3605  011A                     	;# 
  3606  011A                     	;# 
  3607  011A                     	;# 
  3608  011B                     	;# 
  3609  011B                     	;# 
  3610  011B                     	;# 
  3611  011B                     	;# 
  3612  011B                     	;# 
  3613  011C                     	;# 
  3614  011C                     	;# 
  3615  011C                     	;# 
  3616  011D                     	;# 
  3617  011D                     	;# 
  3618  011D                     	;# 
  3619  011E                     	;# 
  3620  011E                     	;# 
  3621  011E                     	;# 
  3622  011F                     	;# 
  3623  011F                     	;# 
  3624  011F                     	;# 
  3625  011F                     	;# 
  3626  011F                     	;# 
  3627  018C                     	;# 
  3628  018D                     	;# 
  3629  018E                     	;# 
  3630  018F                     	;# 
  3631  0190                     	;# 
  3632  0191                     	;# 
  3633  0192                     	;# 
  3634  020C                     	;# 
  3635  020C                     	;# 
  3636  020D                     	;# 
  3637  020E                     	;# 
  3638  020F                     	;# 
  3639  020F                     	;# 
  3640  0210                     	;# 
  3641  0210                     	;# 
  3642  0211                     	;# 
  3643  0211                     	;# 
  3644  028C                     	;# 
  3645  028C                     	;# 
  3646  028D                     	;# 
  3647  028D                     	;# 
  3648  028E                     	;# 
  3649  028F                     	;# 
  3650  0290                     	;# 
  3651  0291                     	;# 
  3652  030C                     	;# 
  3653  030C                     	;# 
  3654  030D                     	;# 
  3655  030E                     	;# 
  3656  030F                     	;# 
  3657  0310                     	;# 
  3658  0310                     	;# 
  3659  0311                     	;# 
  3660  0312                     	;# 
  3661  0313                     	;# 
  3662  0314                     	;# 
  3663  0314                     	;# 
  3664  0315                     	;# 
  3665  0316                     	;# 
  3666  0318                     	;# 
  3667  0318                     	;# 
  3668  0319                     	;# 
  3669  031A                     	;# 
  3670  031C                     	;# 
  3671  031C                     	;# 
  3672  031D                     	;# 
  3673  031E                     	;# 
  3674  038C                     	;# 
  3675  038C                     	;# 
  3676  038D                     	;# 
  3677  038E                     	;# 
  3678  058C                     	;# 
  3679  058C                     	;# 
  3680  058D                     	;# 
  3681  058E                     	;# 
  3682  058F                     	;# 
  3683  058F                     	;# 
  3684  0590                     	;# 
  3685  0591                     	;# 
  3686  0592                     	;# 
  3687  0593                     	;# 
  3688  059C                     	;# 
  3689  059C                     	;# 
  3690  059D                     	;# 
  3691  059D                     	;# 
  3692  059E                     	;# 
  3693  059F                     	;# 
  3694  060C                     	;# 
  3695  060D                     	;# 
  3696  060E                     	;# 
  3697  060F                     	;# 
  3698  0610                     	;# 
  3699  0611                     	;# 
  3700  0612                     	;# 
  3701  0613                     	;# 
  3702  0614                     	;# 
  3703  070C                     	;# 
  3704  070D                     	;# 
  3705  070E                     	;# 
  3706  070F                     	;# 
  3707  0710                     	;# 
  3708  0711                     	;# 
  3709  0712                     	;# 
  3710  0713                     	;# 
  3711  0716                     	;# 
  3712  0717                     	;# 
  3713  0718                     	;# 
  3714  0719                     	;# 
  3715  071A                     	;# 
  3716  071B                     	;# 
  3717  071C                     	;# 
  3718  071D                     	;# 
  3719  0796                     	;# 
  3720  0797                     	;# 
  3721  0798                     	;# 
  3722  0799                     	;# 
  3723  079A                     	;# 
  3724  079B                     	;# 
  3725  080C                     	;# 
  3726  080D                     	;# 
  3727  080E                     	;# 
  3728  080F                     	;# 
  3729  0810                     	;# 
  3730  0811                     	;# 
  3731  0812                     	;# 
  3732  0813                     	;# 
  3733  0814                     	;# 
  3734  081A                     	;# 
  3735  081A                     	;# 
  3736  081B                     	;# 
  3737  081C                     	;# 
  3738  081C                     	;# 
  3739  081D                     	;# 
  3740  081E                     	;# 
  3741  081F                     	;# 
  3742  088C                     	;# 
  3743  088D                     	;# 
  3744  088E                     	;# 
  3745  088F                     	;# 
  3746  0890                     	;# 
  3747  0891                     	;# 
  3748  0892                     	;# 
  3749  0893                     	;# 
  3750  0895                     	;# 
  3751  0896                     	;# 
  3752  090C                     	;# 
  3753  090E                     	;# 
  3754  090F                     	;# 
  3755  091F                     	;# 
  3756  098F                     	;# 
  3757  098F                     	;# 
  3758  0990                     	;# 
  3759  0991                     	;# 
  3760  0992                     	;# 
  3761  0993                     	;# 
  3762  0994                     	;# 
  3763  0995                     	;# 
  3764  0996                     	;# 
  3765  0997                     	;# 
  3766  1E0F                     	;# 
  3767  1E10                     	;# 
  3768  1E11                     	;# 
  3769  1E12                     	;# 
  3770  1E13                     	;# 
  3771  1E14                     	;# 
  3772  1E15                     	;# 
  3773  1E16                     	;# 
  3774  1E17                     	;# 
  3775  1E18                     	;# 
  3776  1E19                     	;# 
  3777  1E1A                     	;# 
  3778  1E1B                     	;# 
  3779  1E1C                     	;# 
  3780  1E1D                     	;# 
  3781  1E1E                     	;# 
  3782  1E1F                     	;# 
  3783  1E20                     	;# 
  3784  1E21                     	;# 
  3785  1E22                     	;# 
  3786  1E23                     	;# 
  3787  1E24                     	;# 
  3788  1E25                     	;# 
  3789  1E26                     	;# 
  3790  1E27                     	;# 
  3791  1E28                     	;# 
  3792  1E29                     	;# 
  3793  1E2A                     	;# 
  3794  1E2B                     	;# 
  3795  1E2C                     	;# 
  3796  1E2D                     	;# 
  3797  1E2E                     	;# 
  3798  1E2F                     	;# 
  3799  1E30                     	;# 
  3800  1E31                     	;# 
  3801  1E32                     	;# 
  3802  1E33                     	;# 
  3803  1E34                     	;# 
  3804  1E35                     	;# 
  3805  1E36                     	;# 
  3806  1E37                     	;# 
  3807  1E8F                     	;# 
  3808  1E90                     	;# 
  3809  1E91                     	;# 
  3810  1E92                     	;# 
  3811  1E93                     	;# 
  3812  1E9C                     	;# 
  3813  1EA1                     	;# 
  3814  1EA2                     	;# 
  3815  1EB1                     	;# 
  3816  1EBB                     	;# 
  3817  1EBC                     	;# 
  3818  1EBD                     	;# 
  3819  1EBE                     	;# 
  3820  1EC3                     	;# 
  3821  1EC5                     	;# 
  3822  1EC6                     	;# 
  3823  1EC7                     	;# 
  3824  1ECB                     	;# 
  3825  1ECC                     	;# 
  3826  1F10                     	;# 
  3827  1F11                     	;# 
  3828  1F12                     	;# 
  3829  1F13                     	;# 
  3830  1F14                     	;# 
  3831  1F15                     	;# 
  3832  1F20                     	;# 
  3833  1F21                     	;# 
  3834  1F22                     	;# 
  3835  1F23                     	;# 
  3836  1F24                     	;# 
  3837  1F25                     	;# 
  3838  1F38                     	;# 
  3839  1F39                     	;# 
  3840  1F3A                     	;# 
  3841  1F3B                     	;# 
  3842  1F3C                     	;# 
  3843  1F3D                     	;# 
  3844  1F3E                     	;# 
  3845  1F3F                     	;# 
  3846  1F4E                     	;# 
  3847  1F4F                     	;# 
  3848  1F50                     	;# 
  3849  1F51                     	;# 
  3850  1F52                     	;# 
  3851  1F53                     	;# 
  3852  1F54                     	;# 
  3853  1F55                     	;# 
  3854  1FE4                     	;# 
  3855  1FE5                     	;# 
  3856  1FE6                     	;# 
  3857  1FE7                     	;# 
  3858  1FE8                     	;# 
  3859  1FE8                     	;# 
  3860  1FE9                     	;# 
  3861  1FEA                     	;# 
  3862  1FEA                     	;# 
  3863  1FEB                     	;# 
  3864  1FED                     	;# 
  3865  1FEE                     	;# 
  3866  1FEF                     	;# 
  3867  0000                     	;# 
  3868  0001                     	;# 
  3869  0002                     	;# 
  3870  0003                     	;# 
  3871  0004                     	;# 
  3872  0005                     	;# 
  3873  0006                     	;# 
  3874  0007                     	;# 
  3875  0008                     	;# 
  3876  0009                     	;# 
  3877  000A                     	;# 
  3878  000B                     	;# 
  3879  000C                     	;# 
  3880  000E                     	;# 
  3881  0012                     	;# 
  3882  0014                     	;# 
  3883  0018                     	;# 
  3884  001A                     	;# 
  3885  009B                     	;# 
  3886  009B                     	;# 
  3887  009C                     	;# 
  3888  009D                     	;# 
  3889  009E                     	;# 
  3890  009F                     	;# 
  3891  0119                     	;# 
  3892  0119                     	;# 
  3893  0119                     	;# 
  3894  011A                     	;# 
  3895  011A                     	;# 
  3896  011A                     	;# 
  3897  011B                     	;# 
  3898  011B                     	;# 
  3899  011B                     	;# 
  3900  011B                     	;# 
  3901  011B                     	;# 
  3902  011C                     	;# 
  3903  011C                     	;# 
  3904  011C                     	;# 
  3905  011D                     	;# 
  3906  011D                     	;# 
  3907  011D                     	;# 
  3908  011E                     	;# 
  3909  011E                     	;# 
  3910  011E                     	;# 
  3911  011F                     	;# 
  3912  011F                     	;# 
  3913  011F                     	;# 
  3914  011F                     	;# 
  3915  011F                     	;# 
  3916  018C                     	;# 
  3917  018D                     	;# 
  3918  018E                     	;# 
  3919  018F                     	;# 
  3920  0190                     	;# 
  3921  0191                     	;# 
  3922  0192                     	;# 
  3923  020C                     	;# 
  3924  020C                     	;# 
  3925  020D                     	;# 
  3926  020E                     	;# 
  3927  020F                     	;# 
  3928  020F                     	;# 
  3929  0210                     	;# 
  3930  0210                     	;# 
  3931  0211                     	;# 
  3932  0211                     	;# 
  3933  028C                     	;# 
  3934  028C                     	;# 
  3935  028D                     	;# 
  3936  028D                     	;# 
  3937  028E                     	;# 
  3938  028F                     	;# 
  3939  0290                     	;# 
  3940  0291                     	;# 
  3941  030C                     	;# 
  3942  030C                     	;# 
  3943  030D                     	;# 
  3944  030E                     	;# 
  3945  030F                     	;# 
  3946  0310                     	;# 
  3947  0310                     	;# 
  3948  0311                     	;# 
  3949  0312                     	;# 
  3950  0313                     	;# 
  3951  0314                     	;# 
  3952  0314                     	;# 
  3953  0315                     	;# 
  3954  0316                     	;# 
  3955  0318                     	;# 
  3956  0318                     	;# 
  3957  0319                     	;# 
  3958  031A                     	;# 
  3959  031C                     	;# 
  3960  031C                     	;# 
  3961  031D                     	;# 
  3962  031E                     	;# 
  3963  038C                     	;# 
  3964  038C                     	;# 
  3965  038D                     	;# 
  3966  038E                     	;# 
  3967  058C                     	;# 
  3968  058C                     	;# 
  3969  058D                     	;# 
  3970  058E                     	;# 
  3971  058F                     	;# 
  3972  058F                     	;# 
  3973  0590                     	;# 
  3974  0591                     	;# 
  3975  0592                     	;# 
  3976  0593                     	;# 
  3977  059C                     	;# 
  3978  059C                     	;# 
  3979  059D                     	;# 
  3980  059D                     	;# 
  3981  059E                     	;# 
  3982  059F                     	;# 
  3983  060C                     	;# 
  3984  060D                     	;# 
  3985  060E                     	;# 
  3986  060F                     	;# 
  3987  0610                     	;# 
  3988  0611                     	;# 
  3989  0612                     	;# 
  3990  0613                     	;# 
  3991  0614                     	;# 
  3992  070C                     	;# 
  3993  070D                     	;# 
  3994  070E                     	;# 
  3995  070F                     	;# 
  3996  0710                     	;# 
  3997  0711                     	;# 
  3998  0712                     	;# 
  3999  0713                     	;# 
  4000  0716                     	;# 
  4001  0717                     	;# 
  4002  0718                     	;# 
  4003  0719                     	;# 
  4004  071A                     	;# 
  4005  071B                     	;# 
  4006  071C                     	;# 
  4007  071D                     	;# 
  4008  0796                     	;# 
  4009  0797                     	;# 
  4010  0798                     	;# 
  4011  0799                     	;# 
  4012  079A                     	;# 
  4013  079B                     	;# 
  4014  080C                     	;# 
  4015  080D                     	;# 
  4016  080E                     	;# 
  4017  080F                     	;# 
  4018  0810                     	;# 
  4019  0811                     	;# 
  4020  0812                     	;# 
  4021  0813                     	;# 
  4022  0814                     	;# 
  4023  081A                     	;# 
  4024  081A                     	;# 
  4025  081B                     	;# 
  4026  081C                     	;# 
  4027  081C                     	;# 
  4028  081D                     	;# 
  4029  081E                     	;# 
  4030  081F                     	;# 
  4031  088C                     	;# 
  4032  088D                     	;# 
  4033  088E                     	;# 
  4034  088F                     	;# 
  4035  0890                     	;# 
  4036  0891                     	;# 
  4037  0892                     	;# 
  4038  0893                     	;# 
  4039  0895                     	;# 
  4040  0896                     	;# 
  4041  090C                     	;# 
  4042  090E                     	;# 
  4043  090F                     	;# 
  4044  091F                     	;# 
  4045  098F                     	;# 
  4046  098F                     	;# 
  4047  0990                     	;# 
  4048  0991                     	;# 
  4049  0992                     	;# 
  4050  0993                     	;# 
  4051  0994                     	;# 
  4052  0995                     	;# 
  4053  0996                     	;# 
  4054  0997                     	;# 
  4055  1E0F                     	;# 
  4056  1E10                     	;# 
  4057  1E11                     	;# 
  4058  1E12                     	;# 
  4059  1E13                     	;# 
  4060  1E14                     	;# 
  4061  1E15                     	;# 
  4062  1E16                     	;# 
  4063  1E17                     	;# 
  4064  1E18                     	;# 
  4065  1E19                     	;# 
  4066  1E1A                     	;# 
  4067  1E1B                     	;# 
  4068  1E1C                     	;# 
  4069  1E1D                     	;# 
  4070  1E1E                     	;# 
  4071  1E1F                     	;# 
  4072  1E20                     	;# 
  4073  1E21                     	;# 
  4074  1E22                     	;# 
  4075  1E23                     	;# 
  4076  1E24                     	;# 
  4077  1E25                     	;# 
  4078  1E26                     	;# 
  4079  1E27                     	;# 
  4080  1E28                     	;# 
  4081  1E29                     	;# 
  4082  1E2A                     	;# 
  4083  1E2B                     	;# 
  4084  1E2C                     	;# 
  4085  1E2D                     	;# 
  4086  1E2E                     	;# 
  4087  1E2F                     	;# 
  4088  1E30                     	;# 
  4089  1E31                     	;# 
  4090  1E32                     	;# 
  4091  1E33                     	;# 
  4092  1E34                     	;# 
  4093  1E35                     	;# 
  4094  1E36                     	;# 
  4095  1E37                     	;# 
  4096  1E8F                     	;# 
  4097  1E90                     	;# 
  4098  1E91                     	;# 
  4099  1E92                     	;# 
  4100  1E93                     	;# 
  4101  1E9C                     	;# 
  4102  1EA1                     	;# 
  4103  1EA2                     	;# 
  4104  1EB1                     	;# 
  4105  1EBB                     	;# 
  4106  1EBC                     	;# 
  4107  1EBD                     	;# 
  4108  1EBE                     	;# 
  4109  1EC3                     	;# 
  4110  1EC5                     	;# 
  4111  1EC6                     	;# 
  4112  1EC7                     	;# 
  4113  1ECB                     	;# 
  4114  1ECC                     	;# 
  4115  1F10                     	;# 
  4116  1F11                     	;# 
  4117  1F12                     	;# 
  4118  1F13                     	;# 
  4119  1F14                     	;# 
  4120  1F15                     	;# 
  4121  1F20                     	;# 
  4122  1F21                     	;# 
  4123  1F22                     	;# 
  4124  1F23                     	;# 
  4125  1F24                     	;# 
  4126  1F25                     	;# 
  4127  1F38                     	;# 
  4128  1F39                     	;# 
  4129  1F3A                     	;# 
  4130  1F3B                     	;# 
  4131  1F3C                     	;# 
  4132  1F3D                     	;# 
  4133  1F3E                     	;# 
  4134  1F3F                     	;# 
  4135  1F4E                     	;# 
  4136  1F4F                     	;# 
  4137  1F50                     	;# 
  4138  1F51                     	;# 
  4139  1F52                     	;# 
  4140  1F53                     	;# 
  4141  1F54                     	;# 
  4142  1F55                     	;# 
  4143  1FE4                     	;# 
  4144  1FE5                     	;# 
  4145  1FE6                     	;# 
  4146  1FE7                     	;# 
  4147  1FE8                     	;# 
  4148  1FE8                     	;# 
  4149  1FE9                     	;# 
  4150  1FEA                     	;# 
  4151  1FEA                     	;# 
  4152  1FEB                     	;# 
  4153  1FED                     	;# 
  4154  1FEE                     	;# 
  4155  1FEF                     	;# 
  4156  0000                     	;# 
  4157  0001                     	;# 
  4158  0002                     	;# 
  4159  0003                     	;# 
  4160  0004                     	;# 
  4161  0005                     	;# 
  4162  0006                     	;# 
  4163  0007                     	;# 
  4164  0008                     	;# 
  4165  0009                     	;# 
  4166  000A                     	;# 
  4167  000B                     	;# 
  4168  000C                     	;# 
  4169  000E                     	;# 
  4170  0012                     	;# 
  4171  0014                     	;# 
  4172  0018                     	;# 
  4173  001A                     	;# 
  4174  009B                     	;# 
  4175  009B                     	;# 
  4176  009C                     	;# 
  4177  009D                     	;# 
  4178  009E                     	;# 
  4179  009F                     	;# 
  4180  0119                     	;# 
  4181  0119                     	;# 
  4182  0119                     	;# 
  4183  011A                     	;# 
  4184  011A                     	;# 
  4185  011A                     	;# 
  4186  011B                     	;# 
  4187  011B                     	;# 
  4188  011B                     	;# 
  4189  011B                     	;# 
  4190  011B                     	;# 
  4191  011C                     	;# 
  4192  011C                     	;# 
  4193  011C                     	;# 
  4194  011D                     	;# 
  4195  011D                     	;# 
  4196  011D                     	;# 
  4197  011E                     	;# 
  4198  011E                     	;# 
  4199  011E                     	;# 
  4200  011F                     	;# 
  4201  011F                     	;# 
  4202  011F                     	;# 
  4203  011F                     	;# 
  4204  011F                     	;# 
  4205  018C                     	;# 
  4206  018D                     	;# 
  4207  018E                     	;# 
  4208  018F                     	;# 
  4209  0190                     	;# 
  4210  0191                     	;# 
  4211  0192                     	;# 
  4212  020C                     	;# 
  4213  020C                     	;# 
  4214  020D                     	;# 
  4215  020E                     	;# 
  4216  020F                     	;# 
  4217  020F                     	;# 
  4218  0210                     	;# 
  4219  0210                     	;# 
  4220  0211                     	;# 
  4221  0211                     	;# 
  4222  028C                     	;# 
  4223  028C                     	;# 
  4224  028D                     	;# 
  4225  028D                     	;# 
  4226  028E                     	;# 
  4227  028F                     	;# 
  4228  0290                     	;# 
  4229  0291                     	;# 
  4230  030C                     	;# 
  4231  030C                     	;# 
  4232  030D                     	;# 
  4233  030E                     	;# 
  4234  030F                     	;# 
  4235  0310                     	;# 
  4236  0310                     	;# 
  4237  0311                     	;# 
  4238  0312                     	;# 
  4239  0313                     	;# 
  4240  0314                     	;# 
  4241  0314                     	;# 
  4242  0315                     	;# 
  4243  0316                     	;# 
  4244  0318                     	;# 
  4245  0318                     	;# 
  4246  0319                     	;# 
  4247  031A                     	;# 
  4248  031C                     	;# 
  4249  031C                     	;# 
  4250  031D                     	;# 
  4251  031E                     	;# 
  4252  038C                     	;# 
  4253  038C                     	;# 
  4254  038D                     	;# 
  4255  038E                     	;# 
  4256  058C                     	;# 
  4257  058C                     	;# 
  4258  058D                     	;# 
  4259  058E                     	;# 
  4260  058F                     	;# 
  4261  058F                     	;# 
  4262  0590                     	;# 
  4263  0591                     	;# 
  4264  0592                     	;# 
  4265  0593                     	;# 
  4266  059C                     	;# 
  4267  059C                     	;# 
  4268  059D                     	;# 
  4269  059D                     	;# 
  4270  059E                     	;# 
  4271  059F                     	;# 
  4272  060C                     	;# 
  4273  060D                     	;# 
  4274  060E                     	;# 
  4275  060F                     	;# 
  4276  0610                     	;# 
  4277  0611                     	;# 
  4278  0612                     	;# 
  4279  0613                     	;# 
  4280  0614                     	;# 
  4281  070C                     	;# 
  4282  070D                     	;# 
  4283  070E                     	;# 
  4284  070F                     	;# 
  4285  0710                     	;# 
  4286  0711                     	;# 
  4287  0712                     	;# 
  4288  0713                     	;# 
  4289  0716                     	;# 
  4290  0717                     	;# 
  4291  0718                     	;# 
  4292  0719                     	;# 
  4293  071A                     	;# 
  4294  071B                     	;# 
  4295  071C                     	;# 
  4296  071D                     	;# 
  4297  0796                     	;# 
  4298  0797                     	;# 
  4299  0798                     	;# 
  4300  0799                     	;# 
  4301  079A                     	;# 
  4302  079B                     	;# 
  4303  080C                     	;# 
  4304  080D                     	;# 
  4305  080E                     	;# 
  4306  080F                     	;# 
  4307  0810                     	;# 
  4308  0811                     	;# 
  4309  0812                     	;# 
  4310  0813                     	;# 
  4311  0814                     	;# 
  4312  081A                     	;# 
  4313  081A                     	;# 
  4314  081B                     	;# 
  4315  081C                     	;# 
  4316  081C                     	;# 
  4317  081D                     	;# 
  4318  081E                     	;# 
  4319  081F                     	;# 
  4320  088C                     	;# 
  4321  088D                     	;# 
  4322  088E                     	;# 
  4323  088F                     	;# 
  4324  0890                     	;# 
  4325  0891                     	;# 
  4326  0892                     	;# 
  4327  0893                     	;# 
  4328  0895                     	;# 
  4329  0896                     	;# 
  4330  090C                     	;# 
  4331  090E                     	;# 
  4332  090F                     	;# 
  4333  091F                     	;# 
  4334  098F                     	;# 
  4335  098F                     	;# 
  4336  0990                     	;# 
  4337  0991                     	;# 
  4338  0992                     	;# 
  4339  0993                     	;# 
  4340  0994                     	;# 
  4341  0995                     	;# 
  4342  0996                     	;# 
  4343  0997                     	;# 
  4344  1E0F                     	;# 
  4345  1E10                     	;# 
  4346  1E11                     	;# 
  4347  1E12                     	;# 
  4348  1E13                     	;# 
  4349  1E14                     	;# 
  4350  1E15                     	;# 
  4351  1E16                     	;# 
  4352  1E17                     	;# 
  4353  1E18                     	;# 
  4354  1E19                     	;# 
  4355  1E1A                     	;# 
  4356  1E1B                     	;# 
  4357  1E1C                     	;# 
  4358  1E1D                     	;# 
  4359  1E1E                     	;# 
  4360  1E1F                     	;# 
  4361  1E20                     	;# 
  4362  1E21                     	;# 
  4363  1E22                     	;# 
  4364  1E23                     	;# 
  4365  1E24                     	;# 
  4366  1E25                     	;# 
  4367  1E26                     	;# 
  4368  1E27                     	;# 
  4369  1E28                     	;# 
  4370  1E29                     	;# 
  4371  1E2A                     	;# 
  4372  1E2B                     	;# 
  4373  1E2C                     	;# 
  4374  1E2D                     	;# 
  4375  1E2E                     	;# 
  4376  1E2F                     	;# 
  4377  1E30                     	;# 
  4378  1E31                     	;# 
  4379  1E32                     	;# 
  4380  1E33                     	;# 
  4381  1E34                     	;# 
  4382  1E35                     	;# 
  4383  1E36                     	;# 
  4384  1E37                     	;# 
  4385  1E8F                     	;# 
  4386  1E90                     	;# 
  4387  1E91                     	;# 
  4388  1E92                     	;# 
  4389  1E93                     	;# 
  4390  1E9C                     	;# 
  4391  1EA1                     	;# 
  4392  1EA2                     	;# 
  4393  1EB1                     	;# 
  4394  1EBB                     	;# 
  4395  1EBC                     	;# 
  4396  1EBD                     	;# 
  4397  1EBE                     	;# 
  4398  1EC3                     	;# 
  4399  1EC5                     	;# 
  4400  1EC6                     	;# 
  4401  1EC7                     	;# 
  4402  1ECB                     	;# 
  4403  1ECC                     	;# 
  4404  1F10                     	;# 
  4405  1F11                     	;# 
  4406  1F12                     	;# 
  4407  1F13                     	;# 
  4408  1F14                     	;# 
  4409  1F15                     	;# 
  4410  1F20                     	;# 
  4411  1F21                     	;# 
  4412  1F22                     	;# 
  4413  1F23                     	;# 
  4414  1F24                     	;# 
  4415  1F25                     	;# 
  4416  1F38                     	;# 
  4417  1F39                     	;# 
  4418  1F3A                     	;# 
  4419  1F3B                     	;# 
  4420  1F3C                     	;# 
  4421  1F3D                     	;# 
  4422  1F3E                     	;# 
  4423  1F3F                     	;# 
  4424  1F4E                     	;# 
  4425  1F4F                     	;# 
  4426  1F50                     	;# 
  4427  1F51                     	;# 
  4428  1F52                     	;# 
  4429  1F53                     	;# 
  4430  1F54                     	;# 
  4431  1F55                     	;# 
  4432  1FE4                     	;# 
  4433  1FE5                     	;# 
  4434  1FE6                     	;# 
  4435  1FE7                     	;# 
  4436  1FE8                     	;# 
  4437  1FE8                     	;# 
  4438  1FE9                     	;# 
  4439  1FEA                     	;# 
  4440  1FEA                     	;# 
  4441  1FEB                     	;# 
  4442  1FED                     	;# 
  4443  1FEE                     	;# 
  4444  1FEF                     	;# 
  4445  0000                     	;# 
  4446  0001                     	;# 
  4447  0002                     	;# 
  4448  0003                     	;# 
  4449  0004                     	;# 
  4450  0005                     	;# 
  4451  0006                     	;# 
  4452  0007                     	;# 
  4453  0008                     	;# 
  4454  0009                     	;# 
  4455  000A                     	;# 
  4456  000B                     	;# 
  4457  000C                     	;# 
  4458  000E                     	;# 
  4459  0012                     	;# 
  4460  0014                     	;# 
  4461  0018                     	;# 
  4462  001A                     	;# 
  4463  009B                     	;# 
  4464  009B                     	;# 
  4465  009C                     	;# 
  4466  009D                     	;# 
  4467  009E                     	;# 
  4468  009F                     	;# 
  4469  0119                     	;# 
  4470  0119                     	;# 
  4471  0119                     	;# 
  4472  011A                     	;# 
  4473  011A                     	;# 
  4474  011A                     	;# 
  4475  011B                     	;# 
  4476  011B                     	;# 
  4477  011B                     	;# 
  4478  011B                     	;# 
  4479  011B                     	;# 
  4480  011C                     	;# 
  4481  011C                     	;# 
  4482  011C                     	;# 
  4483  011D                     	;# 
  4484  011D                     	;# 
  4485  011D                     	;# 
  4486  011E                     	;# 
  4487  011E                     	;# 
  4488  011E                     	;# 
  4489  011F                     	;# 
  4490  011F                     	;# 
  4491  011F                     	;# 
  4492  011F                     	;# 
  4493  011F                     	;# 
  4494  018C                     	;# 
  4495  018D                     	;# 
  4496  018E                     	;# 
  4497  018F                     	;# 
  4498  0190                     	;# 
  4499  0191                     	;# 
  4500  0192                     	;# 
  4501  020C                     	;# 
  4502  020C                     	;# 
  4503  020D                     	;# 
  4504  020E                     	;# 
  4505  020F                     	;# 
  4506  020F                     	;# 
  4507  0210                     	;# 
  4508  0210                     	;# 
  4509  0211                     	;# 
  4510  0211                     	;# 
  4511  028C                     	;# 
  4512  028C                     	;# 
  4513  028D                     	;# 
  4514  028D                     	;# 
  4515  028E                     	;# 
  4516  028F                     	;# 
  4517  0290                     	;# 
  4518  0291                     	;# 
  4519  030C                     	;# 
  4520  030C                     	;# 
  4521  030D                     	;# 
  4522  030E                     	;# 
  4523  030F                     	;# 
  4524  0310                     	;# 
  4525  0310                     	;# 
  4526  0311                     	;# 
  4527  0312                     	;# 
  4528  0313                     	;# 
  4529  0314                     	;# 
  4530  0314                     	;# 
  4531  0315                     	;# 
  4532  0316                     	;# 
  4533  0318                     	;# 
  4534  0318                     	;# 
  4535  0319                     	;# 
  4536  031A                     	;# 
  4537  031C                     	;# 
  4538  031C                     	;# 
  4539  031D                     	;# 
  4540  031E                     	;# 
  4541  038C                     	;# 
  4542  038C                     	;# 
  4543  038D                     	;# 
  4544  038E                     	;# 
  4545  058C                     	;# 
  4546  058C                     	;# 
  4547  058D                     	;# 
  4548  058E                     	;# 
  4549  058F                     	;# 
  4550  058F                     	;# 
  4551  0590                     	;# 
  4552  0591                     	;# 
  4553  0592                     	;# 
  4554  0593                     	;# 
  4555  059C                     	;# 
  4556  059C                     	;# 
  4557  059D                     	;# 
  4558  059D                     	;# 
  4559  059E                     	;# 
  4560  059F                     	;# 
  4561  060C                     	;# 
  4562  060D                     	;# 
  4563  060E                     	;# 
  4564  060F                     	;# 
  4565  0610                     	;# 
  4566  0611                     	;# 
  4567  0612                     	;# 
  4568  0613                     	;# 
  4569  0614                     	;# 
  4570  070C                     	;# 
  4571  070D                     	;# 
  4572  070E                     	;# 
  4573  070F                     	;# 
  4574  0710                     	;# 
  4575  0711                     	;# 
  4576  0712                     	;# 
  4577  0713                     	;# 
  4578  0716                     	;# 
  4579  0717                     	;# 
  4580  0718                     	;# 
  4581  0719                     	;# 
  4582  071A                     	;# 
  4583  071B                     	;# 
  4584  071C                     	;# 
  4585  071D                     	;# 
  4586  0796                     	;# 
  4587  0797                     	;# 
  4588  0798                     	;# 
  4589  0799                     	;# 
  4590  079A                     	;# 
  4591  079B                     	;# 
  4592  080C                     	;# 
  4593  080D                     	;# 
  4594  080E                     	;# 
  4595  080F                     	;# 
  4596  0810                     	;# 
  4597  0811                     	;# 
  4598  0812                     	;# 
  4599  0813                     	;# 
  4600  0814                     	;# 
  4601  081A                     	;# 
  4602  081A                     	;# 
  4603  081B                     	;# 
  4604  081C                     	;# 
  4605  081C                     	;# 
  4606  081D                     	;# 
  4607  081E                     	;# 
  4608  081F                     	;# 
  4609  088C                     	;# 
  4610  088D                     	;# 
  4611  088E                     	;# 
  4612  088F                     	;# 
  4613  0890                     	;# 
  4614  0891                     	;# 
  4615  0892                     	;# 
  4616  0893                     	;# 
  4617  0895                     	;# 
  4618  0896                     	;# 
  4619  090C                     	;# 
  4620  090E                     	;# 
  4621  090F                     	;# 
  4622  091F                     	;# 
  4623  098F                     	;# 
  4624  098F                     	;# 
  4625  0990                     	;# 
  4626  0991                     	;# 
  4627  0992                     	;# 
  4628  0993                     	;# 
  4629  0994                     	;# 
  4630  0995                     	;# 
  4631  0996                     	;# 
  4632  0997                     	;# 
  4633  1E0F                     	;# 
  4634  1E10                     	;# 
  4635  1E11                     	;# 
  4636  1E12                     	;# 
  4637  1E13                     	;# 
  4638  1E14                     	;# 
  4639  1E15                     	;# 
  4640  1E16                     	;# 
  4641  1E17                     	;# 
  4642  1E18                     	;# 
  4643  1E19                     	;# 
  4644  1E1A                     	;# 
  4645  1E1B                     	;# 
  4646  1E1C                     	;# 
  4647  1E1D                     	;# 
  4648  1E1E                     	;# 
  4649  1E1F                     	;# 
  4650  1E20                     	;# 
  4651  1E21                     	;# 
  4652  1E22                     	;# 
  4653  1E23                     	;# 
  4654  1E24                     	;# 
  4655  1E25                     	;# 
  4656  1E26                     	;# 
  4657  1E27                     	;# 
  4658  1E28                     	;# 
  4659  1E29                     	;# 
  4660  1E2A                     	;# 
  4661  1E2B                     	;# 
  4662  1E2C                     	;# 
  4663  1E2D                     	;# 
  4664  1E2E                     	;# 
  4665  1E2F                     	;# 
  4666  1E30                     	;# 
  4667  1E31                     	;# 
  4668  1E32                     	;# 
  4669  1E33                     	;# 
  4670  1E34                     	;# 
  4671  1E35                     	;# 
  4672  1E36                     	;# 
  4673  1E37                     	;# 
  4674  1E8F                     	;# 
  4675  1E90                     	;# 
  4676  1E91                     	;# 
  4677  1E92                     	;# 
  4678  1E93                     	;# 
  4679  1E9C                     	;# 
  4680  1EA1                     	;# 
  4681  1EA2                     	;# 
  4682  1EB1                     	;# 
  4683  1EBB                     	;# 
  4684  1EBC                     	;# 
  4685  1EBD                     	;# 
  4686  1EBE                     	;# 
  4687  1EC3                     	;# 
  4688  1EC5                     	;# 
  4689  1EC6                     	;# 
  4690  1EC7                     	;# 
  4691  1ECB                     	;# 
  4692  1ECC                     	;# 
  4693  1F10                     	;# 
  4694  1F11                     	;# 
  4695  1F12                     	;# 
  4696  1F13                     	;# 
  4697  1F14                     	;# 
  4698  1F15                     	;# 
  4699  1F20                     	;# 
  4700  1F21                     	;# 
  4701  1F22                     	;# 
  4702  1F23                     	;# 
  4703  1F24                     	;# 
  4704  1F25                     	;# 
  4705  1F38                     	;# 
  4706  1F39                     	;# 
  4707  1F3A                     	;# 
  4708  1F3B                     	;# 
  4709  1F3C                     	;# 
  4710  1F3D                     	;# 
  4711  1F3E                     	;# 
  4712  1F3F                     	;# 
  4713  1F4E                     	;# 
  4714  1F4F                     	;# 
  4715  1F50                     	;# 
  4716  1F51                     	;# 
  4717  1F52                     	;# 
  4718  1F53                     	;# 
  4719  1F54                     	;# 
  4720  1F55                     	;# 
  4721  1FE4                     	;# 
  4722  1FE5                     	;# 
  4723  1FE6                     	;# 
  4724  1FE7                     	;# 
  4725  1FE8                     	;# 
  4726  1FE8                     	;# 
  4727  1FE9                     	;# 
  4728  1FEA                     	;# 
  4729  1FEA                     	;# 
  4730  1FEB                     	;# 
  4731  1FED                     	;# 
  4732  1FEE                     	;# 
  4733  1FEF                     	;# 
  4734                           
  4735                           	psect	idataBANK0
  4736  0000'                    __pidataBANK0:
  4737                           
  4738                           ;initializer for _AdcResult
  4739  0000' 34FF               	retlw	255
  4740  0001' 3403               	retlw	3
  4741  0002' 34FF               	retlw	255
  4742  0003' 3403               	retlw	3
  4743  0004' 34FF               	retlw	255
  4744  0005' 3403               	retlw	3
  4745  0006' 34FF               	retlw	255
  4746  0007' 3403               	retlw	3
  4747  0008' 34FF               	retlw	255
  4748  0009' 3403               	retlw	3
  4749  000A' 34FF               	retlw	255
  4750  000B' 3403               	retlw	3
  4751  000C' 34FF               	retlw	255
  4752  000D' 3403               	retlw	3
  4753  000E' 34FF               	retlw	255
  4754  000F' 3403               	retlw	3
  4755                           
  4756                           	psect	idataBANK1
  4757  0000'                    __pidataBANK1:
  4758                           
  4759                           ;initializer for _LedBit
  4760  0000' 3400               	retlw	0
  4761  0001' 3400               	retlw	0
  4762  0002' 3400'              	retlw	low _LedOff
  4763  0003' 3400'              	retlw	high _LedOff
  4764  0004' 3400               	retlw	0
  4765  0005' 34FE               	retlw	254
  4766  0006' 3400               	retlw	0
  4767  0007' 3400               	retlw	0
  4768  0008' 3401               	retlw	1
  4769  0009' 3400'              	retlw	low _PWM1_LoadDutyValue
  4770  000A' 3400'              	retlw	high _PWM1_LoadDutyValue
  4771  000B' 3401               	retlw	1
  4772  000C' 3400               	retlw	0
  4773  000D' 3400'              	retlw	low _LedOff
  4774  000E' 3400'              	retlw	high _LedOff
  4775  000F' 3400               	retlw	0
  4776  0010' 34FE               	retlw	254
  4777  0011' 3400               	retlw	0
  4778  0012' 3400               	retlw	0
  4779  0013' 3401               	retlw	1
  4780  0014' 3400'              	retlw	low _PWM2_LoadDutyValue
  4781  0015' 3400'              	retlw	high _PWM2_LoadDutyValue
  4782  0016' 3402               	retlw	2
  4783  0017' 3400               	retlw	0
  4784  0018' 3400'              	retlw	low _LedOff
  4785  0019' 3400'              	retlw	high _LedOff
  4786  001A' 3400               	retlw	0
  4787  001B' 3419               	retlw	25
  4788  001C' 3400               	retlw	0
  4789  001D' 3400               	retlw	0
  4790  001E' 3401               	retlw	1
  4791  001F' 3400'              	retlw	low _PWM3_LoadDutyValue
  4792  0020' 3400'              	retlw	high _PWM3_LoadDutyValue
  4793  0021' 3403               	retlw	3
  4794  0022' 3400               	retlw	0
  4795  0023' 3400'              	retlw	low _LedOff
  4796  0024' 3400'              	retlw	high _LedOff
  4797  0025' 3400               	retlw	0
  4798  0026' 3419               	retlw	25
  4799  0027' 3400               	retlw	0
  4800  0028' 3400               	retlw	0
  4801  0029' 3401               	retlw	1
  4802  002A' 3400'              	retlw	low _PWM4_LoadDutyValue
  4803  002B' 3400'              	retlw	high _PWM4_LoadDutyValue
  4804  002C' 3404               	retlw	4
  4805  002D' 3400               	retlw	0
  4806  002E' 3400'              	retlw	low _LedOff
  4807  002F' 3400'              	retlw	high _LedOff
  4808  0030' 3400               	retlw	0
  4809  0031' 3450               	retlw	80
  4810  0032' 3400               	retlw	0
  4811  0033' 3400               	retlw	0
  4812  0034' 3401               	retlw	1
  4813  0035' 3400'              	retlw	low _PWM5_LoadDutyValue
  4814  0036' 3400'              	retlw	high _PWM5_LoadDutyValue
  4815  0037' 3405               	retlw	5
  4816  0038' 3400               	retlw	0
  4817  0039' 3400'              	retlw	low _LedOff
  4818  003A' 3400'              	retlw	high _LedOff
  4819  003B' 3400               	retlw	0
  4820  003C' 3450               	retlw	80
  4821  003D' 3400               	retlw	0
  4822  003E' 3400               	retlw	0
  4823  003F' 3401               	retlw	1
  4824  0040' 3400'              	retlw	low _PWM6_LoadDutyValue
  4825  0041' 3400'              	retlw	high _PWM6_LoadDutyValue
  4826                           
  4827                           	psect	nvBANK0
  4828  0000'                    __pnvBANK0:
  4829  0000'                    _IOCCF1_InterruptHandler:
  4830  0000'                    	ds	2
  4831  000E                     _PORTCbits	set	14
  4832  0012                     _TRISAbits	set	18
  4833  0018                     _LATAbits	set	24
  4834  000B                     _INTCONbits	set	11
  4835  0014                     _TRISC	set	20
  4836  0012                     _TRISA	set	18
  4837  001A                     _LATC	set	26
  4838  0018                     _LATA	set	24
  4839  009D                     _ADCON0bits	set	157
  4840  009D                     _ADCON0	set	157
  4841  009C                     _ADRESH	set	156
  4842  009B                     _ADRESL	set	155
  4843  009F                     _ADACT	set	159
  4844  009E                     _ADCON1	set	158
  4845  020F                     _T1GCONbits	set	527
  4846  020E                     _T1CONbits	set	526
  4847  020E                     _T1CON	set	526
  4848  020C                     _TMR1L	set	524
  4849  020D                     _TMR1H	set	525
  4850  0211                     _T1CLK	set	529
  4851  0210                     _T1GATE	set	528
  4852  020F                     _T1GCON	set	527
  4853  028D                     _PR2	set	653
  4854  028C                     _TMR2	set	652
  4855  028E                     _T2CONbits	set	654
  4856  0291                     _T2RSTbits	set	657
  4857  028F                     _T2HLTbits	set	655
  4858  028E                     _T2CON	set	654
  4859  028C                     _T2TMR	set	652
  4860  028D                     _T2PR	set	653
  4861  0291                     _T2RST	set	657
  4862  028F                     _T2HLT	set	655
  4863  0290                     _T2CLKCON	set	656
  4864  030E                     _CCP1CONbits	set	782
  4865  030C                     _CCPR1L	set	780
  4866  030D                     _CCPR1H	set	781
  4867  030E                     _CCP1CON	set	782
  4868  0312                     _CCP2CONbits	set	786
  4869  0310                     _CCPR2L	set	784
  4870  0311                     _CCPR2H	set	785
  4871  0312                     _CCP2CON	set	786
  4872  031C                     _PWM5DCL	set	796
  4873  031D                     _PWM5DCH	set	797
  4874  031E                     _PWM5CON	set	798
  4875  0314                     _PWM3DCL	set	788
  4876  0315                     _PWM3DCH	set	789
  4877  0316                     _PWM3CON	set	790
  4878  0318                     _PWM4DCL	set	792
  4879  0319                     _PWM4DCH	set	793
  4880  031A                     _PWM4CON	set	794
  4881  038C                     _PWM6DCL	set	908
  4882  038D                     _PWM6DCH	set	909
  4883  038E                     _PWM6CON	set	910
  4884  059E                     _T0CON0bits	set	1438
  4885  059E                     _T0CON0	set	1438
  4886  059C                     _TMR0L	set	1436
  4887  059D                     _TMR0H	set	1437
  4888  059F                     _T0CON1	set	1439
  4889  071A                     _PIE4bits	set	1818
  4890  070C                     _PIR0bits	set	1804
  4891  0716                     _PIE0bits	set	1814
  4892  0710                     _PIR4bits	set	1808
  4893  079B                     _PMD5	set	1947
  4894  079A                     _PMD4	set	1946
  4895  0799                     _PMD3	set	1945
  4896  0798                     _PMD2	set	1944
  4897  0797                     _PMD1	set	1943
  4898  0796                     _PMD0	set	1942
  4899  0892                     _OSCTUNE	set	2194
  4900  0890                     _OSCSTAT	set	2192
  4901  0893                     _OSCFRQ	set	2195
  4902  0891                     _OSCEN	set	2193
  4903  088F                     _OSCCON3	set	2191
  4904  088D                     _OSCCON1	set	2189
  4905  4480                     _PLLR	set	17536
  4906  090C                     _FVRCONbits	set	2316
  4907  090C                     _FVRCON	set	2316
  4908  1EC3                     _ADACTPPS	set	7875
  4909  1F25                     _RC5PPS	set	7973
  4910  1F22                     _RC2PPS	set	7970
  4911  1F15                     _RA5PPS	set	7957
  4912  1F24                     _RC4PPS	set	7972
  4913  1F23                     _RC3PPS	set	7971
  4914  1F14                     _RA4PPS	set	7956
  4915  1F53                     _IOCCPbits	set	8019
  4916  1F54                     _IOCCNbits	set	8020
  4917  1F55                     _IOCCFbits	set	8021
  4918  1F52                     _INLVLC	set	8018
  4919  1F3C                     _INLVLA	set	7996
  4920  1F51                     _SLRCONC	set	8017
  4921  1F3B                     _SLRCONA	set	7995
  4922  1F50                     _ODCONC	set	8016
  4923  1F3A                     _ODCONA	set	7994
  4924  1F4F                     _WPUC	set	8015
  4925  1F39                     _WPUA	set	7993
  4926  1F38                     _ANSELA	set	7992
  4927  1F4E                     _ANSELC	set	8014
  4928                           
  4929                           	psect	cinit
  4930  0000'                    start_initialization:	
  4931                           ; #config settings
  4932                           
  4933  0000'                    __initialization:
  4934                           
  4935                           ; Initialize objects allocated to BANK0
  4936  0000' 3000'              	movlw	low __pidataBANK0
  4937  0001' 0084               	movwf	4
  4938  0002' 3000'              	movlw	(high __pidataBANK0)| (0+128)
  4939  0003' 0085               	movwf	5
  4940  0004' 3000'              	movlw	low __pdataBANK0
  4941  0005' 0086               	movwf	6
  4942  0006' 3000'              	movlw	high __pdataBANK0
  4943  0007' 0087               	movwf	7
  4944  0008' 3010               	movlw	16
  4945  0009' 3180' 2000' 3180'  	fcall	init_ram
  4946                           
  4947                           ; Initialize objects allocated to BANK1
  4948  000C' 3000'              	movlw	low __pidataBANK1
  4949  000D' 0084               	movwf	4
  4950  000E' 3000'              	movlw	(high __pidataBANK1)| (0+128)
  4951  000F' 0085               	movwf	5
  4952  0010' 3000'              	movlw	low __pdataBANK1
  4953  0011' 0086               	movwf	6
  4954  0012' 3000'              	movlw	high __pdataBANK1
  4955  0013' 0087               	movwf	7
  4956  0014' 3042               	movlw	66
  4957  0015' 3180' 2000' 3180'  	fcall	init_ram
  4958                           
  4959                           ; Clear objects allocated to COMMON
  4960  0018' 0180'              	clrf	__pbssCOMMON& (0+127)
  4961  0019' 0180'              	clrf	(__pbssCOMMON+1)& (0+127)
  4962                           
  4963                           ; Clear objects allocated to BANK0
  4964  001A' 3000'              	movlw	low __pbssBANK0
  4965  001B' 0084               	movwf	4
  4966  001C' 3000'              	movlw	high __pbssBANK0
  4967  001D' 0085               	movwf	5
  4968  001E' 301A               	movlw	26
  4969  001F' 3180' 2000' 3180'  	fcall	clear_ram0
  4970  0022'                    end_of_initialization:	
  4971                           ;End of C runtime variable initialization code
  4972                           
  4973  0022'                    __end_of__initialization:
  4974  0022' 107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4975  0023' 0140               	movlb	0
  4976  0024' 2800'              	ljmp	_main	;jump to C main() function
  4977                           
  4978                           	psect	bssCOMMON
  4979  0000'                    __pbssCOMMON:
  4980  0000'                    _timer0ReloadVal16bit:
  4981  0000'                    	ds	2
  4982                           
  4983                           	psect	bssBANK0
  4984  0000'                    __pbssBANK0:
  4985  0000'                    _Random:
  4986  0000'                    	ds	2
  4987  0002'                    _AdcResultAvg:
  4988  0002'                    	ds	2
  4989  0004'                    _AdcResultSample:
  4990  0004'                    	ds	2
  4991  0006'                    _TMR1_InterruptHandler:
  4992  0006'                    	ds	2
  4993  0008'                    _timer1ReloadVal:
  4994  0008'                    	ds	2
  4995  000A'                    _TMR0_InterruptHandler:
  4996  000A'                    	ds	2
  4997  000C'                    _ADC_InterruptHandler:
  4998  000C'                    	ds	2
  4999  000E'                    _ReturnVal:
  5000  000E'                    	ds	1
  5001  000F'                    _pAdcResult:
  5002  000F'                    	ds	1
  5003  0010'                    _AdcState:
  5004  0010'                    	ds	1
  5005  0011'                    _CarrOff:
  5006  0011'                    	ds	1
  5007  0012'                    _BattProtect:
  5008  0012'                    	ds	1
  5009  0013'                    _UpdateVbatt:
  5010  0013'                    	ds	1
  5011  0014'                    _UpdateRcs:
  5012  0014'                    	ds	1
  5013  0015'                    _UpdateLeds:
  5014  0015'                    	ds	1
  5015  0016'                    _seed:
  5016  0016'                    	ds	4
  5017                           
  5018                           	psect	dataBANK0
  5019  0000'                    __pdataBANK0:
  5020  0000'                    _AdcResult:
  5021  0000'                    	ds	16
  5022                           
  5023                           	psect	dataBANK1
  5024  0000'                    __pdataBANK1:
  5025  0000'                    _LedBit:
  5026  0000'                    	ds	66
  5027                           
  5028                           	psect	inittext
  5029  0000'                    init_ram:
  5030  0000' 00FE               	movwf	btemp
  5031  0001'                    initloop:
  5032  0001' 0012               	moviw fsr0++
  5033  0002' 001E               	movwi fsr1++
  5034  0003' 0BFE               	decfsz	btemp,f
  5035  0004' 2801'              	goto	initloop
  5036  0005' 3400               	retlw	0
  5037                           
  5038                           	psect	clrtext
  5039  0000'                    clear_ram0:	
  5040                           ;	Called with FSR0 containing the base address, and
  5041                           ;	WREG with the size to clear
  5042                           
  5043  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
  5044  0001'                    clrloop0:
  5045  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
  5046  0002' 3101               	addfsr 0,1
  5047  0003' 0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5048  0004' 2801'              	goto	clrloop0	;have we reached the end yet?
  5049  0005' 3400               	retlw	0	;all done for this memory range, return
  5050                           
  5051                           	psect	cstackCOMMON
  5052  0000'                    __pcstackCOMMON:
  5053  0000'                    ?_IOCCF1_DefaultInterruptHandler:
  5054  0000'                    ??_IOCCF1_DefaultInterruptHandler:	
  5055                           ; 1 bytes @ 0x0
  5056                           
  5057  0000'                    ?_IOCCF1_ISR:	
  5058                           ; 1 bytes @ 0x0
  5059                           
  5060  0000'                    ?_PMD_Initialize:	
  5061                           ; 1 bytes @ 0x0
  5062                           
  5063  0000'                    ?_OSCILLATOR_Initialize:	
  5064                           ; 1 bytes @ 0x0
  5065                           
  5066  0000'                    ?_PWM2_Initialize:	
  5067                           ; 1 bytes @ 0x0
  5068                           
  5069  0000'                    ?_TMR0_Initialize:	
  5070                           ; 1 bytes @ 0x0
  5071                           
  5072  0000'                    ?_PWM1_Initialize:	
  5073                           ; 1 bytes @ 0x0
  5074                           
  5075  0000'                    ?_TMR1_Initialize:	
  5076                           ; 1 bytes @ 0x0
  5077                           
  5078  0000'                    ?_TMR0_ISR:	
  5079                           ; 1 bytes @ 0x0
  5080                           
  5081  0000'                    ??_TMR0_ISR:	
  5082                           ; 1 bytes @ 0x0
  5083                           
  5084  0000'                    ?_TMR1_ISR:	
  5085                           ; 1 bytes @ 0x0
  5086                           
  5087  0000'                    ?_TMR0_DefaultInterruptHandler:	
  5088                           ; 1 bytes @ 0x0
  5089                           
  5090  0000'                    ??_TMR0_DefaultInterruptHandler:	
  5091                           ; 1 bytes @ 0x0
  5092                           
  5093  0000'                    ?_TMR1_DefaultInterruptHandler:	
  5094                           ; 1 bytes @ 0x0
  5095                           
  5096  0000'                    ??_TMR1_DefaultInterruptHandler:	
  5097                           ; 1 bytes @ 0x0
  5098                           
  5099  0000'                    ?_TMR0_INT:	
  5100                           ; 1 bytes @ 0x0
  5101                           
  5102  0000'                    ??_TMR0_INT:	
  5103                           ; 1 bytes @ 0x0
  5104                           
  5105  0000'                    ?_TMR1_INT:	
  5106                           ; 1 bytes @ 0x0
  5107                           
  5108  0000'                    ??_TMR1_INT:	
  5109                           ; 1 bytes @ 0x0
  5110                           
  5111  0000'                    ?_RCS_INT:	
  5112                           ; 1 bytes @ 0x0
  5113                           
  5114  0000'                    ?_INITxEXECUTER:	
  5115                           ; 1 bytes @ 0x0
  5116                           
  5117  0000'                    ?_EXECUTExEFFECT:	
  5118                           ; 1 bytes @ 0x0
  5119                           
  5120  0000'                    ?_RCSxLED:	
  5121                           ; 1 bytes @ 0x0
  5122                           
  5123  0000'                    ?_BATTxPROTECT:	
  5124                           ; 1 bytes @ 0x0
  5125                           
  5126  0000'                    ?_CalcPwm:	
  5127                           ; 1 bytes @ 0x0
  5128                           
  5129  0000'                    ?_TMR2_Initialize:	
  5130                           ; 1 bytes @ 0x0
  5131                           
  5132  0000'                    ?_ADC_Initialize:	
  5133                           ; 1 bytes @ 0x0
  5134                           
  5135  0000'                    ?_ADC_SelectChannel:	
  5136                           ; 1 bytes @ 0x0
  5137                           
  5138  0000'                    ?_ADC_StartConversion:	
  5139                           ; 1 bytes @ 0x0
  5140                           
  5141  0000'                    ?_ADC_IsConversionDone:	
  5142                           ; 1 bytes @ 0x0
  5143                           
  5144  0000'                    ?_PWM4_Initialize:	
  5145                           ; 1 bytes @ 0x0
  5146                           
  5147  0000'                    ?_PWM3_Initialize:	
  5148                           ; 1 bytes @ 0x0
  5149                           
  5150  0000'                    ?_PWM6_Initialize:	
  5151                           ; 1 bytes @ 0x0
  5152                           
  5153  0000'                    ?_PWM5_Initialize:	
  5154                           ; 1 bytes @ 0x0
  5155                           
  5156  0000'                    ?_FVR_Initialize:	
  5157                           ; 1 bytes @ 0x0
  5158                           
  5159  0000'                    ?_PIN_MANAGER_Initialize:	
  5160                           ; 1 bytes @ 0x0
  5161                           
  5162  0000'                    ?_PIN_MANAGER_IOC:	
  5163                           ; 1 bytes @ 0x0
  5164                           
  5165  0000'                    ?_SYSTEM_Initialize:	
  5166                           ; 1 bytes @ 0x0
  5167                           
  5168  0000'                    ?_INTERRUPT_InterruptManager:	
  5169                           ; 1 bytes @ 0x0
  5170                           
  5171  0000'                    ?_TMR1_WriteTimer:	
  5172                           ; 1 bytes @ 0x0
  5173                           
  5174  0000'                    ?_TMR1_Reload:	
  5175                           ; 1 bytes @ 0x0
  5176                           
  5177  0000'                    ?_main:	
  5178                           ; 1 bytes @ 0x0
  5179                           
  5180  0000'                    TMR1_WriteTimer@timerVal:	
  5181                           ; 1 bytes @ 0x0
  5182                           
  5183                           
  5184                           ; 2 bytes @ 0x0
  5185  0000'                    	ds	2
  5186  0002'                    ?_IOCCF1_SetInterruptHandler:
  5187  0002'                    ??_IOCCF1_ISR:	
  5188                           ; 1 bytes @ 0x2
  5189                           
  5190  0002'                    ??_PMD_Initialize:	
  5191                           ; 1 bytes @ 0x2
  5192                           
  5193  0002'                    ??_OSCILLATOR_Initialize:	
  5194                           ; 1 bytes @ 0x2
  5195                           
  5196  0002'                    ??_PWM2_Initialize:	
  5197                           ; 1 bytes @ 0x2
  5198                           
  5199  0002'                    ??_PWM1_Initialize:	
  5200                           ; 1 bytes @ 0x2
  5201                           
  5202  0002'                    ??_TMR1_ISR:	
  5203                           ; 1 bytes @ 0x2
  5204                           
  5205  0002'                    ?_TMR0_SetInterruptHandler:	
  5206                           ; 1 bytes @ 0x2
  5207                           
  5208  0002'                    ?_TMR1_SetInterruptHandler:	
  5209                           ; 1 bytes @ 0x2
  5210                           
  5211  0002'                    ??_RCS_INT:	
  5212                           ; 1 bytes @ 0x2
  5213                           
  5214  0002'                    ??_BATTxPROTECT:	
  5215                           ; 1 bytes @ 0x2
  5216                           
  5217  0002'                    ?_srand:	
  5218                           ; 1 bytes @ 0x2
  5219                           
  5220  0002'                    ??_TMR2_Initialize:	
  5221                           ; 1 bytes @ 0x2
  5222                           
  5223  0002'                    ??_ADC_Initialize:	
  5224                           ; 1 bytes @ 0x2
  5225                           
  5226  0002'                    ??_ADC_SelectChannel:	
  5227                           ; 1 bytes @ 0x2
  5228                           
  5229  0002'                    ??_ADC_StartConversion:	
  5230                           ; 1 bytes @ 0x2
  5231                           
  5232  0002'                    ??_ADC_IsConversionDone:	
  5233                           ; 1 bytes @ 0x2
  5234                           
  5235  0002'                    ??_PWM4_Initialize:	
  5236                           ; 1 bytes @ 0x2
  5237                           
  5238  0002'                    ??_PWM3_Initialize:	
  5239                           ; 1 bytes @ 0x2
  5240                           
  5241  0002'                    ??_PWM6_Initialize:	
  5242                           ; 1 bytes @ 0x2
  5243                           
  5244  0002'                    ??_PWM5_Initialize:	
  5245                           ; 1 bytes @ 0x2
  5246                           
  5247  0002'                    ??_FVR_Initialize:	
  5248                           ; 1 bytes @ 0x2
  5249                           
  5250  0002'                    ??_PIN_MANAGER_IOC:	
  5251                           ; 1 bytes @ 0x2
  5252                           
  5253  0002'                    ??_INTERRUPT_InterruptManager:	
  5254                           ; 1 bytes @ 0x2
  5255                           
  5256  0002'                    ??_TMR1_WriteTimer:	
  5257                           ; 1 bytes @ 0x2
  5258                           
  5259  0002'                    ??_TMR1_Reload:	
  5260                           ; 1 bytes @ 0x2
  5261                           
  5262  0002'                    ?___bmul:	
  5263                           ; 1 bytes @ 0x2
  5264                           
  5265  0002'                    ?_ADC_GetConversionResult:	
  5266                           ; 1 bytes @ 0x2
  5267                           
  5268  0002'                    ?___lmul:	
  5269                           ; 2 bytes @ 0x2
  5270                           
  5271  0002'                    ___bmul@multiplicand:	
  5272                           ; 4 bytes @ 0x2
  5273                           
  5274  0002'                    IOCCF1_SetInterruptHandler@InterruptHandler:	
  5275                           ; 1 bytes @ 0x2
  5276                           
  5277  0002'                    TMR0_SetInterruptHandler@InterruptHandler:	
  5278                           ; 2 bytes @ 0x2
  5279                           
  5280  0002'                    TMR1_SetInterruptHandler@InterruptHandler:	
  5281                           ; 2 bytes @ 0x2
  5282                           
  5283  0002'                    srand@s:	
  5284                           ; 2 bytes @ 0x2
  5285                           
  5286  0002'                    ___lmul@multiplier:	
  5287                           ; 2 bytes @ 0x2
  5288                           
  5289                           
  5290                           ; 4 bytes @ 0x2
  5291  0002'                    	ds	1
  5292  0003'                    ??___bmul:
  5293  0003'                    ADC_SelectChannel@channel:	
  5294                           ; 1 bytes @ 0x3
  5295                           
  5296                           
  5297                           ; 1 bytes @ 0x3
  5298  0003'                    	ds	1
  5299  0004'                    ??_IOCCF1_SetInterruptHandler:
  5300  0004'                    ??_TMR0_Initialize:	
  5301                           ; 1 bytes @ 0x4
  5302                           
  5303  0004'                    ??_TMR1_Initialize:	
  5304                           ; 1 bytes @ 0x4
  5305                           
  5306  0004'                    ??_TMR0_SetInterruptHandler:	
  5307                           ; 1 bytes @ 0x4
  5308                           
  5309  0004'                    ??_TMR1_SetInterruptHandler:	
  5310                           ; 1 bytes @ 0x4
  5311                           
  5312  0004'                    ??_srand:	
  5313                           ; 1 bytes @ 0x4
  5314                           
  5315  0004'                    ??_ADC_GetConversionResult:	
  5316                           ; 1 bytes @ 0x4
  5317                           
  5318  0004'                    ??_PIN_MANAGER_Initialize:	
  5319                           ; 1 bytes @ 0x4
  5320                           
  5321  0004'                    ??_SYSTEM_Initialize:	
  5322                           ; 1 bytes @ 0x4
  5323                           
  5324  0004'                    ___bmul@product:	
  5325                           ; 1 bytes @ 0x4
  5326                           
  5327                           
  5328                           ; 1 bytes @ 0x4
  5329  0004'                    	ds	1
  5330  0005'                    ___bmul@multiplier:
  5331                           
  5332                           ; 1 bytes @ 0x5
  5333  0005'                    	ds	1
  5334  0006'                    ?_PWM4_LoadDutyValue:
  5335  0006'                    ?_PWM3_LoadDutyValue:	
  5336                           ; 1 bytes @ 0x6
  5337                           
  5338  0006'                    ?_PWM6_LoadDutyValue:	
  5339                           ; 1 bytes @ 0x6
  5340                           
  5341  0006'                    ?_PWM5_LoadDutyValue:	
  5342                           ; 1 bytes @ 0x6
  5343                           
  5344  0006'                    ?_PWM2_LoadDutyValue:	
  5345                           ; 1 bytes @ 0x6
  5346                           
  5347  0006'                    ?_PWM1_LoadDutyValue:	
  5348                           ; 1 bytes @ 0x6
  5349                           
  5350  0006'                    PWM4_LoadDutyValue@dutyValue:	
  5351                           ; 1 bytes @ 0x6
  5352                           
  5353  0006'                    PWM3_LoadDutyValue@dutyValue:	
  5354                           ; 2 bytes @ 0x6
  5355                           
  5356  0006'                    PWM6_LoadDutyValue@dutyValue:	
  5357                           ; 2 bytes @ 0x6
  5358                           
  5359  0006'                    PWM5_LoadDutyValue@dutyValue:	
  5360                           ; 2 bytes @ 0x6
  5361                           
  5362  0006'                    PWM2_LoadDutyValue@dutyValue:	
  5363                           ; 2 bytes @ 0x6
  5364                           
  5365  0006'                    PWM1_LoadDutyValue@dutyValue:	
  5366                           ; 2 bytes @ 0x6
  5367                           
  5368  0006'                    ___lmul@multiplicand:	
  5369                           ; 2 bytes @ 0x6
  5370                           
  5371                           
  5372                           ; 4 bytes @ 0x6
  5373  0006'                    	ds	2
  5374  0008'                    ??_PWM4_LoadDutyValue:
  5375  0008'                    ??_PWM3_LoadDutyValue:	
  5376                           ; 1 bytes @ 0x8
  5377                           
  5378  0008'                    ??_PWM6_LoadDutyValue:	
  5379                           ; 1 bytes @ 0x8
  5380                           
  5381  0008'                    ??_PWM5_LoadDutyValue:	
  5382                           ; 1 bytes @ 0x8
  5383                           
  5384  0008'                    ??_PWM2_LoadDutyValue:	
  5385                           ; 1 bytes @ 0x8
  5386                           
  5387  0008'                    ??_PWM1_LoadDutyValue:	
  5388                           ; 1 bytes @ 0x8
  5389                           
  5390                           
  5391                           ; 1 bytes @ 0x8
  5392  0008'                    	ds	2
  5393  000A'                    ??_INITxEXECUTER:
  5394  000A'                    ??___lmul:	
  5395                           ; 1 bytes @ 0xA
  5396                           
  5397                           
  5398                           	psect	cstackBANK0
  5399  0000'                    __pcstackBANK0:	
  5400                           ; 1 bytes @ 0xA
  5401                           
  5402  0000'                    ??_CalcPwm:
  5403  0000'                    ___lmul@product:	
  5404                           ; 1 bytes @ 0x0
  5405                           
  5406                           
  5407                           ; 4 bytes @ 0x0
  5408  0000'                    	ds	4
  5409  0004'                    ?_rand:
  5410  0004'                    CalcPwm@Led:	
  5411                           ; 2 bytes @ 0x4
  5412                           
  5413                           
  5414                           ; 1 bytes @ 0x4
  5415  0004'                    	ds	1
  5416  0005'                    ?_LedOff:
  5417  0005'                    ?_LedFlash:	
  5418                           ; 1 bytes @ 0x5
  5419                           
  5420  0005'                    ?_LedNom:	
  5421                           ; 1 bytes @ 0x5
  5422                           
  5423  0005'                    ?_LedSlFl:	
  5424                           ; 1 bytes @ 0x5
  5425                           
  5426  0005'                    ?_LedBrake:	
  5427                           ; 1 bytes @ 0x5
  5428                           
  5429  0005'                    LedOff@Led:	
  5430                           ; 1 bytes @ 0x5
  5431                           
  5432  0005'                    LedNom@Led:	
  5433                           ; 1 bytes @ 0x5
  5434                           
  5435  0005'                    LedBrake@Led:	
  5436                           ; 1 bytes @ 0x5
  5437                           
  5438  0005'                    LedSlFl@Led:	
  5439                           ; 1 bytes @ 0x5
  5440                           
  5441  0005'                    LedFlash@Led:	
  5442                           ; 1 bytes @ 0x5
  5443                           
  5444                           
  5445                           ; 1 bytes @ 0x5
  5446  0005'                    	ds	1
  5447  0006'                    ??_LedOff:
  5448  0006'                    ??_rand:	
  5449                           ; 1 bytes @ 0x6
  5450                           
  5451  0006'                    ??_LedFlash:	
  5452                           ; 1 bytes @ 0x6
  5453                           
  5454  0006'                    ??_LedNom:	
  5455                           ; 1 bytes @ 0x6
  5456                           
  5457  0006'                    ??_LedSlFl:	
  5458                           ; 1 bytes @ 0x6
  5459                           
  5460  0006'                    ??_LedBrake:	
  5461                           ; 1 bytes @ 0x6
  5462                           
  5463                           
  5464                           ; 1 bytes @ 0x6
  5465  0006'                    	ds	3
  5466  0009'                    LedSlFl@ReturnVal:
  5467  0009'                    LedFlash@ReturnVal:	
  5468                           ; 1 bytes @ 0x9
  5469                           
  5470                           
  5471                           ; 1 bytes @ 0x9
  5472  0009'                    	ds	1
  5473  000A'                    ??_EXECUTExEFFECT:
  5474  000A'                    ??_RCSxLED:	
  5475                           ; 1 bytes @ 0xA
  5476                           
  5477                           
  5478                           ; 1 bytes @ 0xA
  5479  000A'                    	ds	2
  5480  000C'                    _EXECUTExEFFECT$1858:
  5481                           
  5482                           ; 2 bytes @ 0xC
  5483  000C'                    	ds	2
  5484  000E'                    EXECUTExEFFECT@ReturnData:
  5485                           
  5486                           ; 1 bytes @ 0xE
  5487  000E'                    	ds	1
  5488  000F'                    EXECUTExEFFECT@x:
  5489                           
  5490                           ; 1 bytes @ 0xF
  5491  000F'                    	ds	1
  5492  0010'                    ??_main:
  5493                           
  5494                           ; 1 bytes @ 0x10
  5495  0010'                    	ds	2
  5496  0012'                    main@i:
  5497                           
  5498                           ; 1 bytes @ 0x12
  5499  0012'                    	ds	1
  5500                           
  5501                           	psect	maintext
  5502  0000'                    __pmaintext:	
  5503 ;;
  5504 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5505 ;;
  5506 ;; *************** function _main *****************
  5507 ;; Defined at:
  5508 ;;		line 71 in file "Main.c"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;		None
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;  i               1   18[BANK0 ] unsigned char 
  5513 ;; Return value:  Size  Location     Type
  5514 ;;                  1    wreg      void 
  5515 ;; Registers used:
  5516 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5517 ;; Tracked objects:
  5518 ;;		On entry : B3F/0
  5519 ;;		On exit  : 0/0
  5520 ;;		Unchanged: 0/0
  5521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5522 ;;      Params:         0       0       0       0
  5523 ;;      Locals:         0       1       0       0
  5524 ;;      Temps:          0       2       0       0
  5525 ;;      Totals:         0       3       0       0
  5526 ;;Total ram usage:        3 bytes
  5527 ;; Hardware stack levels required when called:   10
  5528 ;; This function calls:
  5529 ;;		_ADC_GetConversionResult
  5530 ;;		_ADC_IsConversionDone
  5531 ;;		_ADC_SelectChannel
  5532 ;;		_ADC_StartConversion
  5533 ;;		_BATTxPROTECT
  5534 ;;		_EXECUTExEFFECT
  5535 ;;		_INITxEXECUTER
  5536 ;;		_IOCCF1_SetInterruptHandler
  5537 ;;		_RCSxLED
  5538 ;;		_SYSTEM_Initialize
  5539 ;;		_TMR0_SetInterruptHandler
  5540 ;;		_TMR1_SetInterruptHandler
  5541 ;; This function is called by:
  5542 ;;		Startup code after reset
  5543 ;; This function uses a non-reentrant model
  5544 ;;
  5545                           
  5546                           
  5547                           ;psect for function _main
  5548  0000'                    _main:
  5549  0000'                    l2754:	
  5550                           ;incstack = 0
  5551                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5552                           
  5553                           
  5554                           ;Main.c: 74:     SYSTEM_Initialize();
  5555  0000' 3180' 2000' 3180'  	fcall	_SYSTEM_Initialize
  5556  0003'                    l2756:
  5557                           
  5558                           ;Main.c: 80:     (INTCONbits.GIE = 1);
  5559  0003' 178B               	bsf	11,7	;volatile
  5560  0004'                    l2758:
  5561                           
  5562                           ;Main.c: 83:     (INTCONbits.PEIE = 1);
  5563  0004' 170B               	bsf	11,6	;volatile
  5564                           
  5565                           ;Main.c: 92:     TMR0_SetInterruptHandler(TMR0_INT);
  5566  0005' 3000'              	movlw	low _TMR0_INT
  5567  0006' 0082'              	movwf	TMR0_SetInterruptHandler@InterruptHandler
  5568  0007' 3000'              	movlw	high _TMR0_INT
  5569  0008' 0083'              	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  5570  0009' 3180' 2000' 3180'  	fcall	_TMR0_SetInterruptHandler
  5571                           
  5572                           ;Main.c: 93:     TMR1_SetInterruptHandler(TMR1_INT);
  5573  000C' 3000'              	movlw	low _TMR1_INT
  5574  000D' 0082'              	movwf	TMR1_SetInterruptHandler@InterruptHandler
  5575  000E' 3000'              	movlw	high _TMR1_INT
  5576  000F' 0083'              	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  5577  0010' 3180' 2000' 3180'  	fcall	_TMR1_SetInterruptHandler
  5578                           
  5579                           ;Main.c: 95:     IOCCF1_SetInterruptHandler(RCS_INT);
  5580  0013' 3000'              	movlw	low _RCS_INT
  5581  0014' 0082'              	movwf	IOCCF1_SetInterruptHandler@InterruptHandler
  5582  0015' 3000'              	movlw	high _RCS_INT
  5583  0016' 0083'              	movwf	IOCCF1_SetInterruptHandler@InterruptHandler+1
  5584  0017' 3180' 2000' 3180'  	fcall	_IOCCF1_SetInterruptHandler
  5585                           
  5586                           ;Main.c: 97:     ADC_SelectChannel(Vbatt);
  5587  001A' 3010               	movlw	16
  5588  001B' 3180' 2000' 3180'  	fcall	_ADC_SelectChannel
  5589                           
  5590                           ;Main.c: 99:     INITxEXECUTER();
  5591  001E' 3180' 2000' 3180'  	fcall	_INITxEXECUTER
  5592  0021'                    l2760:
  5593                           
  5594                           ;Main.c: 102:     {;Main.c: 104:         if(UpdateLeds){
  5595  0021' 0140               	movlb	0	; select bank0
  5596  0022' 0815'              	movf	_UpdateLeds,w
  5597  0023' 1903               	btfsc	3,2
  5598  0024' 2826'              	goto	u1321
  5599  0025' 2827'              	goto	u1320
  5600  0026'                    u1321:
  5601  0026' 2831'              	goto	l2766
  5602  0027'                    u1320:
  5603  0027'                    l2762:
  5604                           
  5605                           ;Main.c: 105:             if (EXECUTExEFFECT() == 1 )
  5606  0027' 3180' 2000' 3180'  	fcall	_EXECUTExEFFECT
  5607  002A' 3A01               	xorlw	1
  5608  002B' 1D03               	skipz
  5609  002C' 282E'              	goto	u1331
  5610  002D' 282F'              	goto	u1330
  5611  002E'                    u1331:
  5612  002E' 2831'              	goto	l2766
  5613  002F'                    u1330:
  5614  002F'                    l2764:
  5615                           
  5616                           ;Main.c: 106:             {;Main.c: 107:                 UpdateLeds = 0;
  5617  002F' 0140               	movlb	0	; select bank0
  5618  0030' 0195'              	clrf	_UpdateLeds
  5619  0031'                    l2766:
  5620                           
  5621                           ;Main.c: 112:         if(UpdateRcs && !CarrOff){
  5622  0031' 0140               	movlb	0	; select bank0
  5623  0032' 0814'              	movf	_UpdateRcs,w
  5624  0033' 1903               	btfsc	3,2
  5625  0034' 2836'              	goto	u1341
  5626  0035' 2837'              	goto	u1340
  5627  0036'                    u1341:
  5628  0036' 2841'              	goto	l2774
  5629  0037'                    u1340:
  5630  0037'                    l2768:
  5631  0037' 0811'              	movf	_CarrOff,w
  5632  0038' 1D03               	btfss	3,2
  5633  0039' 283B'              	goto	u1351
  5634  003A' 283C'              	goto	u1350
  5635  003B'                    u1351:
  5636  003B' 2841'              	goto	l2774
  5637  003C'                    u1350:
  5638  003C'                    l2770:
  5639                           
  5640                           ;Main.c: 113:             RCSxLED();
  5641  003C' 3180' 2000' 3180'  	fcall	_RCSxLED
  5642  003F'                    l2772:
  5643                           
  5644                           ;Main.c: 114:             UpdateRcs = 0;
  5645  003F' 0140               	movlb	0	; select bank0
  5646  0040' 0194'              	clrf	_UpdateRcs
  5647  0041'                    l2774:
  5648                           
  5649                           ;Main.c: 118:         if(UpdateVbatt){
  5650  0041' 0813'              	movf	_UpdateVbatt,w
  5651  0042' 1903               	btfsc	3,2
  5652  0043' 2845'              	goto	u1361
  5653  0044' 2846'              	goto	u1360
  5654  0045'                    u1361:
  5655  0045' 28B8'              	goto	l2818
  5656  0046'                    u1360:
  5657  0046' 28A8'              	goto	l2816
  5658  0047'                    l2778:
  5659  0047' 3180' 2000' 3180'  	fcall	_ADC_StartConversion
  5660  004A'                    l2780:
  5661                           
  5662                           ;Main.c: 121:                         AdcState = 1;
  5663  004A' 0140               	movlb	0	; select bank0
  5664  004B' 0190'              	clrf	_AdcState
  5665  004C' 0A90'              	incf	_AdcState,f
  5666                           
  5667                           ;Main.c: 122:                     break;
  5668  004D' 28B8'              	goto	l2818
  5669  004E'                    l2782:
  5670  004E' 3180' 2000' 3180'  	fcall	_ADC_IsConversionDone
  5671  0051' 3A00               	xorlw	0
  5672  0052' 1903               	skipnz
  5673  0053' 2855'              	goto	u1371
  5674  0054' 2856'              	goto	u1370
  5675  0055'                    u1371:
  5676  0055' 28B8'              	goto	l2818
  5677  0056'                    u1370:
  5678  0056'                    l2784:
  5679                           
  5680                           ;Main.c: 124:                             AdcResultSample = ADC_GetConversionResult();
  5681  0056' 3180' 2000' 3180'  	fcall	_ADC_GetConversionResult
  5682  0059' 0803'              	movf	?_ADC_GetConversionResult+1,w
  5683  005A' 0140               	movlb	0	; select bank0
  5684  005B' 0085'              	movwf	_AdcResultSample+1
  5685  005C' 0802'              	movf	?_ADC_GetConversionResult,w
  5686  005D' 0084'              	movwf	_AdcResultSample
  5687  005E'                    l2786:
  5688                           
  5689                           ;Main.c: 125:                             AdcResult[pAdcResult] = AdcResultSample;
  5690  005E' 350F'              	lslf	_pAdcResult,w
  5691  005F' 3E00'              	addlw	(low (_AdcResult| 0))& (0+255)
  5692  0060' 0086               	movwf	6
  5693  0061' 0187               	clrf	7
  5694  0062' 0804'              	movf	_AdcResultSample,w
  5695  0063' 3FC0               	movwi [0]fsr1
  5696  0064' 0805'              	movf	_AdcResultSample+1,w
  5697  0065' 3FC1               	movwi [1]fsr1
  5698  0066'                    l2788:
  5699                           
  5700                           ;Main.c: 127:                             pAdcResult++;
  5701  0066' 3001               	movlw	1
  5702  0067' 0090'              	movwf	??_main
  5703  0068' 0810'              	movf	??_main,w
  5704  0069' 078F'              	addwf	_pAdcResult,f
  5705  006A'                    l2790:
  5706                           
  5707                           ;Main.c: 128:                             if(pAdcResult > (8 - 1)){
  5708  006A' 3008               	movlw	8
  5709  006B' 020F'              	subwf	_pAdcResult,w
  5710  006C' 1C03               	skipc
  5711  006D' 286F'              	goto	u1381
  5712  006E' 2870'              	goto	u1380
  5713  006F'                    u1381:
  5714  006F' 2871'              	goto	l556
  5715  0070'                    u1380:
  5716  0070'                    l2792:
  5717                           
  5718                           ;Main.c: 129:                                 pAdcResult = 0;
  5719  0070' 018F'              	clrf	_pAdcResult
  5720  0071'                    l556:	
  5721                           ;Main.c: 130:                             }
  5722                           
  5723                           
  5724                           ;Main.c: 132:                             AdcResultAvg = 0;
  5725  0071' 0182'              	clrf	_AdcResultAvg
  5726  0072' 0183'              	clrf	_AdcResultAvg+1
  5727                           
  5728                           ;Main.c: 133:                             for(uint8_t i=0; i < 8; i++){
  5729  0073' 0192'              	clrf	main@i
  5730  0074'                    l2798:
  5731                           
  5732                           ;Main.c: 134:                                 AdcResultAvg += AdcResult[i];
  5733  0074' 3512'              	lslf	main@i,w
  5734  0075' 3E00'              	addlw	(low (_AdcResult| 0))& (0+255)
  5735  0076' 0086               	movwf	6
  5736  0077' 0187               	clrf	7
  5737  0078' 3F40               	moviw [0]fsr1
  5738  0079' 0090'              	movwf	??_main
  5739  007A' 3F41               	moviw [1]fsr1
  5740  007B' 0091'              	movwf	??_main+1
  5741  007C' 0810'              	movf	??_main,w
  5742  007D' 0782'              	addwf	_AdcResultAvg,f
  5743  007E' 0811'              	movf	??_main+1,w
  5744  007F' 3D83'              	addwfc	_AdcResultAvg+1,f
  5745  0080'                    l2800:
  5746                           
  5747                           ;Main.c: 135:                             };
  5748  0080' 3001               	movlw	1
  5749  0081' 0090'              	movwf	??_main
  5750  0082' 0810'              	movf	??_main,w
  5751  0083' 0792'              	addwf	main@i,f
  5752  0084'                    l2802:
  5753  0084' 3008               	movlw	8
  5754  0085' 0212'              	subwf	main@i,w
  5755  0086' 1C03               	skipc
  5756  0087' 2889'              	goto	u1391
  5757  0088' 288A'              	goto	u1390
  5758  0089'                    u1391:
  5759  0089' 2874'              	goto	l2798
  5760  008A'                    u1390:
  5761  008A'                    l2804:
  5762                           
  5763                           ;Main.c: 137:                             AdcResultAvg = AdcResultAvg >> 3;
  5764  008A' 0803'              	movf	_AdcResultAvg+1,w
  5765  008B' 0091'              	movwf	??_main+1
  5766  008C' 0802'              	movf	_AdcResultAvg,w
  5767  008D' 0090'              	movwf	??_main
  5768  008E' 3691'              	lsrf	??_main+1,f
  5769  008F' 0C90'              	rrf	??_main,f
  5770  0090' 3691'              	lsrf	??_main+1,f
  5771  0091' 0C90'              	rrf	??_main,f
  5772  0092' 3691'              	lsrf	??_main+1,f
  5773  0093' 0C90'              	rrf	??_main,f
  5774  0094' 0810'              	movf	??_main,w
  5775  0095' 0082'              	movwf	_AdcResultAvg
  5776  0096' 0811'              	movf	??_main+1,w
  5777  0097' 0083'              	movwf	_AdcResultAvg+1
  5778  0098'                    l2806:
  5779                           
  5780                           ;Main.c: 138:                             if (AdcResultAvg < 800){
  5781  0098' 3003               	movlw	3
  5782  0099' 0203'              	subwf	_AdcResultAvg+1,w
  5783  009A' 3020               	movlw	32
  5784  009B' 1903               	skipnz
  5785  009C' 0202'              	subwf	_AdcResultAvg,w
  5786  009D' 1803               	skipnc
  5787  009E' 28A0'              	goto	u1401
  5788  009F' 28A1'              	goto	u1400
  5789  00A0'                    u1401:
  5790  00A0' 28A3'              	goto	l2810
  5791  00A1'                    u1400:
  5792  00A1'                    l2808:
  5793                           
  5794                           ;Main.c: 139:                                BattProtect = 1;
  5795  00A1' 0192'              	clrf	_BattProtect
  5796  00A2' 0A92'              	incf	_BattProtect,f
  5797  00A3'                    l2810:
  5798                           
  5799                           ;Main.c: 141:                             UpdateVbatt = 0;
  5800  00A3' 0193'              	clrf	_UpdateVbatt
  5801                           
  5802                           ;Main.c: 142:                             AdcState = 0;
  5803  00A4' 0190'              	clrf	_AdcState
  5804  00A5' 28B8'              	goto	l2818
  5805  00A6'                    l2812:
  5806  00A6' 0190'              	clrf	_AdcState
  5807                           
  5808                           ;Main.c: 147:                     break;
  5809  00A7' 28B8'              	goto	l2818
  5810  00A8'                    l2816:
  5811  00A8' 0810'              	movf	_AdcState,w
  5812  00A9' 0090'              	movwf	??_main
  5813  00AA' 0191'              	clrf	??_main+1
  5814                           
  5815                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5816                           ; Switch size 1, requested type "simple"
  5817                           ; Number of cases is 1, Range of values is 0 to 0
  5818                           ; switch strategies available:
  5819                           ; Name         Instructions Cycles
  5820                           ; simple_byte            4     3 (average)
  5821                           ; direct_byte            8     6 (fixed)
  5822                           ; jumptable            260     6 (fixed)
  5823                           ;	Chosen strategy is simple_byte
  5824  00AB' 0811'              	movf	??_main+1,w
  5825  00AC' 3A00               	xorlw	0	; case 0
  5826  00AD' 1903               	skipnz
  5827  00AE' 28B0'              	goto	l2894
  5828  00AF' 28A6'              	goto	l2812
  5829  00B0'                    l2894:
  5830                           
  5831                           ; Switch size 1, requested type "simple"
  5832                           ; Number of cases is 2, Range of values is 0 to 1
  5833                           ; switch strategies available:
  5834                           ; Name         Instructions Cycles
  5835                           ; simple_byte            7     4 (average)
  5836                           ; direct_byte           10     6 (fixed)
  5837                           ; jumptable            260     6 (fixed)
  5838                           ;	Chosen strategy is simple_byte
  5839  00B0' 0810'              	movf	??_main,w
  5840  00B1' 3A00               	xorlw	0	; case 0
  5841  00B2' 1903               	skipnz
  5842  00B3' 2847'              	goto	l2778
  5843  00B4' 3A01               	xorlw	1	; case 1
  5844  00B5' 1903               	skipnz
  5845  00B6' 284E'              	goto	l2782
  5846  00B7' 28A6'              	goto	l2812
  5847  00B8'                    l2818:
  5848                           
  5849                           ;Main.c: 151:         if(BattProtect){
  5850  00B8' 0140               	movlb	0	; select bank0
  5851  00B9' 0812'              	movf	_BattProtect,w
  5852  00BA' 1903               	btfsc	3,2
  5853  00BB' 28BD'              	goto	u1411
  5854  00BC' 28BE'              	goto	u1410
  5855  00BD'                    u1411:
  5856  00BD' 28C5'              	goto	l561
  5857  00BE'                    u1410:
  5858  00BE'                    l2820:
  5859                           
  5860                           ;Main.c: 153:             BATTxPROTECT();
  5861  00BE' 3180' 2000' 3180'  	fcall	_BATTxPROTECT
  5862  00C1'                    l2822:
  5863                           
  5864                           ;Main.c: 154:             BattProtect = 0;
  5865  00C1' 0140               	movlb	0	; select bank0
  5866  00C2' 0192'              	clrf	_BattProtect
  5867  00C3'                    l2824:
  5868                           
  5869                           ;Main.c: 156:             CarrOff = 1;
  5870  00C3' 0191'              	clrf	_CarrOff
  5871  00C4' 0A91'              	incf	_CarrOff,f
  5872  00C5'                    l561:	
  5873                           ;Main.c: 157:         }
  5874                           
  5875  00C5' 0064               	clrwdt	;# 
  5876  00C6' 2821'              	goto	l2760
  5877  00C7' 2800'              	ljmp	start
  5878  00C8'                    __end_of_main:
  5879                           
  5880                           	psect	text1
  5881  0000'                    __ptext1:	
  5882 ;; *************** function _SYSTEM_Initialize *****************
  5883 ;; Defined at:
  5884 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5885 ;; Parameters:    Size  Location     Type
  5886 ;;		None
  5887 ;; Auto vars:     Size  Location     Type
  5888 ;;		None
  5889 ;; Return value:  Size  Location     Type
  5890 ;;                  1    wreg      void 
  5891 ;; Registers used:
  5892 ;;		wreg, status,2, status,0, pclath, cstack
  5893 ;; Tracked objects:
  5894 ;;		On entry : 0/0
  5895 ;;		On exit  : 0/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5898 ;;      Params:         0       0       0       0
  5899 ;;      Locals:         0       0       0       0
  5900 ;;      Temps:          0       0       0       0
  5901 ;;      Totals:         0       0       0       0
  5902 ;;Total ram usage:        0 bytes
  5903 ;; Hardware stack levels used:    1
  5904 ;; Hardware stack levels required when called:    8
  5905 ;; This function calls:
  5906 ;;		_ADC_Initialize
  5907 ;;		_FVR_Initialize
  5908 ;;		_OSCILLATOR_Initialize
  5909 ;;		_PIN_MANAGER_Initialize
  5910 ;;		_PMD_Initialize
  5911 ;;		_PWM1_Initialize
  5912 ;;		_PWM2_Initialize
  5913 ;;		_PWM3_Initialize
  5914 ;;		_PWM4_Initialize
  5915 ;;		_PWM5_Initialize
  5916 ;;		_PWM6_Initialize
  5917 ;;		_TMR0_Initialize
  5918 ;;		_TMR1_Initialize
  5919 ;;		_TMR2_Initialize
  5920 ;; This function is called by:
  5921 ;;		_main
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           
  5925                           
  5926                           ;psect for function _SYSTEM_Initialize
  5927  0000'                    _SYSTEM_Initialize:
  5928  0000'                    l2316:	
  5929                           ;incstack = 0
  5930                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5931                           
  5932                           
  5933                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  5934  0000' 3180' 2000' 3180'  	fcall	_PMD_Initialize
  5935                           
  5936                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  5937  0003' 3180' 2000' 3180'  	fcall	_PIN_MANAGER_Initialize
  5938                           
  5939                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  5940  0006' 3180' 2000' 3180'  	fcall	_OSCILLATOR_Initialize
  5941                           
  5942                           ;mcc_generated_files/mcc.c: 55:     FVR_Initialize();
  5943  0009' 3180' 2000' 3180'  	fcall	_FVR_Initialize
  5944                           
  5945                           ;mcc_generated_files/mcc.c: 56:     PWM2_Initialize();
  5946  000C' 3180' 2000' 3180'  	fcall	_PWM2_Initialize
  5947                           
  5948                           ;mcc_generated_files/mcc.c: 57:     PWM4_Initialize();
  5949  000F' 3180' 2000' 3180'  	fcall	_PWM4_Initialize
  5950                           
  5951                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  5952  0012' 3180' 2000' 3180'  	fcall	_TMR2_Initialize
  5953                           
  5954                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  5955  0015' 3180' 2000' 3180'  	fcall	_TMR0_Initialize
  5956                           
  5957                           ;mcc_generated_files/mcc.c: 60:     PWM6_Initialize();
  5958  0018' 3180' 2000' 3180'  	fcall	_PWM6_Initialize
  5959                           
  5960                           ;mcc_generated_files/mcc.c: 61:     PWM1_Initialize();
  5961  001B' 3180' 2000' 3180'  	fcall	_PWM1_Initialize
  5962                           
  5963                           ;mcc_generated_files/mcc.c: 62:     ADC_Initialize();
  5964  001E' 3180' 2000' 3180'  	fcall	_ADC_Initialize
  5965                           
  5966                           ;mcc_generated_files/mcc.c: 63:     PWM3_Initialize();
  5967  0021' 3180' 2000' 3180'  	fcall	_PWM3_Initialize
  5968                           
  5969                           ;mcc_generated_files/mcc.c: 64:     PWM5_Initialize();
  5970  0024' 3180' 2000' 3180'  	fcall	_PWM5_Initialize
  5971                           
  5972                           ;mcc_generated_files/mcc.c: 65:     TMR1_Initialize();
  5973  0027' 3180' 2000' 3180'  	fcall	_TMR1_Initialize
  5974  002A'                    l297:
  5975  002A' 0008               	return
  5976  002B'                    __end_of_SYSTEM_Initialize:
  5977                           
  5978                           	psect	text2
  5979  0000'                    __ptext2:	
  5980 ;; *************** function _TMR2_Initialize *****************
  5981 ;; Defined at:
  5982 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  5983 ;; Parameters:    Size  Location     Type
  5984 ;;		None
  5985 ;; Auto vars:     Size  Location     Type
  5986 ;;		None
  5987 ;; Return value:  Size  Location     Type
  5988 ;;                  1    wreg      void 
  5989 ;; Registers used:
  5990 ;;		wreg, status,2
  5991 ;; Tracked objects:
  5992 ;;		On entry : 0/0
  5993 ;;		On exit  : 0/0
  5994 ;;		Unchanged: 0/0
  5995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5996 ;;      Params:         0       0       0       0
  5997 ;;      Locals:         0       0       0       0
  5998 ;;      Temps:          0       0       0       0
  5999 ;;      Totals:         0       0       0       0
  6000 ;;Total ram usage:        0 bytes
  6001 ;; Hardware stack levels used:    1
  6002 ;; Hardware stack levels required when called:    6
  6003 ;; This function calls:
  6004 ;;		Nothing
  6005 ;; This function is called by:
  6006 ;;		_SYSTEM_Initialize
  6007 ;; This function uses a non-reentrant model
  6008 ;;
  6009                           
  6010                           
  6011                           ;psect for function _TMR2_Initialize
  6012  0000'                    _TMR2_Initialize:
  6013  0000'                    l2014:	
  6014                           ;incstack = 0
  6015                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  6016                           
  6017                           
  6018                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
  6019  0000' 3001               	movlw	1
  6020  0001' 0145               	movlb	5	; select bank5
  6021  0002' 0090               	movwf	16	;volatile
  6022  0003'                    l2016:
  6023                           
  6024                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  6025  0003' 018F               	clrf	15	;volatile
  6026  0004'                    l2018:
  6027                           
  6028                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  6029  0004' 0191               	clrf	17	;volatile
  6030                           
  6031                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
  6032  0005' 30FF               	movlw	255
  6033  0006' 008D               	movwf	13	;volatile
  6034  0007'                    l2020:
  6035                           
  6036                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  6037  0007' 018C               	clrf	12	;volatile
  6038  0008'                    l2022:
  6039                           
  6040                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  6041  0008' 014E               	movlb	14	; select bank14
  6042  0009' 1090               	bcf	16,1	;volatile
  6043  000A'                    l2024:
  6044                           
  6045                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0x80;
  6046  000A' 3080               	movlw	128
  6047  000B' 0145               	movlb	5	; select bank5
  6048  000C' 008E               	movwf	14	;volatile
  6049  000D'                    l27:
  6050  000D' 0008               	return
  6051  000E'                    __end_of_TMR2_Initialize:
  6052                           
  6053                           	psect	text3
  6054  0000'                    __ptext3:	
  6055 ;; *************** function _TMR1_Initialize *****************
  6056 ;; Defined at:
  6057 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  6058 ;; Parameters:    Size  Location     Type
  6059 ;;		None
  6060 ;; Auto vars:     Size  Location     Type
  6061 ;;		None
  6062 ;; Return value:  Size  Location     Type
  6063 ;;                  1    wreg      void 
  6064 ;; Registers used:
  6065 ;;		wreg, status,2, status,0, pclath, cstack
  6066 ;; Tracked objects:
  6067 ;;		On entry : 0/0
  6068 ;;		On exit  : 0/0
  6069 ;;		Unchanged: 0/0
  6070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6071 ;;      Params:         0       0       0       0
  6072 ;;      Locals:         0       0       0       0
  6073 ;;      Temps:          0       0       0       0
  6074 ;;      Totals:         0       0       0       0
  6075 ;;Total ram usage:        0 bytes
  6076 ;; Hardware stack levels used:    1
  6077 ;; Hardware stack levels required when called:    7
  6078 ;; This function calls:
  6079 ;;		_TMR1_SetInterruptHandler
  6080 ;; This function is called by:
  6081 ;;		_SYSTEM_Initialize
  6082 ;; This function uses a non-reentrant model
  6083 ;;
  6084                           
  6085                           
  6086                           ;psect for function _TMR1_Initialize
  6087  0000'                    _TMR1_Initialize:
  6088  0000'                    l2126:	
  6089                           ;incstack = 0
  6090                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6091                           
  6092                           
  6093                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  6094  0000' 0144               	movlb	4	; select bank4
  6095  0001' 018F               	clrf	15	;volatile
  6096                           
  6097                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
  6098  0002' 0190               	clrf	16	;volatile
  6099  0003'                    l2128:
  6100                           
  6101                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x09;
  6102  0003' 3009               	movlw	9
  6103  0004' 0091               	movwf	17	;volatile
  6104  0005'                    l2130:
  6105                           
  6106                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xF6;
  6107  0005' 30F6               	movlw	246
  6108  0006' 008D               	movwf	13	;volatile
  6109  0007'                    l2132:
  6110                           
  6111                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0x3C;
  6112  0007' 303C               	movlw	60
  6113  0008' 008C               	movwf	12	;volatile
  6114  0009'                    l2134:
  6115                           
  6116                           ;mcc_generated_files/tmr1.c: 84:     PIR4bits.TMR1IF = 0;
  6117  0009' 014E               	movlb	14	; select bank14
  6118  000A' 1010               	bcf	16,0	;volatile
  6119  000B'                    l2136:
  6120                           
  6121                           ;mcc_generated_files/tmr1.c: 87:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  6122  000B' 0144               	movlb	4	; select bank4
  6123  000C' 080D               	movf	13,w	;volatile
  6124  000D' 0140               	movlb	0	; select bank0
  6125  000E' 0089'              	movwf	_timer1ReloadVal+1	;volatile
  6126  000F' 0144               	movlb	4	; select bank4
  6127  0010' 080C               	movf	12,w	;volatile
  6128  0011' 0140               	movlb	0	; select bank0
  6129  0012' 0088'              	movwf	_timer1ReloadVal	;volatile
  6130  0013'                    l2138:
  6131                           
  6132                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
  6133  0013' 014E               	movlb	14	; select bank14
  6134  0014' 141A               	bsf	26,0	;volatile
  6135  0015'                    l2140:
  6136                           
  6137                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  6138  0015' 3000'              	movlw	low _TMR1_DefaultInterruptHandler
  6139  0016' 0082'              	movwf	TMR1_SetInterruptHandler@InterruptHandler
  6140  0017' 3000'              	movlw	high _TMR1_DefaultInterruptHandler
  6141  0018' 0083'              	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  6142  0019' 3180' 2000' 3180'  	fcall	_TMR1_SetInterruptHandler
  6143  001C'                    l2142:
  6144                           
  6145                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x11;
  6146  001C' 3011               	movlw	17
  6147  001D' 0144               	movlb	4	; select bank4
  6148  001E' 008E               	movwf	14	;volatile
  6149  001F'                    l454:
  6150  001F' 0008               	return
  6151  0020'                    __end_of_TMR1_Initialize:
  6152                           
  6153                           	psect	text4
  6154  0000'                    __ptext4:	
  6155 ;; *************** function _TMR1_SetInterruptHandler *****************
  6156 ;; Defined at:
  6157 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  6158 ;; Parameters:    Size  Location     Type
  6159 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  6160 ;;		 -> TMR1_INT(1), TMR1_DefaultInterruptHandler(1), 
  6161 ;; Auto vars:     Size  Location     Type
  6162 ;;		None
  6163 ;; Return value:  Size  Location     Type
  6164 ;;                  1    wreg      void 
  6165 ;; Registers used:
  6166 ;;		wreg
  6167 ;; Tracked objects:
  6168 ;;		On entry : 0/0
  6169 ;;		On exit  : 0/0
  6170 ;;		Unchanged: 0/0
  6171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6172 ;;      Params:         2       0       0       0
  6173 ;;      Locals:         0       0       0       0
  6174 ;;      Temps:          0       0       0       0
  6175 ;;      Totals:         2       0       0       0
  6176 ;;Total ram usage:        2 bytes
  6177 ;; Hardware stack levels used:    1
  6178 ;; Hardware stack levels required when called:    6
  6179 ;; This function calls:
  6180 ;;		Nothing
  6181 ;; This function is called by:
  6182 ;;		_TMR1_Initialize
  6183 ;;		_main
  6184 ;; This function uses a non-reentrant model
  6185 ;;
  6186                           
  6187                           
  6188                           ;psect for function _TMR1_SetInterruptHandler
  6189  0000'                    _TMR1_SetInterruptHandler:
  6190  0000'                    l2000:	
  6191                           ;incstack = 0
  6192                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  6193                           
  6194                           
  6195                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  6196  0000' 0803'              	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  6197  0001' 0140               	movlb	0	; select bank0
  6198  0002' 0087'              	movwf	_TMR1_InterruptHandler+1
  6199  0003' 0802'              	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  6200  0004' 0086'              	movwf	_TMR1_InterruptHandler
  6201  0005'                    l484:
  6202  0005' 0008               	return
  6203  0006'                    __end_of_TMR1_SetInterruptHandler:
  6204                           
  6205                           	psect	text5
  6206  0000'                    __ptext5:	
  6207 ;; *************** function _TMR0_Initialize *****************
  6208 ;; Defined at:
  6209 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  6210 ;; Parameters:    Size  Location     Type
  6211 ;;		None
  6212 ;; Auto vars:     Size  Location     Type
  6213 ;;		None
  6214 ;; Return value:  Size  Location     Type
  6215 ;;                  1    wreg      void 
  6216 ;; Registers used:
  6217 ;;		wreg, status,2, status,0, pclath, cstack
  6218 ;; Tracked objects:
  6219 ;;		On entry : 0/0
  6220 ;;		On exit  : 0/0
  6221 ;;		Unchanged: 0/0
  6222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6223 ;;      Params:         0       0       0       0
  6224 ;;      Locals:         0       0       0       0
  6225 ;;      Temps:          0       0       0       0
  6226 ;;      Totals:         0       0       0       0
  6227 ;;Total ram usage:        0 bytes
  6228 ;; Hardware stack levels used:    1
  6229 ;; Hardware stack levels required when called:    7
  6230 ;; This function calls:
  6231 ;;		_TMR0_SetInterruptHandler
  6232 ;; This function is called by:
  6233 ;;		_SYSTEM_Initialize
  6234 ;; This function uses a non-reentrant model
  6235 ;;
  6236                           
  6237                           
  6238                           ;psect for function _TMR0_Initialize
  6239  0000'                    _TMR0_Initialize:
  6240  0000'                    l2114:	
  6241                           ;incstack = 0
  6242                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6243                           
  6244                           
  6245                           ;mcc_generated_files/tmr0.c: 71:     T0CON1 = 0x40;
  6246  0000' 3040               	movlw	64
  6247  0001' 014B               	movlb	11	; select bank11
  6248  0002' 009F               	movwf	31	;volatile
  6249                           
  6250                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0xF0;
  6251  0003' 30F0               	movlw	240
  6252  0004' 009D               	movwf	29	;volatile
  6253                           
  6254                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0x60;
  6255  0005' 3060               	movlw	96
  6256  0006' 009C               	movwf	28	;volatile
  6257                           
  6258                           ;mcc_generated_files/tmr0.c: 80:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  6259  0007' 081D               	movf	29,w	;volatile
  6260  0008' 0081'              	movwf	_timer0ReloadVal16bit+1	;volatile
  6261  0009' 081C               	movf	28,w	;volatile
  6262  000A' 0080'              	movwf	_timer0ReloadVal16bit	;volatile
  6263  000B'                    l2116:
  6264                           
  6265                           ;mcc_generated_files/tmr0.c: 83:     PIR0bits.TMR0IF = 0;
  6266  000B' 014E               	movlb	14	; select bank14
  6267  000C' 128C               	bcf	12,5	;volatile
  6268  000D'                    l2118:
  6269                           
  6270                           ;mcc_generated_files/tmr0.c: 86:     PIE0bits.TMR0IE = 1;
  6271  000D' 1696               	bsf	22,5	;volatile
  6272  000E'                    l2120:
  6273                           
  6274                           ;mcc_generated_files/tmr0.c: 89:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  6275  000E' 3000'              	movlw	low _TMR0_DefaultInterruptHandler
  6276  000F' 0082'              	movwf	TMR0_SetInterruptHandler@InterruptHandler
  6277  0010' 3000'              	movlw	high _TMR0_DefaultInterruptHandler
  6278  0011' 0083'              	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  6279  0012' 3180' 2000' 3180'  	fcall	_TMR0_SetInterruptHandler
  6280  0015'                    l2122:
  6281                           
  6282                           ;mcc_generated_files/tmr0.c: 92:     T0CON0 = 0x90;
  6283  0015' 3090               	movlw	144
  6284  0016' 014B               	movlb	11	; select bank11
  6285  0017' 009E               	movwf	30	;volatile
  6286  0018'                    l398:
  6287  0018' 0008               	return
  6288  0019'                    __end_of_TMR0_Initialize:
  6289                           
  6290                           	psect	text6
  6291  0000'                    __ptext6:	
  6292 ;; *************** function _TMR0_SetInterruptHandler *****************
  6293 ;; Defined at:
  6294 ;;		line 151 in file "mcc_generated_files/tmr0.c"
  6295 ;; Parameters:    Size  Location     Type
  6296 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  6297 ;;		 -> TMR0_INT(1), TMR0_DefaultInterruptHandler(1), 
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;		None
  6300 ;; Return value:  Size  Location     Type
  6301 ;;                  1    wreg      void 
  6302 ;; Registers used:
  6303 ;;		wreg
  6304 ;; Tracked objects:
  6305 ;;		On entry : 0/0
  6306 ;;		On exit  : 0/0
  6307 ;;		Unchanged: 0/0
  6308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6309 ;;      Params:         2       0       0       0
  6310 ;;      Locals:         0       0       0       0
  6311 ;;      Temps:          0       0       0       0
  6312 ;;      Totals:         2       0       0       0
  6313 ;;Total ram usage:        2 bytes
  6314 ;; Hardware stack levels used:    1
  6315 ;; Hardware stack levels required when called:    6
  6316 ;; This function calls:
  6317 ;;		Nothing
  6318 ;; This function is called by:
  6319 ;;		_TMR0_Initialize
  6320 ;;		_main
  6321 ;; This function uses a non-reentrant model
  6322 ;;
  6323                           
  6324                           
  6325                           ;psect for function _TMR0_SetInterruptHandler
  6326  0000'                    _TMR0_SetInterruptHandler:
  6327  0000'                    l1998:	
  6328                           ;incstack = 0
  6329                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  6330                           
  6331                           
  6332                           ;mcc_generated_files/tmr0.c: 152:     TMR0_InterruptHandler = InterruptHandler;
  6333  0000' 0803'              	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  6334  0001' 0140               	movlb	0	; select bank0
  6335  0002' 008B'              	movwf	_TMR0_InterruptHandler+1
  6336  0003' 0802'              	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  6337  0004' 008A'              	movwf	_TMR0_InterruptHandler
  6338  0005'                    l420:
  6339  0005' 0008               	return
  6340  0006'                    __end_of_TMR0_SetInterruptHandler:
  6341                           
  6342                           	psect	text7
  6343  0000'                    __ptext7:	
  6344 ;; *************** function _PWM6_Initialize *****************
  6345 ;; Defined at:
  6346 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  6347 ;; Parameters:    Size  Location     Type
  6348 ;;		None
  6349 ;; Auto vars:     Size  Location     Type
  6350 ;;		None
  6351 ;; Return value:  Size  Location     Type
  6352 ;;                  1    wreg      void 
  6353 ;; Registers used:
  6354 ;;		wreg
  6355 ;; Tracked objects:
  6356 ;;		On entry : 0/0
  6357 ;;		On exit  : 0/0
  6358 ;;		Unchanged: 0/0
  6359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6360 ;;      Params:         0       0       0       0
  6361 ;;      Locals:         0       0       0       0
  6362 ;;      Temps:          0       0       0       0
  6363 ;;      Totals:         0       0       0       0
  6364 ;;Total ram usage:        0 bytes
  6365 ;; Hardware stack levels used:    1
  6366 ;; Hardware stack levels required when called:    6
  6367 ;; This function calls:
  6368 ;;		Nothing
  6369 ;; This function is called by:
  6370 ;;		_SYSTEM_Initialize
  6371 ;; This function uses a non-reentrant model
  6372 ;;
  6373                           
  6374                           
  6375                           ;psect for function _PWM6_Initialize
  6376  0000'                    _PWM6_Initialize:
  6377  0000'                    l2040:	
  6378                           ;incstack = 0
  6379                           ; Regs used in _PWM6_Initialize: [wreg]
  6380                           
  6381                           
  6382                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
  6383  0000' 3080               	movlw	128
  6384  0001' 0147               	movlb	7	; select bank7
  6385  0002' 008E               	movwf	14	;volatile
  6386                           
  6387                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x7F;
  6388  0003' 307F               	movlw	127
  6389  0004' 008D               	movwf	13	;volatile
  6390                           
  6391                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0xC0;
  6392  0005' 30C0               	movlw	192
  6393  0006' 008C               	movwf	12	;volatile
  6394  0007'                    l140:
  6395  0007' 0008               	return
  6396  0008'                    __end_of_PWM6_Initialize:
  6397                           
  6398                           	psect	text8
  6399  0000'                    __ptext8:	
  6400 ;; *************** function _PWM5_Initialize *****************
  6401 ;; Defined at:
  6402 ;;		line 58 in file "mcc_generated_files/pwm5.c"
  6403 ;; Parameters:    Size  Location     Type
  6404 ;;		None
  6405 ;; Auto vars:     Size  Location     Type
  6406 ;;		None
  6407 ;; Return value:  Size  Location     Type
  6408 ;;                  1    wreg      void 
  6409 ;; Registers used:
  6410 ;;		wreg
  6411 ;; Tracked objects:
  6412 ;;		On entry : 0/0
  6413 ;;		On exit  : 0/0
  6414 ;;		Unchanged: 0/0
  6415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6416 ;;      Params:         0       0       0       0
  6417 ;;      Locals:         0       0       0       0
  6418 ;;      Temps:          0       0       0       0
  6419 ;;      Totals:         0       0       0       0
  6420 ;;Total ram usage:        0 bytes
  6421 ;; Hardware stack levels used:    1
  6422 ;; Hardware stack levels required when called:    6
  6423 ;; This function calls:
  6424 ;;		Nothing
  6425 ;; This function is called by:
  6426 ;;		_SYSTEM_Initialize
  6427 ;; This function uses a non-reentrant model
  6428 ;;
  6429                           
  6430                           
  6431                           ;psect for function _PWM5_Initialize
  6432  0000'                    _PWM5_Initialize:
  6433  0000'                    l2042:	
  6434                           ;incstack = 0
  6435                           ; Regs used in _PWM5_Initialize: [wreg]
  6436                           
  6437                           
  6438                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
  6439  0000' 3080               	movlw	128
  6440  0001' 0146               	movlb	6	; select bank6
  6441  0002' 009E               	movwf	30	;volatile
  6442                           
  6443                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x7F;
  6444  0003' 307F               	movlw	127
  6445  0004' 009D               	movwf	29	;volatile
  6446                           
  6447                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0xC0;
  6448  0005' 30C0               	movlw	192
  6449  0006' 009C               	movwf	28	;volatile
  6450  0007'                    l152:
  6451  0007' 0008               	return
  6452  0008'                    __end_of_PWM5_Initialize:
  6453                           
  6454                           	psect	text9
  6455  0000'                    __ptext9:	
  6456 ;; *************** function _PWM4_Initialize *****************
  6457 ;; Defined at:
  6458 ;;		line 58 in file "mcc_generated_files/pwm4.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;		None
  6461 ;; Auto vars:     Size  Location     Type
  6462 ;;		None
  6463 ;; Return value:  Size  Location     Type
  6464 ;;                  1    wreg      void 
  6465 ;; Registers used:
  6466 ;;		wreg
  6467 ;; Tracked objects:
  6468 ;;		On entry : 0/0
  6469 ;;		On exit  : 0/0
  6470 ;;		Unchanged: 0/0
  6471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6472 ;;      Params:         0       0       0       0
  6473 ;;      Locals:         0       0       0       0
  6474 ;;      Temps:          0       0       0       0
  6475 ;;      Totals:         0       0       0       0
  6476 ;;Total ram usage:        0 bytes
  6477 ;; Hardware stack levels used:    1
  6478 ;; Hardware stack levels required when called:    6
  6479 ;; This function calls:
  6480 ;;		Nothing
  6481 ;; This function is called by:
  6482 ;;		_SYSTEM_Initialize
  6483 ;; This function uses a non-reentrant model
  6484 ;;
  6485                           
  6486                           
  6487                           ;psect for function _PWM4_Initialize
  6488  0000'                    _PWM4_Initialize:
  6489  0000'                    l2036:	
  6490                           ;incstack = 0
  6491                           ; Regs used in _PWM4_Initialize: [wreg]
  6492                           
  6493                           
  6494                           ;mcc_generated_files/pwm4.c: 62:     PWM4CON = 0x80;
  6495  0000' 3080               	movlw	128
  6496  0001' 0146               	movlb	6	; select bank6
  6497  0002' 009A               	movwf	26	;volatile
  6498                           
  6499                           ;mcc_generated_files/pwm4.c: 65:     PWM4DCH = 0x7F;
  6500  0003' 307F               	movlw	127
  6501  0004' 0099               	movwf	25	;volatile
  6502                           
  6503                           ;mcc_generated_files/pwm4.c: 68:     PWM4DCL = 0xC0;
  6504  0005' 30C0               	movlw	192
  6505  0006' 0098               	movwf	24	;volatile
  6506  0007'                    l116:
  6507  0007' 0008               	return
  6508  0008'                    __end_of_PWM4_Initialize:
  6509                           
  6510                           	psect	text10
  6511  0000'                    __ptext10:	
  6512 ;; *************** function _PWM3_Initialize *****************
  6513 ;; Defined at:
  6514 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  6515 ;; Parameters:    Size  Location     Type
  6516 ;;		None
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;		None
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  1    wreg      void 
  6521 ;; Registers used:
  6522 ;;		wreg
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6528 ;;      Params:         0       0       0       0
  6529 ;;      Locals:         0       0       0       0
  6530 ;;      Temps:          0       0       0       0
  6531 ;;      Totals:         0       0       0       0
  6532 ;;Total ram usage:        0 bytes
  6533 ;; Hardware stack levels used:    1
  6534 ;; Hardware stack levels required when called:    6
  6535 ;; This function calls:
  6536 ;;		Nothing
  6537 ;; This function is called by:
  6538 ;;		_SYSTEM_Initialize
  6539 ;; This function uses a non-reentrant model
  6540 ;;
  6541                           
  6542                           
  6543                           ;psect for function _PWM3_Initialize
  6544  0000'                    _PWM3_Initialize:
  6545  0000'                    l2038:	
  6546                           ;incstack = 0
  6547                           ; Regs used in _PWM3_Initialize: [wreg]
  6548                           
  6549                           
  6550                           ;mcc_generated_files/pwm3.c: 62:     PWM3CON = 0x80;
  6551  0000' 3080               	movlw	128
  6552  0001' 0146               	movlb	6	; select bank6
  6553  0002' 0096               	movwf	22	;volatile
  6554                           
  6555                           ;mcc_generated_files/pwm3.c: 65:     PWM3DCH = 0x7F;
  6556  0003' 307F               	movlw	127
  6557  0004' 0095               	movwf	21	;volatile
  6558                           
  6559                           ;mcc_generated_files/pwm3.c: 68:     PWM3DCL = 0xC0;
  6560  0005' 30C0               	movlw	192
  6561  0006' 0094               	movwf	20	;volatile
  6562  0007'                    l128:
  6563  0007' 0008               	return
  6564  0008'                    __end_of_PWM3_Initialize:
  6565                           
  6566                           	psect	text11
  6567  0000'                    __ptext11:	
  6568 ;; *************** function _PWM2_Initialize *****************
  6569 ;; Defined at:
  6570 ;;		line 64 in file "mcc_generated_files/pwm2.c"
  6571 ;; Parameters:    Size  Location     Type
  6572 ;;		None
  6573 ;; Auto vars:     Size  Location     Type
  6574 ;;		None
  6575 ;; Return value:  Size  Location     Type
  6576 ;;                  1    wreg      void 
  6577 ;; Registers used:
  6578 ;;		wreg
  6579 ;; Tracked objects:
  6580 ;;		On entry : 0/0
  6581 ;;		On exit  : 0/0
  6582 ;;		Unchanged: 0/0
  6583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6584 ;;      Params:         0       0       0       0
  6585 ;;      Locals:         0       0       0       0
  6586 ;;      Temps:          0       0       0       0
  6587 ;;      Totals:         0       0       0       0
  6588 ;;Total ram usage:        0 bytes
  6589 ;; Hardware stack levels used:    1
  6590 ;; Hardware stack levels required when called:    6
  6591 ;; This function calls:
  6592 ;;		Nothing
  6593 ;; This function is called by:
  6594 ;;		_SYSTEM_Initialize
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           
  6598                           
  6599                           ;psect for function _PWM2_Initialize
  6600  0000'                    _PWM2_Initialize:
  6601  0000'                    l2112:	
  6602                           ;incstack = 0
  6603                           ; Regs used in _PWM2_Initialize: [wreg]
  6604                           
  6605                           
  6606                           ;mcc_generated_files/pwm2.c: 69:  CCP2CON = 0x8F;
  6607  0000' 308F               	movlw	143
  6608  0001' 0146               	movlb	6	; select bank6
  6609  0002' 0092               	movwf	18	;volatile
  6610                           
  6611                           ;mcc_generated_files/pwm2.c: 72:  CCPR2H = 0x01;
  6612  0003' 3001               	movlw	1
  6613  0004' 0091               	movwf	17	;volatile
  6614                           
  6615                           ;mcc_generated_files/pwm2.c: 75:  CCPR2L = 0xFF;
  6616  0005' 30FF               	movlw	255
  6617  0006' 0090               	movwf	16	;volatile
  6618  0007'                    l317:
  6619  0007' 0008               	return
  6620  0008'                    __end_of_PWM2_Initialize:
  6621                           
  6622                           	psect	text12
  6623  0000'                    __ptext12:	
  6624 ;; *************** function _PWM1_Initialize *****************
  6625 ;; Defined at:
  6626 ;;		line 64 in file "mcc_generated_files/pwm1.c"
  6627 ;; Parameters:    Size  Location     Type
  6628 ;;		None
  6629 ;; Auto vars:     Size  Location     Type
  6630 ;;		None
  6631 ;; Return value:  Size  Location     Type
  6632 ;;                  1    wreg      void 
  6633 ;; Registers used:
  6634 ;;		wreg
  6635 ;; Tracked objects:
  6636 ;;		On entry : 0/0
  6637 ;;		On exit  : 0/0
  6638 ;;		Unchanged: 0/0
  6639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6640 ;;      Params:         0       0       0       0
  6641 ;;      Locals:         0       0       0       0
  6642 ;;      Temps:          0       0       0       0
  6643 ;;      Totals:         0       0       0       0
  6644 ;;Total ram usage:        0 bytes
  6645 ;; Hardware stack levels used:    1
  6646 ;; Hardware stack levels required when called:    6
  6647 ;; This function calls:
  6648 ;;		Nothing
  6649 ;; This function is called by:
  6650 ;;		_SYSTEM_Initialize
  6651 ;; This function uses a non-reentrant model
  6652 ;;
  6653                           
  6654                           
  6655                           ;psect for function _PWM1_Initialize
  6656  0000'                    _PWM1_Initialize:
  6657  0000'                    l2124:	
  6658                           ;incstack = 0
  6659                           ; Regs used in _PWM1_Initialize: [wreg]
  6660                           
  6661                           
  6662                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8F;
  6663  0000' 308F               	movlw	143
  6664  0001' 0146               	movlb	6	; select bank6
  6665  0002' 008E               	movwf	14	;volatile
  6666                           
  6667                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x01;
  6668  0003' 3001               	movlw	1
  6669  0004' 008D               	movwf	13	;volatile
  6670                           
  6671                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0xFF;
  6672  0005' 30FF               	movlw	255
  6673  0006' 008C               	movwf	12	;volatile
  6674  0007'                    l336:
  6675  0007' 0008               	return
  6676  0008'                    __end_of_PWM1_Initialize:
  6677                           
  6678                           	psect	text13
  6679  0000'                    __ptext13:	
  6680 ;; *************** function _PMD_Initialize *****************
  6681 ;; Defined at:
  6682 ;;		line 88 in file "mcc_generated_files/mcc.c"
  6683 ;; Parameters:    Size  Location     Type
  6684 ;;		None
  6685 ;; Auto vars:     Size  Location     Type
  6686 ;;		None
  6687 ;; Return value:  Size  Location     Type
  6688 ;;                  1    wreg      void 
  6689 ;; Registers used:
  6690 ;;		wreg, status,2
  6691 ;; Tracked objects:
  6692 ;;		On entry : 0/0
  6693 ;;		On exit  : 0/0
  6694 ;;		Unchanged: 0/0
  6695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6696 ;;      Params:         0       0       0       0
  6697 ;;      Locals:         0       0       0       0
  6698 ;;      Temps:          0       0       0       0
  6699 ;;      Totals:         0       0       0       0
  6700 ;;Total ram usage:        0 bytes
  6701 ;; Hardware stack levels used:    1
  6702 ;; Hardware stack levels required when called:    6
  6703 ;; This function calls:
  6704 ;;		Nothing
  6705 ;; This function is called by:
  6706 ;;		_SYSTEM_Initialize
  6707 ;; This function uses a non-reentrant model
  6708 ;;
  6709                           
  6710                           
  6711                           ;psect for function _PMD_Initialize
  6712  0000'                    _PMD_Initialize:
  6713  0000'                    l2094:	
  6714                           ;incstack = 0
  6715                           ; Regs used in _PMD_Initialize: [wreg+status,2]
  6716                           
  6717                           
  6718                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x06;
  6719  0000' 3006               	movlw	6
  6720  0001' 014F               	movlb	15	; select bank15
  6721  0002' 0096               	movwf	22	;volatile
  6722                           
  6723                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x80;
  6724  0003' 3080               	movlw	128
  6725  0004' 0097               	movwf	23	;volatile
  6726                           
  6727                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x47;
  6728  0005' 3047               	movlw	71
  6729  0006' 0098               	movwf	24	;volatile
  6730  0007'                    l2096:
  6731                           
  6732                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
  6733  0007' 0199               	clrf	25	;volatile
  6734  0008'                    l2098:
  6735                           
  6736                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0xD1;
  6737  0008' 30D1               	movlw	209
  6738  0009' 009A               	movwf	26	;volatile
  6739  000A'                    l2100:
  6740                           
  6741                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x1E;
  6742  000A' 301E               	movlw	30
  6743  000B' 009B               	movwf	27	;volatile
  6744  000C'                    l306:
  6745  000C' 0008               	return
  6746  000D'                    __end_of_PMD_Initialize:
  6747                           
  6748                           	psect	text14
  6749  0000'                    __ptext14:	
  6750 ;; *************** function _PIN_MANAGER_Initialize *****************
  6751 ;; Defined at:
  6752 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  6753 ;; Parameters:    Size  Location     Type
  6754 ;;		None
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;		None
  6757 ;; Return value:  Size  Location     Type
  6758 ;;                  1    wreg      void 
  6759 ;; Registers used:
  6760 ;;		wreg, status,2, status,0, pclath, cstack
  6761 ;; Tracked objects:
  6762 ;;		On entry : 0/0
  6763 ;;		On exit  : 0/0
  6764 ;;		Unchanged: 0/0
  6765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6766 ;;      Params:         0       0       0       0
  6767 ;;      Locals:         0       0       0       0
  6768 ;;      Temps:          0       0       0       0
  6769 ;;      Totals:         0       0       0       0
  6770 ;;Total ram usage:        0 bytes
  6771 ;; Hardware stack levels used:    1
  6772 ;; Hardware stack levels required when called:    7
  6773 ;; This function calls:
  6774 ;;		_IOCCF1_SetInterruptHandler
  6775 ;; This function is called by:
  6776 ;;		_SYSTEM_Initialize
  6777 ;; This function uses a non-reentrant model
  6778 ;;
  6779                           
  6780                           
  6781                           ;psect for function _PIN_MANAGER_Initialize
  6782  0000'                    _PIN_MANAGER_Initialize:
  6783  0000'                    l2046:	
  6784                           ;incstack = 0
  6785                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6786                           
  6787                           
  6788                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  6789  0000' 0140               	movlb	0	; select bank0
  6790  0001' 0198               	clrf	24	;volatile
  6791                           
  6792                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
  6793  0002' 019A               	clrf	26	;volatile
  6794  0003'                    l2048:
  6795                           
  6796                           ;mcc_generated_files/pin_manager.c: 68:     TRISA = 0x0A;
  6797  0003' 300A               	movlw	10
  6798  0004' 0092               	movwf	18	;volatile
  6799  0005'                    l2050:
  6800                           
  6801                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x03;
  6802  0005' 3003               	movlw	3
  6803  0006' 0094               	movwf	20	;volatile
  6804  0007'                    l2052:
  6805                           
  6806                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x01;
  6807  0007' 3001               	movlw	1
  6808  0008' 017E               	movlb	62	; select bank62
  6809  0009' 00CE               	movwf	78	;volatile
  6810  000A'                    l2054:
  6811                           
  6812                           ;mcc_generated_files/pin_manager.c: 75:     ANSELA = 0x00;
  6813  000A' 01B8               	clrf	56	;volatile
  6814  000B'                    l2056:
  6815                           
  6816                           ;mcc_generated_files/pin_manager.c: 80:     WPUA = 0x00;
  6817  000B' 01B9               	clrf	57	;volatile
  6818  000C'                    l2058:
  6819                           
  6820                           ;mcc_generated_files/pin_manager.c: 81:     WPUC = 0x00;
  6821  000C' 01CF               	clrf	79	;volatile
  6822  000D'                    l2060:
  6823                           
  6824                           ;mcc_generated_files/pin_manager.c: 86:     ODCONA = 0x00;
  6825  000D' 01BA               	clrf	58	;volatile
  6826  000E'                    l2062:
  6827                           
  6828                           ;mcc_generated_files/pin_manager.c: 87:     ODCONC = 0x00;
  6829  000E' 01D0               	clrf	80	;volatile
  6830                           
  6831                           ;mcc_generated_files/pin_manager.c: 92:     SLRCONA = 0x3F;
  6832  000F' 303F               	movlw	63
  6833  0010' 00BB               	movwf	59	;volatile
  6834                           
  6835                           ;mcc_generated_files/pin_manager.c: 93:     SLRCONC = 0x3F;
  6836  0011' 303F               	movlw	63
  6837  0012' 00D1               	movwf	81	;volatile
  6838                           
  6839                           ;mcc_generated_files/pin_manager.c: 98:     INLVLA = 0x3F;
  6840  0013' 303F               	movlw	63
  6841  0014' 00BC               	movwf	60	;volatile
  6842                           
  6843                           ;mcc_generated_files/pin_manager.c: 99:     INLVLC = 0x3F;
  6844  0015' 303F               	movlw	63
  6845  0016' 00D2               	movwf	82	;volatile
  6846  0017'                    l2064:
  6847                           
  6848                           ;mcc_generated_files/pin_manager.c: 106:     IOCCFbits.IOCCF1 = 0;
  6849  0017' 10D5               	bcf	85,1	;volatile
  6850  0018'                    l2066:
  6851                           
  6852                           ;mcc_generated_files/pin_manager.c: 108:     IOCCNbits.IOCCN1 = 1;
  6853  0018' 14D4               	bsf	84,1	;volatile
  6854  0019'                    l2068:
  6855                           
  6856                           ;mcc_generated_files/pin_manager.c: 110:     IOCCPbits.IOCCP1 = 1;
  6857  0019' 14D3               	bsf	83,1	;volatile
  6858  001A'                    l2070:
  6859                           
  6860                           ;mcc_generated_files/pin_manager.c: 115:     IOCCF1_SetInterruptHandler(IOCCF1_DefaultIn
      +                          terruptHandler);
  6861  001A' 3000'              	movlw	low _IOCCF1_DefaultInterruptHandler
  6862  001B' 0082'              	movwf	IOCCF1_SetInterruptHandler@InterruptHandler
  6863  001C' 3000'              	movlw	high _IOCCF1_DefaultInterruptHandler
  6864  001D' 0083'              	movwf	IOCCF1_SetInterruptHandler@InterruptHandler+1
  6865  001E' 3180' 2000' 3180'  	fcall	_IOCCF1_SetInterruptHandler
  6866  0021'                    l2072:
  6867                           
  6868                           ;mcc_generated_files/pin_manager.c: 118:     PIE0bits.IOCIE = 1;
  6869  0021' 014E               	movlb	14	; select bank14
  6870  0022' 1616               	bsf	22,4	;volatile
  6871  0023'                    l2074:
  6872                           
  6873                           ;mcc_generated_files/pin_manager.c: 121:     ADACTPPS = 0x01;
  6874  0023' 3001               	movlw	1
  6875  0024' 017D               	movlb	61	; select bank61
  6876  0025' 00C3               	movwf	67	;volatile
  6877  0026'                    l2076:
  6878                           
  6879                           ;mcc_generated_files/pin_manager.c: 122:     RA4PPS = 0x0C;
  6880  0026' 300C               	movlw	12
  6881  0027' 017E               	movlb	62	; select bank62
  6882  0028' 0094               	movwf	20	;volatile
  6883  0029'                    l2078:
  6884                           
  6885                           ;mcc_generated_files/pin_manager.c: 123:     RC3PPS = 0x09;
  6886  0029' 3009               	movlw	9
  6887  002A' 00A3               	movwf	35	;volatile
  6888  002B'                    l2080:
  6889                           
  6890                           ;mcc_generated_files/pin_manager.c: 124:     RC4PPS = 0x0E;
  6891  002B' 300E               	movlw	14
  6892  002C' 00A4               	movwf	36	;volatile
  6893  002D'                    l2082:
  6894                           
  6895                           ;mcc_generated_files/pin_manager.c: 125:     RA5PPS = 0x0B;
  6896  002D' 300B               	movlw	11
  6897  002E' 0095               	movwf	21	;volatile
  6898  002F'                    l2084:
  6899                           
  6900                           ;mcc_generated_files/pin_manager.c: 126:     RC2PPS = 0x0A;
  6901  002F' 300A               	movlw	10
  6902  0030' 00A2               	movwf	34	;volatile
  6903  0031'                    l2086:
  6904                           
  6905                           ;mcc_generated_files/pin_manager.c: 127:     RC5PPS = 0x0D;
  6906  0031' 300D               	movlw	13
  6907  0032' 00A5               	movwf	37	;volatile
  6908  0033'                    l226:
  6909  0033' 0008               	return
  6910  0034'                    __end_of_PIN_MANAGER_Initialize:
  6911                           
  6912                           	psect	text15
  6913  0000'                    __ptext15:	
  6914 ;; *************** function _IOCCF1_SetInterruptHandler *****************
  6915 ;; Defined at:
  6916 ;;		line 157 in file "mcc_generated_files/pin_manager.c"
  6917 ;; Parameters:    Size  Location     Type
  6918 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  6919 ;;		 -> RCS_INT(1), IOCCF1_DefaultInterruptHandler(1), 
  6920 ;; Auto vars:     Size  Location     Type
  6921 ;;		None
  6922 ;; Return value:  Size  Location     Type
  6923 ;;                  1    wreg      void 
  6924 ;; Registers used:
  6925 ;;		wreg
  6926 ;; Tracked objects:
  6927 ;;		On entry : 0/0
  6928 ;;		On exit  : 0/0
  6929 ;;		Unchanged: 0/0
  6930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6931 ;;      Params:         2       0       0       0
  6932 ;;      Locals:         0       0       0       0
  6933 ;;      Temps:          0       0       0       0
  6934 ;;      Totals:         2       0       0       0
  6935 ;;Total ram usage:        2 bytes
  6936 ;; Hardware stack levels used:    1
  6937 ;; Hardware stack levels required when called:    6
  6938 ;; This function calls:
  6939 ;;		Nothing
  6940 ;; This function is called by:
  6941 ;;		_PIN_MANAGER_Initialize
  6942 ;;		_main
  6943 ;; This function uses a non-reentrant model
  6944 ;;
  6945                           
  6946                           
  6947                           ;psect for function _IOCCF1_SetInterruptHandler
  6948  0000'                    _IOCCF1_SetInterruptHandler:
  6949  0000'                    l1996:	
  6950                           ;incstack = 0
  6951                           ; Regs used in _IOCCF1_SetInterruptHandler: [wreg]
  6952                           
  6953                           
  6954                           ;mcc_generated_files/pin_manager.c: 158:     IOCCF1_InterruptHandler = InterruptHandler;
  6955  0000' 0803'              	movf	IOCCF1_SetInterruptHandler@InterruptHandler+1,w
  6956  0001' 0140               	movlb	0	; select bank0
  6957  0002' 0081'              	movwf	_IOCCF1_InterruptHandler+1
  6958  0003' 0802'              	movf	IOCCF1_SetInterruptHandler@InterruptHandler,w
  6959  0004' 0080'              	movwf	_IOCCF1_InterruptHandler
  6960  0005'                    l237:
  6961  0005' 0008               	return
  6962  0006'                    __end_of_IOCCF1_SetInterruptHandler:
  6963                           
  6964                           	psect	text16
  6965  0000'                    __ptext16:	
  6966 ;; *************** function _OSCILLATOR_Initialize *****************
  6967 ;; Defined at:
  6968 ;;		line 68 in file "mcc_generated_files/mcc.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;		None
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;		None
  6973 ;; Return value:  Size  Location     Type
  6974 ;;                  1    wreg      void 
  6975 ;; Registers used:
  6976 ;;		wreg, status,2
  6977 ;; Tracked objects:
  6978 ;;		On entry : 0/0
  6979 ;;		On exit  : 0/0
  6980 ;;		Unchanged: 0/0
  6981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6982 ;;      Params:         0       0       0       0
  6983 ;;      Locals:         0       0       0       0
  6984 ;;      Temps:          0       0       0       0
  6985 ;;      Totals:         0       0       0       0
  6986 ;;Total ram usage:        0 bytes
  6987 ;; Hardware stack levels used:    1
  6988 ;; Hardware stack levels required when called:    6
  6989 ;; This function calls:
  6990 ;;		Nothing
  6991 ;; This function is called by:
  6992 ;;		_SYSTEM_Initialize
  6993 ;; This function uses a non-reentrant model
  6994 ;;
  6995                           
  6996                           
  6997                           ;psect for function _OSCILLATOR_Initialize
  6998  0000'                    _OSCILLATOR_Initialize:
  6999  0000'                    l2102:	
  7000                           ;incstack = 0
  7001                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7002                           
  7003                           
  7004                           ;mcc_generated_files/mcc.c: 71:     OSCCON1 = 0x10;
  7005  0000' 3010               	movlw	16
  7006  0001' 0151               	movlb	17	; select bank17
  7007  0002' 008D               	movwf	13	;volatile
  7008  0003'                    l2104:
  7009                           
  7010                           ;mcc_generated_files/mcc.c: 73:     OSCCON3 = 0x00;
  7011  0003' 018F               	clrf	15	;volatile
  7012  0004'                    l2106:
  7013                           
  7014                           ;mcc_generated_files/mcc.c: 75:     OSCEN = 0x00;
  7015  0004' 0191               	clrf	17	;volatile
  7016                           
  7017                           ;mcc_generated_files/mcc.c: 77:     OSCFRQ = 0x03;
  7018  0005' 3003               	movlw	3
  7019  0006' 0093               	movwf	19	;volatile
  7020  0007'                    l2108:
  7021                           
  7022                           ;mcc_generated_files/mcc.c: 79:     OSCSTAT = 0x00;
  7023  0007' 0190               	clrf	16	;volatile
  7024  0008'                    l2110:
  7025                           
  7026                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
  7027  0008' 0192               	clrf	18	;volatile
  7028  0009'                    l300:	
  7029                           ;mcc_generated_files/mcc.c: 84:     {;mcc_generated_files/mcc.c: 85:     }
  7030                           
  7031                           
  7032                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
  7033  0009' 1C10               	btfss	16,0	;volatile
  7034  000A' 280C'              	goto	u721
  7035  000B' 280D'              	goto	u720
  7036  000C'                    u721:
  7037  000C' 2809'              	goto	l300
  7038  000D'                    u720:
  7039  000D'                    l303:
  7040  000D' 0008               	return
  7041  000E'                    __end_of_OSCILLATOR_Initialize:
  7042                           
  7043                           	psect	text17
  7044  0000'                    __ptext17:	
  7045 ;; *************** function _FVR_Initialize *****************
  7046 ;; Defined at:
  7047 ;;		line 58 in file "mcc_generated_files/fvr.c"
  7048 ;; Parameters:    Size  Location     Type
  7049 ;;		None
  7050 ;; Auto vars:     Size  Location     Type
  7051 ;;		None
  7052 ;; Return value:  Size  Location     Type
  7053 ;;                  1    wreg      void 
  7054 ;; Registers used:
  7055 ;;		wreg
  7056 ;; Tracked objects:
  7057 ;;		On entry : 0/0
  7058 ;;		On exit  : 0/0
  7059 ;;		Unchanged: 0/0
  7060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7061 ;;      Params:         0       0       0       0
  7062 ;;      Locals:         0       0       0       0
  7063 ;;      Temps:          0       0       0       0
  7064 ;;      Totals:         0       0       0       0
  7065 ;;Total ram usage:        0 bytes
  7066 ;; Hardware stack levels used:    1
  7067 ;; Hardware stack levels required when called:    6
  7068 ;; This function calls:
  7069 ;;		Nothing
  7070 ;; This function is called by:
  7071 ;;		_SYSTEM_Initialize
  7072 ;; This function uses a non-reentrant model
  7073 ;;
  7074                           
  7075                           
  7076                           ;psect for function _FVR_Initialize
  7077  0000'                    _FVR_Initialize:
  7078  0000'                    l2044:	
  7079                           ;incstack = 0
  7080                           ; Regs used in _FVR_Initialize: [wreg]
  7081                           
  7082                           
  7083                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x82;
  7084  0000' 3082               	movlw	130
  7085  0001' 0152               	movlb	18	; select bank18
  7086  0002' 008C               	movwf	12	;volatile
  7087  0003'                    l162:
  7088  0003' 0008               	return
  7089  0004'                    __end_of_FVR_Initialize:
  7090                           
  7091                           	psect	text18
  7092  0000'                    __ptext18:	
  7093 ;; *************** function _ADC_Initialize *****************
  7094 ;; Defined at:
  7095 ;;		line 67 in file "mcc_generated_files/adc.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;		None
  7098 ;; Auto vars:     Size  Location     Type
  7099 ;;		None
  7100 ;; Return value:  Size  Location     Type
  7101 ;;                  1    wreg      void 
  7102 ;; Registers used:
  7103 ;;		wreg, status,2
  7104 ;; Tracked objects:
  7105 ;;		On entry : 0/0
  7106 ;;		On exit  : 0/0
  7107 ;;		Unchanged: 0/0
  7108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7109 ;;      Params:         0       0       0       0
  7110 ;;      Locals:         0       0       0       0
  7111 ;;      Temps:          0       0       0       0
  7112 ;;      Totals:         0       0       0       0
  7113 ;;Total ram usage:        0 bytes
  7114 ;; Hardware stack levels used:    1
  7115 ;; Hardware stack levels required when called:    6
  7116 ;; This function calls:
  7117 ;;		Nothing
  7118 ;; This function is called by:
  7119 ;;		_SYSTEM_Initialize
  7120 ;; This function uses a non-reentrant model
  7121 ;;
  7122                           
  7123                           
  7124                           ;psect for function _ADC_Initialize
  7125  0000'                    _ADC_Initialize:
  7126  0000'                    l2026:	
  7127                           ;incstack = 0
  7128                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  7129                           
  7130                           
  7131                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xE3;
  7132  0000' 30E3               	movlw	227
  7133  0001' 0141               	movlb	1	; select bank1
  7134  0002' 009E               	movwf	30	;volatile
  7135  0003'                    l2028:
  7136                           
  7137                           ;mcc_generated_files/adc.c: 75:     ADACT = 0x00;
  7138  0003' 019F               	clrf	31	;volatile
  7139  0004'                    l2030:
  7140                           
  7141                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
  7142  0004' 019B               	clrf	27	;volatile
  7143  0005'                    l2032:
  7144                           
  7145                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
  7146  0005' 019C               	clrf	28	;volatile
  7147  0006'                    l2034:
  7148                           
  7149                           ;mcc_generated_files/adc.c: 84:     ADCON0 = 0x01;
  7150  0006' 3001               	movlw	1
  7151  0007' 009D               	movwf	29	;volatile
  7152  0008'                    l86:
  7153  0008' 0008               	return
  7154  0009'                    __end_of_ADC_Initialize:
  7155                           
  7156                           	psect	text19
  7157  0000'                    __ptext19:	
  7158 ;; *************** function _INITxEXECUTER *****************
  7159 ;; Defined at:
  7160 ;;		line 35 in file "executer.c"
  7161 ;; Parameters:    Size  Location     Type
  7162 ;;		None
  7163 ;; Auto vars:     Size  Location     Type
  7164 ;;		None
  7165 ;; Return value:  Size  Location     Type
  7166 ;;                  1    wreg      void 
  7167 ;; Registers used:
  7168 ;;		wreg, status,2, status,0, pclath, cstack
  7169 ;; Tracked objects:
  7170 ;;		On entry : 0/0
  7171 ;;		On exit  : 0/0
  7172 ;;		Unchanged: 0/0
  7173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7174 ;;      Params:         0       0       0       0
  7175 ;;      Locals:         0       0       0       0
  7176 ;;      Temps:          0       0       0       0
  7177 ;;      Totals:         0       0       0       0
  7178 ;;Total ram usage:        0 bytes
  7179 ;; Hardware stack levels used:    1
  7180 ;; Hardware stack levels required when called:    9
  7181 ;; This function calls:
  7182 ;;		_RCSxLED
  7183 ;;		_rand
  7184 ;;		_srand
  7185 ;; This function is called by:
  7186 ;;		_main
  7187 ;; This function uses a non-reentrant model
  7188 ;;
  7189                           
  7190                           
  7191                           ;psect for function _INITxEXECUTER
  7192  0000'                    _INITxEXECUTER:
  7193  0000'                    l2726:	
  7194                           ;incstack = 0
  7195                           ; Regs used in _INITxEXECUTER: [wreg+status,2+status,0+pclath+cstack]
  7196                           
  7197                           
  7198                           ;executer.c: 38:     srand(13);
  7199  0000' 300D               	movlw	13
  7200  0001' 0082'              	movwf	srand@s
  7201  0002' 3000               	movlw	0
  7202  0003' 0083'              	movwf	srand@s+1
  7203  0004' 3180' 2000' 3180'  	fcall	_srand
  7204                           
  7205                           ;executer.c: 39:     Random = rand();
  7206  0007' 3180' 2000' 3180'  	fcall	_rand
  7207  000A' 0140               	movlb	0	; select bank0
  7208  000B' 0805'              	movf	?_rand+1,w
  7209  000C' 0081'              	movwf	_Random+1
  7210  000D' 0804'              	movf	?_rand,w
  7211  000E' 0080'              	movwf	_Random
  7212                           
  7213                           ;executer.c: 41:     RCSxLED();
  7214  000F' 3180' 2000' 3180'  	fcall	_RCSxLED
  7215  0012'                    l618:
  7216  0012' 0008               	return
  7217  0013'                    __end_of_INITxEXECUTER:
  7218                           
  7219                           	psect	text20
  7220  0000'                    __ptext20:	
  7221 ;; *************** function _srand *****************
  7222 ;; Defined at:
  7223 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\rand.c"
  7224 ;; Parameters:    Size  Location     Type
  7225 ;;  s               2    2[COMMON] unsigned int 
  7226 ;; Auto vars:     Size  Location     Type
  7227 ;;		None
  7228 ;; Return value:  Size  Location     Type
  7229 ;;                  1    wreg      void 
  7230 ;; Registers used:
  7231 ;;		wreg, status,2, status,0
  7232 ;; Tracked objects:
  7233 ;;		On entry : 0/0
  7234 ;;		On exit  : 0/0
  7235 ;;		Unchanged: 0/0
  7236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7237 ;;      Params:         2       0       0       0
  7238 ;;      Locals:         0       0       0       0
  7239 ;;      Temps:          0       0       0       0
  7240 ;;      Totals:         2       0       0       0
  7241 ;;Total ram usage:        2 bytes
  7242 ;; Hardware stack levels used:    1
  7243 ;; Hardware stack levels required when called:    6
  7244 ;; This function calls:
  7245 ;;		Nothing
  7246 ;; This function is called by:
  7247 ;;		_INITxEXECUTER
  7248 ;; This function uses a non-reentrant model
  7249 ;;
  7250                           
  7251                           
  7252                           ;psect for function _srand
  7253  0000'                    _srand:
  7254  0000'                    l2190:	
  7255                           ;incstack = 0
  7256                           ; Regs used in _srand: [wreg+status,2+status,0]
  7257                           
  7258  0000' 0802'              	movf	srand@s,w
  7259  0001' 3EFF               	addlw	255
  7260  0002' 0140               	movlb	0	; select bank0
  7261  0003' 0096'              	movwf	_seed
  7262  0004' 30FF               	movlw	255
  7263  0005' 3D03'              	addwfc	srand@s+1,w
  7264  0006' 0097'              	movwf	_seed+1
  7265  0007' 0198'              	clrf	_seed+2
  7266  0008' 0199'              	clrf	_seed+3
  7267  0009'                    l1213:
  7268  0009' 0008               	return
  7269  000A'                    __end_of_srand:
  7270                           
  7271                           	psect	text21
  7272  0000'                    __ptext21:	
  7273 ;; *************** function _RCSxLED *****************
  7274 ;; Defined at:
  7275 ;;		line 81 in file "executer.c"
  7276 ;; Parameters:    Size  Location     Type
  7277 ;;		None
  7278 ;; Auto vars:     Size  Location     Type
  7279 ;;		None
  7280 ;; Return value:  Size  Location     Type
  7281 ;;                  1    wreg      void 
  7282 ;; Registers used:
  7283 ;;		wreg, status,2, status,0, pclath, cstack
  7284 ;; Tracked objects:
  7285 ;;		On entry : 0/0
  7286 ;;		On exit  : 0/0
  7287 ;;		Unchanged: 0/0
  7288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7289 ;;      Params:         0       0       0       0
  7290 ;;      Locals:         0       0       0       0
  7291 ;;      Temps:          0       1       0       0
  7292 ;;      Totals:         0       1       0       0
  7293 ;;Total ram usage:        1 bytes
  7294 ;; Hardware stack levels used:    1
  7295 ;; Hardware stack levels required when called:    8
  7296 ;; This function calls:
  7297 ;;		_rand
  7298 ;; This function is called by:
  7299 ;;		_main
  7300 ;;		_INITxEXECUTER
  7301 ;; This function uses a non-reentrant model
  7302 ;;
  7303                           
  7304                           
  7305                           ;psect for function _RCSxLED
  7306  0000'                    _RCSxLED:
  7307  0000'                    l2578:	
  7308                           ;incstack = 0
  7309                           ; Regs used in _RCSxLED: [wreg+status,2+status,0+pclath+cstack]
  7310                           
  7311                           
  7312                           ;executer.c: 83:     if(PORTCbits.RC1){
  7313  0000' 0140               	movlb	0	; select bank0
  7314  0001' 1C8E               	btfss	14,1	;volatile
  7315  0002' 2804'              	goto	u1181
  7316  0003' 2805'              	goto	u1180
  7317  0004'                    u1181:
  7318  0004' 2859'              	goto	l2616
  7319  0005'                    u1180:
  7320  0005'                    l2580:
  7321                           
  7322                           ;executer.c: 86:         LedBit[LedBackLeft].Prog = LedNom;
  7323  0005' 3000'              	movlw	low _LedNom
  7324  0006' 0141               	movlb	1	; select bank1
  7325  0007' 0080'              	movwf	(low ((_LedBit| 0+24)))^(0+128)
  7326  0008' 3000'              	movlw	high _LedNom
  7327  0009' 0081'              	movwf	((low ((_LedBit| 0+24)))^(0+128)+1)
  7328                           
  7329                           ;executer.c: 87:         LedBit[LedBackRight].Prog = LedNom;
  7330  000A' 3000'              	movlw	low _LedNom
  7331  000B' 0080'              	movwf	(low ((_LedBit| 0+35)))^(0+128)
  7332  000C' 3000'              	movlw	high _LedNom
  7333  000D' 0081'              	movwf	((low ((_LedBit| 0+35)))^(0+128)+1)
  7334                           
  7335                           ;executer.c: 90:         if(Random > 16383)
  7336  000E' 3040               	movlw	64
  7337  000F' 0140               	movlb	0	; select bank0
  7338  0010' 0201'              	subwf	_Random+1,w
  7339  0011' 3000               	movlw	0
  7340  0012' 1903               	skipnz
  7341  0013' 0200'              	subwf	_Random,w
  7342  0014' 1C03               	skipc
  7343  0015' 2817'              	goto	u1191
  7344  0016' 2818'              	goto	u1190
  7345  0017'                    u1191:
  7346  0017' 2855'              	goto	l2612
  7347  0018'                    u1190:
  7348  0018'                    l2582:
  7349                           
  7350                           ;executer.c: 91:         {;executer.c: 93:             LedBit[LedFlashLeft].Prog = LedFl
      +                          ash;
  7351  0018' 3000'              	movlw	low _LedFlash
  7352  0019' 0141               	movlb	1	; select bank1
  7353  001A' 0080'              	movwf	(low ((_LedBit| 0+2)))^(0+128)
  7354  001B' 3000'              	movlw	high _LedFlash
  7355  001C' 0081'              	movwf	((low ((_LedBit| 0+2)))^(0+128)+1)
  7356                           
  7357                           ;executer.c: 94:             LedBit[LedFlashLeft].Led = MAX;
  7358  001D' 30FE               	movlw	254
  7359  001E' 0140               	movlb	0	; select bank0
  7360  001F' 008A'              	movwf	??_RCSxLED
  7361  0020' 080A'              	movf	??_RCSxLED,w
  7362  0021' 0141               	movlb	1	; select bank1
  7363  0022' 0081'              	movwf	(_LedBit^(0+128)+1)
  7364  0023'                    l2584:
  7365                           
  7366                           ;executer.c: 95:             LedBit[LedFlashLeft].Prog_State = 0;
  7367  0023' 0186'              	clrf	(_LedBit^(0+128)+6)
  7368  0024'                    l2586:
  7369                           
  7370                           ;executer.c: 96:             LedBit[LedFlashLeft].Speed = 150;
  7371  0024' 3096               	movlw	150
  7372  0025' 0140               	movlb	0	; select bank0
  7373  0026' 008A'              	movwf	??_RCSxLED
  7374  0027' 080A'              	movf	??_RCSxLED,w
  7375  0028' 0141               	movlb	1	; select bank1
  7376  0029' 0084'              	movwf	(_LedBit^(0+128)+4)
  7377  002A'                    l2588:
  7378                           
  7379                           ;executer.c: 98:             LedBit[LedFlashRight].Prog = LedFlash;
  7380  002A' 3000'              	movlw	low _LedFlash
  7381  002B' 0080'              	movwf	(low ((_LedBit| 0+13)))^(0+128)
  7382  002C' 3000'              	movlw	high _LedFlash
  7383  002D' 0081'              	movwf	((low ((_LedBit| 0+13)))^(0+128)+1)
  7384  002E'                    l2590:
  7385                           
  7386                           ;executer.c: 99:             LedBit[LedFlashRight].Led = 0;
  7387  002E' 018C'              	clrf	(_LedBit^(0+128)+12)
  7388  002F'                    l2592:
  7389                           
  7390                           ;executer.c: 100:             LedBit[LedFlashRight].Prog_State = 0;
  7391  002F' 0191'              	clrf	(_LedBit^(0+128)+17)
  7392  0030'                    l2594:
  7393                           
  7394                           ;executer.c: 101:             LedBit[LedFlashRight].Speed = 150;
  7395  0030' 3096               	movlw	150
  7396  0031' 0140               	movlb	0	; select bank0
  7397  0032' 008A'              	movwf	??_RCSxLED
  7398  0033' 080A'              	movf	??_RCSxLED,w
  7399  0034' 0141               	movlb	1	; select bank1
  7400  0035' 008F'              	movwf	(_LedBit^(0+128)+15)
  7401  0036'                    l2596:
  7402                           
  7403                           ;executer.c: 104:             LedBit[LedFrontLeft].Prog = LedSlFl;
  7404  0036' 3000'              	movlw	low _LedSlFl
  7405  0037' 0080'              	movwf	(low ((_LedBit| 0+46)))^(0+128)
  7406  0038' 3000'              	movlw	high _LedSlFl
  7407  0039' 0081'              	movwf	((low ((_LedBit| 0+46)))^(0+128)+1)
  7408  003A'                    l2598:
  7409                           
  7410                           ;executer.c: 105:             LedBit[LedFrontLeft].Led = FRONT_HIGH;
  7411  003A' 30FF               	movlw	255
  7412  003B' 0140               	movlb	0	; select bank0
  7413  003C' 008A'              	movwf	??_RCSxLED
  7414  003D' 080A'              	movf	??_RCSxLED,w
  7415  003E' 0141               	movlb	1	; select bank1
  7416  003F' 00AD'              	movwf	(_LedBit^(0+128)+45)
  7417  0040'                    l2600:
  7418                           
  7419                           ;executer.c: 106:             LedBit[LedFrontLeft].Prog_State = 2;
  7420  0040' 3002               	movlw	2
  7421  0041' 0140               	movlb	0	; select bank0
  7422  0042' 008A'              	movwf	??_RCSxLED
  7423  0043' 080A'              	movf	??_RCSxLED,w
  7424  0044' 0141               	movlb	1	; select bank1
  7425  0045' 00B2'              	movwf	(_LedBit^(0+128)+50)
  7426  0046'                    l2602:
  7427                           
  7428                           ;executer.c: 107:             LedBit[LedFrontLeft].Speed = 1;
  7429  0046' 01B0'              	clrf	(_LedBit^(0+128)+48)
  7430  0047' 0AB0'              	incf	(_LedBit^(0+128)+48),f
  7431  0048'                    l2604:
  7432                           
  7433                           ;executer.c: 109:             LedBit[LedFrontRight].Prog = LedSlFl;
  7434  0048' 3000'              	movlw	low _LedSlFl
  7435  0049' 0080'              	movwf	(low ((_LedBit| 0+57)))^(0+128)
  7436  004A' 3000'              	movlw	high _LedSlFl
  7437  004B' 0081'              	movwf	((low ((_LedBit| 0+57)))^(0+128)+1)
  7438  004C'                    l2606:
  7439                           
  7440                           ;executer.c: 110:             LedBit[LedFrontRight].Led = FRONT;
  7441  004C' 3050               	movlw	80
  7442  004D' 0140               	movlb	0	; select bank0
  7443  004E' 008A'              	movwf	??_RCSxLED
  7444  004F' 080A'              	movf	??_RCSxLED,w
  7445  0050' 0141               	movlb	1	; select bank1
  7446  0051' 00B8'              	movwf	(_LedBit^(0+128)+56)
  7447  0052'                    l2608:
  7448                           
  7449                           ;executer.c: 111:             LedBit[LedFrontRight].Prog_State = 0;
  7450  0052' 01BD'              	clrf	(_LedBit^(0+128)+61)
  7451  0053'                    l2610:
  7452                           
  7453                           ;executer.c: 112:             LedBit[LedFrontRight].Speed = 1;
  7454  0053' 01BB'              	clrf	(_LedBit^(0+128)+59)
  7455  0054' 0ABB'              	incf	(_LedBit^(0+128)+59),f
  7456  0055'                    l2612:
  7457  0055' 0140               	movlb	0	; select bank0
  7458  0056' 1118               	bcf	24,2	;volatile
  7459  0057'                    l2614:
  7460                           
  7461                           ;executer.c: 119:         LATAbits.LATA0 = 1;
  7462  0057' 1418               	bsf	24,0	;volatile
  7463                           
  7464                           ;executer.c: 120:     }
  7465  0058' 287E'              	goto	l2618
  7466  0059'                    l2616:
  7467                           
  7468                           ;executer.c: 124:         LedBit[LedBackLeft].Prog = LedBrake;
  7469  0059' 3000'              	movlw	low _LedBrake
  7470  005A' 0141               	movlb	1	; select bank1
  7471  005B' 0080'              	movwf	(low ((_LedBit| 0+24)))^(0+128)
  7472  005C' 3000'              	movlw	high _LedBrake
  7473  005D' 0081'              	movwf	((low ((_LedBit| 0+24)))^(0+128)+1)
  7474                           
  7475                           ;executer.c: 125:         LedBit[LedBackRight].Prog = LedBrake;
  7476  005E' 3000'              	movlw	low _LedBrake
  7477  005F' 0080'              	movwf	(low ((_LedBit| 0+35)))^(0+128)
  7478  0060' 3000'              	movlw	high _LedBrake
  7479  0061' 0081'              	movwf	((low ((_LedBit| 0+35)))^(0+128)+1)
  7480                           
  7481                           ;executer.c: 128:         LedBit[LedFlashLeft].Prog = LedOff;
  7482  0062' 3000'              	movlw	low _LedOff
  7483  0063' 0080'              	movwf	(low ((_LedBit| 0+2)))^(0+128)
  7484  0064' 3000'              	movlw	high _LedOff
  7485  0065' 0081'              	movwf	((low ((_LedBit| 0+2)))^(0+128)+1)
  7486                           
  7487                           ;executer.c: 129:         LedBit[LedFlashRight].Prog = LedOff;
  7488  0066' 3000'              	movlw	low _LedOff
  7489  0067' 0080'              	movwf	(low ((_LedBit| 0+13)))^(0+128)
  7490  0068' 3000'              	movlw	high _LedOff
  7491  0069' 0081'              	movwf	((low ((_LedBit| 0+13)))^(0+128)+1)
  7492                           
  7493                           ;executer.c: 132:         LedBit[LedFrontLeft].Prog = LedNom;
  7494  006A' 3000'              	movlw	low _LedNom
  7495  006B' 0080'              	movwf	(low ((_LedBit| 0+46)))^(0+128)
  7496  006C' 3000'              	movlw	high _LedNom
  7497  006D' 0081'              	movwf	((low ((_LedBit| 0+46)))^(0+128)+1)
  7498                           
  7499                           ;executer.c: 133:         LedBit[LedFrontRight].Prog = LedNom;
  7500  006E' 3000'              	movlw	low _LedNom
  7501  006F' 0080'              	movwf	(low ((_LedBit| 0+57)))^(0+128)
  7502  0070' 3000'              	movlw	high _LedNom
  7503  0071' 0081'              	movwf	((low ((_LedBit| 0+57)))^(0+128)+1)
  7504                           
  7505                           ;executer.c: 135:         if(Random < 16383)
  7506  0072' 303F               	movlw	63
  7507  0073' 0140               	movlb	0	; select bank0
  7508  0074' 0201'              	subwf	_Random+1,w
  7509  0075' 30FF               	movlw	255
  7510  0076' 1903               	skipnz
  7511  0077' 0200'              	subwf	_Random,w
  7512  0078' 1803               	skipnc
  7513  0079' 287B'              	goto	u1201
  7514  007A' 287C'              	goto	u1200
  7515  007B'                    u1201:
  7516  007B' 287D'              	goto	l633
  7517  007C'                    u1200:
  7518  007C'                    l634:	
  7519                           ;executer.c: 136:         {;executer.c: 138:             do { LATAbits.LATA2 = 1; } whil
      +                          e(0);
  7520                           
  7521  007C' 1518               	bsf	24,2	;volatile
  7522  007D'                    l633:	
  7523                           ;executer.c: 139:         }
  7524                           
  7525                           
  7526                           ;executer.c: 142:         LATAbits.LATA0 = 0;
  7527  007D' 1018               	bcf	24,0	;volatile
  7528  007E'                    l2618:
  7529                           
  7530                           ;executer.c: 146:     Random = rand();
  7531  007E' 3180' 2000' 3180'  	fcall	_rand
  7532  0081' 0140               	movlb	0	; select bank0
  7533  0082' 0805'              	movf	?_rand+1,w
  7534  0083' 0081'              	movwf	_Random+1
  7535  0084' 0804'              	movf	?_rand,w
  7536  0085' 0080'              	movwf	_Random
  7537  0086'                    l636:
  7538  0086' 0008               	return
  7539  0087'                    __end_of_RCSxLED:
  7540                           
  7541                           	psect	text22
  7542  0000'                    __ptext22:	
  7543 ;; *************** function _rand *****************
  7544 ;; Defined at:
  7545 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\rand.c"
  7546 ;; Parameters:    Size  Location     Type
  7547 ;;		None
  7548 ;; Auto vars:     Size  Location     Type
  7549 ;;		None
  7550 ;; Return value:  Size  Location     Type
  7551 ;;                  2    4[BANK0 ] int 
  7552 ;; Registers used:
  7553 ;;		wreg, status,2, status,0, pclath, cstack
  7554 ;; Tracked objects:
  7555 ;;		On entry : 0/0
  7556 ;;		On exit  : 0/0
  7557 ;;		Unchanged: 0/0
  7558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7559 ;;      Params:         0       2       0       0
  7560 ;;      Locals:         0       0       0       0
  7561 ;;      Temps:          0       4       0       0
  7562 ;;      Totals:         0       6       0       0
  7563 ;;Total ram usage:        6 bytes
  7564 ;; Hardware stack levels used:    1
  7565 ;; Hardware stack levels required when called:    7
  7566 ;; This function calls:
  7567 ;;		___lmul
  7568 ;; This function is called by:
  7569 ;;		_INITxEXECUTER
  7570 ;;		_RCSxLED
  7571 ;; This function uses a non-reentrant model
  7572 ;;
  7573                           
  7574                           
  7575                           ;psect for function _rand
  7576  0000'                    _rand:
  7577  0000'                    l2570:	
  7578                           ;incstack = 0
  7579                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  7580                           
  7581  0000' 0140               	movlb	0	; select bank0
  7582  0001' 0819'              	movf	_seed+3,w
  7583  0002' 0085'              	movwf	___lmul@multiplier+3
  7584  0003' 0818'              	movf	_seed+2,w
  7585  0004' 0084'              	movwf	___lmul@multiplier+2
  7586  0005' 0817'              	movf	_seed+1,w
  7587  0006' 0083'              	movwf	___lmul@multiplier+1
  7588  0007' 0816'              	movf	_seed,w
  7589  0008' 0082'              	movwf	___lmul@multiplier
  7590  0009' 304C               	movlw	76
  7591  000A' 0089'              	movwf	___lmul@multiplicand+3
  7592  000B' 3095               	movlw	149
  7593  000C' 0088'              	movwf	___lmul@multiplicand+2
  7594  000D' 307F               	movlw	127
  7595  000E' 0087'              	movwf	___lmul@multiplicand+1
  7596  000F' 302D               	movlw	45
  7597  0010' 0086'              	movwf	___lmul@multiplicand
  7598  0011' 3180' 2000' 3180'  	fcall	___lmul
  7599  0014' 3001               	movlw	1
  7600  0015' 0702'              	addwf	?___lmul,w
  7601  0016' 0140               	movlb	0	; select bank0
  7602  0017' 0096'              	movwf	_seed
  7603  0018' 3000               	movlw	0
  7604  0019' 3D03'              	addwfc	?___lmul+1,w
  7605  001A' 0097'              	movwf	_seed+1
  7606  001B' 3000               	movlw	0
  7607  001C' 3D04'              	addwfc	?___lmul+2,w
  7608  001D' 0098'              	movwf	_seed+2
  7609  001E' 3000               	movlw	0
  7610  001F' 3D05'              	addwfc	?___lmul+3,w
  7611  0020' 0099'              	movwf	_seed+3
  7612  0021'                    l2572:
  7613  0021' 0816'              	movf	_seed,w
  7614  0022' 0086'              	movwf	??_rand
  7615  0023' 0817'              	movf	_seed+1,w
  7616  0024' 0087'              	movwf	??_rand+1
  7617  0025' 0818'              	movf	_seed+2,w
  7618  0026' 0088'              	movwf	??_rand+2
  7619  0027' 0819'              	movf	_seed+3,w
  7620  0028' 0089'              	movwf	??_rand+3
  7621  0029' 3011               	movlw	17
  7622  002A'                    u1175:
  7623  002A' 3689'              	lsrf	??_rand+3,f
  7624  002B' 0C88'              	rrf	??_rand+2,f
  7625  002C' 0C87'              	rrf	??_rand+1,f
  7626  002D' 0C86'              	rrf	??_rand,f
  7627  002E'                    u1170:
  7628  002E' 0B89               	decfsz	9,f
  7629  002F' 282A'              	goto	u1175
  7630  0030' 0807'              	movf	??_rand+1,w
  7631  0031' 0085'              	movwf	?_rand+1
  7632  0032' 0806'              	movf	??_rand,w
  7633  0033' 0084'              	movwf	?_rand
  7634  0034'                    l1216:
  7635  0034' 0008               	return
  7636  0035'                    __end_of_rand:
  7637                           
  7638                           	psect	text23
  7639  0000'                    __ptext23:	
  7640 ;; *************** function ___lmul *****************
  7641 ;; Defined at:
  7642 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul32.c"
  7643 ;; Parameters:    Size  Location     Type
  7644 ;;  multiplier      4    2[COMMON] unsigned long 
  7645 ;;  multiplicand    4    6[COMMON] unsigned long 
  7646 ;; Auto vars:     Size  Location     Type
  7647 ;;  product         4    0[BANK0 ] unsigned long 
  7648 ;; Return value:  Size  Location     Type
  7649 ;;                  4    2[COMMON] unsigned long 
  7650 ;; Registers used:
  7651 ;;		wreg, status,2, status,0
  7652 ;; Tracked objects:
  7653 ;;		On entry : 0/0
  7654 ;;		On exit  : 0/0
  7655 ;;		Unchanged: 0/0
  7656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7657 ;;      Params:         8       0       0       0
  7658 ;;      Locals:         0       4       0       0
  7659 ;;      Temps:          0       0       0       0
  7660 ;;      Totals:         8       4       0       0
  7661 ;;Total ram usage:       12 bytes
  7662 ;; Hardware stack levels used:    1
  7663 ;; Hardware stack levels required when called:    6
  7664 ;; This function calls:
  7665 ;;		Nothing
  7666 ;; This function is called by:
  7667 ;;		_rand
  7668 ;; This function uses a non-reentrant model
  7669 ;;
  7670                           
  7671                           
  7672                           ;psect for function ___lmul
  7673  0000'                    ___lmul:
  7674  0000'                    l1968:	
  7675                           ;incstack = 0
  7676                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  7677                           
  7678  0000' 3000               	movlw	0
  7679  0001' 0140               	movlb	0	; select bank0
  7680  0002' 0083'              	movwf	___lmul@product+3
  7681  0003' 3000               	movlw	0
  7682  0004' 0082'              	movwf	___lmul@product+2
  7683  0005' 3000               	movlw	0
  7684  0006' 0081'              	movwf	___lmul@product+1
  7685  0007' 3000               	movlw	0
  7686  0008' 0080'              	movwf	___lmul@product
  7687  0009'                    l1970:
  7688  0009' 1C02'              	btfss	___lmul@multiplier,0
  7689  000A' 280C'              	goto	u641
  7690  000B' 280D'              	goto	u640
  7691  000C'                    u641:
  7692  000C' 2816'              	goto	l1974
  7693  000D'                    u640:
  7694  000D'                    l1972:
  7695  000D' 0806'              	movf	___lmul@multiplicand,w
  7696  000E' 0140               	movlb	0	; select bank0
  7697  000F' 0780'              	addwf	___lmul@product,f
  7698  0010' 0807'              	movf	___lmul@multiplicand+1,w
  7699  0011' 3D81'              	addwfc	___lmul@product+1,f
  7700  0012' 0808'              	movf	___lmul@multiplicand+2,w
  7701  0013' 3D82'              	addwfc	___lmul@product+2,f
  7702  0014' 0809'              	movf	___lmul@multiplicand+3,w
  7703  0015' 3D83'              	addwfc	___lmul@product+3,f
  7704  0016'                    l1974:
  7705  0016' 3001               	movlw	1
  7706  0017'                    u655:
  7707  0017' 3586'              	lslf	___lmul@multiplicand,f
  7708  0018' 0D87'              	rlf	___lmul@multiplicand+1,f
  7709  0019' 0D88'              	rlf	___lmul@multiplicand+2,f
  7710  001A' 0D89'              	rlf	___lmul@multiplicand+3,f
  7711  001B' 0B89               	decfsz	9,f
  7712  001C' 2817'              	goto	u655
  7713  001D'                    l1976:
  7714  001D' 3001               	movlw	1
  7715  001E'                    u665:
  7716  001E' 3685'              	lsrf	___lmul@multiplier+3,f
  7717  001F' 0C84'              	rrf	___lmul@multiplier+2,f
  7718  0020' 0C83'              	rrf	___lmul@multiplier+1,f
  7719  0021' 0C82'              	rrf	___lmul@multiplier,f
  7720  0022' 0B89               	decfsz	9,f
  7721  0023' 281E'              	goto	u665
  7722  0024' 0805'              	movf	___lmul@multiplier+3,w
  7723  0025' 0404'              	iorwf	___lmul@multiplier+2,w
  7724  0026' 0403'              	iorwf	___lmul@multiplier+1,w
  7725  0027' 0402'              	iorwf	___lmul@multiplier,w
  7726  0028' 1D03               	skipz
  7727  0029' 282B'              	goto	u671
  7728  002A' 282C'              	goto	u670
  7729  002B'                    u671:
  7730  002B' 2809'              	goto	l1970
  7731  002C'                    u670:
  7732  002C'                    l1978:
  7733  002C' 0140               	movlb	0	; select bank0
  7734  002D' 0803'              	movf	___lmul@product+3,w
  7735  002E' 0085'              	movwf	?___lmul+3
  7736  002F' 0802'              	movf	___lmul@product+2,w
  7737  0030' 0084'              	movwf	?___lmul+2
  7738  0031' 0801'              	movf	___lmul@product+1,w
  7739  0032' 0083'              	movwf	?___lmul+1
  7740  0033' 0800'              	movf	___lmul@product,w
  7741  0034' 0082'              	movwf	?___lmul
  7742  0035'                    l766:
  7743  0035' 0008               	return
  7744  0036'                    __end_of___lmul:
  7745                           
  7746                           	psect	text24
  7747  0000'                    __ptext24:	
  7748 ;; *************** function _EXECUTExEFFECT *****************
  7749 ;; Defined at:
  7750 ;;		line 152 in file "executer.c"
  7751 ;; Parameters:    Size  Location     Type
  7752 ;;		None
  7753 ;; Auto vars:     Size  Location     Type
  7754 ;;  x               1   15[BANK0 ] unsigned char 
  7755 ;;  ReturnData      1   14[BANK0 ] unsigned char 
  7756 ;; Return value:  Size  Location     Type
  7757 ;;                  1    wreg      unsigned char 
  7758 ;; Registers used:
  7759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7760 ;; Tracked objects:
  7761 ;;		On entry : 0/0
  7762 ;;		On exit  : 0/0
  7763 ;;		Unchanged: 0/0
  7764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7765 ;;      Params:         0       0       0       0
  7766 ;;      Locals:         0       4       0       0
  7767 ;;      Temps:          0       2       0       0
  7768 ;;      Totals:         0       6       0       0
  7769 ;;Total ram usage:        6 bytes
  7770 ;; Hardware stack levels used:    1
  7771 ;; Hardware stack levels required when called:    9
  7772 ;; This function calls:
  7773 ;;		_LedBrake
  7774 ;;		_LedFlash
  7775 ;;		_LedNom
  7776 ;;		_LedOff
  7777 ;;		_LedSlFl
  7778 ;;		___bmul
  7779 ;; This function is called by:
  7780 ;;		_main
  7781 ;; This function uses a non-reentrant model
  7782 ;;
  7783                           
  7784                           
  7785                           ;psect for function _EXECUTExEFFECT
  7786  0000'                    _EXECUTExEFFECT:
  7787  0000'                    l2728:	
  7788                           ;incstack = 0
  7789                           ; Regs used in _EXECUTExEFFECT: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7790                           
  7791                           
  7792                           ;executer.c: 154:     ReturnVal = 0;
  7793  0000' 0140               	movlb	0	; select bank0
  7794  0001' 018E'              	clrf	_ReturnVal
  7795                           
  7796                           ;executer.c: 155:     uint8_t ReturnData = 0;
  7797  0002' 018E'              	clrf	EXECUTExEFFECT@ReturnData
  7798                           
  7799                           ;executer.c: 157:     for(uint8_t x=0; x<6; x++)
  7800  0003' 018F'              	clrf	EXECUTExEFFECT@x
  7801  0004'                    l2734:
  7802                           
  7803                           ;executer.c: 158:     {;executer.c: 159:         ReturnData += LedBit[x].Prog(x);
  7804  0004' 300B               	movlw	11
  7805  0005' 008A'              	movwf	??_EXECUTExEFFECT
  7806  0006' 080A'              	movf	??_EXECUTExEFFECT,w
  7807  0007' 0082'              	movwf	___bmul@multiplicand
  7808  0008' 080F'              	movf	EXECUTExEFFECT@x,w
  7809  0009' 3180' 2000' 3180'  	fcall	___bmul
  7810  000C' 3E00'              	addlw	(low ((_LedBit| 0+2)))& (0+255)
  7811  000D' 0086               	movwf	6
  7812  000E' 0187               	clrf	7
  7813  000F' 3F40               	moviw [0]fsr1
  7814  0010' 0140               	movlb	0	; select bank0
  7815  0011' 008C'              	movwf	_EXECUTExEFFECT$1858
  7816  0012' 3F41               	moviw [1]fsr1
  7817  0013' 008D'              	movwf	_EXECUTExEFFECT$1858+1
  7818  0014'                    l2736:
  7819                           
  7820                           ;executer.c: 158:     {;executer.c: 159:         ReturnData += LedBit[x].Prog(x);
  7821  0014' 080F'              	movf	EXECUTExEFFECT@x,w
  7822  0015' 008A'              	movwf	??_EXECUTExEFFECT
  7823  0016' 080A'              	movf	??_EXECUTExEFFECT,w
  7824  0017' 0085'              	movwf	LedBrake@Led
  7825  0018' 080D'              	movf	_EXECUTExEFFECT$1858+1,w
  7826  0019' 008A               	movwf	10
  7827  001A' 080C'              	movf	_EXECUTExEFFECT$1858,w
  7828  001B' 000A               	callw
  7829  001C' 3180'              	pagesel	$
  7830  001D' 0140               	movlb	0	; select bank0
  7831  001E' 008B'              	movwf	??_EXECUTExEFFECT+1
  7832  001F' 080B'              	movf	??_EXECUTExEFFECT+1,w
  7833  0020' 078E'              	addwf	EXECUTExEFFECT@ReturnData,f
  7834  0021'                    l2738:
  7835                           
  7836                           ;executer.c: 160:     }
  7837  0021' 3001               	movlw	1
  7838  0022' 008A'              	movwf	??_EXECUTExEFFECT
  7839  0023' 080A'              	movf	??_EXECUTExEFFECT,w
  7840  0024' 078F'              	addwf	EXECUTExEFFECT@x,f
  7841  0025'                    l2740:
  7842  0025' 3006               	movlw	6
  7843  0026' 020F'              	subwf	EXECUTExEFFECT@x,w
  7844  0027' 1C03               	skipc
  7845  0028' 282A'              	goto	u1301
  7846  0029' 282B'              	goto	u1300
  7847  002A'                    u1301:
  7848  002A' 2804'              	goto	l2734
  7849  002B'                    u1300:
  7850  002B'                    l2742:
  7851                           
  7852                           ;executer.c: 161:     if(ReturnData >= 5)
  7853  002B' 3005               	movlw	5
  7854  002C' 020E'              	subwf	EXECUTExEFFECT@ReturnData,w
  7855  002D' 1C03               	skipc
  7856  002E' 2830'              	goto	u1311
  7857  002F' 2831'              	goto	u1310
  7858  0030'                    u1311:
  7859  0030' 2834'              	goto	l2746
  7860  0031'                    u1310:
  7861  0031'                    l2744:
  7862                           
  7863                           ;executer.c: 162:     {;executer.c: 163:         ReturnVal = 1;
  7864  0031' 018E'              	clrf	_ReturnVal
  7865  0032' 0A8E'              	incf	_ReturnVal,f
  7866                           
  7867                           ;executer.c: 164:     }
  7868  0033' 2835'              	goto	l2748
  7869  0034'                    l2746:
  7870                           
  7871                           ;executer.c: 166:         ReturnVal = 0;
  7872  0034' 018E'              	clrf	_ReturnVal
  7873  0035'                    l2748:
  7874                           
  7875                           ;executer.c: 168:     return ReturnVal;
  7876  0035' 080E'              	movf	_ReturnVal,w
  7877  0036'                    l643:
  7878  0036' 0008               	return
  7879  0037'                    __end_of_EXECUTExEFFECT:
  7880                           
  7881                           	psect	text25
  7882  0000'                    __ptext25:	
  7883 ;; *************** function _LedBrake *****************
  7884 ;; Defined at:
  7885 ;;		line 213 in file "executer.c"
  7886 ;; Parameters:    Size  Location     Type
  7887 ;;  Led             1    5[BANK0 ] unsigned char 
  7888 ;; Auto vars:     Size  Location     Type
  7889 ;;		None
  7890 ;; Return value:  Size  Location     Type
  7891 ;;                  1    wreg      unsigned char 
  7892 ;; Registers used:
  7893 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7894 ;; Tracked objects:
  7895 ;;		On entry : 0/0
  7896 ;;		On exit  : 0/0
  7897 ;;		Unchanged: 0/0
  7898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7899 ;;      Params:         0       1       0       0
  7900 ;;      Locals:         0       0       0       0
  7901 ;;      Temps:          0       2       0       0
  7902 ;;      Totals:         0       3       0       0
  7903 ;;Total ram usage:        3 bytes
  7904 ;; Hardware stack levels used:    1
  7905 ;; Hardware stack levels required when called:    8
  7906 ;; This function calls:
  7907 ;;		_CalcPwm
  7908 ;;		___bmul
  7909 ;; This function is called by:
  7910 ;;		_RCSxLED
  7911 ;;		_EXECUTExEFFECT
  7912 ;; This function uses a non-reentrant model
  7913 ;;
  7914                           
  7915                           
  7916                           ;psect for function _LedBrake
  7917  0000'                    _LedBrake:
  7918  0000'                    l2632:	
  7919                           ;incstack = 0
  7920                           ; Regs used in _LedBrake: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7921                           
  7922                           
  7923                           ;executer.c: 213: uint8_t LedBrake(uint8_t Led);executer.c: 214: {;executer.c: 215:     
      +                          LedBit[Led].Led = BRAKE;
  7924  0000' 307F               	movlw	127
  7925  0001' 0140               	movlb	0	; select bank0
  7926  0002' 0086'              	movwf	??_LedBrake
  7927  0003' 300B               	movlw	11
  7928  0004' 0087'              	movwf	??_LedBrake+1
  7929  0005' 0807'              	movf	??_LedBrake+1,w
  7930  0006' 0082'              	movwf	___bmul@multiplicand
  7931  0007' 0805'              	movf	LedBrake@Led,w
  7932  0008' 3180' 2000' 3180'  	fcall	___bmul
  7933  000B' 3E00'              	addlw	(low ((_LedBit| 0+1)))& (0+255)
  7934  000C' 0086               	movwf	6
  7935  000D' 0187               	clrf	7
  7936  000E' 0140               	movlb	0	; select bank0
  7937  000F' 0806'              	movf	??_LedBrake,w
  7938  0010' 0081               	movwf	1
  7939                           
  7940                           ;executer.c: 216:     CalcPwm(Led);
  7941  0011' 0805'              	movf	LedBrake@Led,w
  7942  0012' 3180' 2000' 3180'  	fcall	_CalcPwm
  7943  0015'                    l2634:
  7944                           
  7945                           ;executer.c: 217:     return(1);
  7946  0015' 3001               	movlw	1
  7947  0016'                    l655:
  7948  0016' 0008               	return
  7949  0017'                    __end_of_LedBrake:
  7950                           
  7951                           	psect	text26
  7952  0000'                    __ptext26:	
  7953 ;; *************** function _LedNom *****************
  7954 ;; Defined at:
  7955 ;;		line 187 in file "executer.c"
  7956 ;; Parameters:    Size  Location     Type
  7957 ;;  Led             1    5[BANK0 ] unsigned char 
  7958 ;; Auto vars:     Size  Location     Type
  7959 ;;		None
  7960 ;; Return value:  Size  Location     Type
  7961 ;;                  1    wreg      unsigned char 
  7962 ;; Registers used:
  7963 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7964 ;; Tracked objects:
  7965 ;;		On entry : 0/0
  7966 ;;		On exit  : 0/0
  7967 ;;		Unchanged: 0/0
  7968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7969 ;;      Params:         0       1       0       0
  7970 ;;      Locals:         0       0       0       0
  7971 ;;      Temps:          0       3       0       0
  7972 ;;      Totals:         0       4       0       0
  7973 ;;Total ram usage:        4 bytes
  7974 ;; Hardware stack levels used:    1
  7975 ;; Hardware stack levels required when called:    8
  7976 ;; This function calls:
  7977 ;;		_CalcPwm
  7978 ;;		___bmul
  7979 ;; This function is called by:
  7980 ;;		_RCSxLED
  7981 ;;		_EXECUTExEFFECT
  7982 ;; This function uses a non-reentrant model
  7983 ;;
  7984                           
  7985                           
  7986                           ;psect for function _LedNom
  7987  0000'                    _LedNom:
  7988  0000'                    l2626:	
  7989                           ;incstack = 0
  7990                           ; Regs used in _LedNom: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7991                           
  7992                           
  7993                           ;executer.c: 187: uint8_t LedNom(uint8_t Led);executer.c: 188: {;executer.c: 189:     Le
      +                          dBit[Led].Led = LedBit[Led].nominal;
  7994  0000' 300B               	movlw	11
  7995  0001' 0140               	movlb	0	; select bank0
  7996  0002' 0086'              	movwf	??_LedNom
  7997  0003' 0806'              	movf	??_LedNom,w
  7998  0004' 0082'              	movwf	___bmul@multiplicand
  7999  0005' 0805'              	movf	LedNom@Led,w
  8000  0006' 3180' 2000' 3180'  	fcall	___bmul
  8001  0009' 3E00'              	addlw	(low ((_LedBit| 0+5)))& (0+255)
  8002  000A' 0086               	movwf	6
  8003  000B' 0187               	clrf	7
  8004  000C' 0801               	movf	1,w
  8005  000D' 0140               	movlb	0	; select bank0
  8006  000E' 0087'              	movwf	??_LedNom+1
  8007  000F' 300B               	movlw	11
  8008  0010' 0088'              	movwf	??_LedNom+2
  8009  0011' 0808'              	movf	??_LedNom+2,w
  8010  0012' 0082'              	movwf	___bmul@multiplicand
  8011  0013' 0805'              	movf	LedNom@Led,w
  8012  0014' 3180' 2000' 3180'  	fcall	___bmul
  8013  0017' 3E00'              	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8014  0018' 0086               	movwf	6
  8015  0019' 0187               	clrf	7
  8016  001A' 0140               	movlb	0	; select bank0
  8017  001B' 0807'              	movf	??_LedNom+1,w
  8018  001C' 0081               	movwf	1
  8019                           
  8020                           ;executer.c: 190:     LedBit[Led].Speed = 0;
  8021  001D' 300B               	movlw	11
  8022  001E' 0086'              	movwf	??_LedNom
  8023  001F' 0806'              	movf	??_LedNom,w
  8024  0020' 0082'              	movwf	___bmul@multiplicand
  8025  0021' 0805'              	movf	LedNom@Led,w
  8026  0022' 3180' 2000' 3180'  	fcall	___bmul
  8027  0025' 3E00'              	addlw	(low ((_LedBit| 0+4)))& (0+255)
  8028  0026' 0086               	movwf	6
  8029  0027' 0187               	clrf	7
  8030  0028' 0181               	clrf	1
  8031                           
  8032                           ;executer.c: 191:     LedBit[Led].Prog_State = 0;
  8033  0029' 300B               	movlw	11
  8034  002A' 0140               	movlb	0	; select bank0
  8035  002B' 0086'              	movwf	??_LedNom
  8036  002C' 0806'              	movf	??_LedNom,w
  8037  002D' 0082'              	movwf	___bmul@multiplicand
  8038  002E' 0805'              	movf	LedNom@Led,w
  8039  002F' 3180' 2000' 3180'  	fcall	___bmul
  8040  0032' 3E00'              	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8041  0033' 0086               	movwf	6
  8042  0034' 0187               	clrf	7
  8043  0035' 0181               	clrf	1
  8044                           
  8045                           ;executer.c: 192:     LedBit[Led].Iteration = 0;
  8046  0036' 300B               	movlw	11
  8047  0037' 0140               	movlb	0	; select bank0
  8048  0038' 0086'              	movwf	??_LedNom
  8049  0039' 0806'              	movf	??_LedNom,w
  8050  003A' 0082'              	movwf	___bmul@multiplicand
  8051  003B' 0805'              	movf	LedNom@Led,w
  8052  003C' 3180' 2000' 3180'  	fcall	___bmul
  8053  003F' 3E00'              	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8054  0040' 0086               	movwf	6
  8055  0041' 0187               	clrf	7
  8056  0042' 0181               	clrf	1
  8057                           
  8058                           ;executer.c: 193:     CalcPwm(Led);
  8059  0043' 0140               	movlb	0	; select bank0
  8060  0044' 0805'              	movf	LedNom@Led,w
  8061  0045' 3180' 2000' 3180'  	fcall	_CalcPwm
  8062  0048'                    l2628:
  8063                           
  8064                           ;executer.c: 194:     return(1);
  8065  0048' 3001               	movlw	1
  8066  0049'                    l649:
  8067  0049' 0008               	return
  8068  004A'                    __end_of_LedNom:
  8069                           
  8070                           	psect	text27
  8071  0000'                    __ptext27:	
  8072 ;; *************** function _LedFlash *****************
  8073 ;; Defined at:
  8074 ;;		line 275 in file "executer.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;  Led             1    5[BANK0 ] unsigned char 
  8077 ;; Auto vars:     Size  Location     Type
  8078 ;;  ReturnVal       1    9[BANK0 ] unsigned char 
  8079 ;; Return value:  Size  Location     Type
  8080 ;;                  1    wreg      unsigned char 
  8081 ;; Registers used:
  8082 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8083 ;; Tracked objects:
  8084 ;;		On entry : 0/0
  8085 ;;		On exit  : 0/0
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8088 ;;      Params:         0       1       0       0
  8089 ;;      Locals:         0       1       0       0
  8090 ;;      Temps:          0       3       0       0
  8091 ;;      Totals:         0       5       0       0
  8092 ;;Total ram usage:        5 bytes
  8093 ;; Hardware stack levels used:    1
  8094 ;; Hardware stack levels required when called:    8
  8095 ;; This function calls:
  8096 ;;		_CalcPwm
  8097 ;;		___bmul
  8098 ;; This function is called by:
  8099 ;;		_BATTxPROTECT
  8100 ;;		_RCSxLED
  8101 ;;		_EXECUTExEFFECT
  8102 ;; This function uses a non-reentrant model
  8103 ;;
  8104                           
  8105                           
  8106                           ;psect for function _LedFlash
  8107  0000'                    _LedFlash:
  8108  0000'                    l2692:	
  8109                           ;incstack = 0
  8110                           ; Regs used in _LedFlash: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8111                           
  8112                           
  8113                           ;executer.c: 275: uint8_t LedFlash(uint8_t Led);executer.c: 276: {;executer.c: 277:     
      +                          uint8_t ReturnVal = 0;
  8114  0000' 0140               	movlb	0	; select bank0
  8115  0001' 0189'              	clrf	LedFlash@ReturnVal
  8116                           
  8117                           ;executer.c: 279:     switch(LedBit[Led].Prog_State){
  8118  0002' 28AA'              	goto	l2714
  8119  0003'                    l2694:
  8120  0003' 300B               	movlw	11
  8121  0004' 0086'              	movwf	??_LedFlash
  8122  0005' 0806'              	movf	??_LedFlash,w
  8123  0006' 0082'              	movwf	___bmul@multiplicand
  8124  0007' 0805'              	movf	LedFlash@Led,w
  8125  0008' 3180' 2000' 3180'  	fcall	___bmul
  8126  000B' 3E00'              	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8127  000C' 0086               	movwf	6
  8128  000D' 0187               	clrf	7
  8129  000E' 0181               	clrf	1
  8130                           
  8131                           ;executer.c: 281:                     LedBit[Led].Prog_State = 1;
  8132  000F' 300B               	movlw	11
  8133  0010' 0140               	movlb	0	; select bank0
  8134  0011' 0086'              	movwf	??_LedFlash
  8135  0012' 0806'              	movf	??_LedFlash,w
  8136  0013' 0082'              	movwf	___bmul@multiplicand
  8137  0014' 0805'              	movf	LedFlash@Led,w
  8138  0015' 3180' 2000' 3180'  	fcall	___bmul
  8139  0018' 3E00'              	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8140  0019' 0086               	movwf	6
  8141  001A' 0187               	clrf	7
  8142  001B' 0181               	clrf	1
  8143  001C' 0A81               	incf	1,f
  8144  001D'                    l2696:
  8145                           
  8146                           ;executer.c: 282:                     ReturnVal = 0;
  8147  001D' 0140               	movlb	0	; select bank0
  8148  001E' 0189'              	clrf	LedFlash@ReturnVal
  8149                           
  8150                           ;executer.c: 283:             break;
  8151  001F' 28C6'              	goto	l2716
  8152  0020'                    l2698:
  8153  0020' 3001               	movlw	1
  8154  0021' 0086'              	movwf	??_LedFlash
  8155  0022' 300B               	movlw	11
  8156  0023' 0087'              	movwf	??_LedFlash+1
  8157  0024' 0807'              	movf	??_LedFlash+1,w
  8158  0025' 0082'              	movwf	___bmul@multiplicand
  8159  0026' 0805'              	movf	LedFlash@Led,w
  8160  0027' 3180' 2000' 3180'  	fcall	___bmul
  8161  002A' 3E00'              	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8162  002B' 0086               	movwf	6
  8163  002C' 0187               	clrf	7
  8164  002D' 0140               	movlb	0	; select bank0
  8165  002E' 0806'              	movf	??_LedFlash,w
  8166  002F' 0781               	addwf	1,f
  8167  0030'                    l2700:
  8168                           
  8169                           ;executer.c: 286:                     if(LedBit[Led].Iteration > LedBit[Led].Speed){
  8170  0030' 300B               	movlw	11
  8171  0031' 0086'              	movwf	??_LedFlash
  8172  0032' 0806'              	movf	??_LedFlash,w
  8173  0033' 0082'              	movwf	___bmul@multiplicand
  8174  0034' 0805'              	movf	LedFlash@Led,w
  8175  0035' 3180' 2000' 3180'  	fcall	___bmul
  8176  0038' 3E00'              	addlw	(low ((_LedBit| 0+4)))& (0+255)
  8177  0039' 0086               	movwf	6
  8178  003A' 0187               	clrf	7
  8179  003B' 300B               	movlw	11
  8180  003C' 0140               	movlb	0	; select bank0
  8181  003D' 0087'              	movwf	??_LedFlash+1
  8182  003E' 0807'              	movf	??_LedFlash+1,w
  8183  003F' 0082'              	movwf	___bmul@multiplicand
  8184  0040' 0805'              	movf	LedFlash@Led,w
  8185  0041' 3180' 2000' 3180'  	fcall	___bmul
  8186  0044' 3E00'              	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8187  0045' 0084               	movwf	4
  8188  0046' 0185               	clrf	5
  8189  0047' 0800               	movf	0,w
  8190  0048' 0201               	subwf	1,w
  8191  0049' 1803               	skipnc
  8192  004A' 284C'              	goto	u1281
  8193  004B' 284D'              	goto	u1280
  8194  004C'                    u1281:
  8195  004C' 288B'              	goto	l677
  8196  004D'                    u1280:
  8197  004D'                    l2702:
  8198                           
  8199                           ;executer.c: 287:                         LedBit[Led].Iteration = 0;
  8200  004D' 300B               	movlw	11
  8201  004E' 0140               	movlb	0	; select bank0
  8202  004F' 0086'              	movwf	??_LedFlash
  8203  0050' 0806'              	movf	??_LedFlash,w
  8204  0051' 0082'              	movwf	___bmul@multiplicand
  8205  0052' 0805'              	movf	LedFlash@Led,w
  8206  0053' 3180' 2000' 3180'  	fcall	___bmul
  8207  0056' 3E00'              	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8208  0057' 0086               	movwf	6
  8209  0058' 0187               	clrf	7
  8210  0059' 0181               	clrf	1
  8211                           
  8212                           ;executer.c: 288:                         if(LedBit[Led].Led == MAX){
  8213  005A' 300B               	movlw	11
  8214  005B' 0140               	movlb	0	; select bank0
  8215  005C' 0086'              	movwf	??_LedFlash
  8216  005D' 0806'              	movf	??_LedFlash,w
  8217  005E' 0082'              	movwf	___bmul@multiplicand
  8218  005F' 0805'              	movf	LedFlash@Led,w
  8219  0060' 3180' 2000' 3180'  	fcall	___bmul
  8220  0063' 3E00'              	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8221  0064' 0086               	movwf	6
  8222  0065' 0187               	clrf	7
  8223  0066' 30FE               	movlw	254
  8224  0067' 0601               	xorwf	1,w
  8225  0068' 1D03               	btfss	3,2
  8226  0069' 286B'              	goto	u1291
  8227  006A' 286C'              	goto	u1290
  8228  006B'                    u1291:
  8229  006B' 287A'              	goto	l2706
  8230  006C'                    u1290:
  8231  006C'                    l2704:
  8232                           
  8233                           ;executer.c: 289:                             LedBit[Led].Led = 0;
  8234  006C' 300B               	movlw	11
  8235  006D' 0140               	movlb	0	; select bank0
  8236  006E' 0086'              	movwf	??_LedFlash
  8237  006F' 0806'              	movf	??_LedFlash,w
  8238  0070' 0082'              	movwf	___bmul@multiplicand
  8239  0071' 0805'              	movf	LedFlash@Led,w
  8240  0072' 3180' 2000' 3180'  	fcall	___bmul
  8241  0075' 3E00'              	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8242  0076' 0086               	movwf	6
  8243  0077' 0187               	clrf	7
  8244  0078' 0181               	clrf	1
  8245                           
  8246                           ;executer.c: 290:                         }
  8247  0079' 288B'              	goto	l677
  8248  007A'                    l2706:
  8249                           
  8250                           ;executer.c: 292:                             LedBit[Led].Led = MAX;
  8251  007A' 30FE               	movlw	254
  8252  007B' 0140               	movlb	0	; select bank0
  8253  007C' 0086'              	movwf	??_LedFlash
  8254  007D' 300B               	movlw	11
  8255  007E' 0087'              	movwf	??_LedFlash+1
  8256  007F' 0807'              	movf	??_LedFlash+1,w
  8257  0080' 0082'              	movwf	___bmul@multiplicand
  8258  0081' 0805'              	movf	LedFlash@Led,w
  8259  0082' 3180' 2000' 3180'  	fcall	___bmul
  8260  0085' 3E00'              	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8261  0086' 0086               	movwf	6
  8262  0087' 0187               	clrf	7
  8263  0088' 0140               	movlb	0	; select bank0
  8264  0089' 0806'              	movf	??_LedFlash,w
  8265  008A' 0081               	movwf	1
  8266  008B'                    l677:	
  8267                           ;executer.c: 294:                     }
  8268                           
  8269                           
  8270                           ;executer.c: 295:                     LedBit[Led].Prog_State = 1;
  8271  008B' 300B               	movlw	11
  8272  008C' 0140               	movlb	0	; select bank0
  8273  008D' 0086'              	movwf	??_LedFlash
  8274  008E' 0806'              	movf	??_LedFlash,w
  8275  008F' 0082'              	movwf	___bmul@multiplicand
  8276  0090' 0805'              	movf	LedFlash@Led,w
  8277  0091' 3180' 2000' 3180'  	fcall	___bmul
  8278  0094' 3E00'              	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8279  0095' 0086               	movwf	6
  8280  0096' 0187               	clrf	7
  8281  0097' 0181               	clrf	1
  8282  0098' 0A81               	incf	1,f
  8283  0099'                    l2708:
  8284                           
  8285                           ;executer.c: 296:                     ReturnVal = 1;
  8286  0099' 0140               	movlb	0	; select bank0
  8287  009A' 0189'              	clrf	LedFlash@ReturnVal
  8288  009B' 0A89'              	incf	LedFlash@ReturnVal,f
  8289                           
  8290                           ;executer.c: 297:             break;
  8291  009C' 28C6'              	goto	l2716
  8292  009D'                    l2710:
  8293  009D' 300B               	movlw	11
  8294  009E' 0086'              	movwf	??_LedFlash
  8295  009F' 0806'              	movf	??_LedFlash,w
  8296  00A0' 0082'              	movwf	___bmul@multiplicand
  8297  00A1' 0805'              	movf	LedFlash@Led,w
  8298  00A2' 3180' 2000' 3180'  	fcall	___bmul
  8299  00A5' 3E00'              	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8300  00A6' 0086               	movwf	6
  8301  00A7' 0187               	clrf	7
  8302  00A8' 0181               	clrf	1
  8303                           
  8304                           ;executer.c: 300:         break;
  8305  00A9' 28C6'              	goto	l2716
  8306  00AA'                    l2714:
  8307  00AA' 300B               	movlw	11
  8308  00AB' 0086'              	movwf	??_LedFlash
  8309  00AC' 0806'              	movf	??_LedFlash,w
  8310  00AD' 0082'              	movwf	___bmul@multiplicand
  8311  00AE' 0805'              	movf	LedFlash@Led,w
  8312  00AF' 3180' 2000' 3180'  	fcall	___bmul
  8313  00B2' 3E00'              	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8314  00B3' 0086               	movwf	6
  8315  00B4' 0187               	clrf	7
  8316  00B5' 0801               	movf	1,w
  8317  00B6' 0140               	movlb	0	; select bank0
  8318  00B7' 0087'              	movwf	??_LedFlash+1
  8319  00B8' 0188'              	clrf	??_LedFlash+2
  8320                           
  8321                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8322                           ; Switch size 1, requested type "simple"
  8323                           ; Number of cases is 1, Range of values is 0 to 0
  8324                           ; switch strategies available:
  8325                           ; Name         Instructions Cycles
  8326                           ; simple_byte            4     3 (average)
  8327                           ; direct_byte            8     6 (fixed)
  8328                           ; jumptable            260     6 (fixed)
  8329                           ;	Chosen strategy is simple_byte
  8330  00B9' 0808'              	movf	??_LedFlash+2,w
  8331  00BA' 3A00               	xorlw	0	; case 0
  8332  00BB' 1903               	skipnz
  8333  00BC' 28BE'              	goto	l2896
  8334  00BD' 289D'              	goto	l2710
  8335  00BE'                    l2896:
  8336                           
  8337                           ; Switch size 1, requested type "simple"
  8338                           ; Number of cases is 2, Range of values is 0 to 1
  8339                           ; switch strategies available:
  8340                           ; Name         Instructions Cycles
  8341                           ; simple_byte            7     4 (average)
  8342                           ; direct_byte           10     6 (fixed)
  8343                           ; jumptable            260     6 (fixed)
  8344                           ;	Chosen strategy is simple_byte
  8345  00BE' 0807'              	movf	??_LedFlash+1,w
  8346  00BF' 3A00               	xorlw	0	; case 0
  8347  00C0' 1903               	skipnz
  8348  00C1' 2803'              	goto	l2694
  8349  00C2' 3A01               	xorlw	1	; case 1
  8350  00C3' 1903               	skipnz
  8351  00C4' 2820'              	goto	l2698
  8352  00C5' 289D'              	goto	l2710
  8353  00C6'                    l2716:
  8354                           
  8355                           ;executer.c: 303:     CalcPwm(Led);
  8356  00C6' 0140               	movlb	0	; select bank0
  8357  00C7' 0805'              	movf	LedFlash@Led,w
  8358  00C8' 3180' 2000' 3180'  	fcall	_CalcPwm
  8359  00CB'                    l2718:
  8360                           
  8361                           ;executer.c: 304:     return(ReturnVal);
  8362  00CB' 0140               	movlb	0	; select bank0
  8363  00CC' 0809'              	movf	LedFlash@ReturnVal,w
  8364  00CD'                    l681:
  8365  00CD' 0008               	return
  8366  00CE'                    __end_of_LedFlash:
  8367                           
  8368                           	psect	text28
  8369  0000'                    __ptext28:	
  8370 ;; *************** function _LedOff *****************
  8371 ;; Defined at:
  8372 ;;		line 174 in file "executer.c"
  8373 ;; Parameters:    Size  Location     Type
  8374 ;;  Led             1    5[BANK0 ] unsigned char 
  8375 ;; Auto vars:     Size  Location     Type
  8376 ;;		None
  8377 ;; Return value:  Size  Location     Type
  8378 ;;                  1    wreg      unsigned char 
  8379 ;; Registers used:
  8380 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8381 ;; Tracked objects:
  8382 ;;		On entry : 0/0
  8383 ;;		On exit  : 0/0
  8384 ;;		Unchanged: 0/0
  8385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8386 ;;      Params:         0       1       0       0
  8387 ;;      Locals:         0       0       0       0
  8388 ;;      Temps:          0       1       0       0
  8389 ;;      Totals:         0       2       0       0
  8390 ;;Total ram usage:        2 bytes
  8391 ;; Hardware stack levels used:    1
  8392 ;; Hardware stack levels required when called:    8
  8393 ;; This function calls:
  8394 ;;		_CalcPwm
  8395 ;;		___bmul
  8396 ;; This function is called by:
  8397 ;;		_BATTxPROTECT
  8398 ;;		_RCSxLED
  8399 ;;		_EXECUTExEFFECT
  8400 ;; This function uses a non-reentrant model
  8401 ;;
  8402                           
  8403                           
  8404                           ;psect for function _LedOff
  8405  0000'                    _LedOff:
  8406  0000'                    l2620:	
  8407                           ;incstack = 0
  8408                           ; Regs used in _LedOff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8409                           
  8410                           
  8411                           ;executer.c: 174: uint8_t LedOff(uint8_t Led);executer.c: 175: {;executer.c: 176:     Le
      +                          dBit[Led].Led = 0;
  8412  0000' 300B               	movlw	11
  8413  0001' 0140               	movlb	0	; select bank0
  8414  0002' 0086'              	movwf	??_LedOff
  8415  0003' 0806'              	movf	??_LedOff,w
  8416  0004' 0082'              	movwf	___bmul@multiplicand
  8417  0005' 0805'              	movf	LedOff@Led,w
  8418  0006' 3180' 2000' 3180'  	fcall	___bmul
  8419  0009' 3E00'              	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8420  000A' 0086               	movwf	6
  8421  000B' 0187               	clrf	7
  8422  000C' 0181               	clrf	1
  8423                           
  8424                           ;executer.c: 177:     LedBit[Led].Speed = 0;
  8425  000D' 300B               	movlw	11
  8426  000E' 0140               	movlb	0	; select bank0
  8427  000F' 0086'              	movwf	??_LedOff
  8428  0010' 0806'              	movf	??_LedOff,w
  8429  0011' 0082'              	movwf	___bmul@multiplicand
  8430  0012' 0805'              	movf	LedOff@Led,w
  8431  0013' 3180' 2000' 3180'  	fcall	___bmul
  8432  0016' 3E00'              	addlw	(low ((_LedBit| 0+4)))& (0+255)
  8433  0017' 0086               	movwf	6
  8434  0018' 0187               	clrf	7
  8435  0019' 0181               	clrf	1
  8436                           
  8437                           ;executer.c: 178:     LedBit[Led].Prog_State = 0;
  8438  001A' 300B               	movlw	11
  8439  001B' 0140               	movlb	0	; select bank0
  8440  001C' 0086'              	movwf	??_LedOff
  8441  001D' 0806'              	movf	??_LedOff,w
  8442  001E' 0082'              	movwf	___bmul@multiplicand
  8443  001F' 0805'              	movf	LedOff@Led,w
  8444  0020' 3180' 2000' 3180'  	fcall	___bmul
  8445  0023' 3E00'              	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8446  0024' 0086               	movwf	6
  8447  0025' 0187               	clrf	7
  8448  0026' 0181               	clrf	1
  8449                           
  8450                           ;executer.c: 179:     LedBit[Led].Iteration = 0;
  8451  0027' 300B               	movlw	11
  8452  0028' 0140               	movlb	0	; select bank0
  8453  0029' 0086'              	movwf	??_LedOff
  8454  002A' 0806'              	movf	??_LedOff,w
  8455  002B' 0082'              	movwf	___bmul@multiplicand
  8456  002C' 0805'              	movf	LedOff@Led,w
  8457  002D' 3180' 2000' 3180'  	fcall	___bmul
  8458  0030' 3E00'              	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8459  0031' 0086               	movwf	6
  8460  0032' 0187               	clrf	7
  8461  0033' 0181               	clrf	1
  8462                           
  8463                           ;executer.c: 180:     CalcPwm(Led);
  8464  0034' 0140               	movlb	0	; select bank0
  8465  0035' 0805'              	movf	LedOff@Led,w
  8466  0036' 3180' 2000' 3180'  	fcall	_CalcPwm
  8467  0039'                    l2622:
  8468                           
  8469                           ;executer.c: 181:     return(1);
  8470  0039' 3001               	movlw	1
  8471  003A'                    l646:
  8472  003A' 0008               	return
  8473  003B'                    __end_of_LedOff:
  8474                           
  8475                           	psect	text29
  8476  0000'                    __ptext29:	
  8477 ;; *************** function _LedSlFl *****************
  8478 ;; Defined at:
  8479 ;;		line 223 in file "executer.c"
  8480 ;; Parameters:    Size  Location     Type
  8481 ;;  Led             1    5[BANK0 ] unsigned char 
  8482 ;; Auto vars:     Size  Location     Type
  8483 ;;  ReturnVal       1    9[BANK0 ] unsigned char 
  8484 ;; Return value:  Size  Location     Type
  8485 ;;                  1    wreg      unsigned char 
  8486 ;; Registers used:
  8487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8488 ;; Tracked objects:
  8489 ;;		On entry : 0/0
  8490 ;;		On exit  : 0/0
  8491 ;;		Unchanged: 0/0
  8492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8493 ;;      Params:         0       1       0       0
  8494 ;;      Locals:         0       1       0       0
  8495 ;;      Temps:          0       3       0       0
  8496 ;;      Totals:         0       5       0       0
  8497 ;;Total ram usage:        5 bytes
  8498 ;; Hardware stack levels used:    1
  8499 ;; Hardware stack levels required when called:    8
  8500 ;; This function calls:
  8501 ;;		_CalcPwm
  8502 ;;		___bmul
  8503 ;; This function is called by:
  8504 ;;		_RCSxLED
  8505 ;;		_EXECUTExEFFECT
  8506 ;; This function uses a non-reentrant model
  8507 ;;
  8508                           
  8509                           
  8510                           ;psect for function _LedSlFl
  8511  0000'                    _LedSlFl:
  8512  0000'                    l2638:	
  8513                           ;incstack = 0
  8514                           ; Regs used in _LedSlFl: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8515                           
  8516                           
  8517                           ;executer.c: 223: uint8_t LedSlFl(uint8_t Led);executer.c: 224: {;executer.c: 225:     u
      +                          int8_t ReturnVal = 0;
  8518  0000' 0140               	movlb	0	; select bank0
  8519  0001' 0189'              	clrf	LedSlFl@ReturnVal
  8520                           
  8521                           ;executer.c: 227:     switch(LedBit[Led].Prog_State){
  8522  0002' 29D0'              	goto	l2680
  8523  0003'                    l2640:
  8524  0003' 300B               	movlw	11
  8525  0004' 0086'              	movwf	??_LedSlFl
  8526  0005' 0806'              	movf	??_LedSlFl,w
  8527  0006' 0082'              	movwf	___bmul@multiplicand
  8528  0007' 0805'              	movf	LedSlFl@Led,w
  8529  0008' 3180' 2000' 3180'  	fcall	___bmul
  8530  000B' 3E00'              	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8531  000C' 0086               	movwf	6
  8532  000D' 0187               	clrf	7
  8533  000E' 0181               	clrf	1
  8534                           
  8535                           ;executer.c: 229:                     LedBit[Led].Prog_State = 1;
  8536  000F' 300B               	movlw	11
  8537  0010' 0140               	movlb	0	; select bank0
  8538  0011' 0086'              	movwf	??_LedSlFl
  8539  0012' 0806'              	movf	??_LedSlFl,w
  8540  0013' 0082'              	movwf	___bmul@multiplicand
  8541  0014' 0805'              	movf	LedSlFl@Led,w
  8542  0015' 3180' 2000' 3180'  	fcall	___bmul
  8543  0018' 3E00'              	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8544  0019' 0086               	movwf	6
  8545  001A' 0187               	clrf	7
  8546  001B' 0181               	clrf	1
  8547  001C' 0A81               	incf	1,f
  8548  001D'                    l2642:
  8549                           
  8550                           ;executer.c: 230:                     ReturnVal = 0;
  8551  001D' 0140               	movlb	0	; select bank0
  8552  001E' 0189'              	clrf	LedSlFl@ReturnVal
  8553                           
  8554                           ;executer.c: 231:             break;
  8555  001F' 29EF'              	goto	l2682
  8556  0020'                    l2644:
  8557  0020' 3001               	movlw	1
  8558  0021' 0086'              	movwf	??_LedSlFl
  8559  0022' 300B               	movlw	11
  8560  0023' 0087'              	movwf	??_LedSlFl+1
  8561  0024' 0807'              	movf	??_LedSlFl+1,w
  8562  0025' 0082'              	movwf	___bmul@multiplicand
  8563  0026' 0805'              	movf	LedSlFl@Led,w
  8564  0027' 3180' 2000' 3180'  	fcall	___bmul
  8565  002A' 3E00'              	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8566  002B' 0086               	movwf	6
  8567  002C' 0187               	clrf	7
  8568  002D' 0140               	movlb	0	; select bank0
  8569  002E' 0806'              	movf	??_LedSlFl,w
  8570  002F' 0781               	addwf	1,f
  8571  0030'                    l2646:
  8572                           
  8573                           ;executer.c: 234:                     if(LedBit[Led].Iteration > LedBit[Led].Speed){
  8574  0030' 300B               	movlw	11
  8575  0031' 0086'              	movwf	??_LedSlFl
  8576  0032' 0806'              	movf	??_LedSlFl,w
  8577  0033' 0082'              	movwf	___bmul@multiplicand
  8578  0034' 0805'              	movf	LedSlFl@Led,w
  8579  0035' 3180' 2000' 3180'  	fcall	___bmul
  8580  0038' 3E00'              	addlw	(low ((_LedBit| 0+4)))& (0+255)
  8581  0039' 0086               	movwf	6
  8582  003A' 0187               	clrf	7
  8583  003B' 300B               	movlw	11
  8584  003C' 0140               	movlb	0	; select bank0
  8585  003D' 0087'              	movwf	??_LedSlFl+1
  8586  003E' 0807'              	movf	??_LedSlFl+1,w
  8587  003F' 0082'              	movwf	___bmul@multiplicand
  8588  0040' 0805'              	movf	LedSlFl@Led,w
  8589  0041' 3180' 2000' 3180'  	fcall	___bmul
  8590  0044' 3E00'              	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8591  0045' 0084               	movwf	4
  8592  0046' 0185               	clrf	5
  8593  0047' 0800               	movf	0,w
  8594  0048' 0201               	subwf	1,w
  8595  0049' 1803               	skipnc
  8596  004A' 284C'              	goto	u1211
  8597  004B' 284D'              	goto	u1210
  8598  004C'                    u1211:
  8599  004C' 2877'              	goto	l662
  8600  004D'                    u1210:
  8601  004D'                    l2648:
  8602                           
  8603                           ;executer.c: 235:                         LedBit[Led].Iteration = 0;
  8604  004D' 300B               	movlw	11
  8605  004E' 0140               	movlb	0	; select bank0
  8606  004F' 0086'              	movwf	??_LedSlFl
  8607  0050' 0806'              	movf	??_LedSlFl,w
  8608  0051' 0082'              	movwf	___bmul@multiplicand
  8609  0052' 0805'              	movf	LedSlFl@Led,w
  8610  0053' 3180' 2000' 3180'  	fcall	___bmul
  8611  0056' 3E00'              	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8612  0057' 0086               	movwf	6
  8613  0058' 0187               	clrf	7
  8614  0059' 0181               	clrf	1
  8615                           
  8616                           ;executer.c: 236:                         LedBit[Led].Led += LedBit[Led].StepSize;
  8617  005A' 300B               	movlw	11
  8618  005B' 0140               	movlb	0	; select bank0
  8619  005C' 0086'              	movwf	??_LedSlFl
  8620  005D' 0806'              	movf	??_LedSlFl,w
  8621  005E' 0082'              	movwf	___bmul@multiplicand
  8622  005F' 0805'              	movf	LedSlFl@Led,w
  8623  0060' 3180' 2000' 3180'  	fcall	___bmul
  8624  0063' 3E00'              	addlw	(low ((_LedBit| 0+8)))& (0+255)
  8625  0064' 0086               	movwf	6
  8626  0065' 0187               	clrf	7
  8627  0066' 0801               	movf	1,w
  8628  0067' 0140               	movlb	0	; select bank0
  8629  0068' 0087'              	movwf	??_LedSlFl+1
  8630  0069' 300B               	movlw	11
  8631  006A' 0088'              	movwf	??_LedSlFl+2
  8632  006B' 0808'              	movf	??_LedSlFl+2,w
  8633  006C' 0082'              	movwf	___bmul@multiplicand
  8634  006D' 0805'              	movf	LedSlFl@Led,w
  8635  006E' 3180' 2000' 3180'  	fcall	___bmul
  8636  0071' 3E00'              	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8637  0072' 0086               	movwf	6
  8638  0073' 0187               	clrf	7
  8639  0074' 0140               	movlb	0	; select bank0
  8640  0075' 0807'              	movf	??_LedSlFl+1,w
  8641  0076' 0781               	addwf	1,f
  8642  0077'                    l662:	
  8643                           ;executer.c: 237:                     }
  8644                           
  8645                           
  8646                           ;executer.c: 238:                     if(LedBit[Led].Led > MAX){
  8647  0077' 300B               	movlw	11
  8648  0078' 0140               	movlb	0	; select bank0
  8649  0079' 0086'              	movwf	??_LedSlFl
  8650  007A' 0806'              	movf	??_LedSlFl,w
  8651  007B' 0082'              	movwf	___bmul@multiplicand
  8652  007C' 0805'              	movf	LedSlFl@Led,w
  8653  007D' 3180' 2000' 3180'  	fcall	___bmul
  8654  0080' 3E00'              	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8655  0081' 0086               	movwf	6
  8656  0082' 0187               	clrf	7
  8657  0083' 0A01               	incf	1,w
  8658  0084' 1D03               	btfss	3,2
  8659  0085' 2887'              	goto	u1221
  8660  0086' 2888'              	goto	u1220
  8661  0087'                    u1221:
  8662  0087' 28B5'              	goto	l2652
  8663  0088'                    u1220:
  8664  0088'                    l2650:
  8665                           
  8666                           ;executer.c: 239:                         LedBit[Led].Led = MAX;
  8667  0088' 30FE               	movlw	254
  8668  0089' 0140               	movlb	0	; select bank0
  8669  008A' 0086'              	movwf	??_LedSlFl
  8670  008B' 300B               	movlw	11
  8671  008C' 0087'              	movwf	??_LedSlFl+1
  8672  008D' 0807'              	movf	??_LedSlFl+1,w
  8673  008E' 0082'              	movwf	___bmul@multiplicand
  8674  008F' 0805'              	movf	LedSlFl@Led,w
  8675  0090' 3180' 2000' 3180'  	fcall	___bmul
  8676  0093' 3E00'              	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8677  0094' 0086               	movwf	6
  8678  0095' 0187               	clrf	7
  8679  0096' 0140               	movlb	0	; select bank0
  8680  0097' 0806'              	movf	??_LedSlFl,w
  8681  0098' 0081               	movwf	1
  8682                           
  8683                           ;executer.c: 240:                         LedBit[Led].Prog_State = 2;
  8684  0099' 3002               	movlw	2
  8685  009A' 0086'              	movwf	??_LedSlFl
  8686  009B' 300B               	movlw	11
  8687  009C' 0087'              	movwf	??_LedSlFl+1
  8688  009D' 0807'              	movf	??_LedSlFl+1,w
  8689  009E' 0082'              	movwf	___bmul@multiplicand
  8690  009F' 0805'              	movf	LedSlFl@Led,w
  8691  00A0' 3180' 2000' 3180'  	fcall	___bmul
  8692  00A3' 3E00'              	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8693  00A4' 0086               	movwf	6
  8694  00A5' 0187               	clrf	7
  8695  00A6' 0140               	movlb	0	; select bank0
  8696  00A7' 0806'              	movf	??_LedSlFl,w
  8697  00A8' 0081               	movwf	1
  8698                           
  8699                           ;executer.c: 241:                         LedBit[Led].Iteration = 0;
  8700  00A9' 300B               	movlw	11
  8701  00AA' 0086'              	movwf	??_LedSlFl
  8702  00AB' 0806'              	movf	??_LedSlFl,w
  8703  00AC' 0082'              	movwf	___bmul@multiplicand
  8704  00AD' 0805'              	movf	LedSlFl@Led,w
  8705  00AE' 3180' 2000' 3180'  	fcall	___bmul
  8706  00B1' 3E00'              	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8707  00B2' 0086               	movwf	6
  8708  00B3' 0187               	clrf	7
  8709  00B4' 0181               	clrf	1
  8710  00B5'                    l2652:
  8711                           
  8712                           ;executer.c: 243:                     ReturnVal = 1;
  8713  00B5' 0140               	movlb	0	; select bank0
  8714  00B6' 0189'              	clrf	LedSlFl@ReturnVal
  8715  00B7' 0A89'              	incf	LedSlFl@ReturnVal,f
  8716                           
  8717                           ;executer.c: 244:             break;
  8718  00B8' 29EF'              	goto	l2682
  8719  00B9'                    l2654:
  8720  00B9' 3001               	movlw	1
  8721  00BA' 0086'              	movwf	??_LedSlFl
  8722  00BB' 300B               	movlw	11
  8723  00BC' 0087'              	movwf	??_LedSlFl+1
  8724  00BD' 0807'              	movf	??_LedSlFl+1,w
  8725  00BE' 0082'              	movwf	___bmul@multiplicand
  8726  00BF' 0805'              	movf	LedSlFl@Led,w
  8727  00C0' 3180' 2000' 3180'  	fcall	___bmul
  8728  00C3' 3E00'              	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8729  00C4' 0086               	movwf	6
  8730  00C5' 0187               	clrf	7
  8731  00C6' 0140               	movlb	0	; select bank0
  8732  00C7' 0806'              	movf	??_LedSlFl,w
  8733  00C8' 0781               	addwf	1,f
  8734  00C9'                    l2656:
  8735                           
  8736                           ;executer.c: 247:                     if(LedBit[Led].Iteration > LedBit[Led].Speed){
  8737  00C9' 300B               	movlw	11
  8738  00CA' 0086'              	movwf	??_LedSlFl
  8739  00CB' 0806'              	movf	??_LedSlFl,w
  8740  00CC' 0082'              	movwf	___bmul@multiplicand
  8741  00CD' 0805'              	movf	LedSlFl@Led,w
  8742  00CE' 3180' 2000' 3180'  	fcall	___bmul
  8743  00D1' 3E00'              	addlw	(low ((_LedBit| 0+4)))& (0+255)
  8744  00D2' 0086               	movwf	6
  8745  00D3' 0187               	clrf	7
  8746  00D4' 300B               	movlw	11
  8747  00D5' 0140               	movlb	0	; select bank0
  8748  00D6' 0087'              	movwf	??_LedSlFl+1
  8749  00D7' 0807'              	movf	??_LedSlFl+1,w
  8750  00D8' 0082'              	movwf	___bmul@multiplicand
  8751  00D9' 0805'              	movf	LedSlFl@Led,w
  8752  00DA' 3180' 2000' 3180'  	fcall	___bmul
  8753  00DD' 3E00'              	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8754  00DE' 0084               	movwf	4
  8755  00DF' 0185               	clrf	5
  8756  00E0' 0800               	movf	0,w
  8757  00E1' 0201               	subwf	1,w
  8758  00E2' 1803               	skipnc
  8759  00E3' 28E5'              	goto	u1231
  8760  00E4' 28E6'              	goto	u1230
  8761  00E5'                    u1231:
  8762  00E5' 290D'              	goto	l2662
  8763  00E6'                    u1230:
  8764  00E6'                    l2658:
  8765                           
  8766                           ;executer.c: 248:                         LedBit[Led].Iteration = 0;
  8767  00E6' 300B               	movlw	11
  8768  00E7' 0140               	movlb	0	; select bank0
  8769  00E8' 0086'              	movwf	??_LedSlFl
  8770  00E9' 0806'              	movf	??_LedSlFl,w
  8771  00EA' 0082'              	movwf	___bmul@multiplicand
  8772  00EB' 0805'              	movf	LedSlFl@Led,w
  8773  00EC' 3180' 2000' 3180'  	fcall	___bmul
  8774  00EF' 3E00'              	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8775  00F0' 0086               	movwf	6
  8776  00F1' 0187               	clrf	7
  8777  00F2' 0181               	clrf	1
  8778  00F3'                    l2660:
  8779                           
  8780                           ;executer.c: 249:                         LedBit[Led].Led -= LedBit[Led].StepSize;
  8781  00F3' 300B               	movlw	11
  8782  00F4' 0140               	movlb	0	; select bank0
  8783  00F5' 0086'              	movwf	??_LedSlFl
  8784  00F6' 0806'              	movf	??_LedSlFl,w
  8785  00F7' 0082'              	movwf	___bmul@multiplicand
  8786  00F8' 0805'              	movf	LedSlFl@Led,w
  8787  00F9' 3180' 2000' 3180'  	fcall	___bmul
  8788  00FC' 3E00'              	addlw	(low ((_LedBit| 0+8)))& (0+255)
  8789  00FD' 0086               	movwf	6
  8790  00FE' 0187               	clrf	7
  8791  00FF' 300B               	movlw	11
  8792  0100' 0140               	movlb	0	; select bank0
  8793  0101' 0087'              	movwf	??_LedSlFl+1
  8794  0102' 0807'              	movf	??_LedSlFl+1,w
  8795  0103' 0082'              	movwf	___bmul@multiplicand
  8796  0104' 0805'              	movf	LedSlFl@Led,w
  8797  0105' 3180' 2000' 3180'  	fcall	___bmul
  8798  0108' 3E00'              	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8799  0109' 0084               	movwf	4
  8800  010A' 0185               	clrf	5
  8801  010B' 0801               	movf	1,w
  8802  010C' 0280               	subwf	0,f
  8803  010D'                    l2662:
  8804                           
  8805                           ;executer.c: 251:                     if((LedBit[Led].nominal != MAX) && (LedBit[Led].Le
      +                          d <= LedBit[Led].nominal)){
  8806  010D' 300B               	movlw	11
  8807  010E' 0140               	movlb	0	; select bank0
  8808  010F' 0086'              	movwf	??_LedSlFl
  8809  0110' 0806'              	movf	??_LedSlFl,w
  8810  0111' 0082'              	movwf	___bmul@multiplicand
  8811  0112' 0805'              	movf	LedSlFl@Led,w
  8812  0113' 3180' 2000' 3180'  	fcall	___bmul
  8813  0116' 3E00'              	addlw	(low ((_LedBit| 0+5)))& (0+255)
  8814  0117' 0086               	movwf	6
  8815  0118' 0187               	clrf	7
  8816  0119' 30FE               	movlw	254
  8817  011A' 0601               	xorwf	1,w
  8818  011B' 1903               	btfsc	3,2
  8819  011C' 291E'              	goto	u1241
  8820  011D' 291F'              	goto	u1240
  8821  011E'                    u1241:
  8822  011E' 2975'              	goto	l2668
  8823  011F'                    u1240:
  8824  011F'                    l2664:
  8825  011F' 300B               	movlw	11
  8826  0120' 0140               	movlb	0	; select bank0
  8827  0121' 0086'              	movwf	??_LedSlFl
  8828  0122' 0806'              	movf	??_LedSlFl,w
  8829  0123' 0082'              	movwf	___bmul@multiplicand
  8830  0124' 0805'              	movf	LedSlFl@Led,w
  8831  0125' 3180' 2000' 3180'  	fcall	___bmul
  8832  0128' 3E00'              	addlw	(low ((_LedBit| 0+5)))& (0+255)
  8833  0129' 0086               	movwf	6
  8834  012A' 0187               	clrf	7
  8835  012B' 300B               	movlw	11
  8836  012C' 0140               	movlb	0	; select bank0
  8837  012D' 0087'              	movwf	??_LedSlFl+1
  8838  012E' 0807'              	movf	??_LedSlFl+1,w
  8839  012F' 0082'              	movwf	___bmul@multiplicand
  8840  0130' 0805'              	movf	LedSlFl@Led,w
  8841  0131' 3180' 2000' 3180'  	fcall	___bmul
  8842  0134' 3E00'              	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8843  0135' 0084               	movwf	4
  8844  0136' 0185               	clrf	5
  8845  0137' 0800               	movf	0,w
  8846  0138' 0201               	subwf	1,w
  8847  0139' 1C03               	skipc
  8848  013A' 293C'              	goto	u1251
  8849  013B' 293D'              	goto	u1250
  8850  013C'                    u1251:
  8851  013C' 2975'              	goto	l2668
  8852  013D'                    u1250:
  8853  013D'                    l2666:
  8854                           
  8855                           ;executer.c: 252:                         LedBit[Led].Led = LedBit[Led].nominal;
  8856  013D' 300B               	movlw	11
  8857  013E' 0140               	movlb	0	; select bank0
  8858  013F' 0086'              	movwf	??_LedSlFl
  8859  0140' 0806'              	movf	??_LedSlFl,w
  8860  0141' 0082'              	movwf	___bmul@multiplicand
  8861  0142' 0805'              	movf	LedSlFl@Led,w
  8862  0143' 3180' 2000' 3180'  	fcall	___bmul
  8863  0146' 3E00'              	addlw	(low ((_LedBit| 0+5)))& (0+255)
  8864  0147' 0086               	movwf	6
  8865  0148' 0187               	clrf	7
  8866  0149' 0801               	movf	1,w
  8867  014A' 0140               	movlb	0	; select bank0
  8868  014B' 0087'              	movwf	??_LedSlFl+1
  8869  014C' 300B               	movlw	11
  8870  014D' 0088'              	movwf	??_LedSlFl+2
  8871  014E' 0808'              	movf	??_LedSlFl+2,w
  8872  014F' 0082'              	movwf	___bmul@multiplicand
  8873  0150' 0805'              	movf	LedSlFl@Led,w
  8874  0151' 3180' 2000' 3180'  	fcall	___bmul
  8875  0154' 3E00'              	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8876  0155' 0086               	movwf	6
  8877  0156' 0187               	clrf	7
  8878  0157' 0140               	movlb	0	; select bank0
  8879  0158' 0807'              	movf	??_LedSlFl+1,w
  8880  0159' 0081               	movwf	1
  8881                           
  8882                           ;executer.c: 253:                         LedBit[Led].Prog_State = 1;
  8883  015A' 300B               	movlw	11
  8884  015B' 0086'              	movwf	??_LedSlFl
  8885  015C' 0806'              	movf	??_LedSlFl,w
  8886  015D' 0082'              	movwf	___bmul@multiplicand
  8887  015E' 0805'              	movf	LedSlFl@Led,w
  8888  015F' 3180' 2000' 3180'  	fcall	___bmul
  8889  0162' 3E00'              	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8890  0163' 0086               	movwf	6
  8891  0164' 0187               	clrf	7
  8892  0165' 0181               	clrf	1
  8893  0166' 0A81               	incf	1,f
  8894                           
  8895                           ;executer.c: 254:                         LedBit[Led].Iteration = 0;
  8896  0167' 300B               	movlw	11
  8897  0168' 0140               	movlb	0	; select bank0
  8898  0169' 0086'              	movwf	??_LedSlFl
  8899  016A' 0806'              	movf	??_LedSlFl,w
  8900  016B' 0082'              	movwf	___bmul@multiplicand
  8901  016C' 0805'              	movf	LedSlFl@Led,w
  8902  016D' 3180' 2000' 3180'  	fcall	___bmul
  8903  0170' 3E00'              	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8904  0171' 0086               	movwf	6
  8905  0172' 0187               	clrf	7
  8906  0173' 0181               	clrf	1
  8907                           
  8908                           ;executer.c: 255:                     }
  8909  0174' 28B5'              	goto	l2652
  8910  0175'                    l2668:
  8911  0175' 300B               	movlw	11
  8912  0176' 0140               	movlb	0	; select bank0
  8913  0177' 0086'              	movwf	??_LedSlFl
  8914  0178' 0806'              	movf	??_LedSlFl,w
  8915  0179' 0082'              	movwf	___bmul@multiplicand
  8916  017A' 0805'              	movf	LedSlFl@Led,w
  8917  017B' 3180' 2000' 3180'  	fcall	___bmul
  8918  017E' 3E00'              	addlw	(low ((_LedBit| 0+5)))& (0+255)
  8919  017F' 0086               	movwf	6
  8920  0180' 0187               	clrf	7
  8921  0181' 30FE               	movlw	254
  8922  0182' 0601               	xorwf	1,w
  8923  0183' 1D03               	btfss	3,2
  8924  0184' 2986'              	goto	u1261
  8925  0185' 2987'              	goto	u1260
  8926  0186'                    u1261:
  8927  0186' 28B5'              	goto	l2652
  8928  0187'                    u1260:
  8929  0187'                    l2670:
  8930  0187' 300B               	movlw	11
  8931  0188' 0140               	movlb	0	; select bank0
  8932  0189' 0086'              	movwf	??_LedSlFl
  8933  018A' 0806'              	movf	??_LedSlFl,w
  8934  018B' 0082'              	movwf	___bmul@multiplicand
  8935  018C' 0805'              	movf	LedSlFl@Led,w
  8936  018D' 3180' 2000' 3180'  	fcall	___bmul
  8937  0190' 3E00'              	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8938  0191' 0086               	movwf	6
  8939  0192' 0187               	clrf	7
  8940  0193' 3002               	movlw	2
  8941  0194' 0201               	subwf	1,w
  8942  0195' 1803               	skipnc
  8943  0196' 2998'              	goto	u1271
  8944  0197' 2999'              	goto	u1270
  8945  0198'                    u1271:
  8946  0198' 28B5'              	goto	l2652
  8947  0199'                    u1270:
  8948  0199'                    l2672:
  8949                           
  8950                           ;executer.c: 257:                         LedBit[Led].Led = MIN;
  8951  0199' 300B               	movlw	11
  8952  019A' 0140               	movlb	0	; select bank0
  8953  019B' 0086'              	movwf	??_LedSlFl
  8954  019C' 0806'              	movf	??_LedSlFl,w
  8955  019D' 0082'              	movwf	___bmul@multiplicand
  8956  019E' 0805'              	movf	LedSlFl@Led,w
  8957  019F' 3180' 2000' 3180'  	fcall	___bmul
  8958  01A2' 3E00'              	addlw	(low ((_LedBit| 0+1)))& (0+255)
  8959  01A3' 0086               	movwf	6
  8960  01A4' 0187               	clrf	7
  8961  01A5' 0181               	clrf	1
  8962  01A6' 0A81               	incf	1,f
  8963                           
  8964                           ;executer.c: 258:                         LedBit[Led].Prog_State = 1;
  8965  01A7' 300B               	movlw	11
  8966  01A8' 0140               	movlb	0	; select bank0
  8967  01A9' 0086'              	movwf	??_LedSlFl
  8968  01AA' 0806'              	movf	??_LedSlFl,w
  8969  01AB' 0082'              	movwf	___bmul@multiplicand
  8970  01AC' 0805'              	movf	LedSlFl@Led,w
  8971  01AD' 3180' 2000' 3180'  	fcall	___bmul
  8972  01B0' 3E00'              	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8973  01B1' 0086               	movwf	6
  8974  01B2' 0187               	clrf	7
  8975  01B3' 0181               	clrf	1
  8976  01B4' 0A81               	incf	1,f
  8977                           
  8978                           ;executer.c: 259:                         LedBit[Led].Iteration = 0;
  8979  01B5' 300B               	movlw	11
  8980  01B6' 0140               	movlb	0	; select bank0
  8981  01B7' 0086'              	movwf	??_LedSlFl
  8982  01B8' 0806'              	movf	??_LedSlFl,w
  8983  01B9' 0082'              	movwf	___bmul@multiplicand
  8984  01BA' 0805'              	movf	LedSlFl@Led,w
  8985  01BB' 3180' 2000' 3180'  	fcall	___bmul
  8986  01BE' 3E00'              	addlw	(low ((_LedBit| 0+7)))& (0+255)
  8987  01BF' 0086               	movwf	6
  8988  01C0' 0187               	clrf	7
  8989  01C1' 0181               	clrf	1
  8990  01C2' 28B5'              	goto	l2652
  8991  01C3'                    l2676:
  8992  01C3' 300B               	movlw	11
  8993  01C4' 0086'              	movwf	??_LedSlFl
  8994  01C5' 0806'              	movf	??_LedSlFl,w
  8995  01C6' 0082'              	movwf	___bmul@multiplicand
  8996  01C7' 0805'              	movf	LedSlFl@Led,w
  8997  01C8' 3180' 2000' 3180'  	fcall	___bmul
  8998  01CB' 3E00'              	addlw	(low ((_LedBit| 0+6)))& (0+255)
  8999  01CC' 0086               	movwf	6
  9000  01CD' 0187               	clrf	7
  9001  01CE' 0181               	clrf	1
  9002                           
  9003                           ;executer.c: 265:         break;
  9004  01CF' 29EF'              	goto	l2682
  9005  01D0'                    l2680:
  9006  01D0' 300B               	movlw	11
  9007  01D1' 0086'              	movwf	??_LedSlFl
  9008  01D2' 0806'              	movf	??_LedSlFl,w
  9009  01D3' 0082'              	movwf	___bmul@multiplicand
  9010  01D4' 0805'              	movf	LedSlFl@Led,w
  9011  01D5' 3180' 2000' 3180'  	fcall	___bmul
  9012  01D8' 3E00'              	addlw	(low ((_LedBit| 0+6)))& (0+255)
  9013  01D9' 0086               	movwf	6
  9014  01DA' 0187               	clrf	7
  9015  01DB' 0801               	movf	1,w
  9016  01DC' 0140               	movlb	0	; select bank0
  9017  01DD' 0087'              	movwf	??_LedSlFl+1
  9018  01DE' 0188'              	clrf	??_LedSlFl+2
  9019                           
  9020                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9021                           ; Switch size 1, requested type "simple"
  9022                           ; Number of cases is 1, Range of values is 0 to 0
  9023                           ; switch strategies available:
  9024                           ; Name         Instructions Cycles
  9025                           ; simple_byte            4     3 (average)
  9026                           ; direct_byte            8     6 (fixed)
  9027                           ; jumptable            260     6 (fixed)
  9028                           ;	Chosen strategy is simple_byte
  9029  01DF' 0808'              	movf	??_LedSlFl+2,w
  9030  01E0' 3A00               	xorlw	0	; case 0
  9031  01E1' 1903               	skipnz
  9032  01E2' 29E4'              	goto	l2898
  9033  01E3' 29C3'              	goto	l2676
  9034  01E4'                    l2898:
  9035                           
  9036                           ; Switch size 1, requested type "simple"
  9037                           ; Number of cases is 3, Range of values is 0 to 2
  9038                           ; switch strategies available:
  9039                           ; Name         Instructions Cycles
  9040                           ; simple_byte           10     6 (average)
  9041                           ; direct_byte           12     6 (fixed)
  9042                           ; jumptable            260     6 (fixed)
  9043                           ;	Chosen strategy is simple_byte
  9044  01E4' 0807'              	movf	??_LedSlFl+1,w
  9045  01E5' 3A00               	xorlw	0	; case 0
  9046  01E6' 1903               	skipnz
  9047  01E7' 2803'              	goto	l2640
  9048  01E8' 3A01               	xorlw	1	; case 1
  9049  01E9' 1903               	skipnz
  9050  01EA' 2820'              	goto	l2644
  9051  01EB' 3A03               	xorlw	3	; case 2
  9052  01EC' 1903               	skipnz
  9053  01ED' 28B9'              	goto	l2654
  9054  01EE' 29C3'              	goto	l2676
  9055  01EF'                    l2682:
  9056                           
  9057                           ;executer.c: 268:     CalcPwm(Led);
  9058  01EF' 0140               	movlb	0	; select bank0
  9059  01F0' 0805'              	movf	LedSlFl@Led,w
  9060  01F1' 3180' 2000' 3180'  	fcall	_CalcPwm
  9061  01F4'                    l2684:
  9062                           
  9063                           ;executer.c: 269:     return(ReturnVal);
  9064  01F4' 0140               	movlb	0	; select bank0
  9065  01F5' 0809'              	movf	LedSlFl@ReturnVal,w
  9066  01F6'                    l670:
  9067  01F6' 0008               	return
  9068  01F7'                    __end_of_LedSlFl:
  9069                           
  9070                           	psect	text30
  9071  0000'                    __ptext30:	
  9072 ;; *************** function _CalcPwm *****************
  9073 ;; Defined at:
  9074 ;;		line 310 in file "executer.c"
  9075 ;; Parameters:    Size  Location     Type
  9076 ;;  Led             1    wreg     unsigned char 
  9077 ;; Auto vars:     Size  Location     Type
  9078 ;;  Led             1    4[BANK0 ] unsigned char 
  9079 ;; Return value:  Size  Location     Type
  9080 ;;                  1    wreg      void 
  9081 ;; Registers used:
  9082 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9083 ;; Tracked objects:
  9084 ;;		On entry : 0/0
  9085 ;;		On exit  : 0/0
  9086 ;;		Unchanged: 0/0
  9087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9088 ;;      Params:         0       0       0       0
  9089 ;;      Locals:         0       1       0       0
  9090 ;;      Temps:          0       4       0       0
  9091 ;;      Totals:         0       5       0       0
  9092 ;;Total ram usage:        5 bytes
  9093 ;; Hardware stack levels used:    1
  9094 ;; Hardware stack levels required when called:    7
  9095 ;; This function calls:
  9096 ;;		_PWM1_LoadDutyValue
  9097 ;;		_PWM2_LoadDutyValue
  9098 ;;		_PWM3_LoadDutyValue
  9099 ;;		_PWM4_LoadDutyValue
  9100 ;;		_PWM5_LoadDutyValue
  9101 ;;		_PWM6_LoadDutyValue
  9102 ;;		___bmul
  9103 ;; This function is called by:
  9104 ;;		_LedOff
  9105 ;;		_LedNom
  9106 ;;		_LedBrake
  9107 ;;		_LedSlFl
  9108 ;;		_LedFlash
  9109 ;;		_LedMax
  9110 ;; This function uses a non-reentrant model
  9111 ;;
  9112                           
  9113                           
  9114                           ;psect for function _CalcPwm
  9115  0000'                    _CalcPwm:
  9116                           
  9117                           ;incstack = 0
  9118                           ; Regs used in _CalcPwm: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9119                           ;CalcPwm@Led stored from wreg
  9120  0000' 0140               	movlb	0	; select bank0
  9121  0001' 0084'              	movwf	CalcPwm@Led
  9122  0002'                    l2576:
  9123                           
  9124                           ;executer.c: 311:     LedBit[Led].PWM((uint16_t)LedBit[Led].Led * 4);
  9125  0002' 300B               	movlw	11
  9126  0003' 0080'              	movwf	??_CalcPwm
  9127  0004' 0800'              	movf	??_CalcPwm,w
  9128  0005' 0082'              	movwf	___bmul@multiplicand
  9129  0006' 0804'              	movf	CalcPwm@Led,w
  9130  0007' 3180' 2000' 3180'  	fcall	___bmul
  9131  000A' 3E00'              	addlw	(low ((_LedBit| 0+1)))& (0+255)
  9132  000B' 0086               	movwf	6
  9133  000C' 0187               	clrf	7
  9134  000D' 0801               	movf	1,w
  9135  000E' 0140               	movlb	0	; select bank0
  9136  000F' 0081'              	movwf	??_CalcPwm+1
  9137  0010' 0182'              	clrf	??_CalcPwm+2
  9138  0011' 3581'              	lslf	??_CalcPwm+1,f
  9139  0012' 0D82'              	rlf	??_CalcPwm+2,f
  9140  0013' 3581'              	lslf	??_CalcPwm+1,f
  9141  0014' 0D82'              	rlf	??_CalcPwm+2,f
  9142  0015' 0801'              	movf	??_CalcPwm+1,w
  9143  0016' 0086'              	movwf	PWM1_LoadDutyValue@dutyValue
  9144  0017' 0802'              	movf	??_CalcPwm+2,w
  9145  0018' 0087'              	movwf	PWM1_LoadDutyValue@dutyValue+1
  9146  0019' 300B               	movlw	11
  9147  001A' 0083'              	movwf	??_CalcPwm+3
  9148  001B' 0803'              	movf	??_CalcPwm+3,w
  9149  001C' 0082'              	movwf	___bmul@multiplicand
  9150  001D' 0804'              	movf	CalcPwm@Led,w
  9151  001E' 3180' 2000' 3180'  	fcall	___bmul
  9152  0021' 3E00'              	addlw	(low ((_LedBit| 0+9)))& (0+255)
  9153  0022' 0086               	movwf	6
  9154  0023' 0187               	clrf	7
  9155  0024' 3F41               	moviw [1]fsr1
  9156  0025' 008A               	movwf	10
  9157  0026' 3F40               	moviw [0]fsr1
  9158  0027' 000A               	callw
  9159  0028' 3180'              	pagesel	$
  9160  0029'                    l684:
  9161  0029' 0008               	return
  9162  002A'                    __end_of_CalcPwm:
  9163                           
  9164                           	psect	text31
  9165  0000'                    __ptext31:	
  9166 ;; *************** function ___bmul *****************
  9167 ;; Defined at:
  9168 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul8.c"
  9169 ;; Parameters:    Size  Location     Type
  9170 ;;  multiplier      1    wreg     unsigned char 
  9171 ;;  multiplicand    1    2[COMMON] unsigned char 
  9172 ;; Auto vars:     Size  Location     Type
  9173 ;;  multiplier      1    5[COMMON] unsigned char 
  9174 ;;  product         1    4[COMMON] unsigned char 
  9175 ;; Return value:  Size  Location     Type
  9176 ;;                  1    wreg      unsigned char 
  9177 ;; Registers used:
  9178 ;;		wreg, status,2, status,0
  9179 ;; Tracked objects:
  9180 ;;		On entry : 0/0
  9181 ;;		On exit  : 0/0
  9182 ;;		Unchanged: 0/0
  9183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9184 ;;      Params:         1       0       0       0
  9185 ;;      Locals:         2       0       0       0
  9186 ;;      Temps:          1       0       0       0
  9187 ;;      Totals:         4       0       0       0
  9188 ;;Total ram usage:        4 bytes
  9189 ;; Hardware stack levels used:    1
  9190 ;; Hardware stack levels required when called:    6
  9191 ;; This function calls:
  9192 ;;		Nothing
  9193 ;; This function is called by:
  9194 ;;		_EXECUTExEFFECT
  9195 ;;		_LedOff
  9196 ;;		_LedNom
  9197 ;;		_LedBrake
  9198 ;;		_LedSlFl
  9199 ;;		_LedFlash
  9200 ;;		_CalcPwm
  9201 ;;		_LedMax
  9202 ;; This function uses a non-reentrant model
  9203 ;;
  9204                           
  9205                           
  9206                           ;psect for function ___bmul
  9207  0000'                    ___bmul:
  9208                           
  9209                           ;incstack = 0
  9210                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9211                           ;___bmul@multiplier stored from wreg
  9212  0000' 0085'              	movwf	___bmul@multiplier
  9213  0001'                    l2556:
  9214  0001' 0184'              	clrf	___bmul@product
  9215  0002'                    l2558:
  9216  0002' 1C05'              	btfss	___bmul@multiplier,0
  9217  0003' 2805'              	goto	u1151
  9218  0004' 2806'              	goto	u1150
  9219  0005'                    u1151:
  9220  0005' 280A'              	goto	l2562
  9221  0006'                    u1150:
  9222  0006'                    l2560:
  9223  0006' 0802'              	movf	___bmul@multiplicand,w
  9224  0007' 0083'              	movwf	??___bmul
  9225  0008' 0803'              	movf	??___bmul,w
  9226  0009' 0784'              	addwf	___bmul@product,f
  9227  000A'                    l2562:
  9228  000A' 1003               	clrc
  9229  000B' 0D82'              	rlf	___bmul@multiplicand,f
  9230  000C'                    l2564:
  9231  000C' 1003               	clrc
  9232  000D' 0C85'              	rrf	___bmul@multiplier,f
  9233  000E' 0805'              	movf	___bmul@multiplier,w
  9234  000F' 1D03               	btfss	3,2
  9235  0010' 2812'              	goto	u1161
  9236  0011' 2813'              	goto	u1160
  9237  0012'                    u1161:
  9238  0012' 2802'              	goto	l2558
  9239  0013'                    u1160:
  9240  0013'                    l2566:
  9241  0013' 0804'              	movf	___bmul@product,w
  9242  0014'                    l778:
  9243  0014' 0008               	return
  9244  0015'                    __end_of___bmul:
  9245                           
  9246                           	psect	text32
  9247  0000'                    __ptext32:	
  9248 ;; *************** function _PWM1_LoadDutyValue *****************
  9249 ;; Defined at:
  9250 ;;		line 80 in file "mcc_generated_files/pwm1.c"
  9251 ;; Parameters:    Size  Location     Type
  9252 ;;  dutyValue       2    6[COMMON] unsigned short 
  9253 ;; Auto vars:     Size  Location     Type
  9254 ;;		None
  9255 ;; Return value:  Size  Location     Type
  9256 ;;                  1    wreg      void 
  9257 ;; Registers used:
  9258 ;;		wreg, status,2
  9259 ;; Tracked objects:
  9260 ;;		On entry : 0/0
  9261 ;;		On exit  : 0/0
  9262 ;;		Unchanged: 0/0
  9263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9264 ;;      Params:         2       0       0       0
  9265 ;;      Locals:         0       0       0       0
  9266 ;;      Temps:          0       0       0       0
  9267 ;;      Totals:         2       0       0       0
  9268 ;;Total ram usage:        2 bytes
  9269 ;; Hardware stack levels used:    1
  9270 ;; Hardware stack levels required when called:    6
  9271 ;; This function calls:
  9272 ;;		Nothing
  9273 ;; This function is called by:
  9274 ;;		_CalcPwm
  9275 ;; This function uses a non-reentrant model
  9276 ;;
  9277                           
  9278                           
  9279                           ;psect for function _PWM1_LoadDutyValue
  9280  0000'                    _PWM1_LoadDutyValue:
  9281  0000'                    l2542:	
  9282                           ;incstack = 0
  9283                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2]
  9284                           
  9285                           
  9286                           ;mcc_generated_files/pwm1.c: 80: void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm1.c: 81: {;mcc_generated_files/pwm1.c: 82:     dutyValue &= 0x03FF;
  9287  0000' 30FF               	movlw	255
  9288  0001' 0586'              	andwf	PWM1_LoadDutyValue@dutyValue,f
  9289  0002' 3003               	movlw	3
  9290  0003' 0587'              	andwf	PWM1_LoadDutyValue@dutyValue+1,f
  9291  0004'                    l2544:
  9292                           
  9293                           ;mcc_generated_files/pwm1.c: 85:     if(CCP1CONbits.CCP1FMT)
  9294  0004' 0146               	movlb	6	; select bank6
  9295  0005' 1E0E               	btfss	14,4	;volatile
  9296  0006' 2808'              	goto	u1131
  9297  0007' 2809'              	goto	u1130
  9298  0008'                    u1131:
  9299  0008' 280E'              	goto	l2548
  9300  0009'                    u1130:
  9301  0009'                    l2546:
  9302                           
  9303                           ;mcc_generated_files/pwm1.c: 86:     {;mcc_generated_files/pwm1.c: 87:         dutyValue
      +                           <<= 6;
  9304  0009' 3006               	movlw	6
  9305  000A'                    u1145:
  9306  000A' 3586'              	lslf	PWM1_LoadDutyValue@dutyValue,f
  9307  000B' 0D87'              	rlf	PWM1_LoadDutyValue@dutyValue+1,f
  9308  000C' 0B89               	decfsz	9,f
  9309  000D' 280A'              	goto	u1145
  9310  000E'                    l2548:
  9311                           
  9312                           ;mcc_generated_files/pwm1.c: 88:         CCPR1H = dutyValue >> 8;
  9313  000E' 0807'              	movf	PWM1_LoadDutyValue@dutyValue+1,w
  9314  000F' 008D               	movwf	13	;volatile
  9315  0010'                    l2550:
  9316                           
  9317                           ;mcc_generated_files/pwm1.c: 89:         CCPR1L = dutyValue;
  9318  0010' 0806'              	movf	PWM1_LoadDutyValue@dutyValue,w
  9319  0011' 008C               	movwf	12	;volatile
  9320  0012'                    l341:	
  9321                           ;mcc_generated_files/pwm1.c: 90:     }
  9322                           
  9323  0012' 0008               	return
  9324  0013'                    __end_of_PWM1_LoadDutyValue:
  9325                           
  9326                           	psect	text33
  9327  0000'                    __ptext33:	
  9328 ;; *************** function _PWM2_LoadDutyValue *****************
  9329 ;; Defined at:
  9330 ;;		line 80 in file "mcc_generated_files/pwm2.c"
  9331 ;; Parameters:    Size  Location     Type
  9332 ;;  dutyValue       2    6[COMMON] unsigned short 
  9333 ;; Auto vars:     Size  Location     Type
  9334 ;;		None
  9335 ;; Return value:  Size  Location     Type
  9336 ;;                  1    wreg      void 
  9337 ;; Registers used:
  9338 ;;		wreg, status,2
  9339 ;; Tracked objects:
  9340 ;;		On entry : 0/0
  9341 ;;		On exit  : 0/0
  9342 ;;		Unchanged: 0/0
  9343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9344 ;;      Params:         2       0       0       0
  9345 ;;      Locals:         0       0       0       0
  9346 ;;      Temps:          0       0       0       0
  9347 ;;      Totals:         2       0       0       0
  9348 ;;Total ram usage:        2 bytes
  9349 ;; Hardware stack levels used:    1
  9350 ;; Hardware stack levels required when called:    6
  9351 ;; This function calls:
  9352 ;;		Nothing
  9353 ;; This function is called by:
  9354 ;;		_CalcPwm
  9355 ;; This function uses a non-reentrant model
  9356 ;;
  9357                           
  9358                           
  9359                           ;psect for function _PWM2_LoadDutyValue
  9360  0000'                    _PWM2_LoadDutyValue:
  9361  0000'                    l2528:	
  9362                           ;incstack = 0
  9363                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2]
  9364                           
  9365                           
  9366                           ;mcc_generated_files/pwm2.c: 80: void PWM2_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm2.c: 81: {;mcc_generated_files/pwm2.c: 82:     dutyValue &= 0x03FF;
  9367  0000' 30FF               	movlw	255
  9368  0001' 0586'              	andwf	PWM2_LoadDutyValue@dutyValue,f
  9369  0002' 3003               	movlw	3
  9370  0003' 0587'              	andwf	PWM2_LoadDutyValue@dutyValue+1,f
  9371  0004'                    l2530:
  9372                           
  9373                           ;mcc_generated_files/pwm2.c: 85:     if(CCP2CONbits.CCP2FMT)
  9374  0004' 0146               	movlb	6	; select bank6
  9375  0005' 1E12               	btfss	18,4	;volatile
  9376  0006' 2808'              	goto	u1111
  9377  0007' 2809'              	goto	u1110
  9378  0008'                    u1111:
  9379  0008' 280E'              	goto	l2534
  9380  0009'                    u1110:
  9381  0009'                    l2532:
  9382                           
  9383                           ;mcc_generated_files/pwm2.c: 86:     {;mcc_generated_files/pwm2.c: 87:         dutyValue
      +                           <<= 6;
  9384  0009' 3006               	movlw	6
  9385  000A'                    u1125:
  9386  000A' 3586'              	lslf	PWM2_LoadDutyValue@dutyValue,f
  9387  000B' 0D87'              	rlf	PWM2_LoadDutyValue@dutyValue+1,f
  9388  000C' 0B89               	decfsz	9,f
  9389  000D' 280A'              	goto	u1125
  9390  000E'                    l2534:
  9391                           
  9392                           ;mcc_generated_files/pwm2.c: 88:         CCPR2H = dutyValue >> 8;
  9393  000E' 0807'              	movf	PWM2_LoadDutyValue@dutyValue+1,w
  9394  000F' 0091               	movwf	17	;volatile
  9395  0010'                    l2536:
  9396                           
  9397                           ;mcc_generated_files/pwm2.c: 89:         CCPR2L = dutyValue;
  9398  0010' 0806'              	movf	PWM2_LoadDutyValue@dutyValue,w
  9399  0011' 0090               	movwf	16	;volatile
  9400  0012'                    l322:	
  9401                           ;mcc_generated_files/pwm2.c: 90:     }
  9402                           
  9403  0012' 0008               	return
  9404  0013'                    __end_of_PWM2_LoadDutyValue:
  9405                           
  9406                           	psect	text34
  9407  0000'                    __ptext34:	
  9408 ;; *************** function _PWM5_LoadDutyValue *****************
  9409 ;; Defined at:
  9410 ;;		line 72 in file "mcc_generated_files/pwm5.c"
  9411 ;; Parameters:    Size  Location     Type
  9412 ;;  dutyValue       2    6[COMMON] unsigned short 
  9413 ;; Auto vars:     Size  Location     Type
  9414 ;;		None
  9415 ;; Return value:  Size  Location     Type
  9416 ;;                  1    wreg      void 
  9417 ;; Registers used:
  9418 ;;		wreg, status,2, status,0
  9419 ;; Tracked objects:
  9420 ;;		On entry : 0/0
  9421 ;;		On exit  : 0/0
  9422 ;;		Unchanged: 0/0
  9423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9424 ;;      Params:         2       0       0       0
  9425 ;;      Locals:         0       0       0       0
  9426 ;;      Temps:          2       0       0       0
  9427 ;;      Totals:         4       0       0       0
  9428 ;;Total ram usage:        4 bytes
  9429 ;; Hardware stack levels used:    1
  9430 ;; Hardware stack levels required when called:    6
  9431 ;; This function calls:
  9432 ;;		Nothing
  9433 ;; This function is called by:
  9434 ;;		_CalcPwm
  9435 ;; This function uses a non-reentrant model
  9436 ;;
  9437                           
  9438                           
  9439                           ;psect for function _PWM5_LoadDutyValue
  9440  0000'                    _PWM5_LoadDutyValue:
  9441  0000'                    l2526:	
  9442                           ;incstack = 0
  9443                           ; Regs used in _PWM5_LoadDutyValue: [wreg+status,2+status,0]
  9444                           
  9445                           
  9446                           ;mcc_generated_files/pwm5.c: 72:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 73:  {;mcc_generated_files/pwm5.c: 75:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9447  0000' 0807'              	movf	PWM5_LoadDutyValue@dutyValue+1,w
  9448  0001' 0089'              	movwf	??_PWM5_LoadDutyValue+1
  9449  0002' 0806'              	movf	PWM5_LoadDutyValue@dutyValue,w
  9450  0003' 0088'              	movwf	??_PWM5_LoadDutyValue
  9451  0004' 3689'              	lsrf	??_PWM5_LoadDutyValue+1,f
  9452  0005' 0C88'              	rrf	??_PWM5_LoadDutyValue,f
  9453  0006' 3689'              	lsrf	??_PWM5_LoadDutyValue+1,f
  9454  0007' 0C88'              	rrf	??_PWM5_LoadDutyValue,f
  9455  0008' 0808'              	movf	??_PWM5_LoadDutyValue,w
  9456  0009' 0146               	movlb	6	; select bank6
  9457  000A' 009D               	movwf	29	;volatile
  9458                           
  9459                           ;mcc_generated_files/pwm5.c: 78:      PWM5DCL = (dutyValue & 0x0003)<<6;
  9460  000B' 0806'              	movf	PWM5_LoadDutyValue@dutyValue,w
  9461  000C' 3903               	andlw	3
  9462  000D' 0088'              	movwf	??_PWM5_LoadDutyValue
  9463  000E' 3005               	movlw	5
  9464  000F'                    u1105:
  9465  000F' 3588'              	lslf	??_PWM5_LoadDutyValue,f
  9466  0010' 3EFF               	addlw	-1
  9467  0011' 1D03               	skipz
  9468  0012' 280F'              	goto	u1105
  9469  0013' 3508'              	lslf	??_PWM5_LoadDutyValue,w
  9470  0014' 009C               	movwf	28	;volatile
  9471  0015'                    l155:
  9472  0015' 0008               	return
  9473  0016'                    __end_of_PWM5_LoadDutyValue:
  9474                           
  9475                           	psect	text35
  9476  0000'                    __ptext35:	
  9477 ;; *************** function _PWM3_LoadDutyValue *****************
  9478 ;; Defined at:
  9479 ;;		line 72 in file "mcc_generated_files/pwm3.c"
  9480 ;; Parameters:    Size  Location     Type
  9481 ;;  dutyValue       2    6[COMMON] unsigned short 
  9482 ;; Auto vars:     Size  Location     Type
  9483 ;;		None
  9484 ;; Return value:  Size  Location     Type
  9485 ;;                  1    wreg      void 
  9486 ;; Registers used:
  9487 ;;		wreg, status,2, status,0
  9488 ;; Tracked objects:
  9489 ;;		On entry : 0/0
  9490 ;;		On exit  : 0/0
  9491 ;;		Unchanged: 0/0
  9492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9493 ;;      Params:         2       0       0       0
  9494 ;;      Locals:         0       0       0       0
  9495 ;;      Temps:          2       0       0       0
  9496 ;;      Totals:         4       0       0       0
  9497 ;;Total ram usage:        4 bytes
  9498 ;; Hardware stack levels used:    1
  9499 ;; Hardware stack levels required when called:    6
  9500 ;; This function calls:
  9501 ;;		Nothing
  9502 ;; This function is called by:
  9503 ;;		_CalcPwm
  9504 ;; This function uses a non-reentrant model
  9505 ;;
  9506                           
  9507                           
  9508                           ;psect for function _PWM3_LoadDutyValue
  9509  0000'                    _PWM3_LoadDutyValue:
  9510  0000'                    l2522:	
  9511                           ;incstack = 0
  9512                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  9513                           
  9514                           
  9515                           ;mcc_generated_files/pwm3.c: 72:  void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm3.c: 73:  {;mcc_generated_files/pwm3.c: 75:      PWM3DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9516  0000' 0807'              	movf	PWM3_LoadDutyValue@dutyValue+1,w
  9517  0001' 0089'              	movwf	??_PWM3_LoadDutyValue+1
  9518  0002' 0806'              	movf	PWM3_LoadDutyValue@dutyValue,w
  9519  0003' 0088'              	movwf	??_PWM3_LoadDutyValue
  9520  0004' 3689'              	lsrf	??_PWM3_LoadDutyValue+1,f
  9521  0005' 0C88'              	rrf	??_PWM3_LoadDutyValue,f
  9522  0006' 3689'              	lsrf	??_PWM3_LoadDutyValue+1,f
  9523  0007' 0C88'              	rrf	??_PWM3_LoadDutyValue,f
  9524  0008' 0808'              	movf	??_PWM3_LoadDutyValue,w
  9525  0009' 0146               	movlb	6	; select bank6
  9526  000A' 0095               	movwf	21	;volatile
  9527                           
  9528                           ;mcc_generated_files/pwm3.c: 78:      PWM3DCL = (dutyValue & 0x0003)<<6;
  9529  000B' 0806'              	movf	PWM3_LoadDutyValue@dutyValue,w
  9530  000C' 3903               	andlw	3
  9531  000D' 0088'              	movwf	??_PWM3_LoadDutyValue
  9532  000E' 3005               	movlw	5
  9533  000F'                    u1085:
  9534  000F' 3588'              	lslf	??_PWM3_LoadDutyValue,f
  9535  0010' 3EFF               	addlw	-1
  9536  0011' 1D03               	skipz
  9537  0012' 280F'              	goto	u1085
  9538  0013' 3508'              	lslf	??_PWM3_LoadDutyValue,w
  9539  0014' 0094               	movwf	20	;volatile
  9540  0015'                    l131:
  9541  0015' 0008               	return
  9542  0016'                    __end_of_PWM3_LoadDutyValue:
  9543                           
  9544                           	psect	text36
  9545  0000'                    __ptext36:	
  9546 ;; *************** function _PWM4_LoadDutyValue *****************
  9547 ;; Defined at:
  9548 ;;		line 72 in file "mcc_generated_files/pwm4.c"
  9549 ;; Parameters:    Size  Location     Type
  9550 ;;  dutyValue       2    6[COMMON] unsigned short 
  9551 ;; Auto vars:     Size  Location     Type
  9552 ;;		None
  9553 ;; Return value:  Size  Location     Type
  9554 ;;                  1    wreg      void 
  9555 ;; Registers used:
  9556 ;;		wreg, status,2, status,0
  9557 ;; Tracked objects:
  9558 ;;		On entry : 0/0
  9559 ;;		On exit  : 0/0
  9560 ;;		Unchanged: 0/0
  9561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9562 ;;      Params:         2       0       0       0
  9563 ;;      Locals:         0       0       0       0
  9564 ;;      Temps:          2       0       0       0
  9565 ;;      Totals:         4       0       0       0
  9566 ;;Total ram usage:        4 bytes
  9567 ;; Hardware stack levels used:    1
  9568 ;; Hardware stack levels required when called:    6
  9569 ;; This function calls:
  9570 ;;		Nothing
  9571 ;; This function is called by:
  9572 ;;		_CalcPwm
  9573 ;; This function uses a non-reentrant model
  9574 ;;
  9575                           
  9576                           
  9577                           ;psect for function _PWM4_LoadDutyValue
  9578  0000'                    _PWM4_LoadDutyValue:
  9579  0000'                    l2520:	
  9580                           ;incstack = 0
  9581                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2+status,0]
  9582                           
  9583                           
  9584                           ;mcc_generated_files/pwm4.c: 72:  void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm4.c: 73:  {;mcc_generated_files/pwm4.c: 75:      PWM4DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9585  0000' 0807'              	movf	PWM4_LoadDutyValue@dutyValue+1,w
  9586  0001' 0089'              	movwf	??_PWM4_LoadDutyValue+1
  9587  0002' 0806'              	movf	PWM4_LoadDutyValue@dutyValue,w
  9588  0003' 0088'              	movwf	??_PWM4_LoadDutyValue
  9589  0004' 3689'              	lsrf	??_PWM4_LoadDutyValue+1,f
  9590  0005' 0C88'              	rrf	??_PWM4_LoadDutyValue,f
  9591  0006' 3689'              	lsrf	??_PWM4_LoadDutyValue+1,f
  9592  0007' 0C88'              	rrf	??_PWM4_LoadDutyValue,f
  9593  0008' 0808'              	movf	??_PWM4_LoadDutyValue,w
  9594  0009' 0146               	movlb	6	; select bank6
  9595  000A' 0099               	movwf	25	;volatile
  9596                           
  9597                           ;mcc_generated_files/pwm4.c: 78:      PWM4DCL = (dutyValue & 0x0003)<<6;
  9598  000B' 0806'              	movf	PWM4_LoadDutyValue@dutyValue,w
  9599  000C' 3903               	andlw	3
  9600  000D' 0088'              	movwf	??_PWM4_LoadDutyValue
  9601  000E' 3005               	movlw	5
  9602  000F'                    u1075:
  9603  000F' 3588'              	lslf	??_PWM4_LoadDutyValue,f
  9604  0010' 3EFF               	addlw	-1
  9605  0011' 1D03               	skipz
  9606  0012' 280F'              	goto	u1075
  9607  0013' 3508'              	lslf	??_PWM4_LoadDutyValue,w
  9608  0014' 0098               	movwf	24	;volatile
  9609  0015'                    l119:
  9610  0015' 0008               	return
  9611  0016'                    __end_of_PWM4_LoadDutyValue:
  9612                           
  9613                           	psect	text37
  9614  0000'                    __ptext37:	
  9615 ;; *************** function _PWM6_LoadDutyValue *****************
  9616 ;; Defined at:
  9617 ;;		line 72 in file "mcc_generated_files/pwm6.c"
  9618 ;; Parameters:    Size  Location     Type
  9619 ;;  dutyValue       2    6[COMMON] unsigned short 
  9620 ;; Auto vars:     Size  Location     Type
  9621 ;;		None
  9622 ;; Return value:  Size  Location     Type
  9623 ;;                  1    wreg      void 
  9624 ;; Registers used:
  9625 ;;		wreg, status,2, status,0
  9626 ;; Tracked objects:
  9627 ;;		On entry : 0/0
  9628 ;;		On exit  : 0/0
  9629 ;;		Unchanged: 0/0
  9630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9631 ;;      Params:         2       0       0       0
  9632 ;;      Locals:         0       0       0       0
  9633 ;;      Temps:          2       0       0       0
  9634 ;;      Totals:         4       0       0       0
  9635 ;;Total ram usage:        4 bytes
  9636 ;; Hardware stack levels used:    1
  9637 ;; Hardware stack levels required when called:    6
  9638 ;; This function calls:
  9639 ;;		Nothing
  9640 ;; This function is called by:
  9641 ;;		_CalcPwm
  9642 ;; This function uses a non-reentrant model
  9643 ;;
  9644                           
  9645                           
  9646                           ;psect for function _PWM6_LoadDutyValue
  9647  0000'                    _PWM6_LoadDutyValue:
  9648  0000'                    l2524:	
  9649                           ;incstack = 0
  9650                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
  9651                           
  9652                           
  9653                           ;mcc_generated_files/pwm6.c: 72:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 73:  {;mcc_generated_files/pwm6.c: 75:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9654  0000' 0807'              	movf	PWM6_LoadDutyValue@dutyValue+1,w
  9655  0001' 0089'              	movwf	??_PWM6_LoadDutyValue+1
  9656  0002' 0806'              	movf	PWM6_LoadDutyValue@dutyValue,w
  9657  0003' 0088'              	movwf	??_PWM6_LoadDutyValue
  9658  0004' 3689'              	lsrf	??_PWM6_LoadDutyValue+1,f
  9659  0005' 0C88'              	rrf	??_PWM6_LoadDutyValue,f
  9660  0006' 3689'              	lsrf	??_PWM6_LoadDutyValue+1,f
  9661  0007' 0C88'              	rrf	??_PWM6_LoadDutyValue,f
  9662  0008' 0808'              	movf	??_PWM6_LoadDutyValue,w
  9663  0009' 0147               	movlb	7	; select bank7
  9664  000A' 008D               	movwf	13	;volatile
  9665                           
  9666                           ;mcc_generated_files/pwm6.c: 78:      PWM6DCL = (dutyValue & 0x0003)<<6;
  9667  000B' 0806'              	movf	PWM6_LoadDutyValue@dutyValue,w
  9668  000C' 3903               	andlw	3
  9669  000D' 0088'              	movwf	??_PWM6_LoadDutyValue
  9670  000E' 3005               	movlw	5
  9671  000F'                    u1095:
  9672  000F' 3588'              	lslf	??_PWM6_LoadDutyValue,f
  9673  0010' 3EFF               	addlw	-1
  9674  0011' 1D03               	skipz
  9675  0012' 280F'              	goto	u1095
  9676  0013' 3508'              	lslf	??_PWM6_LoadDutyValue,w
  9677  0014' 008C               	movwf	12	;volatile
  9678  0015'                    l143:
  9679  0015' 0008               	return
  9680  0016'                    __end_of_PWM6_LoadDutyValue:
  9681                           
  9682                           	psect	text38
  9683  0000'                    __ptext38:	
  9684 ;; *************** function _BATTxPROTECT *****************
  9685 ;; Defined at:
  9686 ;;		line 47 in file "executer.c"
  9687 ;; Parameters:    Size  Location     Type
  9688 ;;		None
  9689 ;; Auto vars:     Size  Location     Type
  9690 ;;		None
  9691 ;; Return value:  Size  Location     Type
  9692 ;;                  1    wreg      void 
  9693 ;; Registers used:
  9694 ;;		wreg
  9695 ;; Tracked objects:
  9696 ;;		On entry : 0/0
  9697 ;;		On exit  : 0/0
  9698 ;;		Unchanged: 0/0
  9699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9700 ;;      Params:         0       0       0       0
  9701 ;;      Locals:         0       0       0       0
  9702 ;;      Temps:          1       0       0       0
  9703 ;;      Totals:         1       0       0       0
  9704 ;;Total ram usage:        1 bytes
  9705 ;; Hardware stack levels used:    1
  9706 ;; Hardware stack levels required when called:    6
  9707 ;; This function calls:
  9708 ;;		Nothing
  9709 ;; This function is called by:
  9710 ;;		_main
  9711 ;; This function uses a non-reentrant model
  9712 ;;
  9713                           
  9714                           
  9715                           ;psect for function _BATTxPROTECT
  9716  0000'                    _BATTxPROTECT:
  9717  0000'                    l621:	
  9718                           ;incstack = 0
  9719                           ; Regs used in _BATTxPROTECT: [wreg]
  9720                           ;executer.c: 49:     do { LATAbits.LATA2 = 0; } while(0);
  9721                           
  9722  0000' 0140               	movlb	0	; select bank0
  9723  0001' 1118               	bcf	24,2	;volatile
  9724  0002'                    l623:	
  9725                           ;executer.c: 51:     do { TRISAbits.TRISA0 = 1; } while(0);
  9726                           
  9727  0002' 1412               	bsf	18,0	;volatile
  9728  0003'                    l2752:
  9729                           
  9730                           ;executer.c: 53:     LedBit[LedBackLeft].Prog = LedOff;
  9731  0003' 3000'              	movlw	low _LedOff
  9732  0004' 0141               	movlb	1	; select bank1
  9733  0005' 0080'              	movwf	(low ((_LedBit| 0+24)))^(0+128)
  9734  0006' 3000'              	movlw	high _LedOff
  9735  0007' 0081'              	movwf	((low ((_LedBit| 0+24)))^(0+128)+1)
  9736                           
  9737                           ;executer.c: 57:     LedBit[LedBackRight].Prog = LedOff;
  9738  0008' 3000'              	movlw	low _LedOff
  9739  0009' 0080'              	movwf	(low ((_LedBit| 0+35)))^(0+128)
  9740  000A' 3000'              	movlw	high _LedOff
  9741  000B' 0081'              	movwf	((low ((_LedBit| 0+35)))^(0+128)+1)
  9742                           
  9743                           ;executer.c: 61:     LedBit[LedFlashLeft].Prog = LedFlash;
  9744  000C' 3000'              	movlw	low _LedFlash
  9745  000D' 0080'              	movwf	(low ((_LedBit| 0+2)))^(0+128)
  9746  000E' 3000'              	movlw	high _LedFlash
  9747  000F' 0081'              	movwf	((low ((_LedBit| 0+2)))^(0+128)+1)
  9748                           
  9749                           ;executer.c: 62:     LedBit[LedFlashLeft].Led = MAX;
  9750  0010' 30FE               	movlw	254
  9751  0011' 0082'              	movwf	??_BATTxPROTECT
  9752  0012' 0802'              	movf	??_BATTxPROTECT,w
  9753  0013' 0081'              	movwf	(_LedBit^(0+128)+1)
  9754                           
  9755                           ;executer.c: 63:     LedBit[LedFlashLeft].Speed = 10;
  9756  0014' 300A               	movlw	10
  9757  0015' 0082'              	movwf	??_BATTxPROTECT
  9758  0016' 0802'              	movf	??_BATTxPROTECT,w
  9759  0017' 0084'              	movwf	(_LedBit^(0+128)+4)
  9760                           
  9761                           ;executer.c: 65:     LedBit[LedFlashRight].Prog = LedOff;
  9762  0018' 3000'              	movlw	low _LedOff
  9763  0019' 0080'              	movwf	(low ((_LedBit| 0+13)))^(0+128)
  9764  001A' 3000'              	movlw	high _LedOff
  9765  001B' 0081'              	movwf	((low ((_LedBit| 0+13)))^(0+128)+1)
  9766                           
  9767                           ;executer.c: 69:     LedBit[LedFrontLeft].Prog = LedOff;
  9768  001C' 3000'              	movlw	low _LedOff
  9769  001D' 0080'              	movwf	(low ((_LedBit| 0+46)))^(0+128)
  9770  001E' 3000'              	movlw	high _LedOff
  9771  001F' 0081'              	movwf	((low ((_LedBit| 0+46)))^(0+128)+1)
  9772                           
  9773                           ;executer.c: 73:     LedBit[LedFrontRight].Prog = LedOff;
  9774  0020' 3000'              	movlw	low _LedOff
  9775  0021' 0080'              	movwf	(low ((_LedBit| 0+57)))^(0+128)
  9776  0022' 3000'              	movlw	high _LedOff
  9777  0023' 0081'              	movwf	((low ((_LedBit| 0+57)))^(0+128)+1)
  9778  0024'                    l625:
  9779  0024' 0008               	return
  9780  0025'                    __end_of_BATTxPROTECT:
  9781                           
  9782                           	psect	text39
  9783  0000'                    __ptext39:	
  9784 ;; *************** function _ADC_StartConversion *****************
  9785 ;; Defined at:
  9786 ;;		line 96 in file "mcc_generated_files/adc.c"
  9787 ;; Parameters:    Size  Location     Type
  9788 ;;		None
  9789 ;; Auto vars:     Size  Location     Type
  9790 ;;		None
  9791 ;; Return value:  Size  Location     Type
  9792 ;;                  1    wreg      void 
  9793 ;; Registers used:
  9794 ;;		None
  9795 ;; Tracked objects:
  9796 ;;		On entry : 0/0
  9797 ;;		On exit  : 0/0
  9798 ;;		Unchanged: 0/0
  9799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9800 ;;      Params:         0       0       0       0
  9801 ;;      Locals:         0       0       0       0
  9802 ;;      Temps:          0       0       0       0
  9803 ;;      Totals:         0       0       0       0
  9804 ;;Total ram usage:        0 bytes
  9805 ;; Hardware stack levels used:    1
  9806 ;; Hardware stack levels required when called:    6
  9807 ;; This function calls:
  9808 ;;		Nothing
  9809 ;; This function is called by:
  9810 ;;		_main
  9811 ;; This function uses a non-reentrant model
  9812 ;;
  9813                           
  9814                           
  9815                           ;psect for function _ADC_StartConversion
  9816  0000'                    _ADC_StartConversion:
  9817  0000'                    l2302:	
  9818                           ;incstack = 0
  9819                           ; Regs used in _ADC_StartConversion: []
  9820                           
  9821                           
  9822                           ;mcc_generated_files/adc.c: 99:     ADCON0bits.GOnDONE = 1;
  9823  0000' 0141               	movlb	1	; select bank1
  9824  0001' 149D               	bsf	29,1	;volatile
  9825  0002'                    l92:
  9826  0002' 0008               	return
  9827  0003'                    __end_of_ADC_StartConversion:
  9828                           
  9829                           	psect	text40
  9830  0000'                    __ptext40:	
  9831 ;; *************** function _ADC_SelectChannel *****************
  9832 ;; Defined at:
  9833 ;;		line 88 in file "mcc_generated_files/adc.c"
  9834 ;; Parameters:    Size  Location     Type
  9835 ;;  channel         1    wreg     enum E6234
  9836 ;; Auto vars:     Size  Location     Type
  9837 ;;  channel         1    3[COMMON] enum E6234
  9838 ;; Return value:  Size  Location     Type
  9839 ;;                  1    wreg      void 
  9840 ;; Registers used:
  9841 ;;		wreg, status,2, status,0
  9842 ;; Tracked objects:
  9843 ;;		On entry : 0/0
  9844 ;;		On exit  : 0/0
  9845 ;;		Unchanged: 0/0
  9846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9847 ;;      Params:         0       0       0       0
  9848 ;;      Locals:         1       0       0       0
  9849 ;;      Temps:          1       0       0       0
  9850 ;;      Totals:         2       0       0       0
  9851 ;;Total ram usage:        2 bytes
  9852 ;; Hardware stack levels used:    1
  9853 ;; Hardware stack levels required when called:    6
  9854 ;; This function calls:
  9855 ;;		Nothing
  9856 ;; This function is called by:
  9857 ;;		_main
  9858 ;; This function uses a non-reentrant model
  9859 ;;
  9860                           
  9861                           
  9862                           ;psect for function _ADC_SelectChannel
  9863  0000'                    _ADC_SelectChannel:
  9864                           
  9865                           ;incstack = 0
  9866                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
  9867                           ;ADC_SelectChannel@channel stored from wreg
  9868  0000' 0083'              	movwf	ADC_SelectChannel@channel
  9869  0001'                    l2298:
  9870                           
  9871                           ;mcc_generated_files/adc.c: 88: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 89: {;mcc_generated_files/adc.c: 91:     ADCON0bits.CHS = channel;
  9872  0001' 0803'              	movf	ADC_SelectChannel@channel,w
  9873  0002' 0082'              	movwf	??_ADC_SelectChannel
  9874  0003' 0D82'              	rlf	??_ADC_SelectChannel,f
  9875  0004' 0D82'              	rlf	??_ADC_SelectChannel,f
  9876  0005' 0141               	movlb	1	; select bank1
  9877  0006' 081D               	movf	29,w	;volatile
  9878  0007' 0602'              	xorwf	??_ADC_SelectChannel,w
  9879  0008' 3903               	andlw	-253
  9880  0009' 0602'              	xorwf	??_ADC_SelectChannel,w
  9881  000A' 009D               	movwf	29	;volatile
  9882  000B'                    l2300:
  9883                           
  9884                           ;mcc_generated_files/adc.c: 93:     ADCON0bits.ADON = 1;
  9885  000B' 141D               	bsf	29,0	;volatile
  9886  000C'                    l89:
  9887  000C' 0008               	return
  9888  000D'                    __end_of_ADC_SelectChannel:
  9889                           
  9890                           	psect	text41
  9891  0000'                    __ptext41:	
  9892 ;; *************** function _ADC_IsConversionDone *****************
  9893 ;; Defined at:
  9894 ;;		line 103 in file "mcc_generated_files/adc.c"
  9895 ;; Parameters:    Size  Location     Type
  9896 ;;		None
  9897 ;; Auto vars:     Size  Location     Type
  9898 ;;		None
  9899 ;; Return value:  Size  Location     Type
  9900 ;;                  1    wreg      _Bool 
  9901 ;; Registers used:
  9902 ;;		wreg, status,0
  9903 ;; Tracked objects:
  9904 ;;		On entry : 0/0
  9905 ;;		On exit  : 0/0
  9906 ;;		Unchanged: 0/0
  9907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9908 ;;      Params:         0       0       0       0
  9909 ;;      Locals:         0       0       0       0
  9910 ;;      Temps:          0       0       0       0
  9911 ;;      Totals:         0       0       0       0
  9912 ;;Total ram usage:        0 bytes
  9913 ;; Hardware stack levels used:    1
  9914 ;; Hardware stack levels required when called:    6
  9915 ;; This function calls:
  9916 ;;		Nothing
  9917 ;; This function is called by:
  9918 ;;		_main
  9919 ;; This function uses a non-reentrant model
  9920 ;;
  9921                           
  9922                           
  9923                           ;psect for function _ADC_IsConversionDone
  9924  0000'                    _ADC_IsConversionDone:
  9925  0000'                    l2304:	
  9926                           ;incstack = 0
  9927                           ; Regs used in _ADC_IsConversionDone: [wreg+status,0]
  9928                           
  9929                           
  9930                           ;mcc_generated_files/adc.c: 106:    return ((_Bool)(!ADCON0bits.GOnDONE));
  9931  0000' 1003               	clrc
  9932  0001' 0141               	movlb	1	; select bank1
  9933  0002' 1C9D               	btfss	29,1	;volatile
  9934  0003' 1403               	setc
  9935  0004' 3000               	movlw	0
  9936  0005' 3D09               	addwfc	9,w
  9937  0006'                    l95:
  9938  0006' 0008               	return
  9939  0007'                    __end_of_ADC_IsConversionDone:
  9940                           
  9941                           	psect	text42
  9942  0000'                    __ptext42:	
  9943 ;; *************** function _ADC_GetConversionResult *****************
  9944 ;; Defined at:
  9945 ;;		line 109 in file "mcc_generated_files/adc.c"
  9946 ;; Parameters:    Size  Location     Type
  9947 ;;		None
  9948 ;; Auto vars:     Size  Location     Type
  9949 ;;		None
  9950 ;; Return value:  Size  Location     Type
  9951 ;;                  2    2[COMMON] unsigned short 
  9952 ;; Registers used:
  9953 ;;		wreg
  9954 ;; Tracked objects:
  9955 ;;		On entry : 0/0
  9956 ;;		On exit  : 0/0
  9957 ;;		Unchanged: 0/0
  9958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9959 ;;      Params:         2       0       0       0
  9960 ;;      Locals:         0       0       0       0
  9961 ;;      Temps:          0       0       0       0
  9962 ;;      Totals:         2       0       0       0
  9963 ;;Total ram usage:        2 bytes
  9964 ;; Hardware stack levels used:    1
  9965 ;; Hardware stack levels required when called:    6
  9966 ;; This function calls:
  9967 ;;		Nothing
  9968 ;; This function is called by:
  9969 ;;		_main
  9970 ;; This function uses a non-reentrant model
  9971 ;;
  9972                           
  9973                           
  9974                           ;psect for function _ADC_GetConversionResult
  9975  0000'                    _ADC_GetConversionResult:
  9976  0000'                    l2308:	
  9977                           ;incstack = 0
  9978                           ; Regs used in _ADC_GetConversionResult: [wreg]
  9979                           
  9980                           
  9981                           ;mcc_generated_files/adc.c: 112:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  9982  0000' 0141               	movlb	1	; select bank1
  9983  0001' 081C               	movf	28,w	;volatile
  9984  0002' 0083'              	movwf	?_ADC_GetConversionResult+1
  9985  0003' 081B               	movf	27,w	;volatile
  9986  0004' 0082'              	movwf	?_ADC_GetConversionResult
  9987  0005'                    l98:
  9988  0005' 0008               	return
  9989  0006'                    __end_of_ADC_GetConversionResult:
  9990                           
  9991                           	psect	intentry
  9992  0000'                    __pintentry:	
  9993 ;; *************** function _INTERRUPT_InterruptManager *****************
  9994 ;; Defined at:
  9995 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9996 ;; Parameters:    Size  Location     Type
  9997 ;;		None
  9998 ;; Auto vars:     Size  Location     Type
  9999 ;;		None
 10000 ;; Return value:  Size  Location     Type
 10001 ;;                  1    wreg      void 
 10002 ;; Registers used:
 10003 ;;		wreg, status,2, status,0, pclath, cstack
 10004 ;; Tracked objects:
 10005 ;;		On entry : 0/0
 10006 ;;		On exit  : 0/0
 10007 ;;		Unchanged: 0/0
 10008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10009 ;;      Params:         0       0       0       0
 10010 ;;      Locals:         0       0       0       0
 10011 ;;      Temps:          0       0       0       0
 10012 ;;      Totals:         0       0       0       0
 10013 ;;Total ram usage:        0 bytes
 10014 ;; Hardware stack levels used:    1
 10015 ;; Hardware stack levels required when called:    5
 10016 ;; This function calls:
 10017 ;;		_PIN_MANAGER_IOC
 10018 ;;		_TMR0_ISR
 10019 ;;		_TMR1_ISR
 10020 ;; This function is called by:
 10021 ;;		Interrupt level 1
 10022 ;; This function uses a non-reentrant model
 10023 ;;
 10024                           
 10025  0000'                    _INTERRUPT_InterruptManager:
 10026                           
 10027                           ;incstack = 0
 10028  0000' 147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 10029                           
 10030                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 10031  0001' 3180'              	pagesel	$
 10032  0002'                    i1l2364:
 10033                           
 10034                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 10035  0002' 014E               	movlb	14	; select bank14
 10036  0003' 1E96               	btfss	22,5	;volatile
 10037  0004' 2806'              	goto	u90_21
 10038  0005' 2807'              	goto	u90_20
 10039  0006'                    u90_21:
 10040  0006' 280F'              	goto	i1l365
 10041  0007'                    u90_20:
 10042  0007'                    i1l2366:
 10043  0007' 1E8C               	btfss	12,5	;volatile
 10044  0008' 280A'              	goto	u91_21
 10045  0009' 280B'              	goto	u91_20
 10046  000A'                    u91_21:
 10047  000A' 280F'              	goto	i1l365
 10048  000B'                    u91_20:
 10049  000B'                    i1l2368:
 10050                           
 10051                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 10052  000B' 3180' 2000' 3180'  	fcall	_TMR0_ISR
 10053                           
 10054                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 10055  000E' 282B'              	goto	i1l373
 10056  000F'                    i1l365:	
 10057                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.IOCIE == 1 && PIR0bit
      +                          s.IOCIF == 1)
 10058                           
 10059  000F' 1E16               	btfss	22,4	;volatile
 10060  0010' 2812'              	goto	u92_21
 10061  0011' 2813'              	goto	u92_20
 10062  0012'                    u92_21:
 10063  0012' 281B'              	goto	i1l367
 10064  0013'                    u92_20:
 10065  0013'                    i1l2370:
 10066  0013' 1E0C               	btfss	12,4	;volatile
 10067  0014' 2816'              	goto	u93_21
 10068  0015' 2817'              	goto	u93_20
 10069  0016'                    u93_21:
 10070  0016' 281B'              	goto	i1l367
 10071  0017'                    u93_20:
 10072  0017'                    i1l2372:
 10073                           
 10074                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         PIN_MANAGER_IOC();
 10075  0017' 3180' 2000' 3180'  	fcall	_PIN_MANAGER_IOC
 10076                           
 10077                           ;mcc_generated_files/interrupt_manager.c: 62:     }
 10078  001A' 282B'              	goto	i1l373
 10079  001B'                    i1l367:	
 10080                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
 10081                           
 10082  001B' 1F0B               	btfss	11,6	;volatile
 10083  001C' 281E'              	goto	u94_21
 10084  001D' 281F'              	goto	u94_20
 10085  001E'                    u94_21:
 10086  001E' 282B'              	goto	i1l368
 10087  001F'                    u94_20:
 10088  001F'                    i1l2374:
 10089                           
 10090                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 10091  001F' 1C1A               	btfss	26,0	;volatile
 10092  0020' 2822'              	goto	u95_21
 10093  0021' 2823'              	goto	u95_20
 10094  0022'                    u95_21:
 10095  0022' 282B'              	goto	i1l368
 10096  0023'                    u95_20:
 10097  0023'                    i1l2376:
 10098  0023' 1C10               	btfss	16,0	;volatile
 10099  0024' 2826'              	goto	u96_21
 10100  0025' 2827'              	goto	u96_20
 10101  0026'                    u96_21:
 10102  0026' 282B'              	goto	i1l368
 10103  0027'                    u96_20:
 10104  0027'                    i1l2378:
 10105                           
 10106                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR1_ISR();
 10107  0027' 3180' 2000' 3180'  	fcall	_TMR1_ISR
 10108                           
 10109                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 10110  002A' 282B'              	goto	i1l373
 10111  002B'                    i1l368:
 10112  002B'                    i1l373:
 10113  002B' 107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10114  002C' 0009               	retfie
 10115  002D'                    __end_of_INTERRUPT_InterruptManager:
 10116                           
 10117                           	psect	text44
 10118  0000'                    __ptext44:	
 10119 ;; *************** function _TMR1_ISR *****************
 10120 ;; Defined at:
 10121 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 10122 ;; Parameters:    Size  Location     Type
 10123 ;;		None
 10124 ;; Auto vars:     Size  Location     Type
 10125 ;;		None
 10126 ;; Return value:  Size  Location     Type
 10127 ;;                  1    wreg      void 
 10128 ;; Registers used:
 10129 ;;		wreg, status,2, status,0, pclath, cstack
 10130 ;; Tracked objects:
 10131 ;;		On entry : 0/0
 10132 ;;		On exit  : 0/0
 10133 ;;		Unchanged: 0/0
 10134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10135 ;;      Params:         0       0       0       0
 10136 ;;      Locals:         0       0       0       0
 10137 ;;      Temps:          0       0       0       0
 10138 ;;      Totals:         0       0       0       0
 10139 ;;Total ram usage:        0 bytes
 10140 ;; Hardware stack levels used:    1
 10141 ;; Hardware stack levels required when called:    1
 10142 ;; This function calls:
 10143 ;;		Absolute function
 10144 ;;		_TMR1_DefaultInterruptHandler
 10145 ;;		_TMR1_INT
 10146 ;;		_TMR1_WriteTimer
 10147 ;; This function is called by:
 10148 ;;		_INTERRUPT_InterruptManager
 10149 ;; This function uses a non-reentrant model
 10150 ;;
 10151                           
 10152                           
 10153                           ;psect for function _TMR1_ISR
 10154  0000'                    _TMR1_ISR:
 10155  0000'                    i1l2328:	
 10156                           ;incstack = 0
 10157                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 10158                           
 10159                           
 10160                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 10161  0000' 014E               	movlb	14	; select bank14
 10162  0001' 1010               	bcf	16,0	;volatile
 10163  0002'                    i1l2330:
 10164                           
 10165                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 10166  0002' 0140               	movlb	0	; select bank0
 10167  0003' 0809'              	movf	_timer1ReloadVal+1,w	;volatile
 10168  0004' 0081'              	movwf	TMR1_WriteTimer@timerVal+1
 10169  0005' 0808'              	movf	_timer1ReloadVal,w	;volatile
 10170  0006' 0080'              	movwf	TMR1_WriteTimer@timerVal
 10171  0007' 3180' 2000' 3180'  	fcall	_TMR1_WriteTimer
 10172  000A'                    i1l2332:
 10173                           
 10174                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 10175  000A' 0140               	movlb	0	; select bank0
 10176  000B' 0806'              	movf	_TMR1_InterruptHandler,w
 10177  000C' 0407'              	iorwf	_TMR1_InterruptHandler+1,w
 10178  000D' 1903               	btfsc	3,2
 10179  000E' 2810'              	goto	u87_21
 10180  000F' 2811'              	goto	u87_20
 10181  0010'                    u87_21:
 10182  0010' 2816'              	goto	i1l481
 10183  0011'                    u87_20:
 10184  0011'                    i1l2334:
 10185                           
 10186                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 10187  0011' 0807'              	movf	_TMR1_InterruptHandler+1,w
 10188  0012' 008A               	movwf	10
 10189  0013' 0806'              	movf	_TMR1_InterruptHandler,w
 10190  0014' 000A               	callw
 10191  0015' 3180'              	pagesel	$
 10192  0016'                    i1l481:
 10193  0016' 0008               	return
 10194  0017'                    __end_of_TMR1_ISR:
 10195                           
 10196                           	psect	text45
 10197  0000'                    __ptext45:	
 10198 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 10199 ;; Defined at:
 10200 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 10201 ;; Parameters:    Size  Location     Type
 10202 ;;		None
 10203 ;; Auto vars:     Size  Location     Type
 10204 ;;		None
 10205 ;; Return value:  Size  Location     Type
 10206 ;;                  1    wreg      void 
 10207 ;; Registers used:
 10208 ;;		None
 10209 ;; Tracked objects:
 10210 ;;		On entry : 0/0
 10211 ;;		On exit  : 0/0
 10212 ;;		Unchanged: 0/0
 10213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10214 ;;      Params:         0       0       0       0
 10215 ;;      Locals:         0       0       0       0
 10216 ;;      Temps:          0       0       0       0
 10217 ;;      Totals:         0       0       0       0
 10218 ;;Total ram usage:        0 bytes
 10219 ;; Hardware stack levels used:    1
 10220 ;; This function calls:
 10221 ;;		Nothing
 10222 ;; This function is called by:
 10223 ;;		_TMR1_Initialize
 10224 ;;		_TMR1_ISR
 10225 ;; This function uses a non-reentrant model
 10226 ;;
 10227                           
 10228                           
 10229                           ;psect for function _TMR1_DefaultInterruptHandler
 10230  0000'                    _TMR1_DefaultInterruptHandler:
 10231  0000'                    i1l487:	
 10232                           ;incstack = 0
 10233                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 10234                           
 10235  0000' 0008               	return
 10236  0001'                    __end_of_TMR1_DefaultInterruptHandler:
 10237                           
 10238                           	psect	text46
 10239  0000'                    __ptext46:	
 10240 ;; *************** function _TMR1_INT *****************
 10241 ;; Defined at:
 10242 ;;		line 170 in file "Main.c"
 10243 ;; Parameters:    Size  Location     Type
 10244 ;;		None
 10245 ;; Auto vars:     Size  Location     Type
 10246 ;;		None
 10247 ;; Return value:  Size  Location     Type
 10248 ;;                  1    wreg      void 
 10249 ;; Registers used:
 10250 ;;		None
 10251 ;; Tracked objects:
 10252 ;;		On entry : 0/0
 10253 ;;		On exit  : 0/0
 10254 ;;		Unchanged: 0/0
 10255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10256 ;;      Params:         0       0       0       0
 10257 ;;      Locals:         0       0       0       0
 10258 ;;      Temps:          0       0       0       0
 10259 ;;      Totals:         0       0       0       0
 10260 ;;Total ram usage:        0 bytes
 10261 ;; Hardware stack levels used:    1
 10262 ;; This function calls:
 10263 ;;		Nothing
 10264 ;; This function is called by:
 10265 ;;		_main
 10266 ;;		_TMR1_ISR
 10267 ;; This function uses a non-reentrant model
 10268 ;;
 10269                           
 10270                           
 10271                           ;psect for function _TMR1_INT
 10272  0000'                    _TMR1_INT:
 10273  0000'                    i1l2188:	
 10274                           ;incstack = 0
 10275                           ; Regs used in _TMR1_INT: []
 10276                           
 10277                           
 10278                           ;Main.c: 172:     UpdateVbatt = 1;
 10279  0000' 0140               	movlb	0	; select bank0
 10280  0001' 0193'              	clrf	_UpdateVbatt
 10281  0002' 0A93'              	incf	_UpdateVbatt,f
 10282  0003'                    i1l570:
 10283  0003' 0008               	return
 10284  0004'                    __end_of_TMR1_INT:
 10285                           
 10286                           	psect	text47
 10287  0000'                    __ptext47:	
 10288 ;; *************** function _TMR0_ISR *****************
 10289 ;; Defined at:
 10290 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 10291 ;; Parameters:    Size  Location     Type
 10292 ;;		None
 10293 ;; Auto vars:     Size  Location     Type
 10294 ;;		None
 10295 ;; Return value:  Size  Location     Type
 10296 ;;                  1    wreg      void 
 10297 ;; Registers used:
 10298 ;;		wreg, status,2, status,0, pclath, cstack
 10299 ;; Tracked objects:
 10300 ;;		On entry : 0/0
 10301 ;;		On exit  : 0/0
 10302 ;;		Unchanged: 0/0
 10303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10304 ;;      Params:         0       0       0       0
 10305 ;;      Locals:         0       0       0       0
 10306 ;;      Temps:          0       0       0       0
 10307 ;;      Totals:         0       0       0       0
 10308 ;;Total ram usage:        0 bytes
 10309 ;; Hardware stack levels used:    1
 10310 ;; Hardware stack levels required when called:    1
 10311 ;; This function calls:
 10312 ;;		Absolute function
 10313 ;;		_TMR0_DefaultInterruptHandler
 10314 ;;		_TMR0_INT
 10315 ;; This function is called by:
 10316 ;;		_INTERRUPT_InterruptManager
 10317 ;; This function uses a non-reentrant model
 10318 ;;
 10319                           
 10320                           
 10321                           ;psect for function _TMR0_ISR
 10322  0000'                    _TMR0_ISR:
 10323  0000'                    i1l2318:	
 10324                           ;incstack = 0
 10325                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 10326                           
 10327                           
 10328                           ;mcc_generated_files/tmr0.c: 137:     PIR0bits.TMR0IF = 0;
 10329  0000' 014E               	movlb	14	; select bank14
 10330  0001' 128C               	bcf	12,5	;volatile
 10331  0002'                    i1l2320:
 10332                           
 10333                           ;mcc_generated_files/tmr0.c: 139:     TMR0H = timer0ReloadVal16bit >> 8;
 10334  0002' 0801'              	movf	_timer0ReloadVal16bit+1,w	;volatile
 10335  0003' 014B               	movlb	11	; select bank11
 10336  0004' 009D               	movwf	29	;volatile
 10337  0005'                    i1l2322:
 10338                           
 10339                           ;mcc_generated_files/tmr0.c: 140:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 10340  0005' 0800'              	movf	_timer0ReloadVal16bit,w	;volatile
 10341  0006' 009C               	movwf	28	;volatile
 10342  0007'                    i1l2324:
 10343                           
 10344                           ;mcc_generated_files/tmr0.c: 142:     if(TMR0_InterruptHandler)
 10345  0007' 0140               	movlb	0	; select bank0
 10346  0008' 080A'              	movf	_TMR0_InterruptHandler,w
 10347  0009' 040B'              	iorwf	_TMR0_InterruptHandler+1,w
 10348  000A' 1903               	btfsc	3,2
 10349  000B' 280D'              	goto	u86_21
 10350  000C' 280E'              	goto	u86_20
 10351  000D'                    u86_21:
 10352  000D' 2813'              	goto	i1l417
 10353  000E'                    u86_20:
 10354  000E'                    i1l2326:
 10355                           
 10356                           ;mcc_generated_files/tmr0.c: 143:     {;mcc_generated_files/tmr0.c: 144:         TMR0_In
      +                          terruptHandler();
 10357  000E' 080B'              	movf	_TMR0_InterruptHandler+1,w
 10358  000F' 008A               	movwf	10
 10359  0010' 080A'              	movf	_TMR0_InterruptHandler,w
 10360  0011' 000A               	callw
 10361  0012' 3180'              	pagesel	$
 10362  0013'                    i1l417:
 10363  0013' 0008               	return
 10364  0014'                    __end_of_TMR0_ISR:
 10365                           
 10366                           	psect	text48
 10367  0000'                    __ptext48:	
 10368 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 10369 ;; Defined at:
 10370 ;;		line 155 in file "mcc_generated_files/tmr0.c"
 10371 ;; Parameters:    Size  Location     Type
 10372 ;;		None
 10373 ;; Auto vars:     Size  Location     Type
 10374 ;;		None
 10375 ;; Return value:  Size  Location     Type
 10376 ;;                  1    wreg      void 
 10377 ;; Registers used:
 10378 ;;		None
 10379 ;; Tracked objects:
 10380 ;;		On entry : 0/0
 10381 ;;		On exit  : 0/0
 10382 ;;		Unchanged: 0/0
 10383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10384 ;;      Params:         0       0       0       0
 10385 ;;      Locals:         0       0       0       0
 10386 ;;      Temps:          0       0       0       0
 10387 ;;      Totals:         0       0       0       0
 10388 ;;Total ram usage:        0 bytes
 10389 ;; Hardware stack levels used:    1
 10390 ;; This function calls:
 10391 ;;		Nothing
 10392 ;; This function is called by:
 10393 ;;		_TMR0_Initialize
 10394 ;;		_TMR0_ISR
 10395 ;; This function uses a non-reentrant model
 10396 ;;
 10397                           
 10398                           
 10399                           ;psect for function _TMR0_DefaultInterruptHandler
 10400  0000'                    _TMR0_DefaultInterruptHandler:
 10401  0000'                    i1l423:	
 10402                           ;incstack = 0
 10403                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 10404                           
 10405  0000' 0008               	return
 10406  0001'                    __end_of_TMR0_DefaultInterruptHandler:
 10407                           
 10408                           	psect	text49
 10409  0000'                    __ptext49:	
 10410 ;; *************** function _TMR0_INT *****************
 10411 ;; Defined at:
 10412 ;;		line 165 in file "Main.c"
 10413 ;; Parameters:    Size  Location     Type
 10414 ;;		None
 10415 ;; Auto vars:     Size  Location     Type
 10416 ;;		None
 10417 ;; Return value:  Size  Location     Type
 10418 ;;                  1    wreg      void 
 10419 ;; Registers used:
 10420 ;;		None
 10421 ;; Tracked objects:
 10422 ;;		On entry : 0/0
 10423 ;;		On exit  : 0/0
 10424 ;;		Unchanged: 0/0
 10425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10426 ;;      Params:         0       0       0       0
 10427 ;;      Locals:         0       0       0       0
 10428 ;;      Temps:          0       0       0       0
 10429 ;;      Totals:         0       0       0       0
 10430 ;;Total ram usage:        0 bytes
 10431 ;; Hardware stack levels used:    1
 10432 ;; This function calls:
 10433 ;;		Nothing
 10434 ;; This function is called by:
 10435 ;;		_main
 10436 ;;		_TMR0_ISR
 10437 ;; This function uses a non-reentrant model
 10438 ;;
 10439                           
 10440                           
 10441                           ;psect for function _TMR0_INT
 10442  0000'                    _TMR0_INT:
 10443  0000'                    i1l2186:	
 10444                           ;incstack = 0
 10445                           ; Regs used in _TMR0_INT: []
 10446                           
 10447                           
 10448                           ;Main.c: 167:     UpdateLeds = 1;
 10449  0000' 0140               	movlb	0	; select bank0
 10450  0001' 0195'              	clrf	_UpdateLeds
 10451  0002' 0A95'              	incf	_UpdateLeds,f
 10452  0003'                    i1l567:
 10453  0003' 0008               	return
 10454  0004'                    __end_of_TMR0_INT:
 10455                           
 10456                           	psect	text50
 10457  0000'                    __ptext50:	
 10458 ;; *************** function _PIN_MANAGER_IOC *****************
 10459 ;; Defined at:
 10460 ;;		line 130 in file "mcc_generated_files/pin_manager.c"
 10461 ;; Parameters:    Size  Location     Type
 10462 ;;		None
 10463 ;; Auto vars:     Size  Location     Type
 10464 ;;		None
 10465 ;; Return value:  Size  Location     Type
 10466 ;;                  1    wreg      void 
 10467 ;; Registers used:
 10468 ;;		wreg, status,2, status,0, pclath, cstack
 10469 ;; Tracked objects:
 10470 ;;		On entry : 0/0
 10471 ;;		On exit  : 0/0
 10472 ;;		Unchanged: 0/0
 10473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10474 ;;      Params:         0       0       0       0
 10475 ;;      Locals:         0       0       0       0
 10476 ;;      Temps:          0       0       0       0
 10477 ;;      Totals:         0       0       0       0
 10478 ;;Total ram usage:        0 bytes
 10479 ;; Hardware stack levels used:    1
 10480 ;; Hardware stack levels required when called:    4
 10481 ;; This function calls:
 10482 ;;		_IOCCF1_ISR
 10483 ;; This function is called by:
 10484 ;;		_INTERRUPT_InterruptManager
 10485 ;; This function uses a non-reentrant model
 10486 ;;
 10487                           
 10488                           
 10489                           ;psect for function _PIN_MANAGER_IOC
 10490  0000'                    _PIN_MANAGER_IOC:
 10491  0000'                    i1l2312:	
 10492                           ;incstack = 0
 10493                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 10494                           
 10495                           
 10496                           ;mcc_generated_files/pin_manager.c: 133:     if(IOCCFbits.IOCCF1 == 1)
 10497  0000' 017E               	movlb	62	; select bank62
 10498  0001' 1CD5               	btfss	85,1	;volatile
 10499  0002' 2804'              	goto	u85_21
 10500  0003' 2805'              	goto	u85_20
 10501  0004'                    u85_21:
 10502  0004' 2808'              	goto	i1l230
 10503  0005'                    u85_20:
 10504  0005'                    i1l2314:
 10505                           
 10506                           ;mcc_generated_files/pin_manager.c: 134:     {;mcc_generated_files/pin_manager.c: 135:  
      +                                 IOCCF1_ISR();
 10507  0005' 3180' 2000' 3180'  	fcall	_IOCCF1_ISR
 10508  0008'                    i1l230:
 10509  0008' 0008               	return
 10510  0009'                    __end_of_PIN_MANAGER_IOC:
 10511                           
 10512                           	psect	text51
 10513  0000'                    __ptext51:	
 10514 ;; *************** function _IOCCF1_ISR *****************
 10515 ;; Defined at:
 10516 ;;		line 142 in file "mcc_generated_files/pin_manager.c"
 10517 ;; Parameters:    Size  Location     Type
 10518 ;;		None
 10519 ;; Auto vars:     Size  Location     Type
 10520 ;;		None
 10521 ;; Return value:  Size  Location     Type
 10522 ;;                  1    wreg      void 
 10523 ;; Registers used:
 10524 ;;		wreg, status,2, status,0, pclath, cstack
 10525 ;; Tracked objects:
 10526 ;;		On entry : 0/0
 10527 ;;		On exit  : 0/0
 10528 ;;		Unchanged: 0/0
 10529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10530 ;;      Params:         0       0       0       0
 10531 ;;      Locals:         0       0       0       0
 10532 ;;      Temps:          0       0       0       0
 10533 ;;      Totals:         0       0       0       0
 10534 ;;Total ram usage:        0 bytes
 10535 ;; Hardware stack levels used:    1
 10536 ;; Hardware stack levels required when called:    3
 10537 ;; This function calls:
 10538 ;;		Absolute function
 10539 ;;		_IOCCF1_DefaultInterruptHandler
 10540 ;;		_RCS_INT
 10541 ;; This function is called by:
 10542 ;;		_PIN_MANAGER_IOC
 10543 ;; This function uses a non-reentrant model
 10544 ;;
 10545                           
 10546                           
 10547                           ;psect for function _IOCCF1_ISR
 10548  0000'                    _IOCCF1_ISR:
 10549  0000'                    i1l2088:	
 10550                           ;incstack = 0
 10551                           ; Regs used in _IOCCF1_ISR: [wreg+status,2+status,0+pclath+cstack]
 10552                           
 10553                           
 10554                           ;mcc_generated_files/pin_manager.c: 147:     if(IOCCF1_InterruptHandler)
 10555  0000' 0140               	movlb	0	; select bank0
 10556  0001' 0800'              	movf	_IOCCF1_InterruptHandler,w
 10557  0002' 0401'              	iorwf	_IOCCF1_InterruptHandler+1,w
 10558  0003' 1903               	btfsc	3,2
 10559  0004' 2806'              	goto	u71_21
 10560  0005' 2807'              	goto	u71_20
 10561  0006'                    u71_21:
 10562  0006' 280C'              	goto	i1l2092
 10563  0007'                    u71_20:
 10564  0007'                    i1l2090:
 10565                           
 10566                           ;mcc_generated_files/pin_manager.c: 148:     {;mcc_generated_files/pin_manager.c: 149:  
      +                                 IOCCF1_InterruptHandler();
 10567  0007' 0801'              	movf	_IOCCF1_InterruptHandler+1,w
 10568  0008' 008A               	movwf	10
 10569  0009' 0800'              	movf	_IOCCF1_InterruptHandler,w
 10570  000A' 000A               	callw
 10571  000B' 3180'              	pagesel	$
 10572  000C'                    i1l2092:
 10573                           
 10574                           ;mcc_generated_files/pin_manager.c: 151:     IOCCFbits.IOCCF1 = 0;
 10575  000C' 017E               	movlb	62	; select bank62
 10576  000D' 10D5               	bcf	85,1	;volatile
 10577  000E'                    i1l234:
 10578  000E' 0008               	return
 10579  000F'                    __end_of_IOCCF1_ISR:
 10580                           
 10581                           	psect	text52
 10582  0000'                    __ptext52:	
 10583 ;; *************** function _IOCCF1_DefaultInterruptHandler *****************
 10584 ;; Defined at:
 10585 ;;		line 164 in file "mcc_generated_files/pin_manager.c"
 10586 ;; Parameters:    Size  Location     Type
 10587 ;;		None
 10588 ;; Auto vars:     Size  Location     Type
 10589 ;;		None
 10590 ;; Return value:  Size  Location     Type
 10591 ;;                  1    wreg      void 
 10592 ;; Registers used:
 10593 ;;		None
 10594 ;; Tracked objects:
 10595 ;;		On entry : 0/0
 10596 ;;		On exit  : 0/0
 10597 ;;		Unchanged: 0/0
 10598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10599 ;;      Params:         0       0       0       0
 10600 ;;      Locals:         0       0       0       0
 10601 ;;      Temps:          0       0       0       0
 10602 ;;      Totals:         0       0       0       0
 10603 ;;Total ram usage:        0 bytes
 10604 ;; Hardware stack levels used:    1
 10605 ;; This function calls:
 10606 ;;		Nothing
 10607 ;; This function is called by:
 10608 ;;		_PIN_MANAGER_Initialize
 10609 ;;		_IOCCF1_ISR
 10610 ;; This function uses a non-reentrant model
 10611 ;;
 10612                           
 10613                           
 10614                           ;psect for function _IOCCF1_DefaultInterruptHandler
 10615  0000'                    _IOCCF1_DefaultInterruptHandler:
 10616  0000'                    i1l240:	
 10617                           ;incstack = 0
 10618                           ; Regs used in _IOCCF1_DefaultInterruptHandler: []
 10619                           
 10620  0000' 0008               	return
 10621  0001'                    __end_of_IOCCF1_DefaultInterruptHandler:
 10622                           
 10623                           	psect	text53
 10624  0000'                    __ptext53:	
 10625 ;; *************** function _RCS_INT *****************
 10626 ;; Defined at:
 10627 ;;		line 178 in file "Main.c"
 10628 ;; Parameters:    Size  Location     Type
 10629 ;;		None
 10630 ;; Auto vars:     Size  Location     Type
 10631 ;;		None
 10632 ;; Return value:  Size  Location     Type
 10633 ;;                  1    wreg      void 
 10634 ;; Registers used:
 10635 ;;		wreg, status,2, status,0, pclath, cstack
 10636 ;; Tracked objects:
 10637 ;;		On entry : 0/0
 10638 ;;		On exit  : 0/0
 10639 ;;		Unchanged: 0/0
 10640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10641 ;;      Params:         0       0       0       0
 10642 ;;      Locals:         0       0       0       0
 10643 ;;      Temps:          0       0       0       0
 10644 ;;      Totals:         0       0       0       0
 10645 ;;Total ram usage:        0 bytes
 10646 ;; Hardware stack levels used:    1
 10647 ;; Hardware stack levels required when called:    2
 10648 ;; This function calls:
 10649 ;;		_TMR1_Reload
 10650 ;; This function is called by:
 10651 ;;		_main
 10652 ;;		_IOCCF1_ISR
 10653 ;; This function uses a non-reentrant model
 10654 ;;
 10655                           
 10656                           
 10657                           ;psect for function _RCS_INT
 10658  0000'                    _RCS_INT:
 10659  0000'                    i1l2002:	
 10660                           ;incstack = 0
 10661                           ; Regs used in _RCS_INT: [wreg+status,2+status,0+pclath+cstack]
 10662                           
 10663                           
 10664                           ;Main.c: 181:     UpdateRcs = 1;
 10665  0000' 0140               	movlb	0	; select bank0
 10666  0001' 0194'              	clrf	_UpdateRcs
 10667  0002' 0A94'              	incf	_UpdateRcs,f
 10668  0003'                    i1l2004:
 10669                           
 10670                           ;Main.c: 183:     TMR1_Reload();
 10671  0003' 3180' 2000' 3180'  	fcall	_TMR1_Reload
 10672  0006'                    i1l573:
 10673  0006' 0008               	return
 10674  0007'                    __end_of_RCS_INT:
 10675                           
 10676                           	psect	text54
 10677  0000'                    __ptext54:	
 10678 ;; *************** function _TMR1_Reload *****************
 10679 ;; Defined at:
 10680 ;;		line 149 in file "mcc_generated_files/tmr1.c"
 10681 ;; Parameters:    Size  Location     Type
 10682 ;;		None
 10683 ;; Auto vars:     Size  Location     Type
 10684 ;;		None
 10685 ;; Return value:  Size  Location     Type
 10686 ;;                  1    wreg      void 
 10687 ;; Registers used:
 10688 ;;		wreg, status,2, status,0, pclath, cstack
 10689 ;; Tracked objects:
 10690 ;;		On entry : 0/0
 10691 ;;		On exit  : 0/0
 10692 ;;		Unchanged: 0/0
 10693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10694 ;;      Params:         0       0       0       0
 10695 ;;      Locals:         0       0       0       0
 10696 ;;      Temps:          0       0       0       0
 10697 ;;      Totals:         0       0       0       0
 10698 ;;Total ram usage:        0 bytes
 10699 ;; Hardware stack levels used:    1
 10700 ;; Hardware stack levels required when called:    1
 10701 ;; This function calls:
 10702 ;;		_TMR1_WriteTimer
 10703 ;; This function is called by:
 10704 ;;		_RCS_INT
 10705 ;; This function uses a non-reentrant model
 10706 ;;
 10707                           
 10708                           
 10709                           ;psect for function _TMR1_Reload
 10710  0000'                    _TMR1_Reload:
 10711  0000'                    i1l1966:	
 10712                           ;incstack = 0
 10713                           ; Regs used in _TMR1_Reload: [wreg+status,2+status,0+pclath+cstack]
 10714                           
 10715                           
 10716                           ;mcc_generated_files/tmr1.c: 151:     TMR1_WriteTimer(timer1ReloadVal);
 10717  0000' 0140               	movlb	0	; select bank0
 10718  0001' 0809'              	movf	_timer1ReloadVal+1,w	;volatile
 10719  0002' 0081'              	movwf	TMR1_WriteTimer@timerVal+1
 10720  0003' 0808'              	movf	_timer1ReloadVal,w	;volatile
 10721  0004' 0080'              	movwf	TMR1_WriteTimer@timerVal
 10722  0005' 3180' 2000' 3180'  	fcall	_TMR1_WriteTimer
 10723  0008'                    i1l471:
 10724  0008' 0008               	return
 10725  0009'                    __end_of_TMR1_Reload:
 10726                           
 10727                           	psect	text55
 10728  0000'                    __ptext55:	
 10729 ;; *************** function _TMR1_WriteTimer *****************
 10730 ;; Defined at:
 10731 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 10732 ;; Parameters:    Size  Location     Type
 10733 ;;  timerVal        2    0[COMMON] unsigned short 
 10734 ;; Auto vars:     Size  Location     Type
 10735 ;;		None
 10736 ;; Return value:  Size  Location     Type
 10737 ;;                  1    wreg      void 
 10738 ;; Registers used:
 10739 ;;		wreg, status,2
 10740 ;; Tracked objects:
 10741 ;;		On entry : 0/0
 10742 ;;		On exit  : 0/0
 10743 ;;		Unchanged: 0/0
 10744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10745 ;;      Params:         2       0       0       0
 10746 ;;      Locals:         0       0       0       0
 10747 ;;      Temps:          0       0       0       0
 10748 ;;      Totals:         2       0       0       0
 10749 ;;Total ram usage:        2 bytes
 10750 ;; Hardware stack levels used:    1
 10751 ;; This function calls:
 10752 ;;		Nothing
 10753 ;; This function is called by:
 10754 ;;		_TMR1_Reload
 10755 ;;		_TMR1_ISR
 10756 ;; This function uses a non-reentrant model
 10757 ;;
 10758                           
 10759                           
 10760                           ;psect for function _TMR1_WriteTimer
 10761  0000'                    _TMR1_WriteTimer:
 10762  0000'                    i1l1916:	
 10763                           ;incstack = 0
 10764                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 10765                           
 10766                           
 10767                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 10768  0000' 0144               	movlb	4	; select bank4
 10769  0001' 1D0E               	btfss	14,2	;volatile
 10770  0002' 2804'              	goto	u55_21
 10771  0003' 2805'              	goto	u55_20
 10772  0004'                    u55_21:
 10773  0004' 280C'              	goto	i1l1926
 10774  0005'                    u55_20:
 10775  0005'                    i1l1918:
 10776                           
 10777                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 10778  0005' 100E               	bcf	14,0	;volatile
 10779  0006'                    i1l1920:
 10780                           
 10781                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (uint8_t)(timerVal >> 8);
 10782  0006' 0801'              	movf	TMR1_WriteTimer@timerVal+1,w
 10783  0007' 008D               	movwf	13	;volatile
 10784  0008'                    i1l1922:
 10785                           
 10786                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = (uint8_t)timerVal;
 10787  0008' 0800'              	movf	TMR1_WriteTimer@timerVal,w
 10788  0009' 008C               	movwf	12	;volatile
 10789  000A'                    i1l1924:
 10790                           
 10791                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 10792  000A' 140E               	bsf	14,0	;volatile
 10793                           
 10794                           ;mcc_generated_files/tmr1.c: 140:     }
 10795  000B' 2810'              	goto	i1l468
 10796  000C'                    i1l1926:
 10797                           
 10798                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 10799  000C' 0801'              	movf	TMR1_WriteTimer@timerVal+1,w
 10800  000D' 008D               	movwf	13	;volatile
 10801  000E'                    i1l1928:
 10802                           
 10803                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = (uint8_t)timerVal;
 10804  000E' 0800'              	movf	TMR1_WriteTimer@timerVal,w
 10805  000F' 008C               	movwf	12	;volatile
 10806  0010'                    i1l468:
 10807  0010' 0008               	return
 10808  0011'                    __end_of_TMR1_WriteTimer:
 10809  007E                     btemp	set	126	;btemp
 10810  007E                     int$flags	set	126
 10811  007E                     wtemp0	set	126
 10812                           
 10813                           	psect	idloc
 10814                           
 10815                           ;Config register IDLOC0 @ 0x8000
 10816                           ;	unspecified, using default values
 10817  8000                     	org	32768
 10818  8000  3FFF               	dw	16383
 10819                           
 10820                           ;Config register IDLOC1 @ 0x8001
 10821                           ;	unspecified, using default values
 10822  8001                     	org	32769
 10823  8001  3FFF               	dw	16383
 10824                           
 10825                           ;Config register IDLOC2 @ 0x8002
 10826                           ;	unspecified, using default values
 10827  8002                     	org	32770
 10828  8002  3FFF               	dw	16383
 10829                           
 10830                           ;Config register IDLOC3 @ 0x8003
 10831                           ;	unspecified, using default values
 10832  8003                     	org	32771
 10833  8003  3FFF               	dw	16383
 10834                           
 10835                           	psect	config
 10836                           
 10837                           ;Config register CONFIG1 @ 0x8007
 10838                           ;	External Oscillator mode selection bits
 10839                           ;	FEXTOSC = OFF, Oscillator not enabled
 10840                           ;	Power-up default value for COSC bits
 10841                           ;	RSTOSC = HFINTPLL, HFINTOSC with 2x PLL, with OSCFRQ = 16 MHz and CDIV = 1:1 (FOSC = 3
      +                          2 MHz)
 10842                           ;	Clock Out Enable bit
 10843                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 10844                           ;	Clock Switch Enable bit
 10845                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 10846                           ;	Fail-Safe Clock Monitor Enable bit
 10847                           ;	FCMEN = OFF, FSCM timer disabled
 10848  8007                     	org	32775
 10849  8007  1F9C               	dw	8092
 10850                           
 10851                           ;Config register CONFIG2 @ 0x8008
 10852                           ;	Master Clear Enable bit
 10853                           ;	MCLRE = OFF, MCLR pin function is port defined function
 10854                           ;	Power-up Timer Enable bit
 10855                           ;	PWRTE = OFF, PWRT disabled
 10856                           ;	Low-Power BOR enable bit
 10857                           ;	LPBOREN = OFF, ULPBOR disabled
 10858                           ;	Brown-out reset enable bits
 10859                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 10860                           ;	Brown-out Reset Voltage Selection
 10861                           ;	BORV = HI, Brown-out Reset Voltage (VBOR) is set to 2.7V
 10862                           ;	Zero-cross detect disable
 10863                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 10864                           ;	Peripheral Pin Select one-way control
 10865                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 10866                           ;	Stack Overflow/Underflow Reset Enable bit
 10867                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 10868  8008                     	org	32776
 10869  8008  3DFE               	dw	15870
 10870                           
 10871                           ;Config register CONFIG3 @ 0x8009
 10872                           ;	WDT Period Select bits
 10873                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10874                           ;	WDT operating mode
 10875                           ;	WDTE = ON, WDT enabled regardless of sleep; SWDTEN ignored
 10876                           ;	WDT Window Select bits
 10877                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 10878                           ;	WDT input clock selector
 10879                           ;	WDTCCS = SC, Software Control
 10880  8009                     	org	32777
 10881  8009  3FFF               	dw	16383
 10882                           
 10883                           ;Config register CONFIG4 @ 0x800A
 10884                           ;	Boot Block Size Selection bits
 10885                           ;	BBSIZE = BB512, 512 words boot block size
 10886                           ;	Boot Block Enable bit
 10887                           ;	BBEN = OFF, Boot Block disabled
 10888                           ;	SAF Enable bit
 10889                           ;	SAFEN = OFF, SAF disabled
 10890                           ;	Application Block Write Protection bit
 10891                           ;	WRTAPP = OFF, Application Block not write protected
 10892                           ;	Boot Block Write Protection bit
 10893                           ;	WRTB = OFF, Boot Block not write protected
 10894                           ;	Configuration Register Write Protection bit
 10895                           ;	WRTC = OFF, Configuration Register not write protected
 10896                           ;	Storage Area Flash Write Protection bit
 10897                           ;	WRTSAF = OFF, SAF not write protected
 10898                           ;	Low Voltage Programming Enable bit
 10899                           ;	LVP = OFF, High Voltage on MCLR/Vpp must be used for programming
 10900  800A                     	org	32778
 10901  800A  1FFF               	dw	8191
 10902                           
 10903                           ;Config register CONFIG5 @ 0x800B
 10904                           ;	UserNVM Program memory code protection bit
 10905                           ;	CP = OFF, UserNVM code protection disabled
 10906  800B                     	org	32779
 10907  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        82
    BSS         28
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     19      63
    BANK1            80      0      66
    BANK2            80      0       0

Pointer List with Targets:

    EXECUTExEFFECT$1858	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> LedBrake(), LedSlFl(), LedNom(), LedFlash(), 
		 -> LedOff(), 

    EXECUTExEFFECT$1853	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> LedBrake(), LedSlFl(), LedNom(), LedFlash(), 
		 -> LedOff(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S1107$PWM	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> PWM1_LoadDutyValue(), PWM2_LoadDutyValue(), PWM5_LoadDutyValue(), PWM6_LoadDutyValue(), 
		 -> PWM3_LoadDutyValue(), PWM4_LoadDutyValue(), 

    LedBit.PWM	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> PWM1_LoadDutyValue(), PWM2_LoadDutyValue(), PWM5_LoadDutyValue(), PWM6_LoadDutyValue(), 
		 -> PWM3_LoadDutyValue(), PWM4_LoadDutyValue(), 

    S1107$Prog	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> LedBrake(), LedSlFl(), LedNom(), LedFlash(), 
		 -> LedOff(), 

    LedBit.Prog	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> LedBrake(), LedSlFl(), LedNom(), LedFlash(), 
		 -> LedOff(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_INT(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_INT(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_INT(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_INT(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    IOCCF1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> RCS_INT(), IOCCF1_DefaultInterruptHandler(), 

    IOCCF1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> RCS_INT(), Absolute function(), IOCCF1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCCF1_SetInterruptHandler
    _rand->___lmul
    _CalcPwm->_PWM3_LoadDutyValue
    _CalcPwm->_PWM4_LoadDutyValue
    _CalcPwm->_PWM5_LoadDutyValue
    _CalcPwm->_PWM6_LoadDutyValue
    _PWM6_LoadDutyValue->___bmul
    _PWM5_LoadDutyValue->___bmul
    _PWM4_LoadDutyValue->___bmul
    _PWM3_LoadDutyValue->___bmul
    _PWM2_LoadDutyValue->___bmul
    _PWM1_LoadDutyValue->___bmul

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer
    _TMR1_Reload->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_EXECUTExEFFECT
    _INITxEXECUTER->_RCSxLED
    _RCSxLED->_rand
    _rand->___lmul
    _EXECUTExEFFECT->_LedFlash
    _EXECUTExEFFECT->_LedSlFl
    _LedSlFl->_CalcPwm
    _LedOff->_CalcPwm
    _LedNom->_CalcPwm
    _LedFlash->_CalcPwm
    _LedBrake->_CalcPwm

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   32329
                                             16 BANK0      3     3      0
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                  _ADC_SelectChannel
                _ADC_StartConversion
                       _BATTxPROTECT
                     _EXECUTExEFFECT
                      _INITxEXECUTER
         _IOCCF1_SetInterruptHandler
                            _RCSxLED
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     522
                     _ADC_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
         _IOCCF1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCCF1_SetInterruptHandler                           2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INITxEXECUTER                                        0     0      0     586
                            _RCSxLED
                               _rand
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RCSxLED                                              1     1      0     244
                                             10 BANK0      1     1      0
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 6     4      2     244
                                              4 BANK0      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     244
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _EXECUTExEFFECT                                       6     6      0   30334
                                             10 BANK0      6     6      0
                           _LedBrake *
                           _LedFlash *
                             _LedNom *
                             _LedOff *
                            _LedSlFl *
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LedSlFl                                              5     4      1    6243
                                              5 BANK0      5     4      1
                            _CalcPwm
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LedOff                                               2     1      1    5332
                                              5 BANK0      2     1      1
                            _CalcPwm
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LedNom                                               4     3      1    5363
                                              5 BANK0      4     3      1
                            _CalcPwm
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LedFlash                                             5     4      1    5620
                                              5 BANK0      5     4      1
                            _CalcPwm
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _LedBrake                                             3     2      1    5304
                                              5 BANK0      3     2      1
                            _CalcPwm
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) _CalcPwm                                              5     5      0    2906
                                              0 BANK0      5     5      0
                 _PWM1_LoadDutyValue *
                 _PWM2_LoadDutyValue *
                 _PWM3_LoadDutyValue *
                 _PWM4_LoadDutyValue *
                 _PWM5_LoadDutyValue *
                 _PWM6_LoadDutyValue *
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1    2271
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2      62
                                              6 COMMON     4     2      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM5_LoadDutyValue                                   4     2      2      62
                                              6 COMMON     4     2      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM4_LoadDutyValue                                   4     2      2      62
                                              6 COMMON     4     2      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM3_LoadDutyValue                                   4     2      2      62
                                              6 COMMON     4     2      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM2_LoadDutyValue                                   2     0      2     130
                                              6 COMMON     2     0      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM1_LoadDutyValue                                   2     0      2     195
                                              6 COMMON     2     0      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _BATTxPROTECT                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversionResult                              2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0     480
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                           _TMR1_INT *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_INT                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _TMR0_INT *
 ---------------------------------------------------------------------------------
 (7) _TMR0_INT                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _PIN_MANAGER_IOC                                      0     0      0     240
                         _IOCCF1_ISR
 ---------------------------------------------------------------------------------
 (7) _IOCCF1_ISR                                           0     0      0     240
                   Absolute function *
     _IOCCF1_DefaultInterruptHandler *
                            _RCS_INT *
 ---------------------------------------------------------------------------------
 (8) _RCS_INT                                              0     0      0     240
                        _TMR1_Reload
 ---------------------------------------------------------------------------------
 (9) _TMR1_Reload                                          0     0      0     240
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _IOCCF1_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversionResult
   _ADC_IsConversionDone
   _ADC_SelectChannel
   _ADC_StartConversion
   _BATTxPROTECT
   _EXECUTExEFFECT
     _LedBrake *
       _CalcPwm
         _PWM1_LoadDutyValue *
           ___bmul (ARG)
         _PWM2_LoadDutyValue *
           ___bmul (ARG)
         _PWM3_LoadDutyValue *
           ___bmul (ARG)
         _PWM4_LoadDutyValue *
           ___bmul (ARG)
         _PWM5_LoadDutyValue *
           ___bmul (ARG)
         _PWM6_LoadDutyValue *
           ___bmul (ARG)
         ___bmul *
       ___bmul
     _LedFlash *
       _CalcPwm
         _PWM1_LoadDutyValue *
           ___bmul (ARG)
         _PWM2_LoadDutyValue *
           ___bmul (ARG)
         _PWM3_LoadDutyValue *
           ___bmul (ARG)
         _PWM4_LoadDutyValue *
           ___bmul (ARG)
         _PWM5_LoadDutyValue *
           ___bmul (ARG)
         _PWM6_LoadDutyValue *
           ___bmul (ARG)
         ___bmul *
       ___bmul
     _LedNom *
       _CalcPwm
         _PWM1_LoadDutyValue *
           ___bmul (ARG)
         _PWM2_LoadDutyValue *
           ___bmul (ARG)
         _PWM3_LoadDutyValue *
           ___bmul (ARG)
         _PWM4_LoadDutyValue *
           ___bmul (ARG)
         _PWM5_LoadDutyValue *
           ___bmul (ARG)
         _PWM6_LoadDutyValue *
           ___bmul (ARG)
         ___bmul *
       ___bmul
     _LedOff *
       _CalcPwm
         _PWM1_LoadDutyValue *
           ___bmul (ARG)
         _PWM2_LoadDutyValue *
           ___bmul (ARG)
         _PWM3_LoadDutyValue *
           ___bmul (ARG)
         _PWM4_LoadDutyValue *
           ___bmul (ARG)
         _PWM5_LoadDutyValue *
           ___bmul (ARG)
         _PWM6_LoadDutyValue *
           ___bmul (ARG)
         ___bmul *
       ___bmul
     _LedSlFl *
       _CalcPwm
         _PWM1_LoadDutyValue *
           ___bmul (ARG)
         _PWM2_LoadDutyValue *
           ___bmul (ARG)
         _PWM3_LoadDutyValue *
           ___bmul (ARG)
         _PWM4_LoadDutyValue *
           ___bmul (ARG)
         _PWM5_LoadDutyValue *
           ___bmul (ARG)
         _PWM6_LoadDutyValue *
           ___bmul (ARG)
         ___bmul *
       ___bmul
     ___bmul *
   _INITxEXECUTER
     _RCSxLED
       _rand
         ___lmul
     _rand
       ___lmul
     _srand
   _IOCCF1_SetInterruptHandler
   _RCSxLED
     _rand
       ___lmul
   _SYSTEM_Initialize
     _ADC_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCCF1_SetInterruptHandler
     _PMD_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
   _TMR0_SetInterruptHandler
   _TMR1_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCCF1_ISR
       Absolute function(Fake) *
       _IOCCF1_DefaultInterruptHandler *
       _RCS_INT *
         _TMR1_Reload
           _TMR1_WriteTimer
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _TMR0_INT *
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_INT *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      3F       5       78.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      42       7       82.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
ABS                  0      0      8D      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      8D      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Dec 21 23:34:04 2022

                            ___bmul@product 0004                                          l27 000D  
                                        l92 0002                                          l86 0008  
                                        l95 0006                                          l89 000C  
                                        l98 0005                      __end_of_FVR_Initialize 0004  
               __size_of_PWM6_LoadDutyValue 0016                                         l131 0015  
                                       l300 0009                                         l116 0007  
                                       l140 0007                                         l143 0015  
                                       l119 0015                                         l303 000D  
                                       l128 0007                                         l152 0007  
                                       l322 0012                                         l162 0003  
                                       l226 0033                                         l306 000C  
                                       l155 0015                                         l420 0005  
                                       l341 0012                                         l237 0005  
                                       l317 0007                                         l336 0007  
                                       l621 0000                                         l454 001F  
                                       l623 0002                                         l625 0024  
                      __end_of_BATTxPROTECT 0025                                         l633 007D  
                                       l297 002A                                         l561 00C5  
                                       l634 007C                                         l618 0012  
                                       l643 0036                                         l636 0086  
                                       l484 0005                                         l556 0071  
                                       l670 01F6                                         l662 0077  
                                       l646 003A                                         l398 0018  
                                       l655 0016                                         l681 00CD  
                                       l649 0049                                         l684 0029  
                                       l677 008B                                         l766 0035  
                                       l778 0014                                         _PR2 028D  
                                       u640 000D                                         u720 000D  
                                       u641 000C                                         u721 000C  
                                       u670 002C                                         u671 002B  
                                       u655 0017                                         u665 001E  
                           _timer1ReloadVal 0008                     __size_of_PMD_Initialize 000D  
                           _TMR2_Initialize 0000                             _PWM4_Initialize 0000  
                                       wreg 0009                                        l2000 0000  
                                      l2100 000A                                        l2020 0007  
                                      l1213 0009                                        l2030 0004  
                                      l2110 0008                                        l2102 0000  
                                      l2022 0008                                        l2014 0000  
                                      l1216 0034                                        l2032 0005  
                                      l2104 0003                                        l2112 0000  
                                      l2040 0000                                        l2120 000E  
                                      l2024 000A                                        l2016 0003  
                                      l2034 0006                                        l2026 0000  
                                      l2106 0004                                        l2050 0005  
                                      l2042 0000                                        l2122 0015  
                                      l2114 0000                                        l2130 0005  
                                      l2018 0004                                        l2300 000B  
                                      l2028 0003                                        l2044 0000  
                                      l2108 0007                                        l2060 000D  
                                      l2052 0007                                        l2124 0000  
                                      l2036 0000                                        l2116 000B  
                                      l2140 0015                                        l2132 0007  
                                      l2302 0000                                        l2070 001A  
                                      l2062 000E                                        l2054 000A  
                                      l2046 0000                                        l2038 0000  
                                      l2118 000D                                        l2142 001C  
                                      l2134 0009                                        l2126 0000  
                                      l2304 0000                                        l2080 002B  
                                      l2072 0021                                        l2064 0017  
                                      l2056 000B                                        l2048 0003  
                                      l2136 000B                                        l2128 0003  
                                      l2082 002D                                        l2074 0023  
                                      l2066 0018                                        l2058 000C  
                                      l2138 0013                                        l2308 0000  
                                      l2084 002F                                        l2076 0026  
                                      l2068 0019                                        l2316 0000  
                                      l2190 0000                                        l2086 0031  
                                      l2078 0029                                        l2094 0000  
                                      l2520 0000                                        l2600 0040  
                                      l2096 0007                                        l2522 0000  
                                      l2530 0004                                        l2610 0053  
                                      l2602 0046                                        l2098 0008  
                                      l2524 0000                                        l2532 0009  
                                      l2620 0000                                        l2700 0030  
                                      l2604 0048                                        l2612 0055  
                                      l2526 0000                                        l2534 000E  
                                      l2550 0010                                        l2542 0000  
                                      l2622 0039                                        l2710 009D  
                                      l2702 004D                                        l2614 0057  
                                      l2606 004C                                        l2536 0010  
                                      l2528 0000                                        l2544 0004  
                                      l2560 0006                                        l2640 0003  
                                      l2704 006C                                        l2632 0000  
                                      l2608 0052                                        l2616 0059  
                                      l2800 0080                                        l2298 0001  
                                      l2546 0009                                        l2562 000A  
                                      l2650 0088                                        l2642 001D  
                                      l2706 007A                                        l2714 00AA  
                                      l2626 0000                                        l2634 0015  
                                      l2570 0000                                        l2618 007E  
                                      l2810 00A3                                        l2802 0084  
                                      l2548 000E                                        l2564 000C  
                                      l2556 0001                                        l2660 00F3  
                                      l2652 00B5                                        l2644 0020  
                                      l2708 0099                                        l2716 00C6  
                                      l2628 0048                                        l2740 0025  
                                      l2572 0021                                        l2580 0005  
                                      l2820 00BE                                        l2812 00A6  
                                      l2804 008A                                        l2566 0013  
                                      l2558 0002                                        l2670 0187  
                                      l2662 010D                                        l2654 00B9  
                                      l2646 0030                                        l2638 0000  
                                      l2718 00CB                                        l2742 002B  
                                      l2734 0004                                        l2590 002E  
                                      l2582 0018                                        l2726 0000  
                                      l2822 00C1                                        l2806 0098  
                                      l2752 0003                                        l2576 0002  
                                      l2672 0199                                        l2664 011F  
                                      l2656 00C9                                        l2648 004D  
                                      l2680 01D0                                        l2744 0031  
                                      l2736 0014                                        l2728 0000  
                                      l2592 002F                                        l2584 0023  
                                      l2824 00C3                                        l2808 00A1  
                                      l2816 00A8                                        l2760 0021  
                                      l2666 013D                                        l2658 00E6  
                                      l2682 01EF                                        l2746 0034  
                                      l2738 0021                                        l1970 0009  
                                      l2594 0030                                        l2586 0024  
                                      l2578 0000                                        l2818 00B8  
                                      l2770 003C                                        l2762 0027  
                                      l2754 0000                                        l2684 01F4  
                                      l2676 01C3                                        l2668 0175  
                                      l2692 0000                                        l2748 0035  
                                      l1972 000D                                        l2596 0036  
                                      l2588 002A                                        l2780 004A  
                                      l2772 003F                                        l2764 002F  
                                      l2756 0003                                        l2694 0003  
                                      l1974 0016                                        l2598 003A  
                                      l2790 006A                                        l2782 004E  
                                      l2774 0041                                        l2766 0031  
                                      l2758 0004                                        l2696 001D  
                                      l1976 001D                                        l1968 0000  
                                      l2792 0070                                        l2784 0056  
                                      l2768 0037                                        l2698 0020  
                                      l1978 002C                                        l2786 005E  
                                      l2778 0047                                        l1996 0000  
                                      l2788 0066                                        l1998 0000  
                                      l2894 00B0                                        l2798 0074  
                                      l2896 00BE                                        l2898 01E4  
                   __end_of_PWM1_Initialize 0008                                        u1110 0009  
                                      u1111 0008                                        u1200 007C  
                                      u1105 000F                                        u1201 007B  
                                      u1130 0009                                        u1210 004D  
                                      u1131 0008                                        u1211 004C  
                                      u1220 0088                                        u1300 002B  
                                      u1125 000A                                        u1221 0087  
                                      u1301 002A                                        u1150 0006  
                                      u1230 00E6                                        u1310 0031  
                                      u1151 0005                                        u1231 00E5  
                                      u1311 0030                                        u1160 0013  
                                      u1240 011F                                        u1400 00A1  
                                      u1320 0027                                        u1145 000A  
                                      u1161 0012                                        u1241 011E  
                                      u1401 00A0                                        u1321 0026  
                                      u1250 013D                                        u1170 002E  
                                      u1410 00BE                                        u1330 002F  
                                      u1075 000F                                        u1251 013C  
                                      u1411 00BD                                        u1331 002E  
                                      u1260 0187                                        u1180 0005  
                                      u1340 0037                                        u1085 000F  
                                      u1261 0186                                        u1181 0004  
                                      u1341 0036                                        _LATA 0018  
                                      u1270 0199                                        u1190 0018  
                                      u1350 003C                                        u1095 000F  
                                      u1271 0198                                        u1175 002A  
                                      u1191 0017                                        u1351 003B  
                                      _LATC 001A                                        u1280 004D  
                                      u1360 0046                                        u1281 004C  
                                      u1361 0045                                        u1290 006C  
                                      u1370 0056                                        u1291 006B  
                                      u1371 0055                                        u1380 0070  
                                      u1381 006F                                        u1390 008A  
                                      u1391 0089                                        _T2PR 028D  
                                      _PMD0 0796                                        _PMD1 0797  
                                      _PMD2 0798                                        _PMD3 0799  
                                      _PMD4 079A                                        _PMD5 079B  
                                      _PLLR 4480                                        _TMR2 028C  
                                      _WPUA 1F39                                        _WPUC 1F4F  
                           __end_of_RCS_INT 0007                             ?_EXECUTExEFFECT 0000  
                           __end_of_RCSxLED 0087                                        _main 0000  
                                      _rand 0000                                        _seed 0016  
                                      fsr0h 0005                                        fsr1h 0007  
                                      indf0 0000                                        fsr0l 0004  
                                      indf1 0001                                        fsr1l 0006  
                                      btemp 007E                             __end_of_CalcPwm 002A  
                                      start 0000*                            _PWM5_Initialize 0000  
                           __end_of_LedSlFl 01F7                  ??_TMR1_SetInterruptHandler 0004  
                         ___bmul@multiplier 0005                  __end_of_PWM5_LoadDutyValue 0016  
                   __end_of_PWM2_Initialize 0008                     __end_of_TMR0_Initialize 0019  
            ??_TMR0_DefaultInterruptHandler 0000                             ?_FVR_Initialize 0000  
            __size_of_OSCILLATOR_Initialize 000E               __end_of_OSCILLATOR_Initialize 000E  
                       __size_of_IOCCF1_ISR 000F                                       _ADACT 009F  
                                     ?_main 0000                                       ?_rand 0004  
                                     _T1CLK 0211                                       _T1CON 020E  
                                     _T2CON 028E                                       _T2HLT 028F  
                                     _T2TMR 028C                                       i1l230 0008  
                                     i1l240 0000                                       i1l234 000E  
                                     _T2RST 0291                                       i1l423 0000  
                                     i1l417 0013                                       i1l373 002B  
                                     i1l365 000F                                       i1l471 0008  
                                     i1l367 001B                                       i1l368 002B  
                                     i1l481 0016                                       i1l570 0003  
                                     i1l468 0010                                       i1l573 0006  
                                     i1l567 0003                                       i1l487 0000  
                                     _OSCEN 0891                          _PWM4_LoadDutyValue 0000  
                                     _TMR0H 059D                                       _TMR1H 020D  
                                     _TMR0L 059C                                       _TMR1L 020C  
                                     u55_20 0005                                       u71_20 0007  
                                     u55_21 0004                                       u71_21 0006  
                                     _TRISA 0012                                       _TRISC 0014  
                                     u90_20 0007                                       u90_21 0006  
                                     u91_20 000B                                       u91_21 000A  
                                     u92_20 0013                                 _BattProtect 0012  
                                     u92_21 0012                                       u85_20 0005  
                                     u93_20 0017                                       u85_21 0004  
                                     u93_21 0016                                       u86_20 000E  
                                     u94_20 001F                                       u86_21 000D  
                                     u94_21 001E                                       u87_20 0011  
                                     u95_20 0023                                       u87_21 0010  
                                     u95_21 0022                                       u96_20 0027  
                                     u96_21 0026            __size_of_ADC_GetConversionResult 0006  
         __size_of_TMR0_SetInterruptHandler 0006                             _PWM6_Initialize 0000  
                       ___lmul@multiplicand 0006                   ?_TMR0_SetInterruptHandler 0002  
                          __end_of_TMR0_INT 0004                            __end_of_TMR0_ISR 0014  
                          __end_of_TMR1_INT 0004                            __end_of_TMR1_ISR 0017  
                   __end_of_PIN_MANAGER_IOC 0009                         ?_PWM4_LoadDutyValue 0006  
                                     _srand 0000                                       main@i 0012  
                   __end_of_PWM3_Initialize 0008                     __end_of_TMR1_Initialize 0020  
                                     pclath 000A                                       status 0003  
                    __size_of_INITxEXECUTER 0013                                       wtemp0 007E  
                           _TMR1_WriteTimer 0000                            __end_of_LedBrake 0017  
                          __end_of_LedFlash 00CE                             __initialization 0000  
                              __end_of_main 00C8                                __end_of_rand 0035  
                      ??_PWM4_LoadDutyValue 0008                     __end_of_PWM4_Initialize 0008  
                   __end_of_TMR2_Initialize 000E                 ?_INTERRUPT_InterruptManager 0000  
                                    ??_main 0010                                      ??_rand 0006  
             __size_of_ADC_IsConversionDone 0007                                   ??_RCS_INT 0002  
                                 ??_RCSxLED 000A                                      _ADCON0 009D  
                                    _ADCON1 009E                ??_IOCCF1_SetInterruptHandler 0004  
                                    _ADRESH 009C                                      _ADRESL 009B  
                                    _CCPR1H 030D                                      _CCPR2H 0311  
                                    _CCPR1L 030C                                      _CCPR2L 0310  
                                    ?_srand 0002                                      _ANSELA 1F38  
                                    _ANSELC 1F4E                                      _T0CON0 059E  
                                    _T0CON1 059F                                      _T1GATE 0210  
                                    _T1GCON 020F                                   ??_CalcPwm 0000  
                                    _RA4PPS 1F14                                      _RA5PPS 1F15  
                                    _RC2PPS 1F22                                      _RC3PPS 1F23  
                                    i1l2002 0000                     TMR1_WriteTimer@timerVal 0000  
                                    _RC4PPS 1F24                                      i1l2004 0003  
                          ?_PWM1_Initialize 0000                                      _RC5PPS 1F25  
                                    i1l2312 0000                                      i1l2320 0002  
                                    _ODCONA 1F3A                                      i1l2090 0007  
                                    i1l2314 0005                                      i1l2322 0005  
                                    i1l2330 0002                                      _ODCONC 1F50  
                                    i1l2092 000C                                      i1l2324 0007  
                                    i1l2332 000A                                      i1l2326 000E  
                                    i1l2318 0000                                      i1l2334 0011  
                                    i1l2088 0000                                      i1l2328 0000  
                                    i1l2186 0000                                      i1l2370 0013  
                                    i1l2188 0000                                      i1l2372 0017  
                                    i1l2364 0002                                      i1l2374 001F  
                                    i1l2366 0007                                      i1l1920 0006  
                                    i1l2376 0023                                      i1l2368 000B  
                                    i1l1922 0008                                      i1l2378 0027  
                                    i1l1924 000A                                      i1l1916 0000  
                   __end_of_PWM5_Initialize 0008                                      i1l1918 0005  
                                    i1l1926 000C                                      i1l1928 000E  
                                    i1l1966 0000                                      _INLVLA 1F3C  
                                    _INLVLC 1F52                                      _FVRCON 090C  
                                    _OSCFRQ 0893                                   ??_LedSlFl 0006  
                                    _LedBit 0000                                      _LedOff 0000  
                                    _LedNom 0000                                      _Random 0000  
      __end_of_TMR1_DefaultInterruptHandler 0001       __size_of_TMR1_DefaultInterruptHandler 0001  
              _TMR1_DefaultInterruptHandler 0000                                      ___bmul 0000  
                                    ___lmul 0000                 __size_of_PWM3_LoadDutyValue 0016  
                              ?_TMR1_Reload 0000                       __size_of_BATTxPROTECT 0025  
                          ?_TMR0_Initialize 0000                            ?_PWM2_Initialize 0000  
                   __end_of_PWM6_Initialize 0008                               _INITxEXECUTER 0000  
       __size_of_IOCCF1_SetInterruptHandler 0006                            LedSlFl@ReturnVal 0009  
                            _PMD_Initialize 0000                                  _UpdateLeds 0015  
                                    srand@s 0002    TMR1_SetInterruptHandler@InterruptHandler 0002  
  TMR0_SetInterruptHandler@InterruptHandler 0002  IOCCF1_SetInterruptHandler@InterruptHandler 0002  
                          ?_PIN_MANAGER_IOC 0000                     __end_of_TMR1_WriteTimer 0011  
                              ??_IOCCF1_ISR 0002                            ?_PWM3_Initialize 0000  
                          ?_TMR1_Initialize 0000                                  _pAdcResult 000F  
                         _SYSTEM_Initialize 0000                     __end_of__initialization 0022  
                        ?_SYSTEM_Initialize 0000                                _BATTxPROTECT 0000  
                __end_of_PWM2_LoadDutyValue 0013                 PWM1_LoadDutyValue@dutyValue 0006  
                       ___bmul@multiplicand 0002                __size_of_ADC_StartConversion 0003  
                            __pcstackCOMMON 0000                                __pidataBANK0 0000  
                              __pidataBANK1 0000                         ??_SYSTEM_Initialize 0004  
                                 ?_TMR0_INT 0000                                   ?_TMR0_ISR 0000  
                                 ?_TMR1_INT 0000                                   ?_TMR1_ISR 0000  
             ?_TMR1_DefaultInterruptHandler 0000                               __end_of_srand 000A  
                        _PWM1_LoadDutyValue 0000                            ?_PWM4_Initialize 0000  
                          ?_TMR2_Initialize 0000                              ?_INITxEXECUTER 0000  
                    __end_of_PMD_Initialize 000D                 PWM4_LoadDutyValue@dutyValue 0006  
                        __end_of_IOCCF1_ISR 000F                     _ADC_GetConversionResult 0000  
                       ?_PWM1_LoadDutyValue 0006                                   ?_LedBrake 0005  
                                 ?_LedFlash 0005                            ??_EXECUTExEFFECT 000A  
                 __end_of_SYSTEM_Initialize 002B                                     ??_srand 0004  
                                __pbssBANK0 0000                            ?_PWM5_Initialize 0000  
                                   ?_LedOff 0005                                     ?_LedNom 0005  
                      ??_PWM1_LoadDutyValue 0008                            ??_FVR_Initialize 0002  
                                __pmaintext 0000                                     ?___bmul 0002  
          __end_of_TMR0_SetInterruptHandler 0006                                     ?___lmul 0002  
                                ??_TMR0_INT 0000                                  ??_TMR0_ISR 0000  
                                ??_TMR1_INT 0000                                  ??_TMR1_ISR 0002  
                __end_of_PWM6_LoadDutyValue 0016                                  __pintentry 0000  
                                   _CCP1CON 030E                                     _CCP2CON 0312  
                            ___lmul@product 0000                            ?_PWM6_Initialize 0000  
                           ?_PMD_Initialize 0000                     __size_of_ADC_Initialize 0009  
                        _PWM5_LoadDutyValue 0000                                     _OSCCON1 088D  
                                   _OSCCON3 088F                                     _OSCSTAT 0890  
        __end_of_IOCCF1_SetInterruptHandler 0006                  _IOCCF1_SetInterruptHandler 0000  
                                ??_LedBrake 0006                                     _RCS_INT 0000  
                                   _OSCTUNE 0892                                     _PWM3DCH 0315  
                                   _PWM3DCL 0314                                     _PWM4DCH 0319  
                                   _PWM4DCL 0318                                     _PWM5DCH 031D  
                                ??_LedFlash 0006                                     _PWM5DCL 031C  
                                   _PWM6DCH 038D                                     _PWM3CON 0316  
                                   _PWM6DCL 038C                                     _PWM4CON 031A  
                                   _PWM5CON 031E                                     _PWM6CON 038E  
                                   _SLRCONA 1F3B                                     _SLRCONC 1F51  
                                   _RCSxLED 0000                            ?_TMR1_WriteTimer 0000  
                                   _CalcPwm 0000                         ?_PWM5_LoadDutyValue 0006  
                                   _CarrOff 0011                                     _LedSlFl 0000  
                           __size_of_LedOff 003B                             __size_of_LedNom 004A  
                      _ADC_InterruptHandler 000C                             __size_of___bmul 0015  
                           __size_of___lmul 0036                             ??_INITxEXECUTER 000A  
                         LedFlash@ReturnVal 0009                        ??_PWM5_LoadDutyValue 0008  
                 ??_ADC_GetConversionResult 0004                        __size_of_TMR1_Reload 0009  
                                   __ptext1 0000                                     __ptext2 0000  
                                   __ptext3 0000                                     __ptext4 0000  
                                   __ptext5 0000                                     __ptext6 0000  
                                   __ptext7 0000                                     __ptext8 0000  
                                   __ptext9 0000              ??_TMR1_DefaultInterruptHandler 0000  
                                 _T1CONbits 020E                       _OSCILLATOR_Initialize 0000  
                                 _T2CONbits 028E           __size_of_TMR1_SetInterruptHandler 0006  
                  ??_PIN_MANAGER_Initialize 0004                   ?_TMR1_SetInterruptHandler 0002  
                                 _T2HLTbits 028F                                   _IOCCFbits 1F55  
                                 _IOCCNbits 1F54                                   _IOCCPbits 1F53  
                __size_of_SYSTEM_Initialize 002B                                     clrloop0 0001  
                      end_of_initialization 0022                                   _T2RSTbits 0291  
                                   init_ram 0000                                     initloop 0001  
                               _UpdateVbatt 0013                __end_of_ADC_IsConversionDone 0007  
                                 LedOff@Led 0005                                   LedNom@Led 0005  
               __size_of_PWM4_LoadDutyValue 0016                    _TMR0_SetInterruptHandler 0000  
                                 _PORTCbits 000E                                   _AdcResult 0000  
                                 _TRISAbits 0012                         _ADC_StartConversion 0000  
                               _CCP1CONbits 030E                                 _CCP2CONbits 0312  
                __end_of_PWM3_LoadDutyValue 0016                              __end_of_LedOff 003B  
                  __size_of_PWM1_Initialize 0008                              __end_of_LedNom 004A  
                      ?_ADC_StartConversion 0000                        _timer0ReloadVal16bit 0000  
                            __end_of___bmul 0015                              __end_of___lmul 0036  
                         __size_of_TMR0_INT 0004                           __size_of_TMR0_ISR 0014  
                         __size_of_TMR1_INT 0004                           __size_of_TMR1_ISR 0017  
                        _PWM2_LoadDutyValue 0000                              _ADC_Initialize 0000  
                    ?_OSCILLATOR_Initialize 0000                         _EXECUTExEFFECT$1858 000C  
                       start_initialization 0000                    __size_of_PWM2_Initialize 0008  
                  __size_of_TMR0_Initialize 0019                         ?_PWM2_LoadDutyValue 0006  
           __size_of_PIN_MANAGER_Initialize 0034                           __size_of_LedBrake 0017  
                         __size_of_LedFlash 00CE                                    ??_LedOff 0006  
                                  ??_LedNom 0006                    __size_of_PIN_MANAGER_IOC 0009  
                     ??_ADC_StartConversion 0002                        ??_PWM2_LoadDutyValue 0008  
                  __size_of_PWM3_Initialize 0008                    __size_of_TMR1_Initialize 0020  
                                  ??___bmul 0003                 PWM2_LoadDutyValue@dutyValue 0006  
                          ??_PMD_Initialize 0002                                    ??___lmul 000A  
                                 _ReturnVal 000E                      __end_of_ADC_Initialize 0009  
                               __pdataBANK0 0000                                 __pdataBANK1 0000  
                                 _UpdateRcs 0014                 PWM5_LoadDutyValue@dutyValue 0006  
                               __pbssCOMMON 0000                                   ___latbits 0000  
                             __pcstackBANK0 0000                        _ADC_IsConversionDone 0000  
                        _PWM6_LoadDutyValue 0000                    __size_of_PWM4_Initialize 0008  
                  __size_of_TMR2_Initialize 000E                                    ?_RCS_INT 0000  
               ?_IOCCF1_SetInterruptHandler 0002                                    ?_RCSxLED 0000  
                                  ?_CalcPwm 0000                         ?_PWM6_LoadDutyValue 0006  
                                  ?_LedSlFl 0005                       _TMR0_InterruptHandler 000A  
                                 __pnvBANK0 0000                 __size_of_PWM1_LoadDutyValue 0013  
                    _PIN_MANAGER_Initialize 0000                    __size_of_PWM5_Initialize 0008  
                         _ADC_SelectChannel 0000            __end_of_TMR1_SetInterruptHandler 0006  
                           ?_ADC_Initialize 0000                          ?_ADC_SelectChannel 0000  
                      ??_PWM6_LoadDutyValue 0008                           ??_PWM1_Initialize 0002  
              ??_INTERRUPT_InterruptManager 0002                                    _ADACTPPS 1EC3  
          ??_IOCCF1_DefaultInterruptHandler 0000             ?_IOCCF1_DefaultInterruptHandler 0000  
                       ??_ADC_SelectChannel 0002                       ?_ADC_IsConversionDone 0000  
                  __size_of_PWM6_Initialize 0008                                    _T2CLKCON 0290  
                            __size_of_srand 000A                             _AdcResultSample 0004  
                         ??_TMR0_Initialize 0004                           ??_PWM2_Initialize 0002  
                                  _LATAbits 0018                                   clear_ram0 0000  
                                  _PIE0bits 0716                                    _PIE4bits 071A  
                   __size_of_EXECUTExEFFECT 0037                   __end_of_ADC_SelectChannel 000D  
                  __size_of_TMR1_WriteTimer 0011         __size_of_INTERRUPT_InterruptManager 002D  
                ??_TMR0_SetInterruptHandler 0004                                    _PIR0bits 070C  
                                  _PIR4bits 0710                               ??_TMR1_Reload 0002  
                                  _TMR0_INT 0000                                    _TMR0_ISR 0000  
                                  _TMR1_INT 0000                                    _TMR1_ISR 0000  
                         ??_PIN_MANAGER_IOC 0002                 __size_of_PWM5_LoadDutyValue 0016  
                     __end_of_INITxEXECUTER 0013                                    _AdcState 0010  
                         ??_TMR1_Initialize 0004                           ??_PWM3_Initialize 0002  
                                _ADCON0bits 009D                    ADC_SelectChannel@channel 0003  
                   __size_of_FVR_Initialize 0004                                    _LedBrake 0000  
                                  _LedFlash 0000                            __size_of_RCS_INT 0007  
                         ___lmul@multiplier 0002                            __size_of_RCSxLED 0087  
                           EXECUTExEFFECT@x 000F                            __size_of_CalcPwm 002A  
                         ??_PWM4_Initialize 0002                           ??_TMR2_Initialize 0002  
                             ?_BATTxPROTECT 0000                            __size_of_LedSlFl 01F7  
                __end_of_PWM4_LoadDutyValue 0016                    ?_ADC_GetConversionResult 0002  
                   ??_OSCILLATOR_Initialize 0002                                  CalcPwm@Led 0004  
                         ??_PWM5_Initialize 0002                    _TMR1_SetInterruptHandler 0000  
                        _PWM3_LoadDutyValue 0000                         __end_of_TMR1_Reload 0009  
                     _TMR1_InterruptHandler 0006                      ??_ADC_IsConversionDone 0002  
                                _T0CON0bits 059E                                    __ptext10 0000  
                                  __ptext11 0000                                    __ptext20 0000  
                                  __ptext12 0000                                    __ptext21 0000  
                                  __ptext13 0000                                  _T1GCONbits 020F  
                                  __ptext30 0000                                    __ptext22 0000  
                                  __ptext14 0000                                    __ptext31 0000  
                                  __ptext23 0000                                    __ptext15 0000  
                                  __ptext40 0000                                    __ptext32 0000  
                                  __ptext24 0000                                    __ptext16 0000  
                                  __ptext41 0000                                    __ptext33 0000  
                                  __ptext25 0000                                    __ptext17 0000  
                                  __ptext50 0000                                    __ptext42 0000  
                                  __ptext34 0000                                    __ptext26 0000  
                                  __ptext18 0000                                    __ptext51 0000  
                                  __ptext35 0000                                    __ptext27 0000  
                                  __ptext19 0000                                    __ptext52 0000  
                                  __ptext44 0000                                    __ptext36 0000  
                                  __ptext28 0000                                    __ptext53 0000  
                                  __ptext45 0000                                    __ptext37 0000  
                                  __ptext29 0000                                    __ptext54 0000  
                                  __ptext46 0000                                    __ptext38 0000  
                                  __ptext55 0000                                    __ptext47 0000  
                                  __ptext39 0000                                    __ptext48 0000  
                                  __ptext49 0000                         ?_PWM3_LoadDutyValue 0006  
                                _IOCCF1_ISR 0000                              ??_BATTxPROTECT 0002  
                         ??_PWM6_Initialize 0002                               __size_of_main 00C8  
                             __size_of_rand 0035                                 LedBrake@Led 0005  
      __end_of_TMR0_DefaultInterruptHandler 0001       __size_of_TMR0_DefaultInterruptHandler 0001  
              _TMR0_DefaultInterruptHandler 0000                  __size_of_ADC_SelectChannel 000D  
                               LedFlash@Led 0005                        ??_PWM3_LoadDutyValue 0008  
                                  int$flags 007E          __end_of_INTERRUPT_InterruptManager 002D  
                _INTERRUPT_InterruptManager 0000                           ??_TMR1_WriteTimer 0002  
                                _INTCONbits 000B                                  _FVRCONbits 090C  
                  EXECUTExEFFECT@ReturnData 000E                                    intlevel1 0000* 
               __end_of_ADC_StartConversion 0003                     ?_PIN_MANAGER_Initialize 0000  
           __end_of_ADC_GetConversionResult 0006                              _EXECUTExEFFECT 0000  
                           _PWM1_Initialize 0000                            ??_ADC_Initialize 0002  
             ?_TMR0_DefaultInterruptHandler 0000                 __size_of_PWM2_LoadDutyValue 0013  
                               _TMR1_Reload 0000                                  LedSlFl@Led 0005  
               PWM3_LoadDutyValue@dutyValue 0006                              _FVR_Initialize 0000  
                           _TMR0_Initialize 0000                             _PWM2_Initialize 0000  
                              _AdcResultAvg 0002                 PWM6_LoadDutyValue@dutyValue 0006  
                               ?_IOCCF1_ISR 0000              __end_of_PIN_MANAGER_Initialize 0034  
                    __end_of_EXECUTExEFFECT 0037      __end_of_IOCCF1_DefaultInterruptHandler 0001  
   __size_of_IOCCF1_DefaultInterruptHandler 0001              _IOCCF1_DefaultInterruptHandler 0000  
                __end_of_PWM1_LoadDutyValue 0013                             _PIN_MANAGER_IOC 0000  
                   _IOCCF1_InterruptHandler 0000                             _TMR1_Initialize 0000  
                           _PWM3_Initialize 0000  
