Version 3.2 HI-TECH Software Intermediate Code
"84 modbus/PetitModbus.h
[s S1 `ui -> 7 `i `uc 1 `uc 1 `ui 1 `ui 1 ]
[n S1 . Reg MbCommError MbExceptionCode MbReceiveCounter MbSentCounter ]
"35 modbus/PetitModbus.c
[s S118 `uc 1 `uc 1 `uc + * -> 7 `i -> 2 `i -> 10 `i `us 1 ]
[n S118 . Address Function DataBuf DataLen ]
"46
[c E1345 0 1 2 3 4 .. ]
[n E1345 . PETIT_RXTX_IDLE PETIT_RXTX_START PETIT_RXTX_DATABUF PETIT_RXTX_WAIT_ANSWER PETIT_RXTX_TIMEOUT  ]
"26 modbus/PetitModbusPort.h
[v _PetitModBus_UART_String `(uc ~T0 @X0 0 ef2`*uc`ui ]
"21
[v _PetitReceiveCounter `Vuc ~T0 @X0 0 e ]
"20
[v _PetitReceiveBuffer `Vuc ~T0 @X0 -> 0 `x e ]
"674 C:\Program Files (x86)\Microchip\xc8\v1.44\include\pic16f777.h
[v _TMR1 `Vus ~T0 @X0 0 e@14 ]
"566
[s S22 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S22 . TMR1IF TMR2IF CCP1IF SSPIF TXIF RCIF ADIF PSPIF ]
"565
[u S21 `S22 1 ]
[n S21 . . ]
"577
[v _PIR1bits `VS21 ~T0 @X0 0 e@12 ]
"1692
[s S65 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S65 . TMR1IE TMR2IE CCP1IE SSPIE TXIE RCIE ADIE PSPIE ]
"1691
[u S64 `S65 1 ]
[n S64 . . ]
"1703
[v _PIE1bits `VS64 ~T0 @X0 0 e@140 ]
"701
[s S26 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S26 . TMR1ON TMR1CS nT1SYNC T1OSCEN T1CKPS T1RUN ]
"709
[s S27 :2 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S27 . . T1SYNC . T1CKPS0 T1CKPS1 ]
"716
[s S28 :2 `uc 1 :1 `uc 1 ]
[n S28 . . T1INSYNC ]
"700
[u S25 `S26 1 `S27 1 `S28 1 ]
[n S25 . . . . ]
"721
[v _T1CONbits `VS25 ~T0 @X0 0 e@16 ]
"356
[s S13 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S13 . RD0 RD1 RD2 RD3 RD4 RD5 RD6 RD7 ]
"355
[u S12 `S13 1 ]
[n S12 . . ]
"367
[v _PORTDbits `VS12 ~T0 @X0 0 e@8 ]
"350 modbus/PetitModbus.c
[c E5 1 2 3 4 .. ]
[n E5 . SLAVE_DATA_BUSY SLAVE_DATA_OK SLAVE_DATA_NOK SLAVE_DATA_TIMEOUT  ]
"98 modbus/PetitModbus.h
[v _HandlePetitModbusReadHoldingRegistersSlaveReadback `(v ~T0 @X0 0 ef ]
"97
[v _HandlePetitModbusWriteSingleRegisterSlaveReadback `(v ~T0 @X0 0 ef ]
"99
[v _HandleMPetitodbusWriteMultipleRegistersSlaveReadback `(v ~T0 @X0 0 ef ]
"100
[v _HandleMPetitodbusMbExceptionCodesSlaveReadback `(v ~T0 @X0 0 ef ]
"23 modbus/PetitModbusPort.h
[v _PetitModBus_UART_Initialise `(v ~T0 @X0 0 ef ]
"24
[v _PetitModBus_TIMER_Initialise `(v ~T0 @X0 0 ef ]
"21 modbus/PetitModbus.h
[v _auchCRCHi `Cuc ~T0 @X0 -> 0 `x e ]
[i _auchCRCHi
:U ..
"22
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
"23
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
"24
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
"25
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
"26
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
"27
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
"28
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 1 `i `uc
"29
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
"30
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
"31
-> -> 64 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
"32
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
"33
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
"34
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
"35
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
"36
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 1 `i `uc
"37
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
"38
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
-> -> 64 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 1 `i `uc
-> -> 192 `i `uc
-> -> 128 `i `uc
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 193 `i `uc
-> -> 129 `i `uc
"40
-> -> 64 `i `uc
..
]
[; ;PetitModbus.h: 21: const unsigned char auchCRCHi[] = {
[; ;PetitModbus.h: 22: 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81,
[; ;PetitModbus.h: 23: 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
[; ;PetitModbus.h: 24: 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01,
[; ;PetitModbus.h: 25: 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,
[; ;PetitModbus.h: 26: 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81,
[; ;PetitModbus.h: 27: 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,
[; ;PetitModbus.h: 28: 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01,
[; ;PetitModbus.h: 29: 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
[; ;PetitModbus.h: 30: 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81,
[; ;PetitModbus.h: 31: 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
[; ;PetitModbus.h: 32: 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01,
[; ;PetitModbus.h: 33: 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
[; ;PetitModbus.h: 34: 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81,
[; ;PetitModbus.h: 35: 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
[; ;PetitModbus.h: 36: 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01,
[; ;PetitModbus.h: 37: 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
[; ;PetitModbus.h: 38: 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81,
[; ;PetitModbus.h: 39: 0x40
[; ;PetitModbus.h: 40: } ;
"43
[v _auchCRCLo `Cuc ~T0 @X0 -> 0 `x e ]
[i _auchCRCLo
:U ..
"44
-> -> 0 `i `uc
-> -> 192 `i `uc
-> -> 193 `i `uc
-> -> 1 `i `uc
-> -> 195 `i `uc
-> -> 3 `i `uc
-> -> 2 `i `uc
-> -> 194 `i `uc
-> -> 198 `i `uc
-> -> 6 `i `uc
-> -> 7 `i `uc
-> -> 199 `i `uc
-> -> 5 `i `uc
-> -> 197 `i `uc
-> -> 196 `i `uc
"45
-> -> 4 `i `uc
-> -> 204 `i `uc
-> -> 12 `i `uc
-> -> 13 `i `uc
-> -> 205 `i `uc
-> -> 15 `i `uc
-> -> 207 `i `uc
-> -> 206 `i `uc
-> -> 14 `i `uc
-> -> 10 `i `uc
-> -> 202 `i `uc
-> -> 203 `i `uc
-> -> 11 `i `uc
-> -> 201 `i `uc
-> -> 9 `i `uc
"46
-> -> 8 `i `uc
-> -> 200 `i `uc
-> -> 216 `i `uc
-> -> 24 `i `uc
-> -> 25 `i `uc
-> -> 217 `i `uc
-> -> 27 `i `uc
-> -> 219 `i `uc
-> -> 218 `i `uc
-> -> 26 `i `uc
-> -> 30 `i `uc
-> -> 222 `i `uc
-> -> 223 `i `uc
-> -> 31 `i `uc
-> -> 221 `i `uc
"47
-> -> 29 `i `uc
-> -> 28 `i `uc
-> -> 220 `i `uc
-> -> 20 `i `uc
-> -> 212 `i `uc
-> -> 213 `i `uc
-> -> 21 `i `uc
-> -> 215 `i `uc
-> -> 23 `i `uc
-> -> 22 `i `uc
-> -> 214 `i `uc
-> -> 210 `i `uc
-> -> 18 `i `uc
-> -> 19 `i `uc
-> -> 211 `i `uc
"48
-> -> 17 `i `uc
-> -> 209 `i `uc
-> -> 208 `i `uc
-> -> 16 `i `uc
-> -> 240 `i `uc
-> -> 48 `i `uc
-> -> 49 `i `uc
-> -> 241 `i `uc
-> -> 51 `i `uc
-> -> 243 `i `uc
-> -> 242 `i `uc
-> -> 50 `i `uc
-> -> 54 `i `uc
-> -> 246 `i `uc
-> -> 247 `i `uc
"49
-> -> 55 `i `uc
-> -> 245 `i `uc
-> -> 53 `i `uc
-> -> 52 `i `uc
-> -> 244 `i `uc
-> -> 60 `i `uc
-> -> 252 `i `uc
-> -> 253 `i `uc
-> -> 61 `i `uc
-> -> 255 `i `uc
-> -> 63 `i `uc
-> -> 62 `i `uc
-> -> 254 `i `uc
-> -> 250 `i `uc
-> -> 58 `i `uc
"50
-> -> 59 `i `uc
-> -> 251 `i `uc
-> -> 57 `i `uc
-> -> 249 `i `uc
-> -> 248 `i `uc
-> -> 56 `i `uc
-> -> 40 `i `uc
-> -> 232 `i `uc
-> -> 233 `i `uc
-> -> 41 `i `uc
-> -> 235 `i `uc
-> -> 43 `i `uc
-> -> 42 `i `uc
-> -> 234 `i `uc
-> -> 238 `i `uc
"51
-> -> 46 `i `uc
-> -> 47 `i `uc
-> -> 239 `i `uc
-> -> 45 `i `uc
-> -> 237 `i `uc
-> -> 236 `i `uc
-> -> 44 `i `uc
-> -> 228 `i `uc
-> -> 36 `i `uc
-> -> 37 `i `uc
-> -> 229 `i `uc
-> -> 39 `i `uc
-> -> 231 `i `uc
-> -> 230 `i `uc
-> -> 38 `i `uc
"52
-> -> 34 `i `uc
-> -> 226 `i `uc
-> -> 227 `i `uc
-> -> 35 `i `uc
-> -> 225 `i `uc
-> -> 33 `i `uc
-> -> 32 `i `uc
-> -> 224 `i `uc
-> -> 160 `i `uc
-> -> 96 `i `uc
-> -> 97 `i `uc
-> -> 161 `i `uc
-> -> 99 `i `uc
-> -> 163 `i `uc
-> -> 162 `i `uc
"53
-> -> 98 `i `uc
-> -> 102 `i `uc
-> -> 166 `i `uc
-> -> 167 `i `uc
-> -> 103 `i `uc
-> -> 165 `i `uc
-> -> 101 `i `uc
-> -> 100 `i `uc
-> -> 164 `i `uc
-> -> 108 `i `uc
-> -> 172 `i `uc
-> -> 173 `i `uc
-> -> 109 `i `uc
-> -> 175 `i `uc
-> -> 111 `i `uc
"54
-> -> 110 `i `uc
-> -> 174 `i `uc
-> -> 170 `i `uc
-> -> 106 `i `uc
-> -> 107 `i `uc
-> -> 171 `i `uc
-> -> 105 `i `uc
-> -> 169 `i `uc
-> -> 168 `i `uc
-> -> 104 `i `uc
-> -> 120 `i `uc
-> -> 184 `i `uc
-> -> 185 `i `uc
-> -> 121 `i `uc
-> -> 187 `i `uc
"55
-> -> 123 `i `uc
-> -> 122 `i `uc
-> -> 186 `i `uc
-> -> 190 `i `uc
-> -> 126 `i `uc
-> -> 127 `i `uc
-> -> 191 `i `uc
-> -> 125 `i `uc
-> -> 189 `i `uc
-> -> 188 `i `uc
-> -> 124 `i `uc
-> -> 180 `i `uc
-> -> 116 `i `uc
-> -> 117 `i `uc
-> -> 181 `i `uc
"56
-> -> 119 `i `uc
-> -> 183 `i `uc
-> -> 182 `i `uc
-> -> 118 `i `uc
-> -> 114 `i `uc
-> -> 178 `i `uc
-> -> 179 `i `uc
-> -> 115 `i `uc
-> -> 177 `i `uc
-> -> 113 `i `uc
-> -> 112 `i `uc
-> -> 176 `i `uc
-> -> 80 `i `uc
-> -> 144 `i `uc
-> -> 145 `i `uc
"57
-> -> 81 `i `uc
-> -> 147 `i `uc
-> -> 83 `i `uc
-> -> 82 `i `uc
-> -> 146 `i `uc
-> -> 150 `i `uc
-> -> 86 `i `uc
-> -> 87 `i `uc
-> -> 151 `i `uc
-> -> 85 `i `uc
-> -> 149 `i `uc
-> -> 148 `i `uc
-> -> 84 `i `uc
-> -> 156 `i `uc
-> -> 92 `i `uc
"58
-> -> 93 `i `uc
-> -> 157 `i `uc
-> -> 95 `i `uc
-> -> 159 `i `uc
-> -> 158 `i `uc
-> -> 94 `i `uc
-> -> 90 `i `uc
-> -> 154 `i `uc
-> -> 155 `i `uc
-> -> 91 `i `uc
-> -> 153 `i `uc
-> -> 89 `i `uc
-> -> 88 `i `uc
-> -> 152 `i `uc
-> -> 136 `i `uc
"59
-> -> 72 `i `uc
-> -> 73 `i `uc
-> -> 137 `i `uc
-> -> 75 `i `uc
-> -> 139 `i `uc
-> -> 138 `i `uc
-> -> 74 `i `uc
-> -> 78 `i `uc
-> -> 142 `i `uc
-> -> 143 `i `uc
-> -> 79 `i `uc
-> -> 141 `i `uc
-> -> 77 `i `uc
-> -> 76 `i `uc
-> -> 140 `i `uc
"60
-> -> 68 `i `uc
-> -> 132 `i `uc
-> -> 133 `i `uc
-> -> 69 `i `uc
-> -> 135 `i `uc
-> -> 71 `i `uc
-> -> 70 `i `uc
-> -> 134 `i `uc
-> -> 130 `i `uc
-> -> 66 `i `uc
-> -> 67 `i `uc
-> -> 131 `i `uc
-> -> 65 `i `uc
-> -> 129 `i `uc
-> -> 128 `i `uc
"62
-> -> 64 `i `uc
..
]
[; ;PetitModbus.h: 43: const unsigned char auchCRCLo[] = {
[; ;PetitModbus.h: 44: 0x00, 0xC0, 0xC1, 0x01, 0xC3, 0x03, 0x02, 0xC2, 0xC6, 0x06, 0x07, 0xC7, 0x05, 0xC5, 0xC4,
[; ;PetitModbus.h: 45: 0x04, 0xCC, 0x0C, 0x0D, 0xCD, 0x0F, 0xCF, 0xCE, 0x0E, 0x0A, 0xCA, 0xCB, 0x0B, 0xC9, 0x09,
[; ;PetitModbus.h: 46: 0x08, 0xC8, 0xD8, 0x18, 0x19, 0xD9, 0x1B, 0xDB, 0xDA, 0x1A, 0x1E, 0xDE, 0xDF, 0x1F, 0xDD,
[; ;PetitModbus.h: 47: 0x1D, 0x1C, 0xDC, 0x14, 0xD4, 0xD5, 0x15, 0xD7, 0x17, 0x16, 0xD6, 0xD2, 0x12, 0x13, 0xD3,
[; ;PetitModbus.h: 48: 0x11, 0xD1, 0xD0, 0x10, 0xF0, 0x30, 0x31, 0xF1, 0x33, 0xF3, 0xF2, 0x32, 0x36, 0xF6, 0xF7,
[; ;PetitModbus.h: 49: 0x37, 0xF5, 0x35, 0x34, 0xF4, 0x3C, 0xFC, 0xFD, 0x3D, 0xFF, 0x3F, 0x3E, 0xFE, 0xFA, 0x3A,
[; ;PetitModbus.h: 50: 0x3B, 0xFB, 0x39, 0xF9, 0xF8, 0x38, 0x28, 0xE8, 0xE9, 0x29, 0xEB, 0x2B, 0x2A, 0xEA, 0xEE,
[; ;PetitModbus.h: 51: 0x2E, 0x2F, 0xEF, 0x2D, 0xED, 0xEC, 0x2C, 0xE4, 0x24, 0x25, 0xE5, 0x27, 0xE7, 0xE6, 0x26,
[; ;PetitModbus.h: 52: 0x22, 0xE2, 0xE3, 0x23, 0xE1, 0x21, 0x20, 0xE0, 0xA0, 0x60, 0x61, 0xA1, 0x63, 0xA3, 0xA2,
[; ;PetitModbus.h: 53: 0x62, 0x66, 0xA6, 0xA7, 0x67, 0xA5, 0x65, 0x64, 0xA4, 0x6C, 0xAC, 0xAD, 0x6D, 0xAF, 0x6F,
[; ;PetitModbus.h: 54: 0x6E, 0xAE, 0xAA, 0x6A, 0x6B, 0xAB, 0x69, 0xA9, 0xA8, 0x68, 0x78, 0xB8, 0xB9, 0x79, 0xBB,
[; ;PetitModbus.h: 55: 0x7B, 0x7A, 0xBA, 0xBE, 0x7E, 0x7F, 0xBF, 0x7D, 0xBD, 0xBC, 0x7C, 0xB4, 0x74, 0x75, 0xB5,
[; ;PetitModbus.h: 56: 0x77, 0xB7, 0xB6, 0x76, 0x72, 0xB2, 0xB3, 0x73, 0xB1, 0x71, 0x70, 0xB0, 0x50, 0x90, 0x91,
[; ;PetitModbus.h: 57: 0x51, 0x93, 0x53, 0x52, 0x92, 0x96, 0x56, 0x57, 0x97, 0x55, 0x95, 0x94, 0x54, 0x9C, 0x5C,
[; ;PetitModbus.h: 58: 0x5D, 0x9D, 0x5F, 0x9F, 0x9E, 0x5E, 0x5A, 0x9A, 0x9B, 0x5B, 0x99, 0x59, 0x58, 0x98, 0x88,
[; ;PetitModbus.h: 59: 0x48, 0x49, 0x89, 0x4B, 0x8B, 0x8A, 0x4A, 0x4E, 0x8E, 0x8F, 0x4F, 0x8D, 0x4D, 0x4C, 0x8C,
[; ;PetitModbus.h: 60: 0x44, 0x84, 0x85, 0x45, 0x87, 0x47, 0x46, 0x86, 0x82, 0x42, 0x43, 0x83, 0x41, 0x81, 0x80,
[; ;PetitModbus.h: 61: 0x40
[; ;PetitModbus.h: 62: };
[; ;PetitModbus.h: 72: extern volatile unsigned short PetitModbusTimerValue;
[; ;PetitModbus.h: 73: extern volatile unsigned int SlaveAnswerTimeoutCounter;
[; ;PetitModbus.h: 75: typedef enum
[; ;PetitModbus.h: 76: {
[; ;PetitModbus.h: 77: SLAVE_DATA_BUSY = 1,
[; ;PetitModbus.h: 78: SLAVE_DATA_OK = 2,
[; ;PetitModbus.h: 79: SLAVE_DATA_NOK = 3,
[; ;PetitModbus.h: 80: SLAVE_DATA_TIMEOUT = 4
[; ;PetitModbus.h: 81: }SLAVE_DATA;
[; ;PetitModbus.h: 83: typedef struct
[; ;PetitModbus.h: 84: {
[; ;PetitModbus.h: 85: unsigned int Reg[7];
[; ;PetitModbus.h: 86: unsigned char MbCommError;
[; ;PetitModbus.h: 87: unsigned char MbExceptionCode;
[; ;PetitModbus.h: 88: unsigned int MbReceiveCounter;
[; ;PetitModbus.h: 89: unsigned int MbSentCounter;
[; ;PetitModbus.h: 90: }SLAVE_INFO;
[; ;PetitModbus.h: 93: extern void InitPetitModbus(SLAVE_INFO *location);
[; ;PetitModbus.h: 94: extern void ProcessPetitModbus(void);
[; ;PetitModbus.h: 95: extern unsigned char SendPetitModbus(unsigned char Address, unsigned char Function, unsigned char *DataBuf, unsigned short DataLen);
[; ;PetitModbus.h: 97: void HandlePetitModbusWriteSingleRegisterSlaveReadback(void);
[; ;PetitModbus.h: 98: void HandlePetitModbusReadHoldingRegistersSlaveReadback(void);
[; ;PetitModbus.h: 99: void HandleMPetitodbusWriteMultipleRegistersSlaveReadback(void);
[; ;PetitModbus.h: 100: void HandleMPetitodbusMbExceptionCodesSlaveReadback(void);
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;pic16f777.h: 50: extern volatile unsigned char INDF @ 0x000;
"52 C:\Program Files (x86)\Microchip\xc8\v1.44\include\pic16f777.h
[; ;pic16f777.h: 52: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f777.h: 57: extern volatile unsigned char TMR0 @ 0x001;
"59
[; ;pic16f777.h: 59: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f777.h: 64: extern volatile unsigned char PCL @ 0x002;
"66
[; ;pic16f777.h: 66: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f777.h: 71: extern volatile unsigned char STATUS @ 0x003;
"73
[; ;pic16f777.h: 73: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f777.h: 76: typedef union {
[; ;pic16f777.h: 77: struct {
[; ;pic16f777.h: 78: unsigned C :1;
[; ;pic16f777.h: 79: unsigned DC :1;
[; ;pic16f777.h: 80: unsigned Z :1;
[; ;pic16f777.h: 81: unsigned nPD :1;
[; ;pic16f777.h: 82: unsigned nTO :1;
[; ;pic16f777.h: 83: unsigned RP :2;
[; ;pic16f777.h: 84: unsigned IRP :1;
[; ;pic16f777.h: 85: };
[; ;pic16f777.h: 86: struct {
[; ;pic16f777.h: 87: unsigned :5;
[; ;pic16f777.h: 88: unsigned RP0 :1;
[; ;pic16f777.h: 89: unsigned RP1 :1;
[; ;pic16f777.h: 90: };
[; ;pic16f777.h: 91: struct {
[; ;pic16f777.h: 92: unsigned CARRY :1;
[; ;pic16f777.h: 93: unsigned :1;
[; ;pic16f777.h: 94: unsigned ZERO :1;
[; ;pic16f777.h: 95: };
[; ;pic16f777.h: 96: } STATUSbits_t;
[; ;pic16f777.h: 97: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f777.h: 157: extern volatile unsigned char FSR @ 0x004;
"159
[; ;pic16f777.h: 159: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f777.h: 164: extern volatile unsigned char PORTA @ 0x005;
"166
[; ;pic16f777.h: 166: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f777.h: 169: typedef union {
[; ;pic16f777.h: 170: struct {
[; ;pic16f777.h: 171: unsigned RA0 :1;
[; ;pic16f777.h: 172: unsigned RA1 :1;
[; ;pic16f777.h: 173: unsigned RA2 :1;
[; ;pic16f777.h: 174: unsigned RA3 :1;
[; ;pic16f777.h: 175: unsigned RA4 :1;
[; ;pic16f777.h: 176: unsigned RA5 :1;
[; ;pic16f777.h: 177: unsigned RA6 :1;
[; ;pic16f777.h: 178: unsigned RA7 :1;
[; ;pic16f777.h: 179: };
[; ;pic16f777.h: 180: } PORTAbits_t;
[; ;pic16f777.h: 181: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f777.h: 226: extern volatile unsigned char PORTB @ 0x006;
"228
[; ;pic16f777.h: 228: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f777.h: 231: typedef union {
[; ;pic16f777.h: 232: struct {
[; ;pic16f777.h: 233: unsigned RB0 :1;
[; ;pic16f777.h: 234: unsigned RB1 :1;
[; ;pic16f777.h: 235: unsigned RB2 :1;
[; ;pic16f777.h: 236: unsigned RB3 :1;
[; ;pic16f777.h: 237: unsigned RB4 :1;
[; ;pic16f777.h: 238: unsigned RB5 :1;
[; ;pic16f777.h: 239: unsigned RB6 :1;
[; ;pic16f777.h: 240: unsigned RB7 :1;
[; ;pic16f777.h: 241: };
[; ;pic16f777.h: 242: } PORTBbits_t;
[; ;pic16f777.h: 243: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f777.h: 288: extern volatile unsigned char PORTC @ 0x007;
"290
[; ;pic16f777.h: 290: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16f777.h: 293: typedef union {
[; ;pic16f777.h: 294: struct {
[; ;pic16f777.h: 295: unsigned RC0 :1;
[; ;pic16f777.h: 296: unsigned RC1 :1;
[; ;pic16f777.h: 297: unsigned RC2 :1;
[; ;pic16f777.h: 298: unsigned RC3 :1;
[; ;pic16f777.h: 299: unsigned RC4 :1;
[; ;pic16f777.h: 300: unsigned RC5 :1;
[; ;pic16f777.h: 301: unsigned RC6 :1;
[; ;pic16f777.h: 302: unsigned RC7 :1;
[; ;pic16f777.h: 303: };
[; ;pic16f777.h: 304: } PORTCbits_t;
[; ;pic16f777.h: 305: extern volatile PORTCbits_t PORTCbits @ 0x007;
[; ;pic16f777.h: 350: extern volatile unsigned char PORTD @ 0x008;
"352
[; ;pic16f777.h: 352: asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
[; ;pic16f777.h: 355: typedef union {
[; ;pic16f777.h: 356: struct {
[; ;pic16f777.h: 357: unsigned RD0 :1;
[; ;pic16f777.h: 358: unsigned RD1 :1;
[; ;pic16f777.h: 359: unsigned RD2 :1;
[; ;pic16f777.h: 360: unsigned RD3 :1;
[; ;pic16f777.h: 361: unsigned RD4 :1;
[; ;pic16f777.h: 362: unsigned RD5 :1;
[; ;pic16f777.h: 363: unsigned RD6 :1;
[; ;pic16f777.h: 364: unsigned RD7 :1;
[; ;pic16f777.h: 365: };
[; ;pic16f777.h: 366: } PORTDbits_t;
[; ;pic16f777.h: 367: extern volatile PORTDbits_t PORTDbits @ 0x008;
[; ;pic16f777.h: 412: extern volatile unsigned char PORTE @ 0x009;
"414
[; ;pic16f777.h: 414: asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
[; ;pic16f777.h: 417: typedef union {
[; ;pic16f777.h: 418: struct {
[; ;pic16f777.h: 419: unsigned RE0 :1;
[; ;pic16f777.h: 420: unsigned RE1 :1;
[; ;pic16f777.h: 421: unsigned RE2 :1;
[; ;pic16f777.h: 422: unsigned RE3 :1;
[; ;pic16f777.h: 423: };
[; ;pic16f777.h: 424: } PORTEbits_t;
[; ;pic16f777.h: 425: extern volatile PORTEbits_t PORTEbits @ 0x009;
[; ;pic16f777.h: 450: extern volatile unsigned char PCLATH @ 0x00A;
"452
[; ;pic16f777.h: 452: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f777.h: 455: typedef union {
[; ;pic16f777.h: 456: struct {
[; ;pic16f777.h: 457: unsigned PCLATH :5;
[; ;pic16f777.h: 458: };
[; ;pic16f777.h: 459: } PCLATHbits_t;
[; ;pic16f777.h: 460: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f777.h: 470: extern volatile unsigned char INTCON @ 0x00B;
"472
[; ;pic16f777.h: 472: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f777.h: 475: typedef union {
[; ;pic16f777.h: 476: struct {
[; ;pic16f777.h: 477: unsigned RBIF :1;
[; ;pic16f777.h: 478: unsigned INTF :1;
[; ;pic16f777.h: 479: unsigned TMR0IF :1;
[; ;pic16f777.h: 480: unsigned RBIE :1;
[; ;pic16f777.h: 481: unsigned INTE :1;
[; ;pic16f777.h: 482: unsigned TMR0IE :1;
[; ;pic16f777.h: 483: unsigned PEIE :1;
[; ;pic16f777.h: 484: unsigned GIE :1;
[; ;pic16f777.h: 485: };
[; ;pic16f777.h: 486: struct {
[; ;pic16f777.h: 487: unsigned :1;
[; ;pic16f777.h: 488: unsigned INT0IF :1;
[; ;pic16f777.h: 489: unsigned T0IF :1;
[; ;pic16f777.h: 490: unsigned :1;
[; ;pic16f777.h: 491: unsigned INT0IE :1;
[; ;pic16f777.h: 492: unsigned T0IE :1;
[; ;pic16f777.h: 493: };
[; ;pic16f777.h: 494: } INTCONbits_t;
[; ;pic16f777.h: 495: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f777.h: 560: extern volatile unsigned char PIR1 @ 0x00C;
"562
[; ;pic16f777.h: 562: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f777.h: 565: typedef union {
[; ;pic16f777.h: 566: struct {
[; ;pic16f777.h: 567: unsigned TMR1IF :1;
[; ;pic16f777.h: 568: unsigned TMR2IF :1;
[; ;pic16f777.h: 569: unsigned CCP1IF :1;
[; ;pic16f777.h: 570: unsigned SSPIF :1;
[; ;pic16f777.h: 571: unsigned TXIF :1;
[; ;pic16f777.h: 572: unsigned RCIF :1;
[; ;pic16f777.h: 573: unsigned ADIF :1;
[; ;pic16f777.h: 574: unsigned PSPIF :1;
[; ;pic16f777.h: 575: };
[; ;pic16f777.h: 576: } PIR1bits_t;
[; ;pic16f777.h: 577: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f777.h: 622: extern volatile unsigned char PIR2 @ 0x00D;
"624
[; ;pic16f777.h: 624: asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
[; ;pic16f777.h: 627: typedef union {
[; ;pic16f777.h: 628: struct {
[; ;pic16f777.h: 629: unsigned CCP2IF :1;
[; ;pic16f777.h: 630: unsigned CCP3IF :1;
[; ;pic16f777.h: 631: unsigned :1;
[; ;pic16f777.h: 632: unsigned BCLIF :1;
[; ;pic16f777.h: 633: unsigned :1;
[; ;pic16f777.h: 634: unsigned LVDIF :1;
[; ;pic16f777.h: 635: unsigned CMIF :1;
[; ;pic16f777.h: 636: unsigned OSFIF :1;
[; ;pic16f777.h: 637: };
[; ;pic16f777.h: 638: } PIR2bits_t;
[; ;pic16f777.h: 639: extern volatile PIR2bits_t PIR2bits @ 0x00D;
[; ;pic16f777.h: 674: extern volatile unsigned short TMR1 @ 0x00E;
"676
[; ;pic16f777.h: 676: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f777.h: 681: extern volatile unsigned char TMR1L @ 0x00E;
"683
[; ;pic16f777.h: 683: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f777.h: 688: extern volatile unsigned char TMR1H @ 0x00F;
"690
[; ;pic16f777.h: 690: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f777.h: 695: extern volatile unsigned char T1CON @ 0x010;
"697
[; ;pic16f777.h: 697: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f777.h: 700: typedef union {
[; ;pic16f777.h: 701: struct {
[; ;pic16f777.h: 702: unsigned TMR1ON :1;
[; ;pic16f777.h: 703: unsigned TMR1CS :1;
[; ;pic16f777.h: 704: unsigned nT1SYNC :1;
[; ;pic16f777.h: 705: unsigned T1OSCEN :1;
[; ;pic16f777.h: 706: unsigned T1CKPS :2;
[; ;pic16f777.h: 707: unsigned T1RUN :1;
[; ;pic16f777.h: 708: };
[; ;pic16f777.h: 709: struct {
[; ;pic16f777.h: 710: unsigned :2;
[; ;pic16f777.h: 711: unsigned T1SYNC :1;
[; ;pic16f777.h: 712: unsigned :1;
[; ;pic16f777.h: 713: unsigned T1CKPS0 :1;
[; ;pic16f777.h: 714: unsigned T1CKPS1 :1;
[; ;pic16f777.h: 715: };
[; ;pic16f777.h: 716: struct {
[; ;pic16f777.h: 717: unsigned :2;
[; ;pic16f777.h: 718: unsigned T1INSYNC :1;
[; ;pic16f777.h: 719: };
[; ;pic16f777.h: 720: } T1CONbits_t;
[; ;pic16f777.h: 721: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f777.h: 776: extern volatile unsigned char TMR2 @ 0x011;
"778
[; ;pic16f777.h: 778: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f777.h: 783: extern volatile unsigned char T2CON @ 0x012;
"785
[; ;pic16f777.h: 785: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f777.h: 788: typedef union {
[; ;pic16f777.h: 789: struct {
[; ;pic16f777.h: 790: unsigned T2CKPS :2;
[; ;pic16f777.h: 791: unsigned TMR2ON :1;
[; ;pic16f777.h: 792: unsigned TOUTPS :4;
[; ;pic16f777.h: 793: };
[; ;pic16f777.h: 794: struct {
[; ;pic16f777.h: 795: unsigned T2CKPS0 :1;
[; ;pic16f777.h: 796: unsigned T2CKPS1 :1;
[; ;pic16f777.h: 797: unsigned :1;
[; ;pic16f777.h: 798: unsigned TOUTPS0 :1;
[; ;pic16f777.h: 799: unsigned TOUTPS1 :1;
[; ;pic16f777.h: 800: unsigned TOUTPS2 :1;
[; ;pic16f777.h: 801: unsigned TOUTPS3 :1;
[; ;pic16f777.h: 802: };
[; ;pic16f777.h: 803: } T2CONbits_t;
[; ;pic16f777.h: 804: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f777.h: 854: extern volatile unsigned char SSPBUF @ 0x013;
"856
[; ;pic16f777.h: 856: asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
[; ;pic16f777.h: 861: extern volatile unsigned char SSPCON @ 0x014;
"863
[; ;pic16f777.h: 863: asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
[; ;pic16f777.h: 866: typedef union {
[; ;pic16f777.h: 867: struct {
[; ;pic16f777.h: 868: unsigned SSPM :4;
[; ;pic16f777.h: 869: unsigned CKP :1;
[; ;pic16f777.h: 870: unsigned SSPEN :1;
[; ;pic16f777.h: 871: unsigned SSPOV :1;
[; ;pic16f777.h: 872: unsigned WCOL :1;
[; ;pic16f777.h: 873: };
[; ;pic16f777.h: 874: struct {
[; ;pic16f777.h: 875: unsigned SSPM0 :1;
[; ;pic16f777.h: 876: unsigned SSPM1 :1;
[; ;pic16f777.h: 877: unsigned SSPM2 :1;
[; ;pic16f777.h: 878: unsigned SSPM3 :1;
[; ;pic16f777.h: 879: };
[; ;pic16f777.h: 880: } SSPCONbits_t;
[; ;pic16f777.h: 881: extern volatile SSPCONbits_t SSPCONbits @ 0x014;
[; ;pic16f777.h: 931: extern volatile unsigned short CCPR1 @ 0x015;
"933
[; ;pic16f777.h: 933: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f777.h: 938: extern volatile unsigned char CCPR1L @ 0x015;
"940
[; ;pic16f777.h: 940: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f777.h: 945: extern volatile unsigned char CCPR1H @ 0x016;
"947
[; ;pic16f777.h: 947: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f777.h: 952: extern volatile unsigned char CCP1CON @ 0x017;
"954
[; ;pic16f777.h: 954: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f777.h: 957: typedef union {
[; ;pic16f777.h: 958: struct {
[; ;pic16f777.h: 959: unsigned CCP1M :4;
[; ;pic16f777.h: 960: unsigned CCP1Y :1;
[; ;pic16f777.h: 961: unsigned CCP1X :1;
[; ;pic16f777.h: 962: };
[; ;pic16f777.h: 963: struct {
[; ;pic16f777.h: 964: unsigned CCP1M0 :1;
[; ;pic16f777.h: 965: unsigned CCP1M1 :1;
[; ;pic16f777.h: 966: unsigned CCP1M2 :1;
[; ;pic16f777.h: 967: unsigned CCP1M3 :1;
[; ;pic16f777.h: 968: };
[; ;pic16f777.h: 969: } CCP1CONbits_t;
[; ;pic16f777.h: 970: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f777.h: 1010: extern volatile unsigned char RCSTA @ 0x018;
"1012
[; ;pic16f777.h: 1012: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f777.h: 1015: typedef union {
[; ;pic16f777.h: 1016: struct {
[; ;pic16f777.h: 1017: unsigned RX9D :1;
[; ;pic16f777.h: 1018: unsigned OERR :1;
[; ;pic16f777.h: 1019: unsigned FERR :1;
[; ;pic16f777.h: 1020: unsigned ADDEN :1;
[; ;pic16f777.h: 1021: unsigned CREN :1;
[; ;pic16f777.h: 1022: unsigned SREN :1;
[; ;pic16f777.h: 1023: unsigned RX9 :1;
[; ;pic16f777.h: 1024: unsigned SPEN :1;
[; ;pic16f777.h: 1025: };
[; ;pic16f777.h: 1026: struct {
[; ;pic16f777.h: 1027: unsigned RCD8 :1;
[; ;pic16f777.h: 1028: unsigned :5;
[; ;pic16f777.h: 1029: unsigned RC9 :1;
[; ;pic16f777.h: 1030: };
[; ;pic16f777.h: 1031: struct {
[; ;pic16f777.h: 1032: unsigned :6;
[; ;pic16f777.h: 1033: unsigned nRC8 :1;
[; ;pic16f777.h: 1034: };
[; ;pic16f777.h: 1035: struct {
[; ;pic16f777.h: 1036: unsigned :6;
[; ;pic16f777.h: 1037: unsigned RC8_9 :1;
[; ;pic16f777.h: 1038: };
[; ;pic16f777.h: 1039: } RCSTAbits_t;
[; ;pic16f777.h: 1040: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f777.h: 1105: extern volatile unsigned char TXREG @ 0x019;
"1107
[; ;pic16f777.h: 1107: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f777.h: 1112: extern volatile unsigned char RCREG @ 0x01A;
"1114
[; ;pic16f777.h: 1114: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f777.h: 1119: extern volatile unsigned short CCPR2 @ 0x01B;
"1121
[; ;pic16f777.h: 1121: asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
[; ;pic16f777.h: 1126: extern volatile unsigned char CCPR2L @ 0x01B;
"1128
[; ;pic16f777.h: 1128: asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
[; ;pic16f777.h: 1133: extern volatile unsigned char CCPR2H @ 0x01C;
"1135
[; ;pic16f777.h: 1135: asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
[; ;pic16f777.h: 1140: extern volatile unsigned char CCP2CON @ 0x01D;
"1142
[; ;pic16f777.h: 1142: asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
[; ;pic16f777.h: 1145: typedef union {
[; ;pic16f777.h: 1146: struct {
[; ;pic16f777.h: 1147: unsigned CCP2M :4;
[; ;pic16f777.h: 1148: unsigned CCP2Y :1;
[; ;pic16f777.h: 1149: unsigned CCP2X :1;
[; ;pic16f777.h: 1150: };
[; ;pic16f777.h: 1151: struct {
[; ;pic16f777.h: 1152: unsigned CCP2M0 :1;
[; ;pic16f777.h: 1153: unsigned CCP2M1 :1;
[; ;pic16f777.h: 1154: unsigned CCP2M2 :1;
[; ;pic16f777.h: 1155: unsigned CCP2M3 :1;
[; ;pic16f777.h: 1156: };
[; ;pic16f777.h: 1157: } CCP2CONbits_t;
[; ;pic16f777.h: 1158: extern volatile CCP2CONbits_t CCP2CONbits @ 0x01D;
[; ;pic16f777.h: 1198: extern volatile unsigned char ADRESH @ 0x01E;
"1200
[; ;pic16f777.h: 1200: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic16f777.h: 1205: extern volatile unsigned char ADCON0 @ 0x01F;
"1207
[; ;pic16f777.h: 1207: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16f777.h: 1210: typedef union {
[; ;pic16f777.h: 1211: struct {
[; ;pic16f777.h: 1212: unsigned ADON :1;
[; ;pic16f777.h: 1213: unsigned CHS3 :1;
[; ;pic16f777.h: 1214: unsigned GO_nDONE :1;
[; ;pic16f777.h: 1215: unsigned CHS :3;
[; ;pic16f777.h: 1216: unsigned ADCS :2;
[; ;pic16f777.h: 1217: };
[; ;pic16f777.h: 1218: struct {
[; ;pic16f777.h: 1219: unsigned :2;
[; ;pic16f777.h: 1220: unsigned GO :1;
[; ;pic16f777.h: 1221: unsigned CHS0 :1;
[; ;pic16f777.h: 1222: unsigned CHS1 :1;
[; ;pic16f777.h: 1223: unsigned CHS2 :1;
[; ;pic16f777.h: 1224: unsigned ADCS0 :1;
[; ;pic16f777.h: 1225: unsigned ADCS1 :1;
[; ;pic16f777.h: 1226: };
[; ;pic16f777.h: 1227: struct {
[; ;pic16f777.h: 1228: unsigned :2;
[; ;pic16f777.h: 1229: unsigned nDONE :1;
[; ;pic16f777.h: 1230: };
[; ;pic16f777.h: 1231: struct {
[; ;pic16f777.h: 1232: unsigned :2;
[; ;pic16f777.h: 1233: unsigned GO_DONE :1;
[; ;pic16f777.h: 1234: };
[; ;pic16f777.h: 1235: } ADCON0bits_t;
[; ;pic16f777.h: 1236: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic16f777.h: 1306: extern volatile unsigned char OPTION_REG @ 0x081;
"1308
[; ;pic16f777.h: 1308: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f777.h: 1311: typedef union {
[; ;pic16f777.h: 1312: struct {
[; ;pic16f777.h: 1313: unsigned PS :3;
[; ;pic16f777.h: 1314: unsigned PSA :1;
[; ;pic16f777.h: 1315: unsigned T0SE :1;
[; ;pic16f777.h: 1316: unsigned T0CS :1;
[; ;pic16f777.h: 1317: unsigned INTEDG :1;
[; ;pic16f777.h: 1318: unsigned nRBPU :1;
[; ;pic16f777.h: 1319: };
[; ;pic16f777.h: 1320: struct {
[; ;pic16f777.h: 1321: unsigned PS0 :1;
[; ;pic16f777.h: 1322: unsigned PS1 :1;
[; ;pic16f777.h: 1323: unsigned PS2 :1;
[; ;pic16f777.h: 1324: };
[; ;pic16f777.h: 1325: } OPTION_REGbits_t;
[; ;pic16f777.h: 1326: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f777.h: 1376: extern volatile unsigned char TRISA @ 0x085;
"1378
[; ;pic16f777.h: 1378: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f777.h: 1381: typedef union {
[; ;pic16f777.h: 1382: struct {
[; ;pic16f777.h: 1383: unsigned TRISA0 :1;
[; ;pic16f777.h: 1384: unsigned TRISA1 :1;
[; ;pic16f777.h: 1385: unsigned TRISA2 :1;
[; ;pic16f777.h: 1386: unsigned TRISA3 :1;
[; ;pic16f777.h: 1387: unsigned TRISA4 :1;
[; ;pic16f777.h: 1388: unsigned TRISA5 :1;
[; ;pic16f777.h: 1389: unsigned TRISA6 :1;
[; ;pic16f777.h: 1390: unsigned TRISA7 :1;
[; ;pic16f777.h: 1391: };
[; ;pic16f777.h: 1392: } TRISAbits_t;
[; ;pic16f777.h: 1393: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f777.h: 1438: extern volatile unsigned char TRISB @ 0x086;
"1440
[; ;pic16f777.h: 1440: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f777.h: 1443: typedef union {
[; ;pic16f777.h: 1444: struct {
[; ;pic16f777.h: 1445: unsigned TRISB0 :1;
[; ;pic16f777.h: 1446: unsigned TRISB1 :1;
[; ;pic16f777.h: 1447: unsigned TRISB2 :1;
[; ;pic16f777.h: 1448: unsigned TRISB3 :1;
[; ;pic16f777.h: 1449: unsigned TRISB4 :1;
[; ;pic16f777.h: 1450: unsigned TRISB5 :1;
[; ;pic16f777.h: 1451: unsigned TRISB6 :1;
[; ;pic16f777.h: 1452: unsigned TRISB7 :1;
[; ;pic16f777.h: 1453: };
[; ;pic16f777.h: 1454: } TRISBbits_t;
[; ;pic16f777.h: 1455: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f777.h: 1500: extern volatile unsigned char TRISC @ 0x087;
"1502
[; ;pic16f777.h: 1502: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16f777.h: 1505: typedef union {
[; ;pic16f777.h: 1506: struct {
[; ;pic16f777.h: 1507: unsigned TRISC0 :1;
[; ;pic16f777.h: 1508: unsigned TRISC1 :1;
[; ;pic16f777.h: 1509: unsigned TRISC2 :1;
[; ;pic16f777.h: 1510: unsigned TRISC3 :1;
[; ;pic16f777.h: 1511: unsigned TRISC4 :1;
[; ;pic16f777.h: 1512: unsigned TRISC5 :1;
[; ;pic16f777.h: 1513: unsigned TRISC6 :1;
[; ;pic16f777.h: 1514: unsigned TRISC7 :1;
[; ;pic16f777.h: 1515: };
[; ;pic16f777.h: 1516: } TRISCbits_t;
[; ;pic16f777.h: 1517: extern volatile TRISCbits_t TRISCbits @ 0x087;
[; ;pic16f777.h: 1562: extern volatile unsigned char TRISD @ 0x088;
"1564
[; ;pic16f777.h: 1564: asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
[; ;pic16f777.h: 1567: typedef union {
[; ;pic16f777.h: 1568: struct {
[; ;pic16f777.h: 1569: unsigned TRISD0 :1;
[; ;pic16f777.h: 1570: unsigned TRISD1 :1;
[; ;pic16f777.h: 1571: unsigned TRISD2 :1;
[; ;pic16f777.h: 1572: unsigned TRISD3 :1;
[; ;pic16f777.h: 1573: unsigned TRISD4 :1;
[; ;pic16f777.h: 1574: unsigned TRISD5 :1;
[; ;pic16f777.h: 1575: unsigned TRISD6 :1;
[; ;pic16f777.h: 1576: unsigned TRISD7 :1;
[; ;pic16f777.h: 1577: };
[; ;pic16f777.h: 1578: } TRISDbits_t;
[; ;pic16f777.h: 1579: extern volatile TRISDbits_t TRISDbits @ 0x088;
[; ;pic16f777.h: 1624: extern volatile unsigned char TRISE @ 0x089;
"1626
[; ;pic16f777.h: 1626: asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
[; ;pic16f777.h: 1629: typedef union {
[; ;pic16f777.h: 1630: struct {
[; ;pic16f777.h: 1631: unsigned TRISE0 :1;
[; ;pic16f777.h: 1632: unsigned TRISE1 :1;
[; ;pic16f777.h: 1633: unsigned TRISE2 :1;
[; ;pic16f777.h: 1634: unsigned TRISE3 :1;
[; ;pic16f777.h: 1635: unsigned PSPMODE :1;
[; ;pic16f777.h: 1636: unsigned IBOV :1;
[; ;pic16f777.h: 1637: unsigned OBF :1;
[; ;pic16f777.h: 1638: unsigned IBF :1;
[; ;pic16f777.h: 1639: };
[; ;pic16f777.h: 1640: } TRISEbits_t;
[; ;pic16f777.h: 1641: extern volatile TRISEbits_t TRISEbits @ 0x089;
[; ;pic16f777.h: 1686: extern volatile unsigned char PIE1 @ 0x08C;
"1688
[; ;pic16f777.h: 1688: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f777.h: 1691: typedef union {
[; ;pic16f777.h: 1692: struct {
[; ;pic16f777.h: 1693: unsigned TMR1IE :1;
[; ;pic16f777.h: 1694: unsigned TMR2IE :1;
[; ;pic16f777.h: 1695: unsigned CCP1IE :1;
[; ;pic16f777.h: 1696: unsigned SSPIE :1;
[; ;pic16f777.h: 1697: unsigned TXIE :1;
[; ;pic16f777.h: 1698: unsigned RCIE :1;
[; ;pic16f777.h: 1699: unsigned ADIE :1;
[; ;pic16f777.h: 1700: unsigned PSPIE :1;
[; ;pic16f777.h: 1701: };
[; ;pic16f777.h: 1702: } PIE1bits_t;
[; ;pic16f777.h: 1703: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f777.h: 1748: extern volatile unsigned char PIE2 @ 0x08D;
"1750
[; ;pic16f777.h: 1750: asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
[; ;pic16f777.h: 1753: typedef union {
[; ;pic16f777.h: 1754: struct {
[; ;pic16f777.h: 1755: unsigned CCP2IE :1;
[; ;pic16f777.h: 1756: unsigned CCP3IE :1;
[; ;pic16f777.h: 1757: unsigned :1;
[; ;pic16f777.h: 1758: unsigned BCLIE :1;
[; ;pic16f777.h: 1759: unsigned :1;
[; ;pic16f777.h: 1760: unsigned LVDIE :1;
[; ;pic16f777.h: 1761: unsigned CMIE :1;
[; ;pic16f777.h: 1762: unsigned OSFIE :1;
[; ;pic16f777.h: 1763: };
[; ;pic16f777.h: 1764: } PIE2bits_t;
[; ;pic16f777.h: 1765: extern volatile PIE2bits_t PIE2bits @ 0x08D;
[; ;pic16f777.h: 1800: extern volatile unsigned char PCON @ 0x08E;
"1802
[; ;pic16f777.h: 1802: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f777.h: 1805: typedef union {
[; ;pic16f777.h: 1806: struct {
[; ;pic16f777.h: 1807: unsigned nBOR :1;
[; ;pic16f777.h: 1808: unsigned nPOR :1;
[; ;pic16f777.h: 1809: unsigned SBOREN :1;
[; ;pic16f777.h: 1810: };
[; ;pic16f777.h: 1811: struct {
[; ;pic16f777.h: 1812: unsigned nBO :1;
[; ;pic16f777.h: 1813: };
[; ;pic16f777.h: 1814: } PCONbits_t;
[; ;pic16f777.h: 1815: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f777.h: 1840: extern volatile unsigned char OSCCON @ 0x08F;
"1842
[; ;pic16f777.h: 1842: asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
[; ;pic16f777.h: 1845: typedef union {
[; ;pic16f777.h: 1846: struct {
[; ;pic16f777.h: 1847: unsigned SCS :2;
[; ;pic16f777.h: 1848: unsigned IOFS :1;
[; ;pic16f777.h: 1849: unsigned OSTS :1;
[; ;pic16f777.h: 1850: unsigned IRCF :3;
[; ;pic16f777.h: 1851: };
[; ;pic16f777.h: 1852: struct {
[; ;pic16f777.h: 1853: unsigned SCS0 :1;
[; ;pic16f777.h: 1854: unsigned SCS1 :1;
[; ;pic16f777.h: 1855: unsigned :2;
[; ;pic16f777.h: 1856: unsigned IRCF0 :1;
[; ;pic16f777.h: 1857: unsigned IRCF1 :1;
[; ;pic16f777.h: 1858: unsigned IRCF2 :1;
[; ;pic16f777.h: 1859: };
[; ;pic16f777.h: 1860: } OSCCONbits_t;
[; ;pic16f777.h: 1861: extern volatile OSCCONbits_t OSCCONbits @ 0x08F;
[; ;pic16f777.h: 1911: extern volatile unsigned char OSCTUNE @ 0x090;
"1913
[; ;pic16f777.h: 1913: asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
[; ;pic16f777.h: 1916: typedef union {
[; ;pic16f777.h: 1917: struct {
[; ;pic16f777.h: 1918: unsigned TUN :6;
[; ;pic16f777.h: 1919: };
[; ;pic16f777.h: 1920: struct {
[; ;pic16f777.h: 1921: unsigned TUN0 :1;
[; ;pic16f777.h: 1922: unsigned TUN1 :1;
[; ;pic16f777.h: 1923: unsigned TUN2 :1;
[; ;pic16f777.h: 1924: unsigned TUN3 :1;
[; ;pic16f777.h: 1925: unsigned TUN4 :1;
[; ;pic16f777.h: 1926: unsigned TUN5 :1;
[; ;pic16f777.h: 1927: };
[; ;pic16f777.h: 1928: } OSCTUNEbits_t;
[; ;pic16f777.h: 1929: extern volatile OSCTUNEbits_t OSCTUNEbits @ 0x090;
[; ;pic16f777.h: 1969: extern volatile unsigned char SSPCON2 @ 0x091;
"1971
[; ;pic16f777.h: 1971: asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
[; ;pic16f777.h: 1974: typedef union {
[; ;pic16f777.h: 1975: struct {
[; ;pic16f777.h: 1976: unsigned SEN :1;
[; ;pic16f777.h: 1977: unsigned RSEN :1;
[; ;pic16f777.h: 1978: unsigned PEN :1;
[; ;pic16f777.h: 1979: unsigned RCEN :1;
[; ;pic16f777.h: 1980: unsigned ACKEN :1;
[; ;pic16f777.h: 1981: unsigned ACKDT :1;
[; ;pic16f777.h: 1982: unsigned ACKSTAT :1;
[; ;pic16f777.h: 1983: unsigned GCEN :1;
[; ;pic16f777.h: 1984: };
[; ;pic16f777.h: 1985: } SSPCON2bits_t;
[; ;pic16f777.h: 1986: extern volatile SSPCON2bits_t SSPCON2bits @ 0x091;
[; ;pic16f777.h: 2031: extern volatile unsigned char PR2 @ 0x092;
"2033
[; ;pic16f777.h: 2033: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f777.h: 2038: extern volatile unsigned char SSPADD @ 0x093;
"2040
[; ;pic16f777.h: 2040: asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
[; ;pic16f777.h: 2045: extern volatile unsigned char SSPSTAT @ 0x094;
"2047
[; ;pic16f777.h: 2047: asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
[; ;pic16f777.h: 2050: typedef union {
[; ;pic16f777.h: 2051: struct {
[; ;pic16f777.h: 2052: unsigned BF :1;
[; ;pic16f777.h: 2053: unsigned UA :1;
[; ;pic16f777.h: 2054: unsigned R_nW :1;
[; ;pic16f777.h: 2055: unsigned S :1;
[; ;pic16f777.h: 2056: unsigned P :1;
[; ;pic16f777.h: 2057: unsigned D_nA :1;
[; ;pic16f777.h: 2058: unsigned CKE :1;
[; ;pic16f777.h: 2059: unsigned SMP :1;
[; ;pic16f777.h: 2060: };
[; ;pic16f777.h: 2061: struct {
[; ;pic16f777.h: 2062: unsigned :2;
[; ;pic16f777.h: 2063: unsigned R :1;
[; ;pic16f777.h: 2064: unsigned :2;
[; ;pic16f777.h: 2065: unsigned D :1;
[; ;pic16f777.h: 2066: };
[; ;pic16f777.h: 2067: struct {
[; ;pic16f777.h: 2068: unsigned :2;
[; ;pic16f777.h: 2069: unsigned I2C_READ :1;
[; ;pic16f777.h: 2070: unsigned I2C_START :1;
[; ;pic16f777.h: 2071: unsigned I2C_STOP :1;
[; ;pic16f777.h: 2072: unsigned I2C_DATA :1;
[; ;pic16f777.h: 2073: };
[; ;pic16f777.h: 2074: struct {
[; ;pic16f777.h: 2075: unsigned :2;
[; ;pic16f777.h: 2076: unsigned nW :1;
[; ;pic16f777.h: 2077: unsigned :2;
[; ;pic16f777.h: 2078: unsigned nA :1;
[; ;pic16f777.h: 2079: };
[; ;pic16f777.h: 2080: struct {
[; ;pic16f777.h: 2081: unsigned :2;
[; ;pic16f777.h: 2082: unsigned nWRITE :1;
[; ;pic16f777.h: 2083: unsigned :2;
[; ;pic16f777.h: 2084: unsigned nADDRESS :1;
[; ;pic16f777.h: 2085: };
[; ;pic16f777.h: 2086: struct {
[; ;pic16f777.h: 2087: unsigned :2;
[; ;pic16f777.h: 2088: unsigned R_W :1;
[; ;pic16f777.h: 2089: unsigned :2;
[; ;pic16f777.h: 2090: unsigned D_A :1;
[; ;pic16f777.h: 2091: };
[; ;pic16f777.h: 2092: struct {
[; ;pic16f777.h: 2093: unsigned :2;
[; ;pic16f777.h: 2094: unsigned READ_WRITE :1;
[; ;pic16f777.h: 2095: unsigned :2;
[; ;pic16f777.h: 2096: unsigned DATA_ADDRESS :1;
[; ;pic16f777.h: 2097: };
[; ;pic16f777.h: 2098: } SSPSTATbits_t;
[; ;pic16f777.h: 2099: extern volatile SSPSTATbits_t SSPSTATbits @ 0x094;
[; ;pic16f777.h: 2214: extern volatile unsigned short CCPR3 @ 0x095;
"2216
[; ;pic16f777.h: 2216: asm("CCPR3 equ 095h");
[; <" CCPR3 equ 095h ;# ">
[; ;pic16f777.h: 2221: extern volatile unsigned char CCPR3L @ 0x095;
"2223
[; ;pic16f777.h: 2223: asm("CCPR3L equ 095h");
[; <" CCPR3L equ 095h ;# ">
[; ;pic16f777.h: 2226: typedef union {
[; ;pic16f777.h: 2227: struct {
[; ;pic16f777.h: 2228: unsigned CCPR3L :8;
[; ;pic16f777.h: 2229: };
[; ;pic16f777.h: 2230: } CCPR3Lbits_t;
[; ;pic16f777.h: 2231: extern volatile CCPR3Lbits_t CCPR3Lbits @ 0x095;
[; ;pic16f777.h: 2241: extern volatile unsigned char CCPR3H @ 0x096;
"2243
[; ;pic16f777.h: 2243: asm("CCPR3H equ 096h");
[; <" CCPR3H equ 096h ;# ">
[; ;pic16f777.h: 2246: typedef union {
[; ;pic16f777.h: 2247: struct {
[; ;pic16f777.h: 2248: unsigned CCPR3H :8;
[; ;pic16f777.h: 2249: };
[; ;pic16f777.h: 2250: } CCPR3Hbits_t;
[; ;pic16f777.h: 2251: extern volatile CCPR3Hbits_t CCPR3Hbits @ 0x096;
[; ;pic16f777.h: 2261: extern volatile unsigned char CCP3CON @ 0x097;
"2263
[; ;pic16f777.h: 2263: asm("CCP3CON equ 097h");
[; <" CCP3CON equ 097h ;# ">
[; ;pic16f777.h: 2266: typedef union {
[; ;pic16f777.h: 2267: struct {
[; ;pic16f777.h: 2268: unsigned CCP3M :4;
[; ;pic16f777.h: 2269: unsigned CCP3Y :1;
[; ;pic16f777.h: 2270: unsigned CCP3X :1;
[; ;pic16f777.h: 2271: };
[; ;pic16f777.h: 2272: struct {
[; ;pic16f777.h: 2273: unsigned CCP3M0 :1;
[; ;pic16f777.h: 2274: unsigned CCP3M1 :1;
[; ;pic16f777.h: 2275: unsigned CCP3M2 :1;
[; ;pic16f777.h: 2276: unsigned CCP3M3 :1;
[; ;pic16f777.h: 2277: };
[; ;pic16f777.h: 2278: } CCP3CONbits_t;
[; ;pic16f777.h: 2279: extern volatile CCP3CONbits_t CCP3CONbits @ 0x097;
[; ;pic16f777.h: 2319: extern volatile unsigned char TXSTA @ 0x098;
"2321
[; ;pic16f777.h: 2321: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f777.h: 2324: typedef union {
[; ;pic16f777.h: 2325: struct {
[; ;pic16f777.h: 2326: unsigned TX9D :1;
[; ;pic16f777.h: 2327: unsigned TRMT :1;
[; ;pic16f777.h: 2328: unsigned BRGH :1;
[; ;pic16f777.h: 2329: unsigned :1;
[; ;pic16f777.h: 2330: unsigned SYNC :1;
[; ;pic16f777.h: 2331: unsigned TXEN :1;
[; ;pic16f777.h: 2332: unsigned TX9 :1;
[; ;pic16f777.h: 2333: unsigned CSRC :1;
[; ;pic16f777.h: 2334: };
[; ;pic16f777.h: 2335: struct {
[; ;pic16f777.h: 2336: unsigned TXD8 :1;
[; ;pic16f777.h: 2337: unsigned :5;
[; ;pic16f777.h: 2338: unsigned nTX8 :1;
[; ;pic16f777.h: 2339: };
[; ;pic16f777.h: 2340: struct {
[; ;pic16f777.h: 2341: unsigned :6;
[; ;pic16f777.h: 2342: unsigned TX8_9 :1;
[; ;pic16f777.h: 2343: };
[; ;pic16f777.h: 2344: } TXSTAbits_t;
[; ;pic16f777.h: 2345: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f777.h: 2400: extern volatile unsigned char SPBRG @ 0x099;
"2402
[; ;pic16f777.h: 2402: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f777.h: 2407: extern volatile unsigned char ADCON2 @ 0x09B;
"2409
[; ;pic16f777.h: 2409: asm("ADCON2 equ 09Bh");
[; <" ADCON2 equ 09Bh ;# ">
[; ;pic16f777.h: 2412: typedef union {
[; ;pic16f777.h: 2413: struct {
[; ;pic16f777.h: 2414: unsigned :3;
[; ;pic16f777.h: 2415: unsigned ACQT :3;
[; ;pic16f777.h: 2416: };
[; ;pic16f777.h: 2417: struct {
[; ;pic16f777.h: 2418: unsigned :3;
[; ;pic16f777.h: 2419: unsigned ACQT0 :1;
[; ;pic16f777.h: 2420: unsigned ACQT1 :1;
[; ;pic16f777.h: 2421: unsigned ACQT2 :1;
[; ;pic16f777.h: 2422: };
[; ;pic16f777.h: 2423: } ADCON2bits_t;
[; ;pic16f777.h: 2424: extern volatile ADCON2bits_t ADCON2bits @ 0x09B;
[; ;pic16f777.h: 2449: extern volatile unsigned char CMCON @ 0x09C;
"2451
[; ;pic16f777.h: 2451: asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
[; ;pic16f777.h: 2454: typedef union {
[; ;pic16f777.h: 2455: struct {
[; ;pic16f777.h: 2456: unsigned CM :3;
[; ;pic16f777.h: 2457: unsigned CIS :1;
[; ;pic16f777.h: 2458: unsigned C1INV :1;
[; ;pic16f777.h: 2459: unsigned C2INV :1;
[; ;pic16f777.h: 2460: unsigned C1OUT :1;
[; ;pic16f777.h: 2461: unsigned C2OUT :1;
[; ;pic16f777.h: 2462: };
[; ;pic16f777.h: 2463: struct {
[; ;pic16f777.h: 2464: unsigned CM0 :1;
[; ;pic16f777.h: 2465: unsigned CM1 :1;
[; ;pic16f777.h: 2466: unsigned CM2 :1;
[; ;pic16f777.h: 2467: };
[; ;pic16f777.h: 2468: } CMCONbits_t;
[; ;pic16f777.h: 2469: extern volatile CMCONbits_t CMCONbits @ 0x09C;
[; ;pic16f777.h: 2519: extern volatile unsigned char CVRCON @ 0x09D;
"2521
[; ;pic16f777.h: 2521: asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
[; ;pic16f777.h: 2524: typedef union {
[; ;pic16f777.h: 2525: struct {
[; ;pic16f777.h: 2526: unsigned CVR :4;
[; ;pic16f777.h: 2527: unsigned :1;
[; ;pic16f777.h: 2528: unsigned CVRR :1;
[; ;pic16f777.h: 2529: unsigned CVROE :1;
[; ;pic16f777.h: 2530: unsigned CVREN :1;
[; ;pic16f777.h: 2531: };
[; ;pic16f777.h: 2532: struct {
[; ;pic16f777.h: 2533: unsigned CVR0 :1;
[; ;pic16f777.h: 2534: unsigned CVR1 :1;
[; ;pic16f777.h: 2535: unsigned CVR2 :1;
[; ;pic16f777.h: 2536: unsigned CVR3 :1;
[; ;pic16f777.h: 2537: };
[; ;pic16f777.h: 2538: } CVRCONbits_t;
[; ;pic16f777.h: 2539: extern volatile CVRCONbits_t CVRCONbits @ 0x09D;
[; ;pic16f777.h: 2584: extern volatile unsigned char ADRESL @ 0x09E;
"2586
[; ;pic16f777.h: 2586: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic16f777.h: 2591: extern volatile unsigned char ADCON1 @ 0x09F;
"2593
[; ;pic16f777.h: 2593: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16f777.h: 2596: typedef union {
[; ;pic16f777.h: 2597: struct {
[; ;pic16f777.h: 2598: unsigned PCFG :4;
[; ;pic16f777.h: 2599: unsigned VCFG :2;
[; ;pic16f777.h: 2600: unsigned ADCS2 :1;
[; ;pic16f777.h: 2601: unsigned ADFM :1;
[; ;pic16f777.h: 2602: };
[; ;pic16f777.h: 2603: struct {
[; ;pic16f777.h: 2604: unsigned PCFG0 :1;
[; ;pic16f777.h: 2605: unsigned PCFG1 :1;
[; ;pic16f777.h: 2606: unsigned PCFG2 :1;
[; ;pic16f777.h: 2607: unsigned PCFG3 :1;
[; ;pic16f777.h: 2608: unsigned VCFG0 :1;
[; ;pic16f777.h: 2609: unsigned VCFG1 :1;
[; ;pic16f777.h: 2610: };
[; ;pic16f777.h: 2611: } ADCON1bits_t;
[; ;pic16f777.h: 2612: extern volatile ADCON1bits_t ADCON1bits @ 0x09F;
[; ;pic16f777.h: 2667: extern volatile unsigned char WDTCON @ 0x105;
"2669
[; ;pic16f777.h: 2669: asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
[; ;pic16f777.h: 2672: typedef union {
[; ;pic16f777.h: 2673: struct {
[; ;pic16f777.h: 2674: unsigned SWDTEN :1;
[; ;pic16f777.h: 2675: unsigned WDTPS :4;
[; ;pic16f777.h: 2676: };
[; ;pic16f777.h: 2677: struct {
[; ;pic16f777.h: 2678: unsigned SWDTE :1;
[; ;pic16f777.h: 2679: unsigned WDTPS0 :1;
[; ;pic16f777.h: 2680: unsigned WDTPS1 :1;
[; ;pic16f777.h: 2681: unsigned WDTPS2 :1;
[; ;pic16f777.h: 2682: unsigned WDTPS3 :1;
[; ;pic16f777.h: 2683: };
[; ;pic16f777.h: 2684: } WDTCONbits_t;
[; ;pic16f777.h: 2685: extern volatile WDTCONbits_t WDTCONbits @ 0x105;
[; ;pic16f777.h: 2725: extern volatile unsigned char LVDCON @ 0x109;
"2727
[; ;pic16f777.h: 2727: asm("LVDCON equ 0109h");
[; <" LVDCON equ 0109h ;# ">
[; ;pic16f777.h: 2730: typedef union {
[; ;pic16f777.h: 2731: struct {
[; ;pic16f777.h: 2732: unsigned LVDL :4;
[; ;pic16f777.h: 2733: unsigned LVDEN :1;
[; ;pic16f777.h: 2734: unsigned IRVST :1;
[; ;pic16f777.h: 2735: };
[; ;pic16f777.h: 2736: struct {
[; ;pic16f777.h: 2737: unsigned LVDL0 :1;
[; ;pic16f777.h: 2738: unsigned LVDL1 :1;
[; ;pic16f777.h: 2739: unsigned LVDL2 :1;
[; ;pic16f777.h: 2740: unsigned LVDL3 :1;
[; ;pic16f777.h: 2741: };
[; ;pic16f777.h: 2742: } LVDCONbits_t;
[; ;pic16f777.h: 2743: extern volatile LVDCONbits_t LVDCONbits @ 0x109;
[; ;pic16f777.h: 2783: extern volatile unsigned char PMDATA @ 0x10C;
"2785
[; ;pic16f777.h: 2785: asm("PMDATA equ 010Ch");
[; <" PMDATA equ 010Ch ;# ">
[; ;pic16f777.h: 2790: extern volatile unsigned char PMADR @ 0x10D;
"2792
[; ;pic16f777.h: 2792: asm("PMADR equ 010Dh");
[; <" PMADR equ 010Dh ;# ">
[; ;pic16f777.h: 2797: extern volatile unsigned char PMDATH @ 0x10E;
"2799
[; ;pic16f777.h: 2799: asm("PMDATH equ 010Eh");
[; <" PMDATH equ 010Eh ;# ">
[; ;pic16f777.h: 2804: extern volatile unsigned char PMADRH @ 0x10F;
"2806
[; ;pic16f777.h: 2806: asm("PMADRH equ 010Fh");
[; <" PMADRH equ 010Fh ;# ">
[; ;pic16f777.h: 2811: extern volatile unsigned char PMCON1 @ 0x18C;
"2813
[; ;pic16f777.h: 2813: asm("PMCON1 equ 018Ch");
[; <" PMCON1 equ 018Ch ;# ">
[; ;pic16f777.h: 2816: typedef union {
[; ;pic16f777.h: 2817: struct {
[; ;pic16f777.h: 2818: unsigned RD :1;
[; ;pic16f777.h: 2819: };
[; ;pic16f777.h: 2820: } PMCON1bits_t;
[; ;pic16f777.h: 2821: extern volatile PMCON1bits_t PMCON1bits @ 0x18C;
[; ;pic16f777.h: 2836: extern volatile __bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16f777.h: 2838: extern volatile __bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16f777.h: 2840: extern volatile __bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16f777.h: 2842: extern volatile __bit ACQT0 @ (((unsigned) &ADCON2)*8) + 3;
[; ;pic16f777.h: 2844: extern volatile __bit ACQT1 @ (((unsigned) &ADCON2)*8) + 4;
[; ;pic16f777.h: 2846: extern volatile __bit ACQT2 @ (((unsigned) &ADCON2)*8) + 5;
[; ;pic16f777.h: 2848: extern volatile __bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f777.h: 2850: extern volatile __bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f777.h: 2852: extern volatile __bit ADCS2 @ (((unsigned) &ADCON1)*8) + 6;
[; ;pic16f777.h: 2854: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f777.h: 2856: extern volatile __bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f777.h: 2858: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f777.h: 2860: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f777.h: 2862: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f777.h: 2864: extern volatile __bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16f777.h: 2866: extern volatile __bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16f777.h: 2868: extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f777.h: 2870: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f777.h: 2872: extern volatile __bit C1INV @ (((unsigned) &CMCON)*8) + 4;
[; ;pic16f777.h: 2874: extern volatile __bit C1OUT @ (((unsigned) &CMCON)*8) + 6;
[; ;pic16f777.h: 2876: extern volatile __bit C2INV @ (((unsigned) &CMCON)*8) + 5;
[; ;pic16f777.h: 2878: extern volatile __bit C2OUT @ (((unsigned) &CMCON)*8) + 7;
[; ;pic16f777.h: 2880: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f777.h: 2882: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f777.h: 2884: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f777.h: 2886: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f777.h: 2888: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f777.h: 2890: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f777.h: 2892: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f777.h: 2894: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f777.h: 2896: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f777.h: 2898: extern volatile __bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f777.h: 2900: extern volatile __bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f777.h: 2902: extern volatile __bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f777.h: 2904: extern volatile __bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f777.h: 2906: extern volatile __bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f777.h: 2908: extern volatile __bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f777.h: 2910: extern volatile __bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f777.h: 2912: extern volatile __bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f777.h: 2914: extern volatile __bit CCP3IE @ (((unsigned) &PIE2)*8) + 1;
[; ;pic16f777.h: 2916: extern volatile __bit CCP3IF @ (((unsigned) &PIR2)*8) + 1;
[; ;pic16f777.h: 2918: extern volatile __bit CCP3M0 @ (((unsigned) &CCP3CON)*8) + 0;
[; ;pic16f777.h: 2920: extern volatile __bit CCP3M1 @ (((unsigned) &CCP3CON)*8) + 1;
[; ;pic16f777.h: 2922: extern volatile __bit CCP3M2 @ (((unsigned) &CCP3CON)*8) + 2;
[; ;pic16f777.h: 2924: extern volatile __bit CCP3M3 @ (((unsigned) &CCP3CON)*8) + 3;
[; ;pic16f777.h: 2926: extern volatile __bit CCP3X @ (((unsigned) &CCP3CON)*8) + 5;
[; ;pic16f777.h: 2928: extern volatile __bit CCP3Y @ (((unsigned) &CCP3CON)*8) + 4;
[; ;pic16f777.h: 2930: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f777.h: 2932: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f777.h: 2934: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f777.h: 2936: extern volatile __bit CHS3 @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f777.h: 2938: extern volatile __bit CIS @ (((unsigned) &CMCON)*8) + 3;
[; ;pic16f777.h: 2940: extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f777.h: 2942: extern volatile __bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic16f777.h: 2944: extern volatile __bit CM0 @ (((unsigned) &CMCON)*8) + 0;
[; ;pic16f777.h: 2946: extern volatile __bit CM1 @ (((unsigned) &CMCON)*8) + 1;
[; ;pic16f777.h: 2948: extern volatile __bit CM2 @ (((unsigned) &CMCON)*8) + 2;
[; ;pic16f777.h: 2950: extern volatile __bit CMIE @ (((unsigned) &PIE2)*8) + 6;
[; ;pic16f777.h: 2952: extern volatile __bit CMIF @ (((unsigned) &PIR2)*8) + 6;
[; ;pic16f777.h: 2954: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f777.h: 2956: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f777.h: 2958: extern volatile __bit CVR0 @ (((unsigned) &CVRCON)*8) + 0;
[; ;pic16f777.h: 2960: extern volatile __bit CVR1 @ (((unsigned) &CVRCON)*8) + 1;
[; ;pic16f777.h: 2962: extern volatile __bit CVR2 @ (((unsigned) &CVRCON)*8) + 2;
[; ;pic16f777.h: 2964: extern volatile __bit CVR3 @ (((unsigned) &CVRCON)*8) + 3;
[; ;pic16f777.h: 2966: extern volatile __bit CVREN @ (((unsigned) &CVRCON)*8) + 7;
[; ;pic16f777.h: 2968: extern volatile __bit CVROE @ (((unsigned) &CVRCON)*8) + 6;
[; ;pic16f777.h: 2970: extern volatile __bit CVRR @ (((unsigned) &CVRCON)*8) + 5;
[; ;pic16f777.h: 2972: extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f777.h: 2974: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f777.h: 2976: extern volatile __bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f777.h: 2978: extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f777.h: 2980: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f777.h: 2982: extern volatile __bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16f777.h: 2984: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f777.h: 2986: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f777.h: 2988: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f777.h: 2990: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f777.h: 2992: extern volatile __bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f777.h: 2994: extern volatile __bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f777.h: 2996: extern volatile __bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic16f777.h: 2998: extern volatile __bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic16f777.h: 3000: extern volatile __bit IBF @ (((unsigned) &TRISE)*8) + 7;
[; ;pic16f777.h: 3002: extern volatile __bit IBOV @ (((unsigned) &TRISE)*8) + 5;
[; ;pic16f777.h: 3004: extern volatile __bit INT0IE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f777.h: 3006: extern volatile __bit INT0IF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f777.h: 3008: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f777.h: 3010: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f777.h: 3012: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f777.h: 3014: extern volatile __bit IOFS @ (((unsigned) &OSCCON)*8) + 2;
[; ;pic16f777.h: 3016: extern volatile __bit IRCF0 @ (((unsigned) &OSCCON)*8) + 4;
[; ;pic16f777.h: 3018: extern volatile __bit IRCF1 @ (((unsigned) &OSCCON)*8) + 5;
[; ;pic16f777.h: 3020: extern volatile __bit IRCF2 @ (((unsigned) &OSCCON)*8) + 6;
[; ;pic16f777.h: 3022: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f777.h: 3024: extern volatile __bit IRVST @ (((unsigned) &LVDCON)*8) + 5;
[; ;pic16f777.h: 3026: extern volatile __bit LVDEN @ (((unsigned) &LVDCON)*8) + 4;
[; ;pic16f777.h: 3028: extern volatile __bit LVDIE @ (((unsigned) &PIE2)*8) + 5;
[; ;pic16f777.h: 3030: extern volatile __bit LVDIF @ (((unsigned) &PIR2)*8) + 5;
[; ;pic16f777.h: 3032: extern volatile __bit LVDL0 @ (((unsigned) &LVDCON)*8) + 0;
[; ;pic16f777.h: 3034: extern volatile __bit LVDL1 @ (((unsigned) &LVDCON)*8) + 1;
[; ;pic16f777.h: 3036: extern volatile __bit LVDL2 @ (((unsigned) &LVDCON)*8) + 2;
[; ;pic16f777.h: 3038: extern volatile __bit LVDL3 @ (((unsigned) &LVDCON)*8) + 3;
[; ;pic16f777.h: 3040: extern volatile __bit OBF @ (((unsigned) &TRISE)*8) + 6;
[; ;pic16f777.h: 3042: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f777.h: 3044: extern volatile __bit OSFIE @ (((unsigned) &PIE2)*8) + 7;
[; ;pic16f777.h: 3046: extern volatile __bit OSFIF @ (((unsigned) &PIR2)*8) + 7;
[; ;pic16f777.h: 3048: extern volatile __bit OSTS @ (((unsigned) &OSCCON)*8) + 3;
[; ;pic16f777.h: 3050: extern volatile __bit PCFG0 @ (((unsigned) &ADCON1)*8) + 0;
[; ;pic16f777.h: 3052: extern volatile __bit PCFG1 @ (((unsigned) &ADCON1)*8) + 1;
[; ;pic16f777.h: 3054: extern volatile __bit PCFG2 @ (((unsigned) &ADCON1)*8) + 2;
[; ;pic16f777.h: 3056: extern volatile __bit PCFG3 @ (((unsigned) &ADCON1)*8) + 3;
[; ;pic16f777.h: 3058: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f777.h: 3060: extern volatile __bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16f777.h: 3062: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f777.h: 3064: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f777.h: 3066: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f777.h: 3068: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f777.h: 3070: extern volatile __bit PSPIE @ (((unsigned) &PIE1)*8) + 7;
[; ;pic16f777.h: 3072: extern volatile __bit PSPIF @ (((unsigned) &PIR1)*8) + 7;
[; ;pic16f777.h: 3074: extern volatile __bit PSPMODE @ (((unsigned) &TRISE)*8) + 4;
[; ;pic16f777.h: 3076: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f777.h: 3078: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f777.h: 3080: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f777.h: 3082: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f777.h: 3084: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f777.h: 3086: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f777.h: 3088: extern volatile __bit RA6 @ (((unsigned) &PORTA)*8) + 6;
[; ;pic16f777.h: 3090: extern volatile __bit RA7 @ (((unsigned) &PORTA)*8) + 7;
[; ;pic16f777.h: 3092: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f777.h: 3094: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f777.h: 3096: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f777.h: 3098: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f777.h: 3100: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f777.h: 3102: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f777.h: 3104: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f777.h: 3106: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f777.h: 3108: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f777.h: 3110: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f777.h: 3112: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f777.h: 3114: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f777.h: 3116: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f777.h: 3118: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f777.h: 3120: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f777.h: 3122: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f777.h: 3124: extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f777.h: 3126: extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f777.h: 3128: extern volatile __bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f777.h: 3130: extern volatile __bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f777.h: 3132: extern volatile __bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f777.h: 3134: extern volatile __bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16f777.h: 3136: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f777.h: 3138: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f777.h: 3140: extern volatile __bit RD @ (((unsigned) &PMCON1)*8) + 0;
[; ;pic16f777.h: 3142: extern volatile __bit RD0 @ (((unsigned) &PORTD)*8) + 0;
[; ;pic16f777.h: 3144: extern volatile __bit RD1 @ (((unsigned) &PORTD)*8) + 1;
[; ;pic16f777.h: 3146: extern volatile __bit RD2 @ (((unsigned) &PORTD)*8) + 2;
[; ;pic16f777.h: 3148: extern volatile __bit RD3 @ (((unsigned) &PORTD)*8) + 3;
[; ;pic16f777.h: 3150: extern volatile __bit RD4 @ (((unsigned) &PORTD)*8) + 4;
[; ;pic16f777.h: 3152: extern volatile __bit RD5 @ (((unsigned) &PORTD)*8) + 5;
[; ;pic16f777.h: 3154: extern volatile __bit RD6 @ (((unsigned) &PORTD)*8) + 6;
[; ;pic16f777.h: 3156: extern volatile __bit RD7 @ (((unsigned) &PORTD)*8) + 7;
[; ;pic16f777.h: 3158: extern volatile __bit RE0 @ (((unsigned) &PORTE)*8) + 0;
[; ;pic16f777.h: 3160: extern volatile __bit RE1 @ (((unsigned) &PORTE)*8) + 1;
[; ;pic16f777.h: 3162: extern volatile __bit RE2 @ (((unsigned) &PORTE)*8) + 2;
[; ;pic16f777.h: 3164: extern volatile __bit RE3 @ (((unsigned) &PORTE)*8) + 3;
[; ;pic16f777.h: 3166: extern volatile __bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f777.h: 3168: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f777.h: 3170: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f777.h: 3172: extern volatile __bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16f777.h: 3174: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f777.h: 3176: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f777.h: 3178: extern volatile __bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f777.h: 3180: extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f777.h: 3182: extern volatile __bit SBOREN @ (((unsigned) &PCON)*8) + 2;
[; ;pic16f777.h: 3184: extern volatile __bit SCS0 @ (((unsigned) &OSCCON)*8) + 0;
[; ;pic16f777.h: 3186: extern volatile __bit SCS1 @ (((unsigned) &OSCCON)*8) + 1;
[; ;pic16f777.h: 3188: extern volatile __bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16f777.h: 3190: extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f777.h: 3192: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f777.h: 3194: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f777.h: 3196: extern volatile __bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic16f777.h: 3198: extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f777.h: 3200: extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f777.h: 3202: extern volatile __bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic16f777.h: 3204: extern volatile __bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic16f777.h: 3206: extern volatile __bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic16f777.h: 3208: extern volatile __bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic16f777.h: 3210: extern volatile __bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic16f777.h: 3212: extern volatile __bit SWDTE @ (((unsigned) &WDTCON)*8) + 0;
[; ;pic16f777.h: 3214: extern volatile __bit SWDTEN @ (((unsigned) &WDTCON)*8) + 0;
[; ;pic16f777.h: 3216: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f777.h: 3218: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f777.h: 3220: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f777.h: 3222: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f777.h: 3224: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f777.h: 3226: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f777.h: 3228: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f777.h: 3230: extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f777.h: 3232: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f777.h: 3234: extern volatile __bit T1RUN @ (((unsigned) &T1CON)*8) + 6;
[; ;pic16f777.h: 3236: extern volatile __bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f777.h: 3238: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f777.h: 3240: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f777.h: 3242: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f777.h: 3244: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f777.h: 3246: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f777.h: 3248: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f777.h: 3250: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f777.h: 3252: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f777.h: 3254: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f777.h: 3256: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f777.h: 3258: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f777.h: 3260: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f777.h: 3262: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f777.h: 3264: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f777.h: 3266: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f777.h: 3268: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f777.h: 3270: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f777.h: 3272: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f777.h: 3274: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f777.h: 3276: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f777.h: 3278: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f777.h: 3280: extern volatile __bit TRISA6 @ (((unsigned) &TRISA)*8) + 6;
[; ;pic16f777.h: 3282: extern volatile __bit TRISA7 @ (((unsigned) &TRISA)*8) + 7;
[; ;pic16f777.h: 3284: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f777.h: 3286: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f777.h: 3288: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f777.h: 3290: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f777.h: 3292: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f777.h: 3294: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f777.h: 3296: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f777.h: 3298: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f777.h: 3300: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f777.h: 3302: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f777.h: 3304: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f777.h: 3306: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f777.h: 3308: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f777.h: 3310: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f777.h: 3312: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f777.h: 3314: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f777.h: 3316: extern volatile __bit TRISD0 @ (((unsigned) &TRISD)*8) + 0;
[; ;pic16f777.h: 3318: extern volatile __bit TRISD1 @ (((unsigned) &TRISD)*8) + 1;
[; ;pic16f777.h: 3320: extern volatile __bit TRISD2 @ (((unsigned) &TRISD)*8) + 2;
[; ;pic16f777.h: 3322: extern volatile __bit TRISD3 @ (((unsigned) &TRISD)*8) + 3;
[; ;pic16f777.h: 3324: extern volatile __bit TRISD4 @ (((unsigned) &TRISD)*8) + 4;
[; ;pic16f777.h: 3326: extern volatile __bit TRISD5 @ (((unsigned) &TRISD)*8) + 5;
[; ;pic16f777.h: 3328: extern volatile __bit TRISD6 @ (((unsigned) &TRISD)*8) + 6;
[; ;pic16f777.h: 3330: extern volatile __bit TRISD7 @ (((unsigned) &TRISD)*8) + 7;
[; ;pic16f777.h: 3332: extern volatile __bit TRISE0 @ (((unsigned) &TRISE)*8) + 0;
[; ;pic16f777.h: 3334: extern volatile __bit TRISE1 @ (((unsigned) &TRISE)*8) + 1;
[; ;pic16f777.h: 3336: extern volatile __bit TRISE2 @ (((unsigned) &TRISE)*8) + 2;
[; ;pic16f777.h: 3338: extern volatile __bit TRISE3 @ (((unsigned) &TRISE)*8) + 3;
[; ;pic16f777.h: 3340: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f777.h: 3342: extern volatile __bit TUN0 @ (((unsigned) &OSCTUNE)*8) + 0;
[; ;pic16f777.h: 3344: extern volatile __bit TUN1 @ (((unsigned) &OSCTUNE)*8) + 1;
[; ;pic16f777.h: 3346: extern volatile __bit TUN2 @ (((unsigned) &OSCTUNE)*8) + 2;
[; ;pic16f777.h: 3348: extern volatile __bit TUN3 @ (((unsigned) &OSCTUNE)*8) + 3;
[; ;pic16f777.h: 3350: extern volatile __bit TUN4 @ (((unsigned) &OSCTUNE)*8) + 4;
[; ;pic16f777.h: 3352: extern volatile __bit TUN5 @ (((unsigned) &OSCTUNE)*8) + 5;
[; ;pic16f777.h: 3354: extern volatile __bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f777.h: 3356: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f777.h: 3358: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f777.h: 3360: extern volatile __bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f777.h: 3362: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f777.h: 3364: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f777.h: 3366: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f777.h: 3368: extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f777.h: 3370: extern volatile __bit VCFG0 @ (((unsigned) &ADCON1)*8) + 4;
[; ;pic16f777.h: 3372: extern volatile __bit VCFG1 @ (((unsigned) &ADCON1)*8) + 5;
[; ;pic16f777.h: 3374: extern volatile __bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic16f777.h: 3376: extern volatile __bit WDTPS0 @ (((unsigned) &WDTCON)*8) + 1;
[; ;pic16f777.h: 3378: extern volatile __bit WDTPS1 @ (((unsigned) &WDTCON)*8) + 2;
[; ;pic16f777.h: 3380: extern volatile __bit WDTPS2 @ (((unsigned) &WDTCON)*8) + 3;
[; ;pic16f777.h: 3382: extern volatile __bit WDTPS3 @ (((unsigned) &WDTCON)*8) + 4;
[; ;pic16f777.h: 3384: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f777.h: 3386: extern volatile __bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f777.h: 3388: extern volatile __bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f777.h: 3390: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f777.h: 3392: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f777.h: 3394: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f777.h: 3396: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f777.h: 3398: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f777.h: 3400: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f777.h: 3402: extern volatile __bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f777.h: 3404: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f777.h: 3406: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f777.h: 3408: extern volatile __bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f777.h: 3410: extern volatile __bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f777.h: 3412: extern volatile __bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic.h: 29: extern void __nop(void);
[; ;pic.h: 78: extern unsigned int flash_read(unsigned short addr);
[; ;pic.h: 142: extern void flash_erase(unsigned short addr);
[; ;pic.h: 153: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 155: extern __nonreentrant void _delaywdt(unsigned long);
[; ;pic.h: 193: extern __bank0 unsigned char __resetbits;
[; ;pic.h: 194: extern __bank0 __bit __powerdown;
[; ;pic.h: 195: extern __bank0 __bit __timeout;
[; ;PetitModbusPort.h: 20: extern volatile unsigned char PetitReceiveBuffer[(7*2 + 10)];
[; ;PetitModbusPort.h: 21: extern volatile unsigned char PetitReceiveCounter;
[; ;PetitModbusPort.h: 23: extern void PetitModBus_UART_Initialise(void);
[; ;PetitModbusPort.h: 24: extern void PetitModBus_TIMER_Initialise(void);
[; ;PetitModbusPort.h: 25: extern void PetitModBus_UART_Putch(unsigned char c);
[; ;PetitModbusPort.h: 26: extern unsigned char PetitModBus_UART_String(unsigned char *s, unsigned int Length);
[; ;PetitModbusPort.h: 28: extern void ReceiveInterrupt(unsigned char Data);
[; ;PetitModbusPort.h: 29: extern void PetitModBus_TimerValues(void);
"23 modbus/PetitModbus.c
[v _MASTER_SLAVE_DATA `*S1 ~T0 @X0 1 s ]
[i _MASTER_SLAVE_DATA
-> -> 0 `i `*S1
]
[; ;PetitModbus.c: 23: static SLAVE_INFO *MASTER_SLAVE_DATA = 0;
[; ;PetitModbus.c: 25: typedef enum
[; ;PetitModbus.c: 26: {
[; ;PetitModbus.c: 27: PETIT_RXTX_IDLE,
[; ;PetitModbus.c: 28: PETIT_RXTX_START,
[; ;PetitModbus.c: 29: PETIT_RXTX_DATABUF,
[; ;PetitModbus.c: 30: PETIT_RXTX_WAIT_ANSWER,
[; ;PetitModbus.c: 31: PETIT_RXTX_TIMEOUT
[; ;PetitModbus.c: 32: }PETIT_RXTX_STATE;
[; ;PetitModbus.c: 34: typedef struct
[; ;PetitModbus.c: 35: {
[; ;PetitModbus.c: 36: unsigned char Address;
[; ;PetitModbus.c: 37: unsigned char Function;
[; ;PetitModbus.c: 38: unsigned char DataBuf[(7*2 + 10)];
[; ;PetitModbus.c: 39: unsigned short DataLen;
[; ;PetitModbus.c: 40: }PETIT_RXTX_DATA;
"43
[v _Petit_Tx_Data `S118 ~T0 @X0 1 e ]
[; ;PetitModbus.c: 43: PETIT_RXTX_DATA Petit_Tx_Data;
"44
[v _Petit_Tx_Current `ui ~T0 @X0 1 e ]
[i _Petit_Tx_Current
-> -> 0 `i `ui
]
[; ;PetitModbus.c: 44: unsigned int Petit_Tx_Current = 0;
"45
[v _Petit_Tx_CRC16 `ui ~T0 @X0 1 e ]
[i _Petit_Tx_CRC16
-> 65535 `ui
]
[; ;PetitModbus.c: 45: unsigned int Petit_Tx_CRC16 = 0xFFFF;
"46
[v _Petit_Tx_State `E1345 ~T0 @X0 1 e ]
[i _Petit_Tx_State
. `E1345 0
]
[; ;PetitModbus.c: 46: PETIT_RXTX_STATE Petit_Tx_State = PETIT_RXTX_IDLE;
"47
[v _Petit_Tx_Buf `uc ~T0 @X0 + * -> 7 `i -> 2 `i -> 10 `i e ]
[; ;PetitModbus.c: 47: unsigned char Petit_Tx_Buf[(7*2 + 10)];
"48
[v _Petit_Tx_Buf_Size `ui ~T0 @X0 1 e ]
[i _Petit_Tx_Buf_Size
-> -> 0 `i `ui
]
[; ;PetitModbus.c: 48: unsigned int Petit_Tx_Buf_Size = 0;
"50
[v _Petit_Rx_Data `S118 ~T0 @X0 1 e ]
[; ;PetitModbus.c: 50: PETIT_RXTX_DATA Petit_Rx_Data;
"51
[v _Petit_Rx_CRC16 `ui ~T0 @X0 1 e ]
[i _Petit_Rx_CRC16
-> 65535 `ui
]
[; ;PetitModbus.c: 51: unsigned int Petit_Rx_CRC16 = 0xFFFF;
"52
[v _Petit_Rx_State `E1345 ~T0 @X0 1 e ]
[i _Petit_Rx_State
. `E1345 0
]
[; ;PetitModbus.c: 52: PETIT_RXTX_STATE Petit_Rx_State = PETIT_RXTX_IDLE;
"53
[v _Petit_Rx_Data_Available `uc ~T0 @X0 1 e ]
[i _Petit_Rx_Data_Available
-> -> 0 `i `uc
]
[; ;PetitModbus.c: 53: unsigned char Petit_Rx_Data_Available = 0;
"55
[v _PetitModbusTimerValue `Vus ~T0 @X0 1 e ]
[i _PetitModbusTimerValue
-> -> 0 `i `us
]
[; ;PetitModbus.c: 55: volatile unsigned short PetitModbusTimerValue = 0;
"56
[v _SlaveAnswerTimeoutCounter `Vui ~T0 @X0 1 e ]
[i _SlaveAnswerTimeoutCounter
-> -> 0 `i `ui
]
[; ;PetitModbus.c: 56: volatile unsigned int SlaveAnswerTimeoutCounter = 0;
"92
[v _Petit_CRC16 `(v ~T0 @X0 1 ef2`Cuc`*ui ]
"93
{
[; ;PetitModbus.c: 92: void Petit_CRC16(const unsigned char Data, unsigned int* CRC)
[; ;PetitModbus.c: 93: {
[e :U _Petit_CRC16 ]
"92
[v _Data `Cuc ~T0 @X0 1 r1 ]
[v _CRC `*ui ~T0 @X0 1 r2 ]
"93
[f ]
"94
[v _uchCRCHi `ui ~T0 @X0 1 a ]
[; ;PetitModbus.c: 94: unsigned int uchCRCHi = *CRC >> 8;
[e = _uchCRCHi >> *U _CRC -> 8 `i ]
"95
[v _uchCRCLo `ui ~T0 @X0 1 a ]
[; ;PetitModbus.c: 95: unsigned int uchCRCLo = *CRC & 0x00FF;
[e = _uchCRCLo & *U _CRC -> -> 255 `i `ui ]
"96
[v _uIndex `uc ~T0 @X0 1 a ]
[; ;PetitModbus.c: 96: unsigned char uIndex ;
[; ;PetitModbus.c: 98: uIndex = uchCRCLo ^ Data;
"98
[e = _uIndex -> ^ _uchCRCLo -> _Data `ui `uc ]
[; ;PetitModbus.c: 99: uchCRCLo = uchCRCHi ^ auchCRCHi[uIndex] ;
"99
[e = _uchCRCLo ^ _uchCRCHi -> *U + &U _auchCRCHi * -> _uIndex `ux -> -> # *U &U _auchCRCHi `ui `ux `ui ]
[; ;PetitModbus.c: 100: uchCRCHi = auchCRCLo[uIndex] ;
"100
[e = _uchCRCHi -> *U + &U _auchCRCLo * -> _uIndex `ux -> -> # *U &U _auchCRCLo `ui `ux `ui ]
[; ;PetitModbus.c: 101: *CRC = (unsigned int)(uchCRCHi << 8 | uchCRCLo) ;
"101
[e = *U _CRC | << _uchCRCHi -> 8 `i _uchCRCLo ]
[; ;PetitModbus.c: 102: }
"102
[e :UE 119 ]
}
"123
[v _Petit_DoSlaveTX `(uc ~T0 @X0 1 ef ]
"124
{
[; ;PetitModbus.c: 123: unsigned char Petit_DoSlaveTX(void)
[; ;PetitModbus.c: 124: {
[e :U _Petit_DoSlaveTX ]
[f ]
[; ;PetitModbus.c: 125: PetitModBus_UART_String(Petit_Tx_Buf,Petit_Tx_Buf_Size);
"125
[e ( _PetitModBus_UART_String (2 , &U _Petit_Tx_Buf _Petit_Tx_Buf_Size ]
[; ;PetitModbus.c: 127: Petit_Tx_Buf_Size = 0;
"127
[e = _Petit_Tx_Buf_Size -> -> 0 `i `ui ]
[; ;PetitModbus.c: 128: return 1;
"128
[e ) -> -> 1 `i `uc ]
[e $UE 120  ]
[; ;PetitModbus.c: 129: }
"129
[e :UE 120 ]
}
"138
[v _PetitSendMessage `(uc ~T0 @X0 1 ef ]
"139
{
[; ;PetitModbus.c: 138: unsigned char PetitSendMessage(void)
[; ;PetitModbus.c: 139: {
[e :U _PetitSendMessage ]
[f ]
[; ;PetitModbus.c: 140: if (Petit_Tx_State != PETIT_RXTX_IDLE){
"140
[e $ ! != -> _Petit_Tx_State `i -> . `E1345 0 `i 122  ]
{
[; ;PetitModbus.c: 141: return 0;
"141
[e ) -> -> 0 `i `uc ]
[e $UE 121  ]
"142
}
[e :U 122 ]
[; ;PetitModbus.c: 142: }
[; ;PetitModbus.c: 143: Petit_Tx_Current =0;
"143
[e = _Petit_Tx_Current -> -> 0 `i `ui ]
[; ;PetitModbus.c: 144: Petit_Tx_State =PETIT_RXTX_START;
"144
[e = _Petit_Tx_State . `E1345 1 ]
[; ;PetitModbus.c: 146: return 1;
"146
[e ) -> -> 1 `i `uc ]
[e $UE 121  ]
[; ;PetitModbus.c: 147: }
"147
[e :UE 121 ]
}
"157
[v _Petit_RxDataAvailable `(uc ~T0 @X0 1 ef ]
"158
{
[; ;PetitModbus.c: 157: unsigned char Petit_RxDataAvailable(void)
[; ;PetitModbus.c: 158: {
[e :U _Petit_RxDataAvailable ]
[f ]
"159
[v _Result `uc ~T0 @X0 1 a ]
[; ;PetitModbus.c: 159: unsigned char Result = Petit_Rx_Data_Available;
[e = _Result _Petit_Rx_Data_Available ]
[; ;PetitModbus.c: 161: Petit_Rx_Data_Available = 0;
"161
[e = _Petit_Rx_Data_Available -> -> 0 `i `uc ]
[; ;PetitModbus.c: 163: return Result;
"163
[e ) _Result ]
[e $UE 123  ]
[; ;PetitModbus.c: 164: }
"164
[e :UE 123 ]
}
"173
[v _Petit_CheckRxTimeout `(uc ~T0 @X0 1 ef ]
"174
{
[; ;PetitModbus.c: 173: unsigned char Petit_CheckRxTimeout(void)
[; ;PetitModbus.c: 174: {
[e :U _Petit_CheckRxTimeout ]
[f ]
[; ;PetitModbus.c: 176: if (PetitModbusTimerValue>= 2)
"176
[e $ ! >= -> _PetitModbusTimerValue `ui -> -> 2 `i `ui 125  ]
[; ;PetitModbus.c: 177: {
"177
{
[; ;PetitModbus.c: 178: PetitModbusTimerValue =0;
"178
[e = _PetitModbusTimerValue -> -> 0 `i `us ]
[; ;PetitModbus.c: 179: PetitReceiveCounter =0;
"179
[e = _PetitReceiveCounter -> -> 0 `i `uc ]
[; ;PetitModbus.c: 180: return 1;
"180
[e ) -> -> 1 `i `uc ]
[e $UE 124  ]
"181
}
[e :U 125 ]
[; ;PetitModbus.c: 181: }
[; ;PetitModbus.c: 183: return 0;
"183
[e ) -> -> 0 `i `uc ]
[e $UE 124  ]
[; ;PetitModbus.c: 184: }
"184
[e :UE 124 ]
}
"195
[v _CheckPetitModbusBufferComplete `(uc ~T0 @X0 1 ef ]
"196
{
[; ;PetitModbus.c: 195: unsigned char CheckPetitModbusBufferComplete(void)
[; ;PetitModbus.c: 196: {
[e :U _CheckPetitModbusBufferComplete ]
[f ]
"197
[v _PetitExpectedReceiveCount `i ~T0 @X0 1 a ]
[; ;PetitModbus.c: 197: int PetitExpectedReceiveCount=0;
[e = _PetitExpectedReceiveCount -> 0 `i ]
[; ;PetitModbus.c: 199: if(PetitReceiveCounter>4)
"199
[e $ ! > -> _PetitReceiveCounter `i -> 4 `i 127  ]
[; ;PetitModbus.c: 200: {
"200
{
[; ;PetitModbus.c: 201: if(PetitReceiveBuffer[0] > 0)
"201
[e $ ! > -> *U + &U _PetitReceiveBuffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _PetitReceiveBuffer `ui `ux `i -> 0 `i 128  ]
[; ;PetitModbus.c: 202: {
"202
{
[; ;PetitModbus.c: 203: if( PetitReceiveBuffer[1]==0x06 || PetitReceiveBuffer[1]==0x10)
"203
[e $ ! || == -> *U + &U _PetitReceiveBuffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _PetitReceiveBuffer `ui `ux `i -> 6 `i == -> *U + &U _PetitReceiveBuffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _PetitReceiveBuffer `ui `ux `i -> 16 `i 129  ]
[; ;PetitModbus.c: 204: {
"204
{
[; ;PetitModbus.c: 205: PetitExpectedReceiveCount =8;
"205
[e = _PetitExpectedReceiveCount -> 8 `i ]
"206
}
[; ;PetitModbus.c: 206: }
[e $U 130  ]
"207
[e :U 129 ]
[; ;PetitModbus.c: 207: else if(PetitReceiveBuffer[1]==0x03)
[e $ ! == -> *U + &U _PetitReceiveBuffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _PetitReceiveBuffer `ui `ux `i -> 3 `i 131  ]
[; ;PetitModbus.c: 208: {
"208
{
[; ;PetitModbus.c: 209: PetitExpectedReceiveCount=(PetitReceiveBuffer[2])+5;
"209
[e = _PetitExpectedReceiveCount + -> *U + &U _PetitReceiveBuffer * -> -> -> 2 `i `ui `ux -> -> # *U &U _PetitReceiveBuffer `ui `ux `i -> 5 `i ]
"210
}
[; ;PetitModbus.c: 210: }
[e $U 132  ]
"211
[e :U 131 ]
[; ;PetitModbus.c: 211: else
[; ;PetitModbus.c: 212: {
"212
{
[; ;PetitModbus.c: 213: PetitReceiveCounter=0;
"213
[e = _PetitReceiveCounter -> -> 0 `i `uc ]
[; ;PetitModbus.c: 214: return 0;
"214
[e ) -> -> 0 `i `uc ]
[e $UE 126  ]
"215
}
[e :U 132 ]
[e :U 130 ]
"216
}
[; ;PetitModbus.c: 215: }
[; ;PetitModbus.c: 216: }
[e $U 133  ]
"217
[e :U 128 ]
[; ;PetitModbus.c: 217: else
[; ;PetitModbus.c: 218: {
"218
{
[; ;PetitModbus.c: 219: PetitReceiveCounter=0;
"219
[e = _PetitReceiveCounter -> -> 0 `i `uc ]
[; ;PetitModbus.c: 220: return 1;
"220
[e ) -> -> 1 `i `uc ]
[e $UE 126  ]
"221
}
[e :U 133 ]
"222
}
[; ;PetitModbus.c: 221: }
[; ;PetitModbus.c: 222: }
[e $U 134  ]
"223
[e :U 127 ]
[; ;PetitModbus.c: 223: else
[; ;PetitModbus.c: 224: return 2;
"224
[e ) -> -> 2 `i `uc ]
[e $UE 126  ]
[e :U 134 ]
[; ;PetitModbus.c: 226: if(PetitReceiveCounter==PetitExpectedReceiveCount)
"226
[e $ ! == -> _PetitReceiveCounter `i _PetitExpectedReceiveCount 135  ]
[; ;PetitModbus.c: 227: {
"227
{
[; ;PetitModbus.c: 228: return 3;
"228
[e ) -> -> 3 `i `uc ]
[e $UE 126  ]
"229
}
[e :U 135 ]
[; ;PetitModbus.c: 229: }
[; ;PetitModbus.c: 231: return 2;
"231
[e ) -> -> 2 `i `uc ]
[e $UE 126  ]
[; ;PetitModbus.c: 232: }
"232
[e :UE 126 ]
}
"243
[v _Petit_RxRTU `(v ~T0 @X0 1 ef ]
"244
{
[; ;PetitModbus.c: 243: void Petit_RxRTU(void)
[; ;PetitModbus.c: 244: {
[e :U _Petit_RxRTU ]
[f ]
"245
[v _Petit_i `uc ~T0 @X0 1 a ]
"246
[v _Petit_ReceiveBufferControl `uc ~T0 @X0 1 a ]
[; ;PetitModbus.c: 245: unsigned char Petit_i;
[; ;PetitModbus.c: 246: unsigned char Petit_ReceiveBufferControl=0;
[e = _Petit_ReceiveBufferControl -> -> 0 `i `uc ]
[; ;PetitModbus.c: 248: Petit_ReceiveBufferControl =CheckPetitModbusBufferComplete();
"248
[e = _Petit_ReceiveBufferControl ( _CheckPetitModbusBufferComplete ..  ]
[; ;PetitModbus.c: 250: if(Petit_ReceiveBufferControl==3)
"250
[e $ ! == -> _Petit_ReceiveBufferControl `i -> 3 `i 137  ]
[; ;PetitModbus.c: 251: {
"251
{
[; ;PetitModbus.c: 252: Petit_Rx_Data.Address =PetitReceiveBuffer[0];
"252
[e = . _Petit_Rx_Data 0 *U + &U _PetitReceiveBuffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _PetitReceiveBuffer `ui `ux ]
[; ;PetitModbus.c: 253: Petit_Rx_CRC16 = 0xffff;
"253
[e = _Petit_Rx_CRC16 -> 65535 `ui ]
[; ;PetitModbus.c: 254: Petit_CRC16(Petit_Rx_Data.Address, &Petit_Rx_CRC16);
"254
[e ( _Petit_CRC16 (2 , . _Petit_Rx_Data 0 &U _Petit_Rx_CRC16 ]
[; ;PetitModbus.c: 255: Petit_Rx_Data.Function =PetitReceiveBuffer[1];
"255
[e = . _Petit_Rx_Data 1 *U + &U _PetitReceiveBuffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _PetitReceiveBuffer `ui `ux ]
[; ;PetitModbus.c: 256: Petit_CRC16(Petit_Rx_Data.Function, &Petit_Rx_CRC16);
"256
[e ( _Petit_CRC16 (2 , . _Petit_Rx_Data 1 &U _Petit_Rx_CRC16 ]
[; ;PetitModbus.c: 258: Petit_Rx_Data.DataLen=0;
"258
[e = . _Petit_Rx_Data 3 -> -> 0 `i `us ]
[; ;PetitModbus.c: 260: for(Petit_i=2;Petit_i<PetitReceiveCounter;Petit_i++)
"260
{
[e = _Petit_i -> -> 2 `i `uc ]
[e $U 141  ]
"261
[e :U 138 ]
[; ;PetitModbus.c: 261: Petit_Rx_Data.DataBuf[Petit_Rx_Data.DataLen++]=PetitReceiveBuffer[Petit_i];
[e = *U + &U . _Petit_Rx_Data 2 * -> ++ . _Petit_Rx_Data 3 -> -> 1 `i `us `ux -> -> # *U &U . _Petit_Rx_Data 2 `ui `ux *U + &U _PetitReceiveBuffer * -> _Petit_i `ux -> -> # *U &U _PetitReceiveBuffer `ui `ux ]
"260
[e ++ _Petit_i -> -> 1 `i `uc ]
[e :U 141 ]
[e $ < -> _Petit_i `i -> _PetitReceiveCounter `i 138  ]
[e :U 139 ]
"261
}
[; ;PetitModbus.c: 263: Petit_Rx_State =PETIT_RXTX_DATABUF;
"263
[e = _Petit_Rx_State . `E1345 2 ]
[; ;PetitModbus.c: 265: PetitReceiveCounter=0;
"265
[e = _PetitReceiveCounter -> -> 0 `i `uc ]
"266
}
[e :U 137 ]
[; ;PetitModbus.c: 266: }
[; ;PetitModbus.c: 268: Petit_CheckRxTimeout();
"268
[e ( _Petit_CheckRxTimeout ..  ]
[; ;PetitModbus.c: 271: if ((Petit_Rx_State == PETIT_RXTX_DATABUF) && (Petit_Rx_Data.DataLen >= 2))
"271
[e $ ! && == -> _Petit_Rx_State `i -> . `E1345 2 `i >= -> . _Petit_Rx_Data 3 `ui -> -> 2 `i `ui 142  ]
[; ;PetitModbus.c: 272: {
"272
{
[; ;PetitModbus.c: 274: Petit_Rx_Data.DataLen -= 2;
"274
[e =- . _Petit_Rx_Data 3 -> -> 2 `i `us ]
[; ;PetitModbus.c: 275: for (Petit_i = 0; Petit_i < Petit_Rx_Data.DataLen; ++Petit_i)
"275
{
[e = _Petit_i -> -> 0 `i `uc ]
[e $U 146  ]
"276
[e :U 143 ]
[; ;PetitModbus.c: 276: {
{
[; ;PetitModbus.c: 277: Petit_CRC16(Petit_Rx_Data.DataBuf[Petit_i], &Petit_Rx_CRC16);
"277
[e ( _Petit_CRC16 (2 , *U + &U . _Petit_Rx_Data 2 * -> _Petit_i `ux -> -> # *U &U . _Petit_Rx_Data 2 `ui `ux &U _Petit_Rx_CRC16 ]
"278
}
"275
[e =+ _Petit_i -> -> 1 `i `uc ]
[e :U 146 ]
[e $ < -> _Petit_i `ui -> . _Petit_Rx_Data 3 `ui 143  ]
[e :U 144 ]
"278
}
[; ;PetitModbus.c: 278: }
[; ;PetitModbus.c: 280: if (((unsigned int) Petit_Rx_Data.DataBuf[Petit_Rx_Data.DataLen] + ((unsigned int) Petit_Rx_Data.DataBuf[Petit_Rx_Data.DataLen + 1] << 8)) == Petit_Rx_CRC16)
"280
[e $ ! == + -> *U + &U . _Petit_Rx_Data 2 * -> . _Petit_Rx_Data 3 `ux -> -> # *U &U . _Petit_Rx_Data 2 `ui `ux `ui << -> *U + &U . _Petit_Rx_Data 2 * -> + -> . _Petit_Rx_Data 3 `ui -> -> 1 `i `ui `ux -> -> # *U &U . _Petit_Rx_Data 2 `ui `ux `ui -> 8 `i _Petit_Rx_CRC16 147  ]
[; ;PetitModbus.c: 281: {
"281
{
[; ;PetitModbus.c: 283: Petit_Rx_Data_Available = 1;
"283
[e = _Petit_Rx_Data_Available -> -> 1 `i `uc ]
"284
}
[e :U 147 ]
[; ;PetitModbus.c: 284: }
[; ;PetitModbus.c: 286: Petit_Rx_State = PETIT_RXTX_IDLE;
"286
[e = _Petit_Rx_State . `E1345 0 ]
"287
}
[e :U 142 ]
[; ;PetitModbus.c: 287: }
[; ;PetitModbus.c: 288: }
"288
[e :UE 136 ]
}
"300
[v _Petit_TxRTU `(v ~T0 @X0 1 ef ]
"301
{
[; ;PetitModbus.c: 300: void Petit_TxRTU(void)
[; ;PetitModbus.c: 301: {
[e :U _Petit_TxRTU ]
[f ]
[; ;PetitModbus.c: 302: Petit_Tx_CRC16 =0xFFFF;
"302
[e = _Petit_Tx_CRC16 -> 65535 `ui ]
[; ;PetitModbus.c: 303: Petit_Tx_Buf_Size =0;
"303
[e = _Petit_Tx_Buf_Size -> -> 0 `i `ui ]
[; ;PetitModbus.c: 304: Petit_Tx_Buf[Petit_Tx_Buf_Size++] =Petit_Tx_Data.Address;
"304
[e = *U + &U _Petit_Tx_Buf * -> ++ _Petit_Tx_Buf_Size -> -> 1 `i `ui `ux -> -> # *U &U _Petit_Tx_Buf `ui `ux . _Petit_Tx_Data 0 ]
[; ;PetitModbus.c: 305: Petit_CRC16(Petit_Tx_Data.Address, &Petit_Tx_CRC16);
"305
[e ( _Petit_CRC16 (2 , . _Petit_Tx_Data 0 &U _Petit_Tx_CRC16 ]
[; ;PetitModbus.c: 306: Petit_Tx_Buf[Petit_Tx_Buf_Size++] =Petit_Tx_Data.Function;
"306
[e = *U + &U _Petit_Tx_Buf * -> ++ _Petit_Tx_Buf_Size -> -> 1 `i `ui `ux -> -> # *U &U _Petit_Tx_Buf `ui `ux . _Petit_Tx_Data 1 ]
[; ;PetitModbus.c: 307: Petit_CRC16(Petit_Tx_Data.Function, &Petit_Tx_CRC16);
"307
[e ( _Petit_CRC16 (2 , . _Petit_Tx_Data 1 &U _Petit_Tx_CRC16 ]
[; ;PetitModbus.c: 309: for(Petit_Tx_Current=0; Petit_Tx_Current < Petit_Tx_Data.DataLen; Petit_Tx_Current++)
"309
{
[e = _Petit_Tx_Current -> -> 0 `i `ui ]
[e $U 152  ]
"310
[e :U 149 ]
[; ;PetitModbus.c: 310: {
{
[; ;PetitModbus.c: 311: Petit_Tx_Buf[Petit_Tx_Buf_Size++]=Petit_Tx_Data.DataBuf[Petit_Tx_Current];
"311
[e = *U + &U _Petit_Tx_Buf * -> ++ _Petit_Tx_Buf_Size -> -> 1 `i `ui `ux -> -> # *U &U _Petit_Tx_Buf `ui `ux *U + &U . _Petit_Tx_Data 2 * -> _Petit_Tx_Current `ux -> -> # *U &U . _Petit_Tx_Data 2 `ui `ux ]
[; ;PetitModbus.c: 312: Petit_CRC16(Petit_Tx_Data.DataBuf[Petit_Tx_Current], &Petit_Tx_CRC16);
"312
[e ( _Petit_CRC16 (2 , *U + &U . _Petit_Tx_Data 2 * -> _Petit_Tx_Current `ux -> -> # *U &U . _Petit_Tx_Data 2 `ui `ux &U _Petit_Tx_CRC16 ]
"313
}
"309
[e ++ _Petit_Tx_Current -> -> 1 `i `ui ]
[e :U 152 ]
[e $ < _Petit_Tx_Current -> . _Petit_Tx_Data 3 `ui 149  ]
[e :U 150 ]
"313
}
[; ;PetitModbus.c: 313: }
[; ;PetitModbus.c: 315: Petit_Tx_Buf[Petit_Tx_Buf_Size++] = Petit_Tx_CRC16 & 0x00FF;
"315
[e = *U + &U _Petit_Tx_Buf * -> ++ _Petit_Tx_Buf_Size -> -> 1 `i `ui `ux -> -> # *U &U _Petit_Tx_Buf `ui `ux -> & _Petit_Tx_CRC16 -> -> 255 `i `ui `uc ]
[; ;PetitModbus.c: 316: Petit_Tx_Buf[Petit_Tx_Buf_Size++] =(Petit_Tx_CRC16 & 0xFF00) >> 8;
"316
[e = *U + &U _Petit_Tx_Buf * -> ++ _Petit_Tx_Buf_Size -> -> 1 `i `ui `ux -> -> # *U &U _Petit_Tx_Buf `ui `ux -> >> & _Petit_Tx_CRC16 -> 65280 `ui -> 8 `i `uc ]
[; ;PetitModbus.c: 318: Petit_DoSlaveTX();
"318
[e ( _Petit_DoSlaveTX ..  ]
[; ;PetitModbus.c: 320: if (Petit_Tx_Data.Address == 0){
"320
[e $ ! == -> . _Petit_Tx_Data 0 `i -> 0 `i 153  ]
{
[; ;PetitModbus.c: 321: Petit_Tx_State =PETIT_RXTX_IDLE;
"321
[e = _Petit_Tx_State . `E1345 0 ]
"322
}
[; ;PetitModbus.c: 322: }
[e $U 154  ]
"323
[e :U 153 ]
[; ;PetitModbus.c: 323: else{
{
[; ;PetitModbus.c: 324: Petit_Tx_State =PETIT_RXTX_WAIT_ANSWER;
"324
[e = _Petit_Tx_State . `E1345 3 ]
[; ;PetitModbus.c: 325: SlaveAnswerTimeoutCounter = 0;
"325
[e = _SlaveAnswerTimeoutCounter -> -> 0 `i `ui ]
[; ;PetitModbus.c: 326: TMR1 = 0x00;
"326
[e = _TMR1 -> -> 0 `i `us ]
[; ;PetitModbus.c: 327: PIR1bits.TMR1IF = 0;
"327
[e = . . _PIR1bits 0 0 -> -> 0 `i `uc ]
[; ;PetitModbus.c: 328: PIE1bits.TMR1IE = 1;
"328
[e = . . _PIE1bits 0 0 -> -> 1 `i `uc ]
[; ;PetitModbus.c: 329: T1CONbits.TMR1ON = 1;
"329
[e = . . _T1CONbits 0 0 -> -> 1 `i `uc ]
[; ;PetitModbus.c: 330: PORTDbits.RD1 = 1;
"330
[e = . . _PORTDbits 0 1 -> -> 1 `i `uc ]
"331
}
[e :U 154 ]
[; ;PetitModbus.c: 331: }
[; ;PetitModbus.c: 332: }
"332
[e :UE 148 ]
}
"341
[v _ProcessPetitModbus `(v ~T0 @X0 1 ef ]
"342
{
[; ;PetitModbus.c: 341: void ProcessPetitModbus(void)
[; ;PetitModbus.c: 342: {
[e :U _ProcessPetitModbus ]
[f ]
[; ;PetitModbus.c: 343: if (Petit_Tx_State != PETIT_RXTX_IDLE && Petit_Tx_State != PETIT_RXTX_WAIT_ANSWER){
"343
[e $ ! && != -> _Petit_Tx_State `i -> . `E1345 0 `i != -> _Petit_Tx_State `i -> . `E1345 3 `i 156  ]
{
[; ;PetitModbus.c: 345: Petit_TxRTU();
"345
[e ( _Petit_TxRTU ..  ]
"347
}
[; ;PetitModbus.c: 347: }
[e $U 157  ]
"348
[e :U 156 ]
[; ;PetitModbus.c: 348: else if(Petit_Tx_State == PETIT_RXTX_WAIT_ANSWER){
[e $ ! == -> _Petit_Tx_State `i -> . `E1345 3 `i 158  ]
{
[; ;PetitModbus.c: 349: if (SlaveAnswerTimeoutCounter){
"349
[e $ ! != _SlaveAnswerTimeoutCounter -> -> 0 `i `Vui 159  ]
{
[; ;PetitModbus.c: 350: MASTER_SLAVE_DATA[Petit_Tx_Data.Address].MbCommError = SLAVE_DATA_TIMEOUT;
"350
[e = . *U + _MASTER_SLAVE_DATA * -> . _Petit_Tx_Data 0 `ux -> -> # *U _MASTER_SLAVE_DATA `ui `ux 1 -> . `E5 3 `uc ]
[; ;PetitModbus.c: 351: Petit_Tx_State = PETIT_RXTX_IDLE;
"351
[e = _Petit_Tx_State . `E1345 0 ]
[; ;PetitModbus.c: 352: SlaveAnswerTimeoutCounter = 0;
"352
[e = _SlaveAnswerTimeoutCounter -> -> 0 `i `ui ]
"353
}
[e :U 159 ]
"354
}
[e :U 158 ]
"356
[e :U 157 ]
[; ;PetitModbus.c: 353: }
[; ;PetitModbus.c: 354: }
[; ;PetitModbus.c: 356: Petit_RxRTU();
[e ( _Petit_RxRTU ..  ]
[; ;PetitModbus.c: 358: if (Petit_RxDataAvailable())
"358
[e $ ! != -> ( _Petit_RxDataAvailable ..  `i -> -> -> 0 `i `uc `i 160  ]
[; ;PetitModbus.c: 359: {
"359
{
[; ;PetitModbus.c: 360: switch (Petit_Rx_Data.Function)
"360
[e $U 162  ]
[; ;PetitModbus.c: 361: {
"361
{
[; ;PetitModbus.c: 363: case 3: { HandlePetitModbusReadHoldingRegistersSlaveReadback(); break; }
"363
[e :U 163 ]
{
[e ( _HandlePetitModbusReadHoldingRegistersSlaveReadback ..  ]
[e $U 161  ]
}
[; ;PetitModbus.c: 366: case 6: { HandlePetitModbusWriteSingleRegisterSlaveReadback(); break; }
"366
[e :U 164 ]
{
[e ( _HandlePetitModbusWriteSingleRegisterSlaveReadback ..  ]
[e $U 161  ]
}
[; ;PetitModbus.c: 369: case 16: { HandleMPetitodbusWriteMultipleRegistersSlaveReadback(); break; }
"369
[e :U 165 ]
{
[e ( _HandleMPetitodbusWriteMultipleRegistersSlaveReadback ..  ]
[e $U 161  ]
}
[; ;PetitModbus.c: 371: default: { HandleMPetitodbusMbExceptionCodesSlaveReadback(); break; }
"371
[e :U 166 ]
{
[e ( _HandleMPetitodbusMbExceptionCodesSlaveReadback ..  ]
[e $U 161  ]
}
"372
}
[; ;PetitModbus.c: 372: }
[e $U 161  ]
"360
[e :U 162 ]
[e [\ . _Petit_Rx_Data 1 , $ -> -> 3 `i `uc 163
 , $ -> -> 6 `i `uc 164
 , $ -> -> 16 `i `uc 165
 166 ]
"372
[e :U 161 ]
"373
}
[e :U 160 ]
[; ;PetitModbus.c: 373: }
[; ;PetitModbus.c: 374: }
"374
[e :UE 155 ]
}
"389
[v _InitPetitModbus `(v ~T0 @X0 1 ef1`*S1 ]
"390
{
[; ;PetitModbus.c: 389: void InitPetitModbus(SLAVE_INFO *location)
[; ;PetitModbus.c: 390: {
[e :U _InitPetitModbus ]
"389
[v _location `*S1 ~T0 @X0 1 r1 ]
"390
[f ]
[; ;PetitModbus.c: 391: MASTER_SLAVE_DATA = location;
"391
[e = _MASTER_SLAVE_DATA _location ]
[; ;PetitModbus.c: 392: PetitModBus_UART_Initialise();
"392
[e ( _PetitModBus_UART_Initialise ..  ]
[; ;PetitModbus.c: 393: PetitModBus_TIMER_Initialise();
"393
[e ( _PetitModBus_TIMER_Initialise ..  ]
[; ;PetitModbus.c: 394: }
"394
[e :UE 167 ]
}
"403
[v _SendPetitModbus `(uc ~T0 @X0 1 ef4`uc`uc`*uc`us ]
{
[; ;PetitModbus.c: 403: unsigned char SendPetitModbus(unsigned char Address, unsigned char Function, unsigned char *DataBuf, unsigned short DataLen){
[e :U _SendPetitModbus ]
[v _Address `uc ~T0 @X0 1 r1 ]
[v _Function `uc ~T0 @X0 1 r2 ]
[v _DataBuf `*uc ~T0 @X0 1 r3 ]
[v _DataLen `us ~T0 @X0 1 r4 ]
[f ]
"405
[v _return_val `uc ~T0 @X0 1 a ]
[; ;PetitModbus.c: 405: unsigned char return_val = 0;
[e = _return_val -> -> 0 `i `uc ]
[; ;PetitModbus.c: 407: MASTER_SLAVE_DATA[Address].MbCommError = SLAVE_DATA_BUSY;
"407
[e = . *U + _MASTER_SLAVE_DATA * -> _Address `ux -> -> # *U _MASTER_SLAVE_DATA `ui `ux 1 -> . `E5 0 `uc ]
[; ;PetitModbus.c: 410: Petit_Tx_Data.Function = Function;
"410
[e = . _Petit_Tx_Data 1 _Function ]
[; ;PetitModbus.c: 411: Petit_Tx_Data.Address = Address;
"411
[e = . _Petit_Tx_Data 0 _Address ]
[; ;PetitModbus.c: 412: Petit_Tx_Data.DataLen = DataLen;
"412
[e = . _Petit_Tx_Data 3 _DataLen ]
[; ;PetitModbus.c: 414: for(Petit_Tx_Current=0; Petit_Tx_Current < Petit_Tx_Data.DataLen; Petit_Tx_Current++)
"414
{
[e = _Petit_Tx_Current -> -> 0 `i `ui ]
[e $U 172  ]
"415
[e :U 169 ]
[; ;PetitModbus.c: 415: {
{
[; ;PetitModbus.c: 416: Petit_Tx_Data.DataBuf[Petit_Tx_Current]=DataBuf[Petit_Tx_Current];
"416
[e = *U + &U . _Petit_Tx_Data 2 * -> _Petit_Tx_Current `ux -> -> # *U &U . _Petit_Tx_Data 2 `ui `ux *U + _DataBuf * -> _Petit_Tx_Current `ux -> -> # *U _DataBuf `ui `ux ]
"417
}
"414
[e ++ _Petit_Tx_Current -> -> 1 `i `ui ]
[e :U 172 ]
[e $ < _Petit_Tx_Current -> . _Petit_Tx_Data 3 `ui 169  ]
[e :U 170 ]
"417
}
[; ;PetitModbus.c: 417: }
[; ;PetitModbus.c: 418: return_val = PetitSendMessage();
"418
[e = _return_val ( _PetitSendMessage ..  ]
[; ;PetitModbus.c: 420: if (return_val){
"420
[e $ ! != -> _return_val `i -> -> -> 0 `i `uc `i 173  ]
{
[; ;PetitModbus.c: 421: MASTER_SLAVE_DATA[Address].MbSentCounter += 1;
"421
[e =+ . *U + _MASTER_SLAVE_DATA * -> _Address `ux -> -> # *U _MASTER_SLAVE_DATA `ui `ux 4 -> -> 1 `i `ui ]
"422
}
[e :U 173 ]
[; ;PetitModbus.c: 422: }
[; ;PetitModbus.c: 424: return (return_val);
"424
[e ) _return_val ]
[e $UE 168  ]
[; ;PetitModbus.c: 425: }
"425
[e :UE 168 ]
}
"433
[v _HandlePetitModbusWriteSingleRegisterSlaveReadback `(v ~T0 @X0 1 ef ]
"434
{
[; ;PetitModbus.c: 433: void HandlePetitModbusWriteSingleRegisterSlaveReadback(void)
[; ;PetitModbus.c: 434: {
[e :U _HandlePetitModbusWriteSingleRegisterSlaveReadback ]
[f ]
[; ;PetitModbus.c: 435: if(Petit_Tx_Data.Function == Petit_Rx_Data.Function){
"435
[e $ ! == -> . _Petit_Tx_Data 1 `i -> . _Petit_Rx_Data 1 `i 175  ]
{
[; ;PetitModbus.c: 436: if(Petit_Tx_Data.Address == Petit_Rx_Data.Address){
"436
[e $ ! == -> . _Petit_Tx_Data 0 `i -> . _Petit_Rx_Data 0 `i 176  ]
{
[; ;PetitModbus.c: 437: if(Petit_Tx_Data.DataBuf[0] == Petit_Rx_Data.DataBuf[0]){
"437
[e $ ! == -> *U + &U . _Petit_Tx_Data 2 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _Petit_Tx_Data 2 `ui `ux `i -> *U + &U . _Petit_Rx_Data 2 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _Petit_Rx_Data 2 `ui `ux `i 177  ]
{
[; ;PetitModbus.c: 438: if(Petit_Tx_Data.DataBuf[1] == Petit_Rx_Data.DataBuf[1]){
"438
[e $ ! == -> *U + &U . _Petit_Tx_Data 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _Petit_Tx_Data 2 `ui `ux `i -> *U + &U . _Petit_Rx_Data 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _Petit_Rx_Data 2 `ui `ux `i 178  ]
{
[; ;PetitModbus.c: 439: if(Petit_Tx_Data.DataBuf[2] == Petit_Rx_Data.DataBuf[2]){
"439
[e $ ! == -> *U + &U . _Petit_Tx_Data 2 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _Petit_Tx_Data 2 `ui `ux `i -> *U + &U . _Petit_Rx_Data 2 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _Petit_Rx_Data 2 `ui `ux `i 179  ]
{
[; ;PetitModbus.c: 440: if(Petit_Tx_Data.DataBuf[3] == Petit_Rx_Data.DataBuf[3]){
"440
[e $ ! == -> *U + &U . _Petit_Tx_Data 2 * -> -> -> 3 `i `ui `ux -> -> # *U &U . _Petit_Tx_Data 2 `ui `ux `i -> *U + &U . _Petit_Rx_Data 2 * -> -> -> 3 `i `ui `ux -> -> # *U &U . _Petit_Rx_Data 2 `ui `ux `i 180  ]
{
[; ;PetitModbus.c: 441: MASTER_SLAVE_DATA[Petit_Rx_Data.Address].MbCommError = SLAVE_DATA_OK;
"441
[e = . *U + _MASTER_SLAVE_DATA * -> . _Petit_Rx_Data 0 `ux -> -> # *U _MASTER_SLAVE_DATA `ui `ux 1 -> . `E5 1 `uc ]
[; ;PetitModbus.c: 442: MASTER_SLAVE_DATA[Petit_Rx_Data.Address].MbReceiveCounter += 1;
"442
[e =+ . *U + _MASTER_SLAVE_DATA * -> . _Petit_Rx_Data 0 `ux -> -> # *U _MASTER_SLAVE_DATA `ui `ux 3 -> -> 1 `i `ui ]
"443
}
[e :U 180 ]
"444
}
[e :U 179 ]
"445
}
[e :U 178 ]
"446
}
[e :U 177 ]
"447
}
[e :U 176 ]
"448
}
[; ;PetitModbus.c: 443: }
[; ;PetitModbus.c: 444: }
[; ;PetitModbus.c: 445: }
[; ;PetitModbus.c: 446: }
[; ;PetitModbus.c: 447: }
[; ;PetitModbus.c: 448: }
[e $U 181  ]
"449
[e :U 175 ]
[; ;PetitModbus.c: 449: else{
{
[; ;PetitModbus.c: 450: MASTER_SLAVE_DATA[Petit_Tx_Data.Address].MbCommError = SLAVE_DATA_NOK;
"450
[e = . *U + _MASTER_SLAVE_DATA * -> . _Petit_Tx_Data 0 `ux -> -> # *U _MASTER_SLAVE_DATA `ui `ux 1 -> . `E5 2 `uc ]
"451
}
[e :U 181 ]
[; ;PetitModbus.c: 451: }
[; ;PetitModbus.c: 453: Petit_Tx_State = PETIT_RXTX_IDLE;
"453
[e = _Petit_Tx_State . `E1345 0 ]
[; ;PetitModbus.c: 454: }
"454
[e :UE 174 ]
}
"463
[v _HandlePetitModbusReadHoldingRegistersSlaveReadback `(v ~T0 @X0 1 ef ]
"464
{
[; ;PetitModbus.c: 463: void HandlePetitModbusReadHoldingRegistersSlaveReadback(void)
[; ;PetitModbus.c: 464: {
[e :U _HandlePetitModbusReadHoldingRegistersSlaveReadback ]
[f ]
"465
[v _Petit_StartAddress `ui ~T0 @X0 1 a ]
[; ;PetitModbus.c: 465: unsigned int Petit_StartAddress = 0;
[e = _Petit_StartAddress -> -> 0 `i `ui ]
"466
[v _Petit_NumberOfRegistersBytes `ui ~T0 @X0 1 a ]
[; ;PetitModbus.c: 466: unsigned int Petit_NumberOfRegistersBytes = 0;
[e = _Petit_NumberOfRegistersBytes -> -> 0 `i `ui ]
"467
[v _Petit_NumberOfRegisters `ui ~T0 @X0 1 a ]
[; ;PetitModbus.c: 467: unsigned int Petit_NumberOfRegisters = 0;
[e = _Petit_NumberOfRegisters -> -> 0 `i `ui ]
"468
[v _Petit_i `ui ~T0 @X0 1 a ]
[; ;PetitModbus.c: 468: unsigned int Petit_i = 0;
[e = _Petit_i -> -> 0 `i `ui ]
"469
[v _BufReadIndex `ui ~T0 @X0 1 a ]
[; ;PetitModbus.c: 469: unsigned int BufReadIndex = 0;
[e = _BufReadIndex -> -> 0 `i `ui ]
"470
[v _RegData `ui ~T0 @X0 1 a ]
[; ;PetitModbus.c: 470: unsigned int RegData = 0;
[e = _RegData -> -> 0 `i `ui ]
[; ;PetitModbus.c: 472: Petit_StartAddress = ((unsigned int) (Petit_Tx_Data.DataBuf[0]) << 8) + (unsigned int) (Petit_Tx_Data.DataBuf[1]);
"472
[e = _Petit_StartAddress + << -> *U + &U . _Petit_Tx_Data 2 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _Petit_Tx_Data 2 `ui `ux `ui -> 8 `i -> *U + &U . _Petit_Tx_Data 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _Petit_Tx_Data 2 `ui `ux `ui ]
[; ;PetitModbus.c: 473: Petit_NumberOfRegisters = ((unsigned int) (Petit_Tx_Data.DataBuf[2]) << 8) + (unsigned int) (Petit_Tx_Data.DataBuf[3]);
"473
[e = _Petit_NumberOfRegisters + << -> *U + &U . _Petit_Tx_Data 2 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _Petit_Tx_Data 2 `ui `ux `ui -> 8 `i -> *U + &U . _Petit_Tx_Data 2 * -> -> -> 3 `i `ui `ux -> -> # *U &U . _Petit_Tx_Data 2 `ui `ux `ui ]
[; ;PetitModbus.c: 474: Petit_NumberOfRegistersBytes = 2* Petit_NumberOfRegisters;
"474
[e = _Petit_NumberOfRegistersBytes * -> -> 2 `i `ui _Petit_NumberOfRegisters ]
[; ;PetitModbus.c: 476: if(Petit_Tx_Data.Address == Petit_Rx_Data.Address){
"476
[e $ ! == -> . _Petit_Tx_Data 0 `i -> . _Petit_Rx_Data 0 `i 183  ]
{
[; ;PetitModbus.c: 477: if(Petit_NumberOfRegistersBytes == Petit_Rx_Data.DataBuf[0]){
"477
[e $ ! == _Petit_NumberOfRegistersBytes -> *U + &U . _Petit_Rx_Data 2 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _Petit_Rx_Data 2 `ui `ux `ui 184  ]
{
[; ;PetitModbus.c: 480: BufReadIndex = 0;
"480
[e = _BufReadIndex -> -> 0 `i `ui ]
[; ;PetitModbus.c: 481: for (Petit_i = 0; Petit_i < Petit_NumberOfRegisters; Petit_i++)
"481
{
[e = _Petit_i -> -> 0 `i `ui ]
[e $U 188  ]
"482
[e :U 185 ]
[; ;PetitModbus.c: 482: {
{
[; ;PetitModbus.c: 483: RegData = ((unsigned int) (Petit_Rx_Data.DataBuf[BufReadIndex + 1]) << 8) + (unsigned int) (Petit_Rx_Data.DataBuf[BufReadIndex + 2]);
"483
[e = _RegData + << -> *U + &U . _Petit_Rx_Data 2 * -> + _BufReadIndex -> -> 1 `i `ui `ux -> -> # *U &U . _Petit_Rx_Data 2 `ui `ux `ui -> 8 `i -> *U + &U . _Petit_Rx_Data 2 * -> + _BufReadIndex -> -> 2 `i `ui `ux -> -> # *U &U . _Petit_Rx_Data 2 `ui `ux `ui ]
[; ;PetitModbus.c: 484: MASTER_SLAVE_DATA[Petit_Tx_Data.Address].Reg[Petit_StartAddress] = RegData;
"484
[e = *U + &U . *U + _MASTER_SLAVE_DATA * -> . _Petit_Tx_Data 0 `ux -> -> # *U _MASTER_SLAVE_DATA `ui `ux 0 * -> _Petit_StartAddress `ux -> -> # *U &U . *U + _MASTER_SLAVE_DATA * -> . _Petit_Tx_Data 0 `ux -> -> # *U _MASTER_SLAVE_DATA `ui `ux 0 `ui `ux _RegData ]
[; ;PetitModbus.c: 485: Petit_StartAddress += 1;
"485
[e =+ _Petit_StartAddress -> -> 1 `i `ui ]
[; ;PetitModbus.c: 486: BufReadIndex += 2;
"486
[e =+ _BufReadIndex -> -> 2 `i `ui ]
"487
}
"481
[e ++ _Petit_i -> -> 1 `i `ui ]
[e :U 188 ]
[e $ < _Petit_i _Petit_NumberOfRegisters 185  ]
[e :U 186 ]
"487
}
[; ;PetitModbus.c: 487: }
[; ;PetitModbus.c: 488: MASTER_SLAVE_DATA[Petit_Rx_Data.Address].MbCommError = SLAVE_DATA_OK;
"488
[e = . *U + _MASTER_SLAVE_DATA * -> . _Petit_Rx_Data 0 `ux -> -> # *U _MASTER_SLAVE_DATA `ui `ux 1 -> . `E5 1 `uc ]
[; ;PetitModbus.c: 489: MASTER_SLAVE_DATA[Petit_Rx_Data.Address].MbReceiveCounter += 1;
"489
[e =+ . *U + _MASTER_SLAVE_DATA * -> . _Petit_Rx_Data 0 `ux -> -> # *U _MASTER_SLAVE_DATA `ui `ux 3 -> -> 1 `i `ui ]
"490
}
[e :U 184 ]
"491
}
[; ;PetitModbus.c: 490: }
[; ;PetitModbus.c: 491: }
[e $U 189  ]
"492
[e :U 183 ]
[; ;PetitModbus.c: 492: else{
{
[; ;PetitModbus.c: 493: MASTER_SLAVE_DATA[Petit_Tx_Data.Address].MbCommError = SLAVE_DATA_NOK;
"493
[e = . *U + _MASTER_SLAVE_DATA * -> . _Petit_Tx_Data 0 `ux -> -> # *U _MASTER_SLAVE_DATA `ui `ux 1 -> . `E5 2 `uc ]
"494
}
[e :U 189 ]
[; ;PetitModbus.c: 494: }
[; ;PetitModbus.c: 496: Petit_Tx_State = PETIT_RXTX_IDLE;
"496
[e = _Petit_Tx_State . `E1345 0 ]
[; ;PetitModbus.c: 497: }
"497
[e :UE 182 ]
}
"506
[v _HandleMPetitodbusWriteMultipleRegistersSlaveReadback `(v ~T0 @X0 1 ef ]
"507
{
[; ;PetitModbus.c: 506: void HandleMPetitodbusWriteMultipleRegistersSlaveReadback(void)
[; ;PetitModbus.c: 507: {
[e :U _HandleMPetitodbusWriteMultipleRegistersSlaveReadback ]
[f ]
"508
[v _Petit_StartAddress `ui ~T0 @X0 1 a ]
[; ;PetitModbus.c: 508: unsigned int Petit_StartAddress = 0;
[e = _Petit_StartAddress -> -> 0 `i `ui ]
"509
[v _Petit_NumberOfRegisters `ui ~T0 @X0 1 a ]
[; ;PetitModbus.c: 509: unsigned int Petit_NumberOfRegisters = 0;
[e = _Petit_NumberOfRegisters -> -> 0 `i `ui ]
[; ;PetitModbus.c: 511: Petit_StartAddress = ((unsigned int) (Petit_Tx_Data.DataBuf[0]) << 8) + (unsigned int) (Petit_Tx_Data.DataBuf[1]);
"511
[e = _Petit_StartAddress + << -> *U + &U . _Petit_Tx_Data 2 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _Petit_Tx_Data 2 `ui `ux `ui -> 8 `i -> *U + &U . _Petit_Tx_Data 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _Petit_Tx_Data 2 `ui `ux `ui ]
[; ;PetitModbus.c: 512: Petit_NumberOfRegisters = ((unsigned int) (Petit_Tx_Data.DataBuf[2]) << 8) + (unsigned int) (Petit_Tx_Data.DataBuf[3]);
"512
[e = _Petit_NumberOfRegisters + << -> *U + &U . _Petit_Tx_Data 2 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _Petit_Tx_Data 2 `ui `ux `ui -> 8 `i -> *U + &U . _Petit_Tx_Data 2 * -> -> -> 3 `i `ui `ux -> -> # *U &U . _Petit_Tx_Data 2 `ui `ux `ui ]
[; ;PetitModbus.c: 514: if(Petit_Tx_Data.Address == Petit_Rx_Data.Address){
"514
[e $ ! == -> . _Petit_Tx_Data 0 `i -> . _Petit_Rx_Data 0 `i 191  ]
{
[; ;PetitModbus.c: 515: if(Petit_StartAddress == ((unsigned int) (Petit_Rx_Data.DataBuf[0]) << 8) + (unsigned int) (Petit_Rx_Data.DataBuf[1])){
"515
[e $ ! == _Petit_StartAddress + << -> *U + &U . _Petit_Rx_Data 2 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _Petit_Rx_Data 2 `ui `ux `ui -> 8 `i -> *U + &U . _Petit_Rx_Data 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _Petit_Rx_Data 2 `ui `ux `ui 192  ]
{
[; ;PetitModbus.c: 516: if(Petit_NumberOfRegisters == ((unsigned int) (Petit_Rx_Data.DataBuf[2]) << 8) + (unsigned int) (Petit_Rx_Data.DataBuf[3])){
"516
[e $ ! == _Petit_NumberOfRegisters + << -> *U + &U . _Petit_Rx_Data 2 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _Petit_Rx_Data 2 `ui `ux `ui -> 8 `i -> *U + &U . _Petit_Rx_Data 2 * -> -> -> 3 `i `ui `ux -> -> # *U &U . _Petit_Rx_Data 2 `ui `ux `ui 193  ]
{
[; ;PetitModbus.c: 517: MASTER_SLAVE_DATA[Petit_Rx_Data.Address].MbCommError = SLAVE_DATA_OK;
"517
[e = . *U + _MASTER_SLAVE_DATA * -> . _Petit_Rx_Data 0 `ux -> -> # *U _MASTER_SLAVE_DATA `ui `ux 1 -> . `E5 1 `uc ]
[; ;PetitModbus.c: 518: MASTER_SLAVE_DATA[Petit_Rx_Data.Address].MbReceiveCounter += 1;
"518
[e =+ . *U + _MASTER_SLAVE_DATA * -> . _Petit_Rx_Data 0 `ux -> -> # *U _MASTER_SLAVE_DATA `ui `ux 3 -> -> 1 `i `ui ]
"519
}
[e :U 193 ]
"520
}
[e :U 192 ]
"521
}
[; ;PetitModbus.c: 519: }
[; ;PetitModbus.c: 520: }
[; ;PetitModbus.c: 521: }
[e $U 194  ]
"522
[e :U 191 ]
[; ;PetitModbus.c: 522: else{
{
[; ;PetitModbus.c: 523: MASTER_SLAVE_DATA[Petit_Tx_Data.Address].MbCommError = SLAVE_DATA_NOK;
"523
[e = . *U + _MASTER_SLAVE_DATA * -> . _Petit_Tx_Data 0 `ux -> -> # *U _MASTER_SLAVE_DATA `ui `ux 1 -> . `E5 2 `uc ]
"524
}
[e :U 194 ]
[; ;PetitModbus.c: 524: }
[; ;PetitModbus.c: 526: Petit_Tx_State = PETIT_RXTX_IDLE;
"526
[e = _Petit_Tx_State . `E1345 0 ]
[; ;PetitModbus.c: 527: }
"527
[e :UE 190 ]
}
"536
[v _HandleMPetitodbusMbExceptionCodesSlaveReadback `(v ~T0 @X0 1 ef ]
"537
{
[; ;PetitModbus.c: 536: void HandleMPetitodbusMbExceptionCodesSlaveReadback(void)
[; ;PetitModbus.c: 537: {
[e :U _HandleMPetitodbusMbExceptionCodesSlaveReadback ]
[f ]
[; ;PetitModbus.c: 538: if (Petit_Rx_Data.Function > 0x80 && Petit_Rx_Data.Function < 0x8C){
"538
[e $ ! && > -> . _Petit_Rx_Data 1 `i -> 128 `i < -> . _Petit_Rx_Data 1 `i -> 140 `i 196  ]
{
[; ;PetitModbus.c: 539: MASTER_SLAVE_DATA[Petit_Rx_Data.Address].MbExceptionCode = Petit_Rx_Data.DataBuf[0];
"539
[e = . *U + _MASTER_SLAVE_DATA * -> . _Petit_Rx_Data 0 `ux -> -> # *U _MASTER_SLAVE_DATA `ui `ux 2 *U + &U . _Petit_Rx_Data 2 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _Petit_Rx_Data 2 `ui `ux ]
"540
}
[e :U 196 ]
[; ;PetitModbus.c: 540: }
[; ;PetitModbus.c: 541: MASTER_SLAVE_DATA[Petit_Rx_Data.Address].MbCommError = SLAVE_DATA_OK;
"541
[e = . *U + _MASTER_SLAVE_DATA * -> . _Petit_Rx_Data 0 `ux -> -> # *U _MASTER_SLAVE_DATA `ui `ux 1 -> . `E5 1 `uc ]
[; ;PetitModbus.c: 542: MASTER_SLAVE_DATA[Petit_Rx_Data.Address].MbReceiveCounter += 1;
"542
[e =+ . *U + _MASTER_SLAVE_DATA * -> . _Petit_Rx_Data 0 `ux -> -> # *U _MASTER_SLAVE_DATA `ui `ux 3 -> -> 1 `i `ui ]
[; ;PetitModbus.c: 545: Petit_Tx_State = PETIT_RXTX_IDLE;
"545
[e = _Petit_Tx_State . `E1345 0 ]
[; ;PetitModbus.c: 546: }
"546
[e :UE 195 ]
}
