

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Tue Mar 06 22:07:07 2018

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F2431
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	idataCOMRAM
    42  0009C2                     __pidataCOMRAM:
    43                           	opt stack 0
    44                           
    45                           ;initializer for _PETITMODBUS_SLAVE_ADDRESS
    46  0009C2  01                 	db	1
    47                           
    48                           ;initializer for _Petit_Rx_CRC16
    49  0009C3  FFFF               	dw	65535
    50                           
    51                           ;initializer for _Petit_Tx_CRC16
    52  0009C5  FFFF               	dw	65535
    53  0000                     _LATA	set	3977
    54  0000                     _LATB	set	3978
    55  0000                     _LATC	set	3979
    56  0000                     _LATCbits	set	3979
    57  0000                     _OSCCONbits	set	4051
    58  0000                     _PORTCbits	set	3970
    59  0000                     _RCREG	set	4014
    60  0000                     _RCSTA	set	4011
    61  0000                     _SPBRG	set	4015
    62  0000                     _T1CONbits	set	4045
    63  0000                     _TMR1H	set	4047
    64  0000                     _TMR1L	set	4046
    65  0000                     _TRISA	set	3986
    66  0000                     _TRISB	set	3987
    67  0000                     _TRISC	set	3988
    68  0000                     _TXREG	set	4013
    69  0000                     _TXSTA	set	4012
    70  0000                     _GIE	set	32663
    71  0000                     _PEIE	set	32662
    72  0000                     _RCIE	set	31981
    73  0000                     _RCIF	set	31989
    74  0000                     _TMR1IE	set	31976
    75  0000                     _TMR1IF	set	31984
    76  0000                     _TRISC6	set	31910
    77  0000                     _TRISC7	set	31911
    78  0000                     _TRMT	set	32097
    79                           
    80                           ; #config settings
    81  0000                     
    82                           	psect	cinit
    83  00082C                     __pcinit:
    84                           	opt stack 0
    85  00082C                     start_initialization:
    86                           	opt stack 0
    87  00082C                     __initialization:
    88                           	opt stack 0
    89                           
    90                           ; Clear objects allocated to BANK0 (136 bytes)
    91  00082C  EE00  F060         	lfsr	0,__pbssBANK0
    92  000830  0E88               	movlw	136
    93  000832                     clear_0:
    94  000832  6AEE               	clrf	postinc0,c
    95  000834  06E8               	decf	wreg,f,c
    96  000836  E1FD               	bnz	clear_0
    97                           
    98                           ; Clear objects allocated to COMRAM (34 bytes)
    99  000838  EE00  F026         	lfsr	0,__pbssCOMRAM
   100  00083C  0E22               	movlw	34
   101  00083E                     clear_1:
   102  00083E  6AEE               	clrf	postinc0,c
   103  000840  06E8               	decf	wreg,f,c
   104  000842  E1FD               	bnz	clear_1
   105                           
   106                           ; Initialize objects allocated to COMRAM (5 bytes)
   107                           ; load TBLPTR registers with __pidataCOMRAM
   108  000844  0EC2               	movlw	low __pidataCOMRAM
   109  000846  6EF6               	movwf	tblptrl,c
   110  000848  0E09               	movlw	high __pidataCOMRAM
   111  00084A  6EF7               	movwf	tblptrh,c
   112  00084C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   113  00084E  6EF8               	movwf	tblptru,c
   114  000850  EE00  F048         	lfsr	0,__pdataCOMRAM
   115  000854  EE10 F005          	lfsr	1,5
   116  000858                     copy_data0:
   117  000858  0009               	tblrd		*+
   118  00085A  CFF5 FFEE          	movff	tablat,postinc0
   119  00085E  50E5               	movf	postdec1,w,c
   120  000860  50E1               	movf	fsr1l,w,c
   121  000862  E1FA               	bnz	copy_data0
   122  000864                     end_of_initialization:
   123                           	opt stack 0
   124  000864                     __end_of__initialization:
   125                           	opt stack 0
   126  000864  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   127  000866  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   128  000868  0E00               	movlw	low (__Lmediumconst shr (0+16))
   129  00086A  6EF8               	movwf	tblptru,c
   130  00086C  0100               	movlb	0
   131  00086E  EF7A  F002         	goto	_main	;jump to C main() function
   132                           tblptru	equ	0xFF8
   133                           tblptrh	equ	0xFF7
   134                           tblptrl	equ	0xFF6
   135                           tablat	equ	0xFF5
   136                           postinc0	equ	0xFEE
   137                           wreg	equ	0xFE8
   138                           postdec1	equ	0xFE5
   139                           fsr1l	equ	0xFE1
   140                           
   141                           	psect	bssCOMRAM
   142  000026                     __pbssCOMRAM:
   143                           	opt stack 0
   144  000026                     _PetitRegisters:
   145                           	opt stack 0
   146  000026                     	ds	22
   147  00003C                     _PetitModbusTimerValue:
   148                           	opt stack 0
   149  00003C                     	ds	2
   150  00003E                     _Petit_Tx_Buf_Size:
   151                           	opt stack 0
   152  00003E                     	ds	2
   153  000040                     _Petit_Tx_Current:
   154                           	opt stack 0
   155  000040                     	ds	2
   156  000042                     _Timer1_Tick_Counter:
   157                           	opt stack 0
   158  000042                     	ds	2
   159  000044                     _PetitReceiveCounter:
   160                           	opt stack 0
   161  000044                     	ds	1
   162  000045                     _Petit_Rx_Data_Available:
   163                           	opt stack 0
   164  000045                     	ds	1
   165  000046                     _Petit_Rx_State:
   166                           	opt stack 0
   167  000046                     	ds	1
   168  000047                     _Petit_Tx_State:
   169                           	opt stack 0
   170  000047                     	ds	1
   171                           tblptru	equ	0xFF8
   172                           tblptrh	equ	0xFF7
   173                           tblptrl	equ	0xFF6
   174                           tablat	equ	0xFF5
   175                           postinc0	equ	0xFEE
   176                           wreg	equ	0xFE8
   177                           postdec1	equ	0xFE5
   178                           fsr1l	equ	0xFE1
   179                           
   180                           	psect	dataCOMRAM
   181  000048                     __pdataCOMRAM:
   182                           	opt stack 0
   183  000048                     _PETITMODBUS_SLAVE_ADDRESS:
   184                           	opt stack 0
   185  000048                     	ds	1
   186  000049                     _Petit_Rx_CRC16:
   187                           	opt stack 0
   188  000049                     	ds	2
   189  00004B                     _Petit_Tx_CRC16:
   190                           	opt stack 0
   191  00004B                     	ds	2
   192                           tblptru	equ	0xFF8
   193                           tblptrh	equ	0xFF7
   194                           tblptrl	equ	0xFF6
   195                           tablat	equ	0xFF5
   196                           postinc0	equ	0xFEE
   197                           wreg	equ	0xFE8
   198                           postdec1	equ	0xFE5
   199                           fsr1l	equ	0xFE1
   200                           
   201                           	psect	bssBANK0
   202  000060                     __pbssBANK0:
   203                           	opt stack 0
   204  000060                     _Petit_Rx_Data:
   205                           	opt stack 0
   206  000060                     	ds	36
   207  000084                     _Petit_Tx_Data:
   208                           	opt stack 0
   209  000084                     	ds	36
   210  0000A8                     _PetitReceiveBuffer:
   211                           	opt stack 0
   212  0000A8                     	ds	32
   213  0000C8                     _Petit_Tx_Buf:
   214                           	opt stack 0
   215  0000C8                     	ds	32
   216                           tblptru	equ	0xFF8
   217                           tblptrh	equ	0xFF7
   218                           tblptrl	equ	0xFF6
   219                           tablat	equ	0xFF5
   220                           postinc0	equ	0xFEE
   221                           wreg	equ	0xFE8
   222                           postdec1	equ	0xFE5
   223                           fsr1l	equ	0xFE1
   224                           
   225                           	psect	cstackCOMRAM
   226  000001                     __pcstackCOMRAM:
   227                           	opt stack 0
   228  000001                     ReceiveInterrupt@Data:
   229                           	opt stack 0
   230                           
   231                           ; 1 bytes @ 0x0
   232  000001                     	ds	1
   233  000002                     ??_tc_int:
   234                           
   235                           ; 1 bytes @ 0x1
   236  000002                     	ds	14
   237  000010                     ??_CheckPetitModbusBufferComplete:
   238  000010                     HandlePetitModbusError@ErrorCode:
   239                           	opt stack 0
   240  000010                     Petit_RxDataAvailable@Result:
   241                           	opt stack 0
   242  000010                     InitPetitModbus@PetitModbusSlaveAddress:
   243                           	opt stack 0
   244  000010                     PetitModBus_UART_Putch@c:
   245                           	opt stack 0
   246  000010                     Petit_CRC16@CRC:
   247                           	opt stack 0
   248                           
   249                           ; 2 bytes @ 0xF
   250  000010                     	ds	1
   251  000011                     ??_HandlePetitModbusReadHoldingRegisters:
   252  000011                     ??_HandlePetitModbusWriteSingleRegister:
   253  000011                     ??_HandleMPetitodbusWriteMultipleRegisters:
   254  000011                     PetitModBus_UART_String@s:
   255                           	opt stack 0
   256                           
   257                           ; 2 bytes @ 0x10
   258  000011                     	ds	1
   259  000012                     ??_Petit_CRC16:
   260  000012                     CheckPetitModbusBufferComplete@PetitExpectedReceiveCount:
   261                           	opt stack 0
   262                           
   263                           ; 2 bytes @ 0x11
   264  000012                     	ds	1
   265  000013                     HandlePetitModbusReadHoldingRegisters@Petit_CurrentData:
   266                           	opt stack 0
   267  000013                     HandlePetitModbusWriteSingleRegister@Petit_Value:
   268                           	opt stack 0
   269  000013                     PetitModBus_UART_String@Length:
   270                           	opt stack 0
   271                           
   272                           ; 2 bytes @ 0x12
   273  000013                     	ds	2
   274  000015                     HandlePetitModbusReadHoldingRegisters@Petit_StartAddress:
   275                           	opt stack 0
   276  000015                     HandlePetitModbusWriteSingleRegister@Petit_Address:
   277                           	opt stack 0
   278  000015                     PetitModBus_UART_String@DummyCounter:
   279                           	opt stack 0
   280                           
   281                           ; 2 bytes @ 0x14
   282  000015                     	ds	2
   283  000017                     HandlePetitModbusWriteSingleRegister@Petit_i:
   284                           	opt stack 0
   285  000017                     HandlePetitModbusReadHoldingRegisters@Petit_NumberOfRegisters:
   286                           	opt stack 0
   287                           
   288                           ; 2 bytes @ 0x16
   289  000017                     	ds	1
   290  000018                     Petit_CRC16@Data:
   291                           	opt stack 0
   292                           
   293                           ; 1 bytes @ 0x17
   294  000018                     	ds	1
   295  000019                     HandleMPetitodbusWriteMultipleRegisters@Petit_ByteCount:
   296                           	opt stack 0
   297  000019                     Petit_CRC16@i:
   298                           	opt stack 0
   299  000019                     HandlePetitModbusReadHoldingRegisters@Petit_i:
   300                           	opt stack 0
   301                           
   302                           ; 2 bytes @ 0x18
   303  000019                     	ds	1
   304  00001A                     HandleMPetitodbusWriteMultipleRegisters@Petit_Value:
   305                           	opt stack 0
   306                           
   307                           ; 2 bytes @ 0x19
   308  00001A                     	ds	1
   309  00001B                     ??_Petit_RxRTU:
   310  00001B                     
   311                           ; 1 bytes @ 0x1A
   312  00001B                     	ds	1
   313  00001C                     HandleMPetitodbusWriteMultipleRegisters@Petit_StartAddress:
   314                           	opt stack 0
   315                           
   316                           ; 2 bytes @ 0x1B
   317  00001C                     	ds	2
   318  00001E                     HandleMPetitodbusWriteMultipleRegisters@Petit_NumberOfRegisters:
   319                           	opt stack 0
   320                           
   321                           ; 2 bytes @ 0x1D
   322  00001E                     	ds	2
   323  000020                     HandleMPetitodbusWriteMultipleRegisters@Petit_i:
   324                           	opt stack 0
   325                           
   326                           ; 1 bytes @ 0x1F
   327  000020                     	ds	2
   328  000022                     Petit_RxRTU@Petit_ReceiveBufferControl:
   329                           	opt stack 0
   330                           
   331                           ; 1 bytes @ 0x21
   332  000022                     	ds	1
   333  000023                     Petit_RxRTU@Petit_i:
   334                           	opt stack 0
   335                           
   336                           ; 1 bytes @ 0x22
   337  000023                     	ds	1
   338  000024                     ??_main:
   339                           
   340                           ; 1 bytes @ 0x23
   341  000024                     	ds	2
   342                           tblptru	equ	0xFF8
   343                           tblptrh	equ	0xFF7
   344                           tblptrl	equ	0xFF6
   345                           tablat	equ	0xFF5
   346                           postinc0	equ	0xFEE
   347                           wreg	equ	0xFE8
   348                           postdec1	equ	0xFE5
   349                           fsr1l	equ	0xFE1
   350                           
   351 ;;
   352 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   353 ;;
   354 ;; *************** function _main *****************
   355 ;; Defined at:
   356 ;;		line 3 in file "Source/main.c"
   357 ;; Parameters:    Size  Location     Type
   358 ;;		None
   359 ;; Auto vars:     Size  Location     Type
   360 ;;		None
   361 ;; Return value:  Size  Location     Type
   362 ;;                  2  275[None  ] int 
   363 ;; Registers used:
   364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   365 ;; Tracked objects:
   366 ;;		On entry : 0/0
   367 ;;		On exit  : 0/0
   368 ;;		Unchanged: 0/0
   369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   370 ;;      Params:         0       0       0       0
   371 ;;      Locals:         0       0       0       0
   372 ;;      Temps:          2       0       0       0
   373 ;;      Totals:         2       0       0       0
   374 ;;Total ram usage:        2 bytes
   375 ;; Hardware stack levels required when called:    7
   376 ;; This function calls:
   377 ;;		_InitIO
   378 ;;		_InitOSC
   379 ;;		_InitPetitModbus
   380 ;;		_ProcessPetitModbus
   381 ;; This function is called by:
   382 ;;		Startup code after reset
   383 ;; This function uses a non-reentrant model
   384 ;;
   385                           
   386                           	psect	text0
   387  0004F4                     __ptext0:
   388                           	opt stack 0
   389  0004F4                     _main:
   390                           	opt stack 24
   391                           
   392                           ;main.c: 5: InitOSC();
   393                           
   394                           ;incstack = 0
   395  0004F4  ECD3  F004         	call	_InitOSC	;wreg free
   396                           
   397                           ;main.c: 6: InitIO();
   398  0004F8  EC91  F004         	call	_InitIO	;wreg free
   399                           
   400                           ;main.c: 8: InitPetitModbus(2);
   401  0004FC  0E02               	movlw	2
   402  0004FE  ECBF  F004         	call	_InitPetitModbus
   403                           
   404                           ;main.c: 10: PEIE =1;
   405  000502  8CF2               	bsf	intcon,6,c	;volatile
   406                           
   407                           ;main.c: 11: GIE =1;
   408  000504  8EF2               	bsf	intcon,7,c	;volatile
   409                           
   410                           ;main.c: 13: LATCbits.LATC1=LATCbits.LATC2=LATCbits.LATC3=LATCbits.LATC4=0;
   411  000506  988B               	bcf	3979,4,c	;volatile
   412  000508  968B               	bcf	3979,3,c	;volatile
   413  00050A  948B               	bcf	3979,2,c	;volatile
   414  00050C  928B               	bcf	3979,1,c	;volatile
   415  00050E                     l1617:
   416                           
   417                           ;main.c: 16: {
   418                           ;main.c: 17: ProcessPetitModbus();
   419  00050E  ECEC  F003         	call	_ProcessPetitModbus	;wreg free
   420                           
   421                           ;main.c: 19: LATCbits.LATC1 = (PetitRegisters[0].ActValue >> 0) & 0x01;
   422  000512  C026  F024         	movff	_PetitRegisters,??_main
   423  000516  0E01               	movlw	1
   424  000518  1624               	andwf	??_main,f,c
   425  00051A  4624               	rlncf	??_main,f,c
   426  00051C  508B               	movf	3979,w,c	;volatile
   427  00051E  1824               	xorwf	??_main,w,c
   428  000520  0BFD               	andlw	-3
   429  000522  1824               	xorwf	??_main,w,c
   430  000524  6E8B               	movwf	3979,c	;volatile
   431                           
   432                           ;main.c: 20: LATCbits.LATC2 = (PetitRegisters[0].ActValue >> 1) & 0x01;
   433  000526  3427               	rlcf	_PetitRegisters+1,w,c
   434  000528  3027               	rrcf	_PetitRegisters+1,w,c
   435  00052A  6E25               	movwf	(??_main+1)& (0+255),c
   436  00052C  3026               	rrcf	_PetitRegisters,w,c
   437  00052E  6E24               	movwf	??_main& (0+255),c
   438  000530  0E01               	movlw	1
   439  000532  1624               	andwf	??_main,f,c
   440  000534  4624               	rlncf	??_main,f,c
   441  000536  4624               	rlncf	??_main,f,c
   442  000538  508B               	movf	3979,w,c	;volatile
   443  00053A  1824               	xorwf	??_main,w,c
   444  00053C  0BFB               	andlw	-5
   445  00053E  1824               	xorwf	??_main,w,c
   446  000540  6E8B               	movwf	3979,c	;volatile
   447                           
   448                           ;main.c: 21: LATCbits.LATC3 = (PetitRegisters[0].ActValue >> 2) & 0x01;
   449  000542  C026  F024         	movff	_PetitRegisters,??_main
   450  000546  C027  F025         	movff	_PetitRegisters+1,??_main+1
   451  00054A  3425               	rlcf	??_main+1,w,c
   452  00054C  3225               	rrcf	??_main+1,f,c
   453  00054E  3224               	rrcf	??_main,f,c
   454  000550  3425               	rlcf	??_main+1,w,c
   455  000552  3225               	rrcf	??_main+1,f,c
   456  000554  3224               	rrcf	??_main,f,c
   457  000556  0E01               	movlw	1
   458  000558  1624               	andwf	??_main,f,c
   459  00055A  4624               	rlncf	??_main,f,c
   460  00055C  4624               	rlncf	??_main,f,c
   461  00055E  4624               	rlncf	??_main,f,c
   462  000560  508B               	movf	3979,w,c	;volatile
   463  000562  1824               	xorwf	??_main,w,c
   464  000564  0BF7               	andlw	-9
   465  000566  1824               	xorwf	??_main,w,c
   466  000568  6E8B               	movwf	3979,c	;volatile
   467                           
   468                           ;main.c: 22: LATCbits.LATC4 = (PetitRegisters[0].ActValue >> 3) & 0x01;
   469  00056A  C026  F024         	movff	_PetitRegisters,??_main
   470  00056E  C027  F025         	movff	_PetitRegisters+1,??_main+1
   471  000572  3425               	rlcf	??_main+1,w,c
   472  000574  3225               	rrcf	??_main+1,f,c
   473  000576  3224               	rrcf	??_main,f,c
   474  000578  3425               	rlcf	??_main+1,w,c
   475  00057A  3225               	rrcf	??_main+1,f,c
   476  00057C  3224               	rrcf	??_main,f,c
   477  00057E  3425               	rlcf	??_main+1,w,c
   478  000580  3225               	rrcf	??_main+1,f,c
   479  000582  3224               	rrcf	??_main,f,c
   480  000584  0E01               	movlw	1
   481  000586  1624               	andwf	??_main,f,c
   482  000588  3A24               	swapf	??_main,f,c
   483  00058A  508B               	movf	3979,w,c	;volatile
   484  00058C  1824               	xorwf	??_main,w,c
   485  00058E  0BEF               	andlw	-17
   486  000590  1824               	xorwf	??_main,w,c
   487  000592  6E8B               	movwf	3979,c	;volatile
   488                           
   489                           ;main.c: 24: PetitRegisters[2].ActValue=PORTCbits.RC0;
   490  000594  A082               	btfss	3970,0,c	;volatile
   491  000596  D003               	goto	u840
   492  000598  6A24               	clrf	??_main& (0+255),c
   493  00059A  2A24               	incf	??_main& (0+255),f,c
   494  00059C  D001               	goto	u848
   495  00059E                     u840:
   496  00059E  6A24               	clrf	??_main& (0+255),c
   497  0005A0                     u848:
   498  0005A0  5024               	movf	??_main,w,c
   499  0005A2  6E2A               	movwf	_PetitRegisters+4,c
   500  0005A4  6A2B               	clrf	_PetitRegisters+5,c
   501                           
   502                           ;main.c: 26: PetitRegisters[4].ActValue=PetitRegisters[3].ActValue;
   503  0005A6  C02C  F02E         	movff	_PetitRegisters+6,_PetitRegisters+8
   504  0005AA  C02D  F02F         	movff	_PetitRegisters+7,_PetitRegisters+9
   505                           
   506                           ;main.c: 28: if(Timer1_Tick_Counter>1000)
   507  0005AE  0EE9               	movlw	233
   508  0005B0  5C42               	subwf	_Timer1_Tick_Counter,w,c	;volatile
   509  0005B2  0E03               	movlw	3
   510  0005B4  5843               	subwfb	_Timer1_Tick_Counter+1,w,c	;volatile
   511  0005B6  A0D8               	btfss	status,0,c
   512  0005B8  D006               	goto	l1637
   513                           
   514                           ;main.c: 29: {
   515                           ;main.c: 30: Timer1_Tick_Counter=0;
   516  0005BA  0E00               	movlw	0
   517  0005BC  6E43               	movwf	_Timer1_Tick_Counter+1,c	;volatile
   518  0005BE  0E00               	movlw	0
   519  0005C0  6E42               	movwf	_Timer1_Tick_Counter,c	;volatile
   520                           
   521                           ;main.c: 32: PetitRegisters[5].ActValue++;
   522  0005C2  4A30               	infsnz	_PetitRegisters+10,f,c
   523  0005C4  2A31               	incf	_PetitRegisters+11,f,c
   524  0005C6                     l1637:
   525                           
   526                           ;main.c: 33: }
   527                           ;main.c: 35: PetitRegisters[10].ActValue = 12345;
   528  0005C6  0E30               	movlw	48
   529  0005C8  6E3B               	movwf	_PetitRegisters+21,c
   530  0005CA  0E39               	movlw	57
   531  0005CC  6E3A               	movwf	_PetitRegisters+20,c
   532                           
   533                           ;main.c: 36: }
   534  0005CE  D79F               	goto	l1617
   535  0005D0                     __end_of_main:
   536                           	opt stack 0
   537                           tblptru	equ	0xFF8
   538                           tblptrh	equ	0xFF7
   539                           tblptrl	equ	0xFF6
   540                           tablat	equ	0xFF5
   541                           intcon	equ	0xFF2
   542                           postinc0	equ	0xFEE
   543                           wreg	equ	0xFE8
   544                           postdec1	equ	0xFE5
   545                           fsr1l	equ	0xFE1
   546                           status	equ	0xFD8
   547                           
   548 ;; *************** function _ProcessPetitModbus *****************
   549 ;; Defined at:
   550 ;;		line 428 in file "PetitModbus/PetitModbus.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   564 ;;      Params:         0       0       0       0
   565 ;;      Locals:         0       0       0       0
   566 ;;      Temps:          0       0       0       0
   567 ;;      Totals:         0       0       0       0
   568 ;;Total ram usage:        0 bytes
   569 ;; Hardware stack levels used:    1
   570 ;; Hardware stack levels required when called:    6
   571 ;; This function calls:
   572 ;;		_HandleMPetitodbusWriteMultipleRegisters
   573 ;;		_HandlePetitModbusError
   574 ;;		_HandlePetitModbusReadHoldingRegisters
   575 ;;		_HandlePetitModbusWriteSingleRegister
   576 ;;		_Petit_RxDataAvailable
   577 ;;		_Petit_RxRTU
   578 ;;		_Petit_TxRTU
   579 ;; This function is called by:
   580 ;;		_main
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584                           	psect	text1
   585  0007D8                     __ptext1:
   586                           	opt stack 0
   587  0007D8                     _ProcessPetitModbus:
   588                           	opt stack 24
   589                           
   590                           ;PetitModbus.c: 430: if (Petit_Tx_State != PETIT_RXTX_IDLE)
   591                           
   592                           ;incstack = 0
   593  0007D8  5047               	movf	_Petit_Tx_State,w,c
   594  0007DA  A4D8               	btfss	status,2,c
   595                           
   596                           ;PetitModbus.c: 431: Petit_TxRTU();
   597  0007DC  EC0B  F002         	call	_Petit_TxRTU	;wreg free
   598                           
   599                           ;PetitModbus.c: 433: Petit_RxRTU();
   600  0007E0  EC54  F000         	call	_Petit_RxRTU	;wreg free
   601                           
   602                           ;PetitModbus.c: 435: if (Petit_RxDataAvailable())
   603  0007E4  ECCD  F004         	call	_Petit_RxDataAvailable	;wreg free
   604  0007E8  0900               	iorlw	0
   605  0007EA  B4D8               	btfsc	status,2,c
   606  0007EC  0012               	return	
   607                           
   608                           ;PetitModbus.c: 436: {
   609                           ;PetitModbus.c: 437: if (Petit_Rx_Data.Address == PETITMODBUS_SLAVE_ADDRESS)
   610  0007EE  5048               	movf	_PETITMODBUS_SLAVE_ADDRESS,w,c
   611  0007F0  0100               	movlb	0	; () banked
   612  0007F2  1960               	xorwf	_Petit_Rx_Data& (0+255),w,b
   613  0007F4  A4D8               	btfss	status,2,c
   614  0007F6  0012               	return	
   615  0007F8  D00D               	goto	l1587
   616  0007FA                     l1577:
   617                           
   618                           ; BSR set to: 0
   619  0007FA  EC8C  F001         	call	_HandlePetitModbusReadHoldingRegisters	;wreg free
   620  0007FE  0012               	return	
   621  000800                     l1579:
   622  000800  EC40  F003         	call	_HandlePetitModbusWriteSingleRegister	;wreg free
   623  000804  0012               	return	
   624  000806                     l1581:
   625  000806  ECF8  F000         	call	_HandleMPetitodbusWriteMultipleRegisters	;wreg free
   626  00080A  0012               	return	
   627  00080C                     l1583:
   628  00080C  0E01               	movlw	1
   629  00080E  EC75  F004         	call	_HandlePetitModbusError
   630                           
   631                           ;PetitModbus.c: 451: }
   632  000812  0012               	return	
   633  000814                     l1587:
   634  000814  0100               	movlb	0	; () banked
   635  000816  5161               	movf	(_Petit_Rx_Data+1)& (0+255),w,b
   636                           
   637                           ; Switch size 1, requested type "space"
   638                           ; Number of cases is 3, Range of values is 3 to 16
   639                           ; switch strategies available:
   640                           ; Name         Instructions Cycles
   641                           ; simple_byte           10     6 (average)
   642                           ;	Chosen strategy is simple_byte
   643  000818  0A03               	xorlw	3	; case 3
   644  00081A  B4D8               	btfsc	status,2,c
   645  00081C  D7EE               	goto	l1577
   646  00081E  0A05               	xorlw	5	; case 6
   647  000820  B4D8               	btfsc	status,2,c
   648  000822  D7EE               	goto	l1579
   649  000824  0A16               	xorlw	22	; case 16
   650  000826  B4D8               	btfsc	status,2,c
   651  000828  D7EE               	goto	l1581
   652  00082A  D7F0               	goto	l1583
   653  00082C                     __end_of_ProcessPetitModbus:
   654                           	opt stack 0
   655                           tblptru	equ	0xFF8
   656                           tblptrh	equ	0xFF7
   657                           tblptrl	equ	0xFF6
   658                           tablat	equ	0xFF5
   659                           intcon	equ	0xFF2
   660                           postinc0	equ	0xFEE
   661                           wreg	equ	0xFE8
   662                           postdec1	equ	0xFE5
   663                           fsr1l	equ	0xFE1
   664                           status	equ	0xFD8
   665                           
   666 ;; *************** function _Petit_TxRTU *****************
   667 ;; Defined at:
   668 ;;		line 399 in file "PetitModbus/PetitModbus.c"
   669 ;; Parameters:    Size  Location     Type
   670 ;;		None
   671 ;; Auto vars:     Size  Location     Type
   672 ;;		None
   673 ;; Return value:  Size  Location     Type
   674 ;;                  1    wreg      void 
   675 ;; Registers used:
   676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   682 ;;      Params:         0       0       0       0
   683 ;;      Locals:         0       0       0       0
   684 ;;      Temps:          0       0       0       0
   685 ;;      Totals:         0       0       0       0
   686 ;;Total ram usage:        0 bytes
   687 ;; Hardware stack levels used:    1
   688 ;; Hardware stack levels required when called:    5
   689 ;; This function calls:
   690 ;;		_Petit_CRC16
   691 ;;		_Petit_DoSlaveTX
   692 ;; This function is called by:
   693 ;;		_ProcessPetitModbus
   694 ;; This function uses a non-reentrant model
   695 ;;
   696                           
   697                           	psect	text2
   698  000416                     __ptext2:
   699                           	opt stack 0
   700  000416                     _Petit_TxRTU:
   701                           	opt stack 24
   702                           
   703                           ;PetitModbus.c: 401: Petit_Tx_CRC16 =0xFFFF;
   704                           
   705                           ;incstack = 0
   706  000416  684B               	setf	_Petit_Tx_CRC16,c
   707  000418  684C               	setf	_Petit_Tx_CRC16+1,c
   708                           
   709                           ;PetitModbus.c: 402: Petit_Tx_Buf_Size =0;
   710  00041A  0E00               	movlw	0
   711  00041C  6E3F               	movwf	_Petit_Tx_Buf_Size+1,c
   712  00041E  0E00               	movlw	0
   713  000420  6E3E               	movwf	_Petit_Tx_Buf_Size,c
   714                           
   715                           ;PetitModbus.c: 403: Petit_Tx_Buf[Petit_Tx_Buf_Size++] =Petit_Tx_Data.Address;
   716  000422  0EC8               	movlw	low _Petit_Tx_Buf
   717  000424  243E               	addwf	_Petit_Tx_Buf_Size,w,c
   718  000426  6ED9               	movwf	fsr2l,c
   719  000428  0E00               	movlw	high _Petit_Tx_Buf
   720  00042A  203F               	addwfc	_Petit_Tx_Buf_Size+1,w,c
   721  00042C  6EDA               	movwf	fsr2h,c
   722  00042E  C084  FFDF         	movff	_Petit_Tx_Data,indf2
   723  000432  4A3E               	infsnz	_Petit_Tx_Buf_Size,f,c
   724  000434  2A3F               	incf	_Petit_Tx_Buf_Size+1,f,c
   725                           
   726                           ;PetitModbus.c: 404: Petit_CRC16(Petit_Tx_Data.Address, &Petit_Tx_CRC16);
   727  000436  0E4B               	movlw	low _Petit_Tx_CRC16
   728  000438  6E10               	movwf	Petit_CRC16@CRC,c
   729  00043A  0E00               	movlw	high _Petit_Tx_CRC16
   730  00043C  6E11               	movwf	Petit_CRC16@CRC+1,c
   731  00043E  0100               	movlb	0	; () banked
   732  000440  5184               	movf	_Petit_Tx_Data& (0+255),w,b
   733  000442  EC98  F003         	call	_Petit_CRC16
   734                           
   735                           ;PetitModbus.c: 405: Petit_Tx_Buf[Petit_Tx_Buf_Size++] =Petit_Tx_Data.Function;
   736  000446  0EC8               	movlw	low _Petit_Tx_Buf
   737  000448  243E               	addwf	_Petit_Tx_Buf_Size,w,c
   738  00044A  6ED9               	movwf	fsr2l,c
   739  00044C  0E00               	movlw	high _Petit_Tx_Buf
   740  00044E  203F               	addwfc	_Petit_Tx_Buf_Size+1,w,c
   741  000450  6EDA               	movwf	fsr2h,c
   742  000452  C085  FFDF         	movff	_Petit_Tx_Data+1,indf2
   743  000456  4A3E               	infsnz	_Petit_Tx_Buf_Size,f,c
   744  000458  2A3F               	incf	_Petit_Tx_Buf_Size+1,f,c
   745                           
   746                           ;PetitModbus.c: 406: Petit_CRC16(Petit_Tx_Data.Function, &Petit_Tx_CRC16);
   747  00045A  0E4B               	movlw	low _Petit_Tx_CRC16
   748  00045C  6E10               	movwf	Petit_CRC16@CRC,c
   749  00045E  0E00               	movlw	high _Petit_Tx_CRC16
   750  000460  6E11               	movwf	Petit_CRC16@CRC+1,c
   751  000462  0100               	movlb	0	; () banked
   752  000464  5185               	movf	(_Petit_Tx_Data+1)& (0+255),w,b
   753  000466  EC98  F003         	call	_Petit_CRC16
   754                           
   755                           ;PetitModbus.c: 408: for(Petit_Tx_Current=0; Petit_Tx_Current < Petit_Tx_Data.DataLen; P
      +                          etit_Tx_Current++)
   756  00046A  0E00               	movlw	0
   757  00046C  6E41               	movwf	_Petit_Tx_Current+1,c
   758  00046E  0E00               	movlw	0
   759  000470  6E40               	movwf	_Petit_Tx_Current,c
   760  000472  D01F               	goto	l1545
   761  000474                     l1537:
   762                           
   763                           ;PetitModbus.c: 409: {
   764                           ;PetitModbus.c: 410: Petit_Tx_Buf[Petit_Tx_Buf_Size++]=Petit_Tx_Data.DataBuf[Petit_Tx_Cu
      +                          rrent];
   765  000474  0E86               	movlw	low (_Petit_Tx_Data+2)
   766  000476  2440               	addwf	_Petit_Tx_Current,w,c
   767  000478  6ED9               	movwf	fsr2l,c
   768  00047A  0E00               	movlw	high (_Petit_Tx_Data+2)
   769  00047C  2041               	addwfc	_Petit_Tx_Current+1,w,c
   770  00047E  6EDA               	movwf	fsr2h,c
   771  000480  0EC8               	movlw	low _Petit_Tx_Buf
   772  000482  243E               	addwf	_Petit_Tx_Buf_Size,w,c
   773  000484  6EE1               	movwf	fsr1l,c
   774  000486  0E00               	movlw	high _Petit_Tx_Buf
   775  000488  203F               	addwfc	_Petit_Tx_Buf_Size+1,w,c
   776  00048A  6EE2               	movwf	fsr1h,c
   777  00048C  CFDF FFE7          	movff	indf2,indf1
   778  000490  4A3E               	infsnz	_Petit_Tx_Buf_Size,f,c
   779  000492  2A3F               	incf	_Petit_Tx_Buf_Size+1,f,c
   780                           
   781                           ;PetitModbus.c: 411: Petit_CRC16(Petit_Tx_Data.DataBuf[Petit_Tx_Current], &Petit_Tx_CRC1
      +                          6);
   782  000494  0E4B               	movlw	low _Petit_Tx_CRC16
   783  000496  6E10               	movwf	Petit_CRC16@CRC,c
   784  000498  0E00               	movlw	high _Petit_Tx_CRC16
   785  00049A  6E11               	movwf	Petit_CRC16@CRC+1,c
   786  00049C  0E86               	movlw	low (_Petit_Tx_Data+2)
   787  00049E  2440               	addwf	_Petit_Tx_Current,w,c
   788  0004A0  6ED9               	movwf	fsr2l,c
   789  0004A2  0E00               	movlw	high (_Petit_Tx_Data+2)
   790  0004A4  2041               	addwfc	_Petit_Tx_Current+1,w,c
   791  0004A6  6EDA               	movwf	fsr2h,c
   792  0004A8  50DF               	movf	indf2,w,c
   793  0004AA  EC98  F003         	call	_Petit_CRC16
   794  0004AE  4A40               	infsnz	_Petit_Tx_Current,f,c
   795  0004B0  2A41               	incf	_Petit_Tx_Current+1,f,c
   796  0004B2                     l1545:
   797  0004B2  0100               	movlb	0	; () banked
   798  0004B4  51A6               	movf	(_Petit_Tx_Data+34)& (0+255),w,b
   799  0004B6  5C40               	subwf	_Petit_Tx_Current,w,c
   800  0004B8  0100               	movlb	0	; () banked
   801  0004BA  51A7               	movf	(_Petit_Tx_Data+35)& (0+255),w,b
   802  0004BC  5841               	subwfb	_Petit_Tx_Current+1,w,c
   803  0004BE  A0D8               	btfss	status,0,c
   804  0004C0  D7D9               	goto	l1537
   805                           
   806                           ; BSR set to: 0
   807                           ;PetitModbus.c: 412: }
   808                           ;PetitModbus.c: 414: Petit_Tx_Buf[Petit_Tx_Buf_Size++] = Petit_Tx_CRC16 & 0x00FF;
   809                           
   810                           ; BSR set to: 0
   811  0004C2  0EC8               	movlw	low _Petit_Tx_Buf
   812  0004C4  243E               	addwf	_Petit_Tx_Buf_Size,w,c
   813  0004C6  6ED9               	movwf	fsr2l,c
   814  0004C8  0E00               	movlw	high _Petit_Tx_Buf
   815  0004CA  203F               	addwfc	_Petit_Tx_Buf_Size+1,w,c
   816  0004CC  6EDA               	movwf	fsr2h,c
   817  0004CE  C04B  FFDF         	movff	_Petit_Tx_CRC16,indf2
   818                           
   819                           ; BSR set to: 0
   820  0004D2  4A3E               	infsnz	_Petit_Tx_Buf_Size,f,c
   821  0004D4  2A3F               	incf	_Petit_Tx_Buf_Size+1,f,c
   822                           
   823                           ; BSR set to: 0
   824                           ;PetitModbus.c: 415: Petit_Tx_Buf[Petit_Tx_Buf_Size++] =(Petit_Tx_CRC16 & 0xFF00) >> 8;
   825  0004D6  0EC8               	movlw	low _Petit_Tx_Buf
   826  0004D8  243E               	addwf	_Petit_Tx_Buf_Size,w,c
   827  0004DA  6ED9               	movwf	fsr2l,c
   828  0004DC  0E00               	movlw	high _Petit_Tx_Buf
   829  0004DE  203F               	addwfc	_Petit_Tx_Buf_Size+1,w,c
   830  0004E0  6EDA               	movwf	fsr2h,c
   831  0004E2  504C               	movf	_Petit_Tx_CRC16+1,w,c
   832  0004E4  6EDF               	movwf	indf2,c
   833  0004E6  4A3E               	infsnz	_Petit_Tx_Buf_Size,f,c
   834  0004E8  2A3F               	incf	_Petit_Tx_Buf_Size+1,f,c
   835                           
   836                           ; BSR set to: 0
   837                           ;PetitModbus.c: 417: Petit_DoSlaveTX();
   838  0004EA  EC66  F004         	call	_Petit_DoSlaveTX	;wreg free
   839                           
   840                           ;PetitModbus.c: 419: Petit_Tx_State =PETIT_RXTX_IDLE;
   841  0004EE  0E00               	movlw	0
   842  0004F0  6E47               	movwf	_Petit_Tx_State,c
   843  0004F2  0012               	return		;funcret
   844  0004F4                     __end_of_Petit_TxRTU:
   845                           	opt stack 0
   846                           tblptru	equ	0xFF8
   847                           tblptrh	equ	0xFF7
   848                           tblptrl	equ	0xFF6
   849                           tablat	equ	0xFF5
   850                           intcon	equ	0xFF2
   851                           postinc0	equ	0xFEE
   852                           wreg	equ	0xFE8
   853                           indf1	equ	0xFE7
   854                           postdec1	equ	0xFE5
   855                           fsr1h	equ	0xFE2
   856                           fsr1l	equ	0xFE1
   857                           indf2	equ	0xFDF
   858                           fsr2h	equ	0xFDA
   859                           fsr2l	equ	0xFD9
   860                           status	equ	0xFD8
   861                           
   862 ;; *************** function _Petit_DoSlaveTX *****************
   863 ;; Defined at:
   864 ;;		line 86 in file "PetitModbus/PetitModbus.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;		None
   867 ;; Auto vars:     Size  Location     Type
   868 ;;		None
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      unsigned char 
   871 ;; Registers used:
   872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   878 ;;      Params:         0       0       0       0
   879 ;;      Locals:         0       0       0       0
   880 ;;      Temps:          0       0       0       0
   881 ;;      Totals:         0       0       0       0
   882 ;;Total ram usage:        0 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; Hardware stack levels required when called:    4
   885 ;; This function calls:
   886 ;;		_PetitModBus_UART_String
   887 ;; This function is called by:
   888 ;;		_Petit_TxRTU
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text3
   893  0008CC                     __ptext3:
   894                           	opt stack 0
   895  0008CC                     _Petit_DoSlaveTX:
   896                           	opt stack 24
   897                           
   898                           ;PetitModbus.c: 88: PetitModBus_UART_String(Petit_Tx_Buf,Petit_Tx_Buf_Size);
   899                           
   900                           ;incstack = 0
   901  0008CC  0EC8               	movlw	low _Petit_Tx_Buf
   902  0008CE  6E11               	movwf	PetitModBus_UART_String@s,c
   903  0008D0  0E00               	movlw	high _Petit_Tx_Buf
   904  0008D2  6E12               	movwf	PetitModBus_UART_String@s+1,c
   905  0008D4  C03E  F013         	movff	_Petit_Tx_Buf_Size,PetitModBus_UART_String@Length
   906  0008D8  C03F  F014         	movff	_Petit_Tx_Buf_Size+1,PetitModBus_UART_String@Length+1
   907  0008DC  EC39  F004         	call	_PetitModBus_UART_String	;wreg free
   908                           
   909                           ;PetitModbus.c: 90: Petit_Tx_Buf_Size = 0;
   910  0008E0  0E00               	movlw	0
   911  0008E2  6E3F               	movwf	_Petit_Tx_Buf_Size+1,c
   912  0008E4  0E00               	movlw	0
   913  0008E6  6E3E               	movwf	_Petit_Tx_Buf_Size,c
   914  0008E8  0012               	return	
   915  0008EA                     __end_of_Petit_DoSlaveTX:
   916                           	opt stack 0
   917                           tblptru	equ	0xFF8
   918                           tblptrh	equ	0xFF7
   919                           tblptrl	equ	0xFF6
   920                           tablat	equ	0xFF5
   921                           intcon	equ	0xFF2
   922                           postinc0	equ	0xFEE
   923                           wreg	equ	0xFE8
   924                           indf1	equ	0xFE7
   925                           postdec1	equ	0xFE5
   926                           fsr1h	equ	0xFE2
   927                           fsr1l	equ	0xFE1
   928                           indf2	equ	0xFDF
   929                           fsr2h	equ	0xFDA
   930                           fsr2l	equ	0xFD9
   931                           status	equ	0xFD8
   932                           
   933 ;; *************** function _PetitModBus_UART_String *****************
   934 ;; Defined at:
   935 ;;		line 29 in file "PetitModbus/PetitModbusPort.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;  s               2   16[COMRAM] PTR unsigned char 
   938 ;;		 -> Petit_Tx_Buf(32), 
   939 ;;  Length          2   18[COMRAM] unsigned int 
   940 ;; Auto vars:     Size  Location     Type
   941 ;;  DummyCounter    2   20[COMRAM] unsigned short 
   942 ;; Return value:  Size  Location     Type
   943 ;;                  1    wreg      unsigned char 
   944 ;; Registers used:
   945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   951 ;;      Params:         4       0       0       0
   952 ;;      Locals:         2       0       0       0
   953 ;;      Temps:          0       0       0       0
   954 ;;      Totals:         6       0       0       0
   955 ;;Total ram usage:        6 bytes
   956 ;; Hardware stack levels used:    1
   957 ;; Hardware stack levels required when called:    3
   958 ;; This function calls:
   959 ;;		_PetitModBus_UART_Putch
   960 ;; This function is called by:
   961 ;;		_Petit_DoSlaveTX
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text4
   966  000872                     __ptext4:
   967                           	opt stack 0
   968  000872                     _PetitModBus_UART_String:
   969                           	opt stack 24
   970                           
   971                           ;PetitModbusPort.c: 31: unsigned short DummyCounter;
   972                           ;PetitModbusPort.c: 33: for(DummyCounter=0;DummyCounter<Length;DummyCounter++)
   973                           
   974                           ;incstack = 0
   975  000872  0E00               	movlw	0
   976  000874  6E16               	movwf	PetitModBus_UART_String@DummyCounter+1,c
   977  000876  0E00               	movlw	0
   978  000878  6E15               	movwf	PetitModBus_UART_String@DummyCounter,c
   979  00087A  D00B               	goto	l1295
   980  00087C                     l1291:
   981                           
   982                           ;PetitModbusPort.c: 34: PetitModBus_UART_Putch(s[DummyCounter]);
   983  00087C  5015               	movf	PetitModBus_UART_String@DummyCounter,w,c
   984  00087E  2411               	addwf	PetitModBus_UART_String@s,w,c
   985  000880  6ED9               	movwf	fsr2l,c
   986  000882  5016               	movf	PetitModBus_UART_String@DummyCounter+1,w,c
   987  000884  2012               	addwfc	PetitModBus_UART_String@s+1,w,c
   988  000886  6EDA               	movwf	fsr2h,c
   989  000888  50DF               	movf	indf2,w,c
   990  00088A  ECC7  F004         	call	_PetitModBus_UART_Putch
   991  00088E  4A15               	infsnz	PetitModBus_UART_String@DummyCounter,f,c
   992  000890  2A16               	incf	PetitModBus_UART_String@DummyCounter+1,f,c
   993  000892                     l1295:
   994  000892  5013               	movf	PetitModBus_UART_String@Length,w,c
   995  000894  5C15               	subwf	PetitModBus_UART_String@DummyCounter,w,c
   996  000896  5014               	movf	PetitModBus_UART_String@Length+1,w,c
   997  000898  5816               	subwfb	PetitModBus_UART_String@DummyCounter+1,w,c
   998  00089A  B0D8               	btfsc	status,0,c
   999  00089C  0012               	return	
  1000  00089E  D7EE               	goto	l1291
  1001  0008A0                     __end_of_PetitModBus_UART_String:
  1002                           	opt stack 0
  1003                           tblptru	equ	0xFF8
  1004                           tblptrh	equ	0xFF7
  1005                           tblptrl	equ	0xFF6
  1006                           tablat	equ	0xFF5
  1007                           intcon	equ	0xFF2
  1008                           postinc0	equ	0xFEE
  1009                           wreg	equ	0xFE8
  1010                           indf1	equ	0xFE7
  1011                           postdec1	equ	0xFE5
  1012                           fsr1h	equ	0xFE2
  1013                           fsr1l	equ	0xFE1
  1014                           indf2	equ	0xFDF
  1015                           fsr2h	equ	0xFDA
  1016                           fsr2l	equ	0xFD9
  1017                           status	equ	0xFD8
  1018                           
  1019 ;; *************** function _PetitModBus_UART_Putch *****************
  1020 ;; Defined at:
  1021 ;;		line 22 in file "PetitModbus/PetitModbusPort.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;  c               1    wreg     unsigned char 
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;  c               1   15[COMRAM] unsigned char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1035 ;;      Params:         0       0       0       0
  1036 ;;      Locals:         1       0       0       0
  1037 ;;      Temps:          0       0       0       0
  1038 ;;      Totals:         1       0       0       0
  1039 ;;Total ram usage:        1 bytes
  1040 ;; Hardware stack levels used:    1
  1041 ;; Hardware stack levels required when called:    2
  1042 ;; This function calls:
  1043 ;;		Nothing
  1044 ;; This function is called by:
  1045 ;;		_PetitModBus_UART_String
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text5
  1050  00098E                     __ptext5:
  1051                           	opt stack 0
  1052  00098E                     _PetitModBus_UART_Putch:
  1053                           	opt stack 24
  1054                           
  1055                           ;incstack = 0
  1056                           ;PetitModBus_UART_Putch@c stored from wreg
  1057  00098E  6E10               	movwf	PetitModBus_UART_Putch@c,c
  1058  000990                     l235:
  1059  000990  A2AC               	btfss	4012,1,c	;volatile
  1060  000992  D7FE               	goto	l235
  1061                           
  1062                           ;PetitModbusPort.c: 25: TXREG = c;
  1063  000994  C010  FFAD         	movff	PetitModBus_UART_Putch@c,4013	;volatile
  1064  000998  0012               	return		;funcret
  1065  00099A                     __end_of_PetitModBus_UART_Putch:
  1066                           	opt stack 0
  1067                           tblptru	equ	0xFF8
  1068                           tblptrh	equ	0xFF7
  1069                           tblptrl	equ	0xFF6
  1070                           tablat	equ	0xFF5
  1071                           intcon	equ	0xFF2
  1072                           postinc0	equ	0xFEE
  1073                           wreg	equ	0xFE8
  1074                           indf1	equ	0xFE7
  1075                           postdec1	equ	0xFE5
  1076                           fsr1h	equ	0xFE2
  1077                           fsr1l	equ	0xFE1
  1078                           indf2	equ	0xFDF
  1079                           fsr2h	equ	0xFDA
  1080                           fsr2l	equ	0xFD9
  1081                           status	equ	0xFD8
  1082                           
  1083 ;; *************** function _Petit_RxRTU *****************
  1084 ;; Defined at:
  1085 ;;		line 347 in file "PetitModbus/PetitModbus.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;		None
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;  Petit_i         1   34[COMRAM] unsigned char 
  1090 ;;  Petit_Receiv    1   33[COMRAM] unsigned char 
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  1    wreg      void 
  1093 ;; Registers used:
  1094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1100 ;;      Params:         0       0       0       0
  1101 ;;      Locals:         2       0       0       0
  1102 ;;      Temps:          7       0       0       0
  1103 ;;      Totals:         9       0       0       0
  1104 ;;Total ram usage:        9 bytes
  1105 ;; Hardware stack levels used:    1
  1106 ;; Hardware stack levels required when called:    3
  1107 ;; This function calls:
  1108 ;;		_CheckPetitModbusBufferComplete
  1109 ;;		_Petit_CRC16
  1110 ;;		_Petit_CheckRxTimeout
  1111 ;; This function is called by:
  1112 ;;		_ProcessPetitModbus
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           	psect	text6
  1117  0000A8                     __ptext6:
  1118                           	opt stack 0
  1119  0000A8                     _Petit_RxRTU:
  1120                           	opt stack 26
  1121                           
  1122                           ;PetitModbus.c: 349: unsigned char Petit_i;
  1123                           ;PetitModbus.c: 350: unsigned char Petit_ReceiveBufferControl=0;
  1124                           
  1125                           ;incstack = 0
  1126  0000A8  0E00               	movlw	0
  1127  0000AA  6E22               	movwf	Petit_RxRTU@Petit_ReceiveBufferControl,c
  1128                           
  1129                           ;PetitModbus.c: 352: Petit_ReceiveBufferControl =CheckPetitModbusBufferComplete();
  1130  0000AC  ECE8  F002         	call	_CheckPetitModbusBufferComplete	;wreg free
  1131  0000B0  6E22               	movwf	Petit_RxRTU@Petit_ReceiveBufferControl,c
  1132                           
  1133                           ;PetitModbus.c: 354: if(Petit_ReceiveBufferControl==3)
  1134  0000B2  0E03               	movlw	3
  1135  0000B4  1822               	xorwf	Petit_RxRTU@Petit_ReceiveBufferControl,w,c
  1136  0000B6  A4D8               	btfss	status,2,c
  1137  0000B8  D03C               	goto	l1501
  1138                           
  1139                           ;PetitModbus.c: 355: {
  1140                           ;PetitModbus.c: 356: Petit_Rx_Data.Address =PetitReceiveBuffer[0];
  1141  0000BA  C0A8  F060         	movff	_PetitReceiveBuffer,_Petit_Rx_Data	;volatile
  1142                           
  1143                           ;PetitModbus.c: 357: Petit_Rx_CRC16 = 0xffff;
  1144  0000BE  6849               	setf	_Petit_Rx_CRC16,c
  1145  0000C0  684A               	setf	_Petit_Rx_CRC16+1,c
  1146                           
  1147                           ;PetitModbus.c: 358: Petit_CRC16(Petit_Rx_Data.Address, &Petit_Rx_CRC16);
  1148  0000C2  0E49               	movlw	low _Petit_Rx_CRC16
  1149  0000C4  6E10               	movwf	Petit_CRC16@CRC,c
  1150  0000C6  0E00               	movlw	high _Petit_Rx_CRC16
  1151  0000C8  6E11               	movwf	Petit_CRC16@CRC+1,c
  1152  0000CA  0100               	movlb	0	; () banked
  1153  0000CC  5160               	movf	_Petit_Rx_Data& (0+255),w,b
  1154  0000CE  EC98  F003         	call	_Petit_CRC16
  1155                           
  1156                           ;PetitModbus.c: 359: Petit_Rx_Data.Function =PetitReceiveBuffer[1];
  1157  0000D2  C0A9  F061         	movff	_PetitReceiveBuffer+1,_Petit_Rx_Data+1	;volatile
  1158                           
  1159                           ;PetitModbus.c: 360: Petit_CRC16(Petit_Rx_Data.Function, &Petit_Rx_CRC16);
  1160  0000D6  0E49               	movlw	low _Petit_Rx_CRC16
  1161  0000D8  6E10               	movwf	Petit_CRC16@CRC,c
  1162  0000DA  0E00               	movlw	high _Petit_Rx_CRC16
  1163  0000DC  6E11               	movwf	Petit_CRC16@CRC+1,c
  1164  0000DE  0100               	movlb	0	; () banked
  1165  0000E0  5161               	movf	(_Petit_Rx_Data+1)& (0+255),w,b
  1166  0000E2  EC98  F003         	call	_Petit_CRC16
  1167                           
  1168                           ;PetitModbus.c: 362: Petit_Rx_Data.DataLen=0;
  1169  0000E6  0E00               	movlw	0
  1170  0000E8  0100               	movlb	0	; () banked
  1171  0000EA  6F83               	movwf	(_Petit_Rx_Data+35)& (0+255),b
  1172  0000EC  0E00               	movlw	0
  1173  0000EE  6F82               	movwf	(_Petit_Rx_Data+34)& (0+255),b
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;PetitModbus.c: 364: for(Petit_i=2;Petit_i<PetitReceiveCounter;Petit_i++)
  1177  0000F0  0E02               	movlw	2
  1178  0000F2  6E23               	movwf	Petit_RxRTU@Petit_i,c
  1179  0000F4  D016               	goto	l1497
  1180  0000F6                     l1491:
  1181                           
  1182                           ; BSR set to: 0
  1183                           ;PetitModbus.c: 365: Petit_Rx_Data.DataBuf[Petit_Rx_Data.DataLen++]=PetitReceiveBuffer[P
      +                          etit_i];
  1184  0000F6  5023               	movf	Petit_RxRTU@Petit_i,w,c
  1185  0000F8  0D01               	mullw	1
  1186  0000FA  0EA8               	movlw	low _PetitReceiveBuffer
  1187  0000FC  24F3               	addwf	prodl,w,c
  1188  0000FE  6ED9               	movwf	fsr2l,c
  1189  000100  0E00               	movlw	high _PetitReceiveBuffer
  1190  000102  20F4               	addwfc	prodh,w,c
  1191  000104  6EDA               	movwf	fsr2h,c
  1192  000106  0E62               	movlw	low (_Petit_Rx_Data+2)
  1193  000108  0100               	movlb	0	; () banked
  1194  00010A  2582               	addwf	(_Petit_Rx_Data+34)& (0+255),w,b
  1195  00010C  6EE1               	movwf	fsr1l,c
  1196  00010E  0E00               	movlw	high (_Petit_Rx_Data+2)
  1197  000110  0100               	movlb	0	; () banked
  1198  000112  2183               	addwfc	(_Petit_Rx_Data+35)& (0+255),w,b
  1199  000114  6EE2               	movwf	fsr1h,c
  1200  000116  CFDF FFE7          	movff	indf2,indf1
  1201                           
  1202                           ; BSR set to: 0
  1203  00011A  0100               	movlb	0	; () banked
  1204  00011C  4B82               	infsnz	(_Petit_Rx_Data+34)& (0+255),f,b
  1205  00011E  2B83               	incf	(_Petit_Rx_Data+35)& (0+255),f,b
  1206                           
  1207                           ; BSR set to: 0
  1208  000120  2A23               	incf	Petit_RxRTU@Petit_i,f,c
  1209  000122                     l1497:
  1210                           
  1211                           ; BSR set to: 0
  1212  000122  5044               	movf	_PetitReceiveCounter,w,c	;volatile
  1213  000124  5C23               	subwf	Petit_RxRTU@Petit_i,w,c
  1214  000126  A0D8               	btfss	status,0,c
  1215  000128  D7E6               	goto	l1491
  1216                           
  1217                           ; BSR set to: 0
  1218                           ;PetitModbus.c: 367: Petit_Rx_State =PETIT_RXTX_DATABUF;
  1219                           
  1220                           ; BSR set to: 0
  1221  00012A  0E02               	movlw	2
  1222  00012C  6E46               	movwf	_Petit_Rx_State,c
  1223                           
  1224                           ;PetitModbus.c: 369: PetitReceiveCounter=0;
  1225  00012E  0E00               	movlw	0
  1226  000130  6E44               	movwf	_PetitReceiveCounter,c	;volatile
  1227  000132                     l1501:
  1228                           
  1229                           ;PetitModbus.c: 370: }
  1230                           ;PetitModbus.c: 372: Petit_CheckRxTimeout();
  1231  000132  EC84  F004         	call	_Petit_CheckRxTimeout	;wreg free
  1232                           
  1233                           ;PetitModbus.c: 374: if ((Petit_Rx_State == PETIT_RXTX_DATABUF) && (Petit_Rx_Data.DataLe
      +                          n >= 2))
  1234  000136  0E02               	movlw	2
  1235  000138  1846               	xorwf	_Petit_Rx_State,w,c
  1236  00013A  A4D8               	btfss	status,2,c
  1237  00013C  0012               	return	
  1238  00013E  0100               	movlb	0	; () banked
  1239  000140  5183               	movf	(_Petit_Rx_Data+35)& (0+255),w,b
  1240  000142  E105               	bnz	u720
  1241  000144  0E02               	movlw	2
  1242  000146  0100               	movlb	0	; () banked
  1243  000148  5D82               	subwf	(_Petit_Rx_Data+34)& (0+255),w,b
  1244  00014A  A0D8               	btfss	status,0,c
  1245  00014C  0012               	return	
  1246  00014E                     u720:
  1247                           
  1248                           ; BSR set to: 0
  1249                           ;PetitModbus.c: 375: {
  1250                           ;PetitModbus.c: 377: Petit_Rx_Data.DataLen -= 2;
  1251  00014E  0E02               	movlw	2
  1252  000150  0100               	movlb	0	; () banked
  1253  000152  5F82               	subwf	(_Petit_Rx_Data+34)& (0+255),f,b
  1254  000154  0E00               	movlw	0
  1255  000156  5B83               	subwfb	(_Petit_Rx_Data+35)& (0+255),f,b
  1256                           
  1257                           ; BSR set to: 0
  1258                           ;PetitModbus.c: 378: for (Petit_i = 0; Petit_i < Petit_Rx_Data.DataLen; ++Petit_i)
  1259  000158  0E00               	movlw	0
  1260  00015A  6E23               	movwf	Petit_RxRTU@Petit_i,c
  1261  00015C  D010               	goto	l1515
  1262  00015E                     l1511:
  1263                           
  1264                           ; BSR set to: 0
  1265                           ;PetitModbus.c: 379: {
  1266                           ;PetitModbus.c: 380: Petit_CRC16(Petit_Rx_Data.DataBuf[Petit_i], &Petit_Rx_CRC16);
  1267  00015E  0E49               	movlw	low _Petit_Rx_CRC16
  1268  000160  6E10               	movwf	Petit_CRC16@CRC,c
  1269  000162  0E00               	movlw	high _Petit_Rx_CRC16
  1270  000164  6E11               	movwf	Petit_CRC16@CRC+1,c
  1271  000166  5023               	movf	Petit_RxRTU@Petit_i,w,c
  1272  000168  0D01               	mullw	1
  1273  00016A  0E62               	movlw	low (_Petit_Rx_Data+2)
  1274  00016C  24F3               	addwf	prodl,w,c
  1275  00016E  6ED9               	movwf	fsr2l,c
  1276  000170  0E00               	movlw	high (_Petit_Rx_Data+2)
  1277  000172  20F4               	addwfc	prodh,w,c
  1278  000174  6EDA               	movwf	fsr2h,c
  1279  000176  50DF               	movf	indf2,w,c
  1280  000178  EC98  F003         	call	_Petit_CRC16
  1281  00017C  2A23               	incf	Petit_RxRTU@Petit_i,f,c
  1282  00017E                     l1515:
  1283  00017E  5023               	movf	Petit_RxRTU@Petit_i,w,c
  1284  000180  6E1B               	movwf	??_Petit_RxRTU& (0+255),c
  1285  000182  6A1C               	clrf	(??_Petit_RxRTU+1)& (0+255),c
  1286  000184  0100               	movlb	0	; () banked
  1287  000186  5182               	movf	(_Petit_Rx_Data+34)& (0+255),w,b
  1288  000188  5C1B               	subwf	??_Petit_RxRTU,w,c
  1289  00018A  0100               	movlb	0	; () banked
  1290  00018C  5183               	movf	(_Petit_Rx_Data+35)& (0+255),w,b
  1291  00018E  581C               	subwfb	??_Petit_RxRTU+1,w,c
  1292  000190  A0D8               	btfss	status,0,c
  1293  000192  D7E5               	goto	l1511
  1294                           
  1295                           ; BSR set to: 0
  1296                           ;PetitModbus.c: 381: }
  1297                           ;PetitModbus.c: 383: if (((unsigned int) Petit_Rx_Data.DataBuf[Petit_Rx_Data.DataLen] + 
      +                          ((unsigned int) Petit_Rx_Data.DataBuf[Petit_Rx_Data.DataLen + 1] << 8)) == Petit_Rx_CRC1
      +                          6)
  1298                           
  1299                           ; BSR set to: 0
  1300  000194  0E01               	movlw	1
  1301  000196  0100               	movlb	0	; () banked
  1302  000198  2582               	addwf	(_Petit_Rx_Data+34)& (0+255),w,b
  1303  00019A  6E1B               	movwf	??_Petit_RxRTU& (0+255),c
  1304  00019C  0E00               	movlw	0
  1305  00019E  0100               	movlb	0	; () banked
  1306  0001A0  2183               	addwfc	(_Petit_Rx_Data+35)& (0+255),w,b
  1307  0001A2  6E1C               	movwf	(??_Petit_RxRTU+1)& (0+255),c
  1308  0001A4  0E62               	movlw	low (_Petit_Rx_Data+2)
  1309  0001A6  241B               	addwf	??_Petit_RxRTU,w,c
  1310  0001A8  6ED9               	movwf	fsr2l,c
  1311  0001AA  0E00               	movlw	high (_Petit_Rx_Data+2)
  1312  0001AC  201C               	addwfc	??_Petit_RxRTU+1,w,c
  1313  0001AE  6EDA               	movwf	fsr2h,c
  1314  0001B0  50DF               	movf	indf2,w,c
  1315  0001B2  6E1D               	movwf	(??_Petit_RxRTU+2)& (0+255),c
  1316  0001B4  501D               	movf	??_Petit_RxRTU+2,w,c
  1317  0001B6  6E1F               	movwf	(??_Petit_RxRTU+4)& (0+255),c
  1318  0001B8  6A1E               	clrf	(??_Petit_RxRTU+3)& (0+255),c
  1319  0001BA  0E62               	movlw	low (_Petit_Rx_Data+2)
  1320  0001BC  0100               	movlb	0	; () banked
  1321  0001BE  2582               	addwf	(_Petit_Rx_Data+34)& (0+255),w,b
  1322  0001C0  6ED9               	movwf	fsr2l,c
  1323  0001C2  0E00               	movlw	high (_Petit_Rx_Data+2)
  1324  0001C4  0100               	movlb	0	; () banked
  1325  0001C6  2183               	addwfc	(_Petit_Rx_Data+35)& (0+255),w,b
  1326  0001C8  6EDA               	movwf	fsr2h,c
  1327  0001CA  50DF               	movf	indf2,w,c
  1328  0001CC  6E20               	movwf	(??_Petit_RxRTU+5)& (0+255),c
  1329  0001CE  6A21               	clrf	(??_Petit_RxRTU+6)& (0+255),c
  1330  0001D0  501E               	movf	??_Petit_RxRTU+3,w,c
  1331  0001D2  2620               	addwf	??_Petit_RxRTU+5,f,c
  1332  0001D4  501F               	movf	??_Petit_RxRTU+4,w,c
  1333  0001D6  2221               	addwfc	??_Petit_RxRTU+6,f,c
  1334  0001D8  5049               	movf	_Petit_Rx_CRC16,w,c
  1335  0001DA  1820               	xorwf	??_Petit_RxRTU+5,w,c
  1336  0001DC  E106               	bnz	l190
  1337  0001DE  504A               	movf	_Petit_Rx_CRC16+1,w,c
  1338  0001E0  1821               	xorwf	??_Petit_RxRTU+6,w,c
  1339  0001E2  A4D8               	btfss	status,2,c
  1340  0001E4  D002               	goto	l190
  1341                           
  1342                           ; BSR set to: 0
  1343                           ;PetitModbus.c: 384: {
  1344                           ;PetitModbus.c: 386: Petit_Rx_Data_Available = 1;
  1345  0001E6  0E01               	movlw	1
  1346  0001E8  6E45               	movwf	_Petit_Rx_Data_Available,c
  1347  0001EA                     l190:
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;PetitModbus.c: 387: }
  1351                           ;PetitModbus.c: 389: Petit_Rx_State = PETIT_RXTX_IDLE;
  1352  0001EA  0E00               	movlw	0
  1353  0001EC  6E46               	movwf	_Petit_Rx_State,c
  1354  0001EE  0012               	return	
  1355  0001F0                     __end_of_Petit_RxRTU:
  1356                           	opt stack 0
  1357                           tblptru	equ	0xFF8
  1358                           tblptrh	equ	0xFF7
  1359                           tblptrl	equ	0xFF6
  1360                           tablat	equ	0xFF5
  1361                           prodh	equ	0xFF4
  1362                           prodl	equ	0xFF3
  1363                           intcon	equ	0xFF2
  1364                           postinc0	equ	0xFEE
  1365                           wreg	equ	0xFE8
  1366                           indf1	equ	0xFE7
  1367                           postdec1	equ	0xFE5
  1368                           fsr1h	equ	0xFE2
  1369                           fsr1l	equ	0xFE1
  1370                           indf2	equ	0xFDF
  1371                           fsr2h	equ	0xFDA
  1372                           fsr2l	equ	0xFD9
  1373                           status	equ	0xFD8
  1374                           
  1375 ;; *************** function _Petit_CheckRxTimeout *****************
  1376 ;; Defined at:
  1377 ;;		line 280 in file "PetitModbus/PetitModbus.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;		None
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;		None
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  1    wreg      unsigned char 
  1384 ;; Registers used:
  1385 ;;		wreg, status,2, status,0
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1391 ;;      Params:         0       0       0       0
  1392 ;;      Locals:         0       0       0       0
  1393 ;;      Temps:          0       0       0       0
  1394 ;;      Totals:         0       0       0       0
  1395 ;;Total ram usage:        0 bytes
  1396 ;; Hardware stack levels used:    1
  1397 ;; Hardware stack levels required when called:    2
  1398 ;; This function calls:
  1399 ;;		Nothing
  1400 ;; This function is called by:
  1401 ;;		_Petit_RxRTU
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	text7
  1406  000908                     __ptext7:
  1407                           	opt stack 0
  1408  000908                     _Petit_CheckRxTimeout:
  1409                           	opt stack 26
  1410                           
  1411                           ;PetitModbus.c: 283: if (PetitModbusTimerValue>= 250)
  1412                           
  1413                           ;incstack = 0
  1414  000908  503D               	movf	_PetitModbusTimerValue+1,w,c	;volatile
  1415  00090A  E104               	bnz	u500
  1416  00090C  0EFA               	movlw	250
  1417  00090E  5C3C               	subwf	_PetitModbusTimerValue,w,c	;volatile
  1418  000910  A0D8               	btfss	status,0,c
  1419  000912  0012               	return	
  1420  000914                     u500:
  1421                           
  1422                           ;PetitModbus.c: 284: {
  1423                           ;PetitModbus.c: 285: PetitModbusTimerValue =0;
  1424  000914  0E00               	movlw	0
  1425  000916  6E3D               	movwf	_PetitModbusTimerValue+1,c	;volatile
  1426  000918  0E00               	movlw	0
  1427  00091A  6E3C               	movwf	_PetitModbusTimerValue,c	;volatile
  1428                           
  1429                           ;PetitModbus.c: 286: PetitReceiveCounter =0;
  1430  00091C  0E00               	movlw	0
  1431  00091E  6E44               	movwf	_PetitReceiveCounter,c	;volatile
  1432                           
  1433                           ;PetitModbus.c: 287: return 1;
  1434                           ;	Return value of _Petit_CheckRxTimeout is never used
  1435  000920  0012               	return	
  1436  000922                     __end_of_Petit_CheckRxTimeout:
  1437                           	opt stack 0
  1438                           tblptru	equ	0xFF8
  1439                           tblptrh	equ	0xFF7
  1440                           tblptrl	equ	0xFF6
  1441                           tablat	equ	0xFF5
  1442                           prodh	equ	0xFF4
  1443                           prodl	equ	0xFF3
  1444                           intcon	equ	0xFF2
  1445                           postinc0	equ	0xFEE
  1446                           wreg	equ	0xFE8
  1447                           indf1	equ	0xFE7
  1448                           postdec1	equ	0xFE5
  1449                           fsr1h	equ	0xFE2
  1450                           fsr1l	equ	0xFE1
  1451                           indf2	equ	0xFDF
  1452                           fsr2h	equ	0xFDA
  1453                           fsr2l	equ	0xFD9
  1454                           status	equ	0xFD8
  1455                           
  1456 ;; *************** function _Petit_CRC16 *****************
  1457 ;; Defined at:
  1458 ;;		line 65 in file "PetitModbus/PetitModbus.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;  Data            1    wreg     const unsigned char 
  1461 ;;  CRC             2   15[COMRAM] PTR unsigned int 
  1462 ;;		 -> Petit_Tx_CRC16(2), Petit_Rx_CRC16(2), 
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;  Data            1   23[COMRAM] const unsigned char 
  1465 ;;  i               2   24[COMRAM] unsigned int 
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  1    wreg      void 
  1468 ;; Registers used:
  1469 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1475 ;;      Params:         2       0       0       0
  1476 ;;      Locals:         3       0       0       0
  1477 ;;      Temps:          6       0       0       0
  1478 ;;      Totals:        11       0       0       0
  1479 ;;Total ram usage:       11 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; Hardware stack levels required when called:    2
  1482 ;; This function calls:
  1483 ;;		Nothing
  1484 ;; This function is called by:
  1485 ;;		_Petit_RxRTU
  1486 ;;		_Petit_TxRTU
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           	psect	text8
  1491  000730                     __ptext8:
  1492                           	opt stack 0
  1493  000730                     _Petit_CRC16:
  1494                           	opt stack 26
  1495                           
  1496                           ;incstack = 0
  1497                           ;Petit_CRC16@Data stored from wreg
  1498  000730  6E18               	movwf	Petit_CRC16@Data,c
  1499                           
  1500                           ;PetitModbus.c: 67: unsigned int i;
  1501                           ;PetitModbus.c: 69: *CRC = *CRC ^(unsigned int) Data;
  1502  000732  C010  FFD9         	movff	Petit_CRC16@CRC,fsr2l
  1503  000736  C011  FFDA         	movff	Petit_CRC16@CRC+1,fsr2h
  1504  00073A  CFDE F012          	movff	postinc2,??_Petit_CRC16
  1505  00073E  CFDD F013          	movff	postdec2,??_Petit_CRC16+1
  1506  000742  5018               	movf	Petit_CRC16@Data,w,c
  1507  000744  6E14               	movwf	(??_Petit_CRC16+2)& (0+255),c
  1508  000746  6A15               	clrf	(??_Petit_CRC16+3)& (0+255),c
  1509  000748  5012               	movf	??_Petit_CRC16,w,c
  1510  00074A  1A14               	xorwf	??_Petit_CRC16+2,f,c
  1511  00074C  5013               	movf	??_Petit_CRC16+1,w,c
  1512  00074E  1A15               	xorwf	??_Petit_CRC16+3,f,c
  1513  000750  C010  FFD9         	movff	Petit_CRC16@CRC,fsr2l
  1514  000754  C011  FFDA         	movff	Petit_CRC16@CRC+1,fsr2h
  1515  000758  C014  FFDE         	movff	??_Petit_CRC16+2,postinc2
  1516  00075C  C015  FFDD         	movff	??_Petit_CRC16+3,postdec2
  1517                           
  1518                           ;PetitModbus.c: 70: for (i = 8; i > 0; i--)
  1519  000760  0E00               	movlw	0
  1520  000762  6E1A               	movwf	Petit_CRC16@i+1,c
  1521  000764  0E08               	movlw	8
  1522  000766  6E19               	movwf	Petit_CRC16@i,c
  1523  000768                     l1309:
  1524  000768  5019               	movf	Petit_CRC16@i,w,c
  1525  00076A  101A               	iorwf	Petit_CRC16@i+1,w,c
  1526  00076C  B4D8               	btfsc	status,2,c
  1527  00076E  0012               	return	
  1528                           
  1529                           ;PetitModbus.c: 71: {
  1530                           ;PetitModbus.c: 72: if (*CRC & 0x0001)
  1531  000770  C010  FFD9         	movff	Petit_CRC16@CRC,fsr2l
  1532  000774  C011  FFDA         	movff	Petit_CRC16@CRC+1,fsr2h
  1533  000778  CFDE F012          	movff	postinc2,??_Petit_CRC16
  1534  00077C  CFDD F013          	movff	postdec2,??_Petit_CRC16+1
  1535  000780  A012               	btfss	??_Petit_CRC16,0,c
  1536  000782  D01E               	goto	l1317
  1537                           
  1538                           ;PetitModbus.c: 73: *CRC = (*CRC >> 1) ^ 0xA001;
  1539  000784  0E01               	movlw	1
  1540  000786  6E12               	movwf	??_Petit_CRC16& (0+255),c
  1541  000788  0EA0               	movlw	160
  1542  00078A  6E13               	movwf	(??_Petit_CRC16+1)& (0+255),c
  1543  00078C  C010  FFD9         	movff	Petit_CRC16@CRC,fsr2l
  1544  000790  C011  FFDA         	movff	Petit_CRC16@CRC+1,fsr2h
  1545  000794  CFDE F014          	movff	postinc2,??_Petit_CRC16+2
  1546  000798  CFDD F015          	movff	postdec2,??_Petit_CRC16+3
  1547  00079C  90D8               	bcf	status,0,c
  1548  00079E  3015               	rrcf	??_Petit_CRC16+3,w,c
  1549  0007A0  6E17               	movwf	(??_Petit_CRC16+5)& (0+255),c
  1550  0007A2  3014               	rrcf	??_Petit_CRC16+2,w,c
  1551  0007A4  6E16               	movwf	(??_Petit_CRC16+4)& (0+255),c
  1552  0007A6  5012               	movf	??_Petit_CRC16,w,c
  1553  0007A8  1A16               	xorwf	??_Petit_CRC16+4,f,c
  1554  0007AA  5013               	movf	??_Petit_CRC16+1,w,c
  1555  0007AC  1A17               	xorwf	??_Petit_CRC16+5,f,c
  1556  0007AE  C010  FFD9         	movff	Petit_CRC16@CRC,fsr2l
  1557  0007B2  C011  FFDA         	movff	Petit_CRC16@CRC+1,fsr2h
  1558  0007B6  C016  FFDE         	movff	??_Petit_CRC16+4,postinc2
  1559  0007BA  C017  FFDD         	movff	??_Petit_CRC16+5,postdec2
  1560  0007BE  D008               	goto	l1319
  1561  0007C0                     l1317:
  1562                           
  1563                           ;PetitModbus.c: 74: else
  1564                           ;PetitModbus.c: 75: *CRC >>= 1;
  1565  0007C0  C010  FFD9         	movff	Petit_CRC16@CRC,fsr2l
  1566  0007C4  C011  FFDA         	movff	Petit_CRC16@CRC+1,fsr2h
  1567  0007C8  90D8               	bcf	status,0,c
  1568  0007CA  32DC               	rrcf	preinc2,f,c
  1569  0007CC  50DD               	movf	postdec2,w,c
  1570  0007CE  32DF               	rrcf	indf2,f,c
  1571  0007D0                     l1319:
  1572  0007D0  0619               	decf	Petit_CRC16@i,f,c
  1573  0007D2  A0D8               	btfss	status,0,c
  1574  0007D4  061A               	decf	Petit_CRC16@i+1,f,c
  1575  0007D6  D7C8               	goto	l1309
  1576  0007D8                     __end_of_Petit_CRC16:
  1577                           	opt stack 0
  1578                           tblptru	equ	0xFF8
  1579                           tblptrh	equ	0xFF7
  1580                           tblptrl	equ	0xFF6
  1581                           tablat	equ	0xFF5
  1582                           prodh	equ	0xFF4
  1583                           prodl	equ	0xFF3
  1584                           intcon	equ	0xFF2
  1585                           postinc0	equ	0xFEE
  1586                           wreg	equ	0xFE8
  1587                           indf1	equ	0xFE7
  1588                           postdec1	equ	0xFE5
  1589                           fsr1h	equ	0xFE2
  1590                           fsr1l	equ	0xFE1
  1591                           indf2	equ	0xFDF
  1592                           postinc2	equ	0xFDE
  1593                           postdec2	equ	0xFDD
  1594                           preinc2	equ	0xFDC
  1595                           fsr2h	equ	0xFDA
  1596                           fsr2l	equ	0xFD9
  1597                           status	equ	0xFD8
  1598                           
  1599 ;; *************** function _CheckPetitModbusBufferComplete *****************
  1600 ;; Defined at:
  1601 ;;		line 302 in file "PetitModbus/PetitModbus.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;		None
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  PetitExpecte    2   17[COMRAM] int 
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      unsigned char 
  1608 ;; Registers used:
  1609 ;;		wreg, status,2, status,0
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1615 ;;      Params:         0       0       0       0
  1616 ;;      Locals:         2       0       0       0
  1617 ;;      Temps:          2       0       0       0
  1618 ;;      Totals:         4       0       0       0
  1619 ;;Total ram usage:        4 bytes
  1620 ;; Hardware stack levels used:    1
  1621 ;; Hardware stack levels required when called:    2
  1622 ;; This function calls:
  1623 ;;		Nothing
  1624 ;; This function is called by:
  1625 ;;		_Petit_RxRTU
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           	psect	text9
  1630  0005D0                     __ptext9:
  1631                           	opt stack 0
  1632  0005D0                     _CheckPetitModbusBufferComplete:
  1633                           	opt stack 26
  1634                           
  1635                           ;PetitModbus.c: 304: int PetitExpectedReceiveCount=0;
  1636                           
  1637                           ;incstack = 0
  1638  0005D0  0E00               	movlw	0
  1639  0005D2  6E13               	movwf	CheckPetitModbusBufferComplete@PetitExpectedReceiveCount+1,c
  1640  0005D4  0E00               	movlw	0
  1641  0005D6  6E12               	movwf	CheckPetitModbusBufferComplete@PetitExpectedReceiveCount,c
  1642                           
  1643                           ;PetitModbus.c: 306: if(PetitReceiveCounter>4)
  1644  0005D8  0E04               	movlw	4
  1645  0005DA  6444               	cpfsgt	_PetitReceiveCounter,c	;volatile
  1646  0005DC  D041               	goto	l1381
  1647                           
  1648                           ;PetitModbus.c: 307: {
  1649                           ;PetitModbus.c: 308: if(PetitReceiveBuffer[0]==PETITMODBUS_SLAVE_ADDRESS)
  1650  0005DE  5048               	movf	_PETITMODBUS_SLAVE_ADDRESS,w,c
  1651  0005E0  0100               	movlb	0	; () banked
  1652  0005E2  19A8               	xorwf	_PetitReceiveBuffer& (0+255),w,b	;volatile
  1653  0005E4  A4D8               	btfss	status,2,c
  1654  0005E6  D038               	goto	l1375
  1655                           
  1656                           ; BSR set to: 0
  1657                           ;PetitModbus.c: 309: {
  1658                           ;PetitModbus.c: 310: if(PetitReceiveBuffer[1]==0x01 || PetitReceiveBuffer[1]==0x02 || Pe
      +                          titReceiveBuffer[1]==0x03 || PetitReceiveBuffer[1]==0x04 || PetitReceiveBuffer[1]==0x05 
      +                          || PetitReceiveBuffer[1]==0x06)
  1659  0005E8  0100               	movlb	0	; () banked
  1660  0005EA  05A9               	decf	(_PetitReceiveBuffer+1)& (0+255),w,b	;volatile
  1661  0005EC  B4D8               	btfsc	status,2,c
  1662  0005EE  D019               	goto	l1361
  1663                           
  1664                           ; BSR set to: 0
  1665  0005F0  0E02               	movlw	2
  1666  0005F2  0100               	movlb	0	; () banked
  1667  0005F4  19A9               	xorwf	(_PetitReceiveBuffer+1)& (0+255),w,b	;volatile
  1668  0005F6  B4D8               	btfsc	status,2,c
  1669  0005F8  D014               	goto	l1361
  1670                           
  1671                           ; BSR set to: 0
  1672  0005FA  0E03               	movlw	3
  1673  0005FC  0100               	movlb	0	; () banked
  1674  0005FE  19A9               	xorwf	(_PetitReceiveBuffer+1)& (0+255),w,b	;volatile
  1675  000600  B4D8               	btfsc	status,2,c
  1676  000602  D00F               	goto	l1361
  1677                           
  1678                           ; BSR set to: 0
  1679  000604  0E04               	movlw	4
  1680  000606  0100               	movlb	0	; () banked
  1681  000608  19A9               	xorwf	(_PetitReceiveBuffer+1)& (0+255),w,b	;volatile
  1682  00060A  B4D8               	btfsc	status,2,c
  1683  00060C  D00A               	goto	l1361
  1684                           
  1685                           ; BSR set to: 0
  1686  00060E  0E05               	movlw	5
  1687  000610  0100               	movlb	0	; () banked
  1688  000612  19A9               	xorwf	(_PetitReceiveBuffer+1)& (0+255),w,b	;volatile
  1689  000614  B4D8               	btfsc	status,2,c
  1690  000616  D005               	goto	l1361
  1691                           
  1692                           ; BSR set to: 0
  1693  000618  0E06               	movlw	6
  1694  00061A  0100               	movlb	0	; () banked
  1695  00061C  19A9               	xorwf	(_PetitReceiveBuffer+1)& (0+255),w,b	;volatile
  1696  00061E  A4D8               	btfss	status,2,c
  1697  000620  D005               	goto	l1363
  1698  000622                     l1361:
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;PetitModbus.c: 311: {
  1702                           ;PetitModbus.c: 312: PetitExpectedReceiveCount =8;
  1703  000622  0E00               	movlw	0
  1704  000624  6E13               	movwf	CheckPetitModbusBufferComplete@PetitExpectedReceiveCount+1,c
  1705  000626  0E08               	movlw	8
  1706  000628  6E12               	movwf	CheckPetitModbusBufferComplete@PetitExpectedReceiveCount,c
  1707                           
  1708                           ;PetitModbus.c: 313: }
  1709  00062A  D01C               	goto	l1385
  1710  00062C                     l1363:
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;PetitModbus.c: 314: else if(PetitReceiveBuffer[1]==0x0F || PetitReceiveBuffer[1]==0x10)
  1714  00062C  0E0F               	movlw	15
  1715  00062E  0100               	movlb	0	; () banked
  1716  000630  19A9               	xorwf	(_PetitReceiveBuffer+1)& (0+255),w,b	;volatile
  1717  000632  B4D8               	btfsc	status,2,c
  1718  000634  D005               	goto	l1367
  1719                           
  1720                           ; BSR set to: 0
  1721  000636  0E10               	movlw	16
  1722  000638  0100               	movlb	0	; () banked
  1723  00063A  19A9               	xorwf	(_PetitReceiveBuffer+1)& (0+255),w,b	;volatile
  1724  00063C  A4D8               	btfss	status,2,c
  1725  00063E  D008               	goto	l1369
  1726  000640                     l1367:
  1727                           
  1728                           ; BSR set to: 0
  1729                           ;PetitModbus.c: 315: {
  1730                           ;PetitModbus.c: 316: PetitExpectedReceiveCount=PetitReceiveBuffer[6]+9;
  1731  000640  0E09               	movlw	9
  1732  000642  0100               	movlb	0	; () banked
  1733  000644  25AE               	addwf	(_PetitReceiveBuffer+6)& (0+255),w,b	;volatile
  1734  000646  6E12               	movwf	CheckPetitModbusBufferComplete@PetitExpectedReceiveCount,c
  1735  000648  6A13               	clrf	CheckPetitModbusBufferComplete@PetitExpectedReceiveCount+1,c
  1736  00064A  0E00               	movlw	0
  1737  00064C  2213               	addwfc	CheckPetitModbusBufferComplete@PetitExpectedReceiveCount+1,f,c
  1738                           
  1739                           ;PetitModbus.c: 317: }
  1740  00064E  D00A               	goto	l1385
  1741  000650                     l1369:
  1742                           
  1743                           ; BSR set to: 0
  1744                           ;PetitModbus.c: 318: else
  1745                           ;PetitModbus.c: 319: {
  1746                           ;PetitModbus.c: 320: PetitReceiveCounter=0;
  1747  000650  0E00               	movlw	0
  1748  000652  6E44               	movwf	_PetitReceiveCounter,c	;volatile
  1749                           
  1750                           ; BSR set to: 0
  1751                           ;PetitModbus.c: 321: return 0;
  1752  000654  0E00               	movlw	0
  1753                           
  1754                           ; BSR set to: 0
  1755  000656  0012               	return	
  1756  000658                     l1375:
  1757                           
  1758                           ; BSR set to: 0
  1759                           ;PetitModbus.c: 324: else
  1760                           ;PetitModbus.c: 325: {
  1761                           ;PetitModbus.c: 326: PetitReceiveCounter=0;
  1762  000658  0E00               	movlw	0
  1763  00065A  6E44               	movwf	_PetitReceiveCounter,c	;volatile
  1764                           
  1765                           ; BSR set to: 0
  1766                           ;PetitModbus.c: 327: return 1;
  1767  00065C  0E01               	movlw	1
  1768                           
  1769                           ; BSR set to: 0
  1770  00065E  0012               	return	
  1771  000660                     l1381:
  1772                           
  1773                           ;PetitModbus.c: 330: else
  1774                           ;PetitModbus.c: 331: return 2;
  1775  000660  0E02               	movlw	2
  1776  000662  0012               	return	
  1777  000664                     l1385:
  1778                           
  1779                           ;PetitModbus.c: 333: if(PetitReceiveCounter==PetitExpectedReceiveCount)
  1780  000664  5044               	movf	_PetitReceiveCounter,w,c	;volatile
  1781  000666  6E10               	movwf	??_CheckPetitModbusBufferComplete& (0+255),c
  1782  000668  6A11               	clrf	(??_CheckPetitModbusBufferComplete+1)& (0+255),c
  1783  00066A  5012               	movf	CheckPetitModbusBufferComplete@PetitExpectedReceiveCount,w,c
  1784  00066C  1810               	xorwf	??_CheckPetitModbusBufferComplete,w,c
  1785  00066E  E106               	bnz	l1391
  1786  000670  5013               	movf	CheckPetitModbusBufferComplete@PetitExpectedReceiveCount+1,w,c
  1787  000672  1811               	xorwf	??_CheckPetitModbusBufferComplete+1,w,c
  1788  000674  A4D8               	btfss	status,2,c
  1789  000676  D002               	goto	l1391
  1790                           
  1791                           ;PetitModbus.c: 334: {
  1792                           ;PetitModbus.c: 335: return 3;
  1793  000678  0E03               	movlw	3
  1794  00067A  0012               	return	
  1795  00067C                     l1391:
  1796                           
  1797                           ;PetitModbus.c: 336: }
  1798                           ;PetitModbus.c: 338: return 2;
  1799  00067C  0E02               	movlw	2
  1800  00067E  0012               	return	
  1801  000680                     __end_of_CheckPetitModbusBufferComplete:
  1802                           	opt stack 0
  1803                           tblptru	equ	0xFF8
  1804                           tblptrh	equ	0xFF7
  1805                           tblptrl	equ	0xFF6
  1806                           tablat	equ	0xFF5
  1807                           prodh	equ	0xFF4
  1808                           prodl	equ	0xFF3
  1809                           intcon	equ	0xFF2
  1810                           postinc0	equ	0xFEE
  1811                           wreg	equ	0xFE8
  1812                           indf1	equ	0xFE7
  1813                           postdec1	equ	0xFE5
  1814                           fsr1h	equ	0xFE2
  1815                           fsr1l	equ	0xFE1
  1816                           indf2	equ	0xFDF
  1817                           postinc2	equ	0xFDE
  1818                           postdec2	equ	0xFDD
  1819                           preinc2	equ	0xFDC
  1820                           fsr2h	equ	0xFDA
  1821                           fsr2l	equ	0xFD9
  1822                           status	equ	0xFD8
  1823                           
  1824 ;; *************** function _Petit_RxDataAvailable *****************
  1825 ;; Defined at:
  1826 ;;		line 264 in file "PetitModbus/PetitModbus.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;		None
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;  Result          1   15[COMRAM] unsigned char 
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  1    wreg      unsigned char 
  1833 ;; Registers used:
  1834 ;;		wreg, status,2
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1840 ;;      Params:         0       0       0       0
  1841 ;;      Locals:         1       0       0       0
  1842 ;;      Temps:          0       0       0       0
  1843 ;;      Totals:         1       0       0       0
  1844 ;;Total ram usage:        1 bytes
  1845 ;; Hardware stack levels used:    1
  1846 ;; Hardware stack levels required when called:    2
  1847 ;; This function calls:
  1848 ;;		Nothing
  1849 ;; This function is called by:
  1850 ;;		_ProcessPetitModbus
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           	psect	text10
  1855  00099A                     __ptext10:
  1856                           	opt stack 0
  1857  00099A                     _Petit_RxDataAvailable:
  1858                           	opt stack 27
  1859                           
  1860                           ;PetitModbus.c: 266: unsigned char Result = Petit_Rx_Data_Available;
  1861                           
  1862                           ;incstack = 0
  1863  00099A  C045  F010         	movff	_Petit_Rx_Data_Available,Petit_RxDataAvailable@Result
  1864                           
  1865                           ;PetitModbus.c: 268: Petit_Rx_Data_Available = 0;
  1866  00099E  0E00               	movlw	0
  1867  0009A0  6E45               	movwf	_Petit_Rx_Data_Available,c
  1868                           
  1869                           ;PetitModbus.c: 270: return Result;
  1870  0009A2  5010               	movf	Petit_RxDataAvailable@Result,w,c
  1871  0009A4  0012               	return	
  1872  0009A6                     __end_of_Petit_RxDataAvailable:
  1873                           	opt stack 0
  1874                           tblptru	equ	0xFF8
  1875                           tblptrh	equ	0xFF7
  1876                           tblptrl	equ	0xFF6
  1877                           tablat	equ	0xFF5
  1878                           prodh	equ	0xFF4
  1879                           prodl	equ	0xFF3
  1880                           intcon	equ	0xFF2
  1881                           postinc0	equ	0xFEE
  1882                           wreg	equ	0xFE8
  1883                           indf1	equ	0xFE7
  1884                           postdec1	equ	0xFE5
  1885                           fsr1h	equ	0xFE2
  1886                           fsr1l	equ	0xFE1
  1887                           indf2	equ	0xFDF
  1888                           postinc2	equ	0xFDE
  1889                           postdec2	equ	0xFDD
  1890                           preinc2	equ	0xFDC
  1891                           fsr2h	equ	0xFDA
  1892                           fsr2l	equ	0xFD9
  1893                           status	equ	0xFD8
  1894                           
  1895 ;; *************** function _HandlePetitModbusWriteSingleRegister *****************
  1896 ;; Defined at:
  1897 ;;		line 180 in file "PetitModbus/PetitModbus.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;		None
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  Petit_Addres    2   20[COMRAM] unsigned int 
  1902 ;;  Petit_Value     2   18[COMRAM] unsigned int 
  1903 ;;  Petit_i         1   22[COMRAM] unsigned char 
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  1    wreg      void 
  1906 ;; Registers used:
  1907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1913 ;;      Params:         0       0       0       0
  1914 ;;      Locals:         5       0       0       0
  1915 ;;      Temps:          2       0       0       0
  1916 ;;      Totals:         7       0       0       0
  1917 ;;Total ram usage:        7 bytes
  1918 ;; Hardware stack levels used:    1
  1919 ;; Hardware stack levels required when called:    4
  1920 ;; This function calls:
  1921 ;;		_HandlePetitModbusError
  1922 ;;		_PetitSendMessage
  1923 ;; This function is called by:
  1924 ;;		_ProcessPetitModbus
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           	psect	text11
  1929  000680                     __ptext11:
  1930                           	opt stack 0
  1931  000680                     _HandlePetitModbusWriteSingleRegister:
  1932                           	opt stack 25
  1933                           
  1934                           ;PetitModbus.c: 183: unsigned int Petit_Address = 0;
  1935                           
  1936                           ;incstack = 0
  1937  000680  0E00               	movlw	0
  1938  000682  6E16               	movwf	HandlePetitModbusWriteSingleRegister@Petit_Address+1,c
  1939  000684  0E00               	movlw	0
  1940  000686  6E15               	movwf	HandlePetitModbusWriteSingleRegister@Petit_Address,c
  1941                           
  1942                           ;PetitModbus.c: 184: unsigned int Petit_Value = 0;
  1943  000688  0E00               	movlw	0
  1944  00068A  6E14               	movwf	HandlePetitModbusWriteSingleRegister@Petit_Value+1,c
  1945  00068C  0E00               	movlw	0
  1946  00068E  6E13               	movwf	HandlePetitModbusWriteSingleRegister@Petit_Value,c
  1947                           
  1948                           ;PetitModbus.c: 185: unsigned char Petit_i = 0;
  1949  000690  0E00               	movlw	0
  1950  000692  6E17               	movwf	HandlePetitModbusWriteSingleRegister@Petit_i,c
  1951                           
  1952                           ;PetitModbus.c: 188: Petit_Address = ((unsigned int) (Petit_Rx_Data.DataBuf[0]) << 8) + 
      +                          (unsigned int) (Petit_Rx_Data.DataBuf[1]);
  1953  000694  0100               	movlb	0	; () banked
  1954  000696  5162               	movf	(_Petit_Rx_Data+2)& (0+255),w,b
  1955  000698  6E11               	movwf	??_HandlePetitModbusWriteSingleRegister& (0+255),c
  1956  00069A  0100               	movlb	0	; () banked
  1957  00069C  5163               	movf	(_Petit_Rx_Data+3)& (0+255),w,b
  1958  00069E  6E15               	movwf	HandlePetitModbusWriteSingleRegister@Petit_Address,c
  1959  0006A0  C011  F016         	movff	??_HandlePetitModbusWriteSingleRegister,HandlePetitModbusWriteSingleRegister@Peti
      +                          t_Address+1
  1960                           
  1961                           ;PetitModbus.c: 189: Petit_Value = ((unsigned int) (Petit_Rx_Data.DataBuf[2]) << 8) + (u
      +                          nsigned int) (Petit_Rx_Data.DataBuf[3]);
  1962  0006A4  0100               	movlb	0	; () banked
  1963  0006A6  5164               	movf	(_Petit_Rx_Data+4)& (0+255),w,b
  1964  0006A8  6E11               	movwf	??_HandlePetitModbusWriteSingleRegister& (0+255),c
  1965  0006AA  0100               	movlb	0	; () banked
  1966  0006AC  5165               	movf	(_Petit_Rx_Data+5)& (0+255),w,b
  1967  0006AE  6E13               	movwf	HandlePetitModbusWriteSingleRegister@Petit_Value,c
  1968  0006B0  C011  F014         	movff	??_HandlePetitModbusWriteSingleRegister,HandlePetitModbusWriteSingleRegister@Peti
      +                          t_Value+1
  1969                           
  1970                           ;PetitModbus.c: 192: Petit_Tx_Data.Function = 6;
  1971  0006B4  0E06               	movlw	6
  1972  0006B6  0100               	movlb	0	; () banked
  1973  0006B8  6F85               	movwf	(_Petit_Tx_Data+1)& (0+255),b
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;PetitModbus.c: 193: Petit_Tx_Data.Address = PETITMODBUS_SLAVE_ADDRESS;
  1977  0006BA  C048  F084         	movff	_PETITMODBUS_SLAVE_ADDRESS,_Petit_Tx_Data
  1978                           
  1979                           ;PetitModbus.c: 194: Petit_Tx_Data.DataLen = 4;
  1980  0006BE  0E00               	movlw	0
  1981  0006C0  0100               	movlb	0	; () banked
  1982  0006C2  6FA7               	movwf	(_Petit_Tx_Data+35)& (0+255),b
  1983  0006C4  0E04               	movlw	4
  1984  0006C6  6FA6               	movwf	(_Petit_Tx_Data+34)& (0+255),b
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;PetitModbus.c: 196: if(Petit_Address>=11)
  1988  0006C8  5016               	movf	HandlePetitModbusWriteSingleRegister@Petit_Address+1,w,c
  1989  0006CA  E104               	bnz	u640
  1990  0006CC  0E0B               	movlw	11
  1991  0006CE  5C15               	subwf	HandlePetitModbusWriteSingleRegister@Petit_Address,w,c
  1992  0006D0  A0D8               	btfss	status,0,c
  1993  0006D2  D004               	goto	l1425
  1994  0006D4                     u640:
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;PetitModbus.c: 197: HandlePetitModbusError(0x03);
  1998  0006D4  0E03               	movlw	3
  1999  0006D6  EC75  F004         	call	_HandlePetitModbusError
  2000  0006DA  D027               	goto	l1439
  2001  0006DC                     l1425:
  2002                           
  2003                           ;PetitModbus.c: 198: else
  2004                           ;PetitModbus.c: 199: {
  2005                           ;PetitModbus.c: 200: PetitRegisters[Petit_Address].ActValue=Petit_Value;
  2006  0006DC  90D8               	bcf	status,0,c
  2007  0006DE  3415               	rlcf	HandlePetitModbusWriteSingleRegister@Petit_Address,w,c
  2008  0006E0  6ED9               	movwf	fsr2l,c
  2009  0006E2  3416               	rlcf	HandlePetitModbusWriteSingleRegister@Petit_Address+1,w,c
  2010  0006E4  6EDA               	movwf	fsr2h,c
  2011  0006E6  0E26               	movlw	low _PetitRegisters
  2012  0006E8  26D9               	addwf	fsr2l,f,c
  2013  0006EA  0E00               	movlw	high _PetitRegisters
  2014  0006EC  22DA               	addwfc	fsr2h,f,c
  2015  0006EE  C013  FFDE         	movff	HandlePetitModbusWriteSingleRegister@Petit_Value,postinc2
  2016  0006F2  C014  FFDD         	movff	HandlePetitModbusWriteSingleRegister@Petit_Value+1,postdec2
  2017                           
  2018                           ;PetitModbus.c: 202: for (Petit_i = 0; Petit_i < 4; ++Petit_i)
  2019  0006F6  0E00               	movlw	0
  2020  0006F8  6E17               	movwf	HandlePetitModbusWriteSingleRegister@Petit_i,c
  2021  0006FA                     l1429:
  2022  0006FA  0E03               	movlw	3
  2023  0006FC  6417               	cpfsgt	HandlePetitModbusWriteSingleRegister@Petit_i,c
  2024  0006FE  D001               	goto	l1433
  2025  000700  D014               	goto	l1439
  2026  000702                     l1433:
  2027                           
  2028                           ;PetitModbus.c: 203: Petit_Tx_Data.DataBuf[Petit_i] = Petit_Rx_Data.DataBuf[Petit_i];
  2029  000702  5017               	movf	HandlePetitModbusWriteSingleRegister@Petit_i,w,c
  2030  000704  0D01               	mullw	1
  2031  000706  0E62               	movlw	low (_Petit_Rx_Data+2)
  2032  000708  24F3               	addwf	prodl,w,c
  2033  00070A  6ED9               	movwf	fsr2l,c
  2034  00070C  0E00               	movlw	high (_Petit_Rx_Data+2)
  2035  00070E  20F4               	addwfc	prodh,w,c
  2036  000710  6EDA               	movwf	fsr2h,c
  2037  000712  5017               	movf	HandlePetitModbusWriteSingleRegister@Petit_i,w,c
  2038  000714  0D01               	mullw	1
  2039  000716  0E86               	movlw	low (_Petit_Tx_Data+2)
  2040  000718  24F3               	addwf	prodl,w,c
  2041  00071A  6EE1               	movwf	fsr1l,c
  2042  00071C  0E00               	movlw	high (_Petit_Tx_Data+2)
  2043  00071E  20F4               	addwfc	prodh,w,c
  2044  000720  6EE2               	movwf	fsr1h,c
  2045  000722  CFDF FFE7          	movff	indf2,indf1
  2046  000726  2A17               	incf	HandlePetitModbusWriteSingleRegister@Petit_i,f,c
  2047  000728  D7E8               	goto	l1429
  2048  00072A                     l1439:
  2049                           
  2050                           ;PetitModbus.c: 204: }
  2051                           ;PetitModbus.c: 206: PetitSendMessage();
  2052  00072A  ECB5  F004         	call	_PetitSendMessage	;wreg free
  2053  00072E  0012               	return		;funcret
  2054  000730                     __end_of_HandlePetitModbusWriteSingleRegister:
  2055                           	opt stack 0
  2056                           tblptru	equ	0xFF8
  2057                           tblptrh	equ	0xFF7
  2058                           tblptrl	equ	0xFF6
  2059                           tablat	equ	0xFF5
  2060                           prodh	equ	0xFF4
  2061                           prodl	equ	0xFF3
  2062                           intcon	equ	0xFF2
  2063                           postinc0	equ	0xFEE
  2064                           wreg	equ	0xFE8
  2065                           indf1	equ	0xFE7
  2066                           postdec1	equ	0xFE5
  2067                           fsr1h	equ	0xFE2
  2068                           fsr1l	equ	0xFE1
  2069                           indf2	equ	0xFDF
  2070                           postinc2	equ	0xFDE
  2071                           postdec2	equ	0xFDD
  2072                           preinc2	equ	0xFDC
  2073                           fsr2h	equ	0xFDA
  2074                           fsr2l	equ	0xFD9
  2075                           status	equ	0xFD8
  2076                           
  2077 ;; *************** function _HandlePetitModbusReadHoldingRegisters *****************
  2078 ;; Defined at:
  2079 ;;		line 134 in file "PetitModbus/PetitModbus.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;		None
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  Petit_Curren    2   18[COMRAM] unsigned short 
  2084 ;;  Petit_i         2   24[COMRAM] unsigned int 
  2085 ;;  Petit_Number    2   22[COMRAM] unsigned int 
  2086 ;;  Petit_StartA    2   20[COMRAM] unsigned int 
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  1    wreg      void 
  2089 ;; Registers used:
  2090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2096 ;;      Params:         0       0       0       0
  2097 ;;      Locals:         8       0       0       0
  2098 ;;      Temps:          2       0       0       0
  2099 ;;      Totals:        10       0       0       0
  2100 ;;Total ram usage:       10 bytes
  2101 ;; Hardware stack levels used:    1
  2102 ;; Hardware stack levels required when called:    4
  2103 ;; This function calls:
  2104 ;;		_HandlePetitModbusError
  2105 ;;		_PetitSendMessage
  2106 ;; This function is called by:
  2107 ;;		_ProcessPetitModbus
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           	psect	text12
  2112  000318                     __ptext12:
  2113                           	opt stack 0
  2114  000318                     _HandlePetitModbusReadHoldingRegisters:
  2115                           	opt stack 25
  2116                           
  2117                           ;PetitModbus.c: 139: unsigned int Petit_StartAddress = 0;
  2118                           
  2119                           ;incstack = 0
  2120  000318  0E00               	movlw	0
  2121  00031A  6E16               	movwf	HandlePetitModbusReadHoldingRegisters@Petit_StartAddress+1,c
  2122  00031C  0E00               	movlw	0
  2123  00031E  6E15               	movwf	HandlePetitModbusReadHoldingRegisters@Petit_StartAddress,c
  2124                           
  2125                           ;PetitModbus.c: 140: unsigned int Petit_NumberOfRegisters = 0;
  2126  000320  0E00               	movlw	0
  2127  000322  6E18               	movwf	HandlePetitModbusReadHoldingRegisters@Petit_NumberOfRegisters+1,c
  2128  000324  0E00               	movlw	0
  2129  000326  6E17               	movwf	HandlePetitModbusReadHoldingRegisters@Petit_NumberOfRegisters,c
  2130                           
  2131                           ;PetitModbus.c: 141: unsigned int Petit_i = 0;
  2132  000328  0E00               	movlw	0
  2133  00032A  6E1A               	movwf	HandlePetitModbusReadHoldingRegisters@Petit_i+1,c
  2134  00032C  0E00               	movlw	0
  2135  00032E  6E19               	movwf	HandlePetitModbusReadHoldingRegisters@Petit_i,c
  2136                           
  2137                           ;PetitModbus.c: 144: Petit_StartAddress = ((unsigned int) (Petit_Rx_Data.DataBuf[0]) << 
      +                          8) + (unsigned int) (Petit_Rx_Data.DataBuf[1]);
  2138  000330  0100               	movlb	0	; () banked
  2139  000332  5162               	movf	(_Petit_Rx_Data+2)& (0+255),w,b
  2140  000334  6E11               	movwf	??_HandlePetitModbusReadHoldingRegisters& (0+255),c
  2141  000336  0100               	movlb	0	; () banked
  2142  000338  5163               	movf	(_Petit_Rx_Data+3)& (0+255),w,b
  2143  00033A  6E15               	movwf	HandlePetitModbusReadHoldingRegisters@Petit_StartAddress,c
  2144  00033C  C011  F016         	movff	??_HandlePetitModbusReadHoldingRegisters,HandlePetitModbusReadHoldingRegisters@Pe
      +                          tit_StartAddress+1
  2145                           
  2146                           ;PetitModbus.c: 145: Petit_NumberOfRegisters = ((unsigned int) (Petit_Rx_Data.DataBuf[2]
      +                          ) << 8) + (unsigned int) (Petit_Rx_Data.DataBuf[3]);
  2147  000340  0100               	movlb	0	; () banked
  2148  000342  5164               	movf	(_Petit_Rx_Data+4)& (0+255),w,b
  2149  000344  6E11               	movwf	??_HandlePetitModbusReadHoldingRegisters& (0+255),c
  2150  000346  0100               	movlb	0	; () banked
  2151  000348  5165               	movf	(_Petit_Rx_Data+5)& (0+255),w,b
  2152  00034A  6E17               	movwf	HandlePetitModbusReadHoldingRegisters@Petit_NumberOfRegisters,c
  2153  00034C  C011  F018         	movff	??_HandlePetitModbusReadHoldingRegisters,HandlePetitModbusReadHoldingRegisters@Pe
      +                          tit_NumberOfRegisters+1
  2154                           
  2155                           ; BSR set to: 0
  2156                           ;PetitModbus.c: 148: if((Petit_StartAddress+Petit_NumberOfRegisters)>11)
  2157  000350  5017               	movf	HandlePetitModbusReadHoldingRegisters@Petit_NumberOfRegisters,w,c
  2158  000352  2415               	addwf	HandlePetitModbusReadHoldingRegisters@Petit_StartAddress,w,c
  2159  000354  6E11               	movwf	??_HandlePetitModbusReadHoldingRegisters& (0+255),c
  2160  000356  5018               	movf	HandlePetitModbusReadHoldingRegisters@Petit_NumberOfRegisters+1,w,c
  2161  000358  2016               	addwfc	HandlePetitModbusReadHoldingRegisters@Petit_StartAddress+1,w,c
  2162  00035A  6E12               	movwf	(??_HandlePetitModbusReadHoldingRegisters+1)& (0+255),c
  2163  00035C  5012               	movf	??_HandlePetitModbusReadHoldingRegisters+1,w,c
  2164  00035E  E104               	bnz	u620
  2165  000360  0E0C               	movlw	12
  2166  000362  5C11               	subwf	??_HandlePetitModbusReadHoldingRegisters,w,c
  2167  000364  A0D8               	btfss	status,0,c
  2168  000366  D004               	goto	l1401
  2169  000368                     u620:
  2170                           
  2171                           ; BSR set to: 0
  2172                           ;PetitModbus.c: 149: HandlePetitModbusError(0x02);
  2173  000368  0E02               	movlw	2
  2174  00036A  EC75  F004         	call	_HandlePetitModbusError
  2175  00036E  0012               	return	
  2176  000370                     l1401:
  2177                           
  2178                           ;PetitModbus.c: 150: else
  2179                           ;PetitModbus.c: 151: {
  2180                           ;PetitModbus.c: 153: Petit_Tx_Data.Function = 3;
  2181  000370  0E03               	movlw	3
  2182  000372  0100               	movlb	0	; () banked
  2183  000374  6F85               	movwf	(_Petit_Tx_Data+1)& (0+255),b
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;PetitModbus.c: 154: Petit_Tx_Data.Address = PETITMODBUS_SLAVE_ADDRESS;
  2187  000376  C048  F084         	movff	_PETITMODBUS_SLAVE_ADDRESS,_Petit_Tx_Data
  2188                           
  2189                           ;PetitModbus.c: 155: Petit_Tx_Data.DataLen = 1;
  2190  00037A  0E00               	movlw	0
  2191  00037C  0100               	movlb	0	; () banked
  2192  00037E  6FA7               	movwf	(_Petit_Tx_Data+35)& (0+255),b
  2193  000380  0E01               	movlw	1
  2194  000382  6FA6               	movwf	(_Petit_Tx_Data+34)& (0+255),b
  2195                           
  2196                           ;PetitModbus.c: 156: Petit_Tx_Data.DataBuf[0] = 0;
  2197  000384  0E00               	movlw	0
  2198  000386  0100               	movlb	0	; () banked
  2199  000388  6F86               	movwf	(_Petit_Tx_Data+2)& (0+255),b
  2200                           
  2201                           ;PetitModbus.c: 158: for (Petit_i = 0; Petit_i < Petit_NumberOfRegisters; Petit_i++)
  2202  00038A  0E00               	movlw	0
  2203  00038C  6E1A               	movwf	HandlePetitModbusReadHoldingRegisters@Petit_i+1,c
  2204  00038E  0E00               	movlw	0
  2205  000390  6E19               	movwf	HandlePetitModbusReadHoldingRegisters@Petit_i,c
  2206  000392  D038               	goto	l1413
  2207  000394                     l1405:
  2208                           
  2209                           ; BSR set to: 0
  2210                           ;PetitModbus.c: 159: {
  2211                           ;PetitModbus.c: 160: unsigned short Petit_CurrentData = PetitRegisters[Petit_StartAddres
      +                          s+Petit_i].ActValue;
  2212  000394  5019               	movf	HandlePetitModbusReadHoldingRegisters@Petit_i,w,c
  2213  000396  2415               	addwf	HandlePetitModbusReadHoldingRegisters@Petit_StartAddress,w,c
  2214  000398  6E11               	movwf	??_HandlePetitModbusReadHoldingRegisters& (0+255),c
  2215  00039A  501A               	movf	HandlePetitModbusReadHoldingRegisters@Petit_i+1,w,c
  2216  00039C  2016               	addwfc	HandlePetitModbusReadHoldingRegisters@Petit_StartAddress+1,w,c
  2217  00039E  6E12               	movwf	(??_HandlePetitModbusReadHoldingRegisters+1)& (0+255),c
  2218  0003A0  90D8               	bcf	status,0,c
  2219  0003A2  3611               	rlcf	??_HandlePetitModbusReadHoldingRegisters,f,c
  2220  0003A4  3612               	rlcf	??_HandlePetitModbusReadHoldingRegisters+1,f,c
  2221  0003A6  0E26               	movlw	low _PetitRegisters
  2222  0003A8  2411               	addwf	??_HandlePetitModbusReadHoldingRegisters,w,c
  2223  0003AA  6ED9               	movwf	fsr2l,c
  2224  0003AC  0E00               	movlw	high _PetitRegisters
  2225  0003AE  2012               	addwfc	??_HandlePetitModbusReadHoldingRegisters+1,w,c
  2226  0003B0  6EDA               	movwf	fsr2h,c
  2227  0003B2  CFDE F013          	movff	postinc2,HandlePetitModbusReadHoldingRegisters@Petit_CurrentData
  2228  0003B6  CFDD F014          	movff	postdec2,HandlePetitModbusReadHoldingRegisters@Petit_CurrentData+1
  2229                           
  2230                           ;PetitModbus.c: 162: Petit_Tx_Data.DataBuf[Petit_Tx_Data.DataLen] = (unsigned char) ((Pe
      +                          tit_CurrentData & 0xFF00) >> 8);
  2231  0003BA  0E86               	movlw	low (_Petit_Tx_Data+2)
  2232  0003BC  0100               	movlb	0	; () banked
  2233  0003BE  25A6               	addwf	(_Petit_Tx_Data+34)& (0+255),w,b
  2234  0003C0  6ED9               	movwf	fsr2l,c
  2235  0003C2  0E00               	movlw	high (_Petit_Tx_Data+2)
  2236  0003C4  0100               	movlb	0	; () banked
  2237  0003C6  21A7               	addwfc	(_Petit_Tx_Data+35)& (0+255),w,b
  2238  0003C8  6EDA               	movwf	fsr2h,c
  2239  0003CA  5014               	movf	HandlePetitModbusReadHoldingRegisters@Petit_CurrentData+1,w,c
  2240  0003CC  6EDF               	movwf	indf2,c
  2241                           
  2242                           ;PetitModbus.c: 163: Petit_Tx_Data.DataBuf[Petit_Tx_Data.DataLen + 1] = (unsigned char) 
      +                          (Petit_CurrentData & 0xFF);
  2243  0003CE  0E01               	movlw	1
  2244  0003D0  0100               	movlb	0	; () banked
  2245  0003D2  25A6               	addwf	(_Petit_Tx_Data+34)& (0+255),w,b
  2246  0003D4  6E11               	movwf	??_HandlePetitModbusReadHoldingRegisters& (0+255),c
  2247  0003D6  0E00               	movlw	0
  2248  0003D8  0100               	movlb	0	; () banked
  2249  0003DA  21A7               	addwfc	(_Petit_Tx_Data+35)& (0+255),w,b
  2250  0003DC  6E12               	movwf	(??_HandlePetitModbusReadHoldingRegisters+1)& (0+255),c
  2251  0003DE  0E86               	movlw	low (_Petit_Tx_Data+2)
  2252  0003E0  2411               	addwf	??_HandlePetitModbusReadHoldingRegisters,w,c
  2253  0003E2  6ED9               	movwf	fsr2l,c
  2254  0003E4  0E00               	movlw	high (_Petit_Tx_Data+2)
  2255  0003E6  2012               	addwfc	??_HandlePetitModbusReadHoldingRegisters+1,w,c
  2256  0003E8  6EDA               	movwf	fsr2h,c
  2257  0003EA  C013  FFDF         	movff	HandlePetitModbusReadHoldingRegisters@Petit_CurrentData,indf2
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;PetitModbus.c: 164: Petit_Tx_Data.DataLen += 2;
  2261  0003EE  0E02               	movlw	2
  2262  0003F0  0100               	movlb	0	; () banked
  2263  0003F2  27A6               	addwf	(_Petit_Tx_Data+34)& (0+255),f,b
  2264  0003F4  0E00               	movlw	0
  2265  0003F6  23A7               	addwfc	(_Petit_Tx_Data+35)& (0+255),f,b
  2266                           
  2267                           ; BSR set to: 0
  2268                           ;PetitModbus.c: 165: Petit_Tx_Data.DataBuf[0] = Petit_Tx_Data.DataLen - 1;
  2269  0003F8  0100               	movlb	0	; () banked
  2270  0003FA  05A6               	decf	(_Petit_Tx_Data+34)& (0+255),w,b
  2271  0003FC  0100               	movlb	0	; () banked
  2272  0003FE  6F86               	movwf	(_Petit_Tx_Data+2)& (0+255),b
  2273                           
  2274                           ; BSR set to: 0
  2275  000400  4A19               	infsnz	HandlePetitModbusReadHoldingRegisters@Petit_i,f,c
  2276  000402  2A1A               	incf	HandlePetitModbusReadHoldingRegisters@Petit_i+1,f,c
  2277  000404                     l1413:
  2278                           
  2279                           ; BSR set to: 0
  2280  000404  5017               	movf	HandlePetitModbusReadHoldingRegisters@Petit_NumberOfRegisters,w,c
  2281  000406  5C19               	subwf	HandlePetitModbusReadHoldingRegisters@Petit_i,w,c
  2282  000408  5018               	movf	HandlePetitModbusReadHoldingRegisters@Petit_NumberOfRegisters+1,w,c
  2283  00040A  581A               	subwfb	HandlePetitModbusReadHoldingRegisters@Petit_i+1,w,c
  2284  00040C  A0D8               	btfss	status,0,c
  2285  00040E  D7C2               	goto	l1405
  2286                           
  2287                           ; BSR set to: 0
  2288                           ;PetitModbus.c: 166: }
  2289                           ;PetitModbus.c: 168: PetitSendMessage();
  2290                           
  2291                           ; BSR set to: 0
  2292  000410  ECB5  F004         	call	_PetitSendMessage	;wreg free
  2293  000414  0012               	return	
  2294  000416                     __end_of_HandlePetitModbusReadHoldingRegisters:
  2295                           	opt stack 0
  2296                           tblptru	equ	0xFF8
  2297                           tblptrh	equ	0xFF7
  2298                           tblptrl	equ	0xFF6
  2299                           tablat	equ	0xFF5
  2300                           prodh	equ	0xFF4
  2301                           prodl	equ	0xFF3
  2302                           intcon	equ	0xFF2
  2303                           postinc0	equ	0xFEE
  2304                           wreg	equ	0xFE8
  2305                           indf1	equ	0xFE7
  2306                           postdec1	equ	0xFE5
  2307                           fsr1h	equ	0xFE2
  2308                           fsr1l	equ	0xFE1
  2309                           indf2	equ	0xFDF
  2310                           postinc2	equ	0xFDE
  2311                           postdec2	equ	0xFDD
  2312                           preinc2	equ	0xFDC
  2313                           fsr2h	equ	0xFDA
  2314                           fsr2l	equ	0xFD9
  2315                           status	equ	0xFD8
  2316                           
  2317 ;; *************** function _HandleMPetitodbusWriteMultipleRegisters *****************
  2318 ;; Defined at:
  2319 ;;		line 217 in file "PetitModbus/PetitModbus.c"
  2320 ;; Parameters:    Size  Location     Type
  2321 ;;		None
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;  Petit_Number    2   29[COMRAM] unsigned int 
  2324 ;;  Petit_StartA    2   27[COMRAM] unsigned int 
  2325 ;;  Petit_Value     2   25[COMRAM] unsigned int 
  2326 ;;  Petit_i         1   31[COMRAM] unsigned char 
  2327 ;;  Petit_ByteCo    1   24[COMRAM] unsigned char 
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  1    wreg      void 
  2330 ;; Registers used:
  2331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2337 ;;      Params:         0       0       0       0
  2338 ;;      Locals:         8       0       0       0
  2339 ;;      Temps:          8       0       0       0
  2340 ;;      Totals:        16       0       0       0
  2341 ;;Total ram usage:       16 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; Hardware stack levels required when called:    4
  2344 ;; This function calls:
  2345 ;;		_HandlePetitModbusError
  2346 ;;		_PetitSendMessage
  2347 ;; This function is called by:
  2348 ;;		_ProcessPetitModbus
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text13
  2353  0001F0                     __ptext13:
  2354                           	opt stack 0
  2355  0001F0                     _HandleMPetitodbusWriteMultipleRegisters:
  2356                           	opt stack 25
  2357                           
  2358                           ;PetitModbus.c: 220: unsigned int Petit_StartAddress =0;
  2359                           
  2360                           ;incstack = 0
  2361  0001F0  0E00               	movlw	0
  2362  0001F2  6E1D               	movwf	HandleMPetitodbusWriteMultipleRegisters@Petit_StartAddress+1,c
  2363  0001F4  0E00               	movlw	0
  2364  0001F6  6E1C               	movwf	HandleMPetitodbusWriteMultipleRegisters@Petit_StartAddress,c
  2365                           
  2366                           ;PetitModbus.c: 221: unsigned char Petit_ByteCount =0;
  2367  0001F8  0E00               	movlw	0
  2368  0001FA  6E19               	movwf	HandleMPetitodbusWriteMultipleRegisters@Petit_ByteCount,c
  2369                           
  2370                           ;PetitModbus.c: 222: unsigned int Petit_NumberOfRegisters =0;
  2371  0001FC  0E00               	movlw	0
  2372  0001FE  6E1F               	movwf	HandleMPetitodbusWriteMultipleRegisters@Petit_NumberOfRegisters+1,c
  2373  000200  0E00               	movlw	0
  2374  000202  6E1E               	movwf	HandleMPetitodbusWriteMultipleRegisters@Petit_NumberOfRegisters,c
  2375                           
  2376                           ;PetitModbus.c: 223: unsigned char Petit_i =0;
  2377  000204  0E00               	movlw	0
  2378  000206  6E20               	movwf	HandleMPetitodbusWriteMultipleRegisters@Petit_i,c
  2379                           
  2380                           ;PetitModbus.c: 224: unsigned int Petit_Value =0;
  2381  000208  0E00               	movlw	0
  2382  00020A  6E1B               	movwf	HandleMPetitodbusWriteMultipleRegisters@Petit_Value+1,c
  2383  00020C  0E00               	movlw	0
  2384  00020E  6E1A               	movwf	HandleMPetitodbusWriteMultipleRegisters@Petit_Value,c
  2385                           
  2386                           ;PetitModbus.c: 227: Petit_StartAddress = ((unsigned int) (Petit_Rx_Data.DataBuf[0]) << 
      +                          8) + (unsigned int) (Petit_Rx_Data.DataBuf[1]);
  2387  000210  0100               	movlb	0	; () banked
  2388  000212  5162               	movf	(_Petit_Rx_Data+2)& (0+255),w,b
  2389  000214  6E11               	movwf	??_HandleMPetitodbusWriteMultipleRegisters& (0+255),c
  2390  000216  0100               	movlb	0	; () banked
  2391  000218  5163               	movf	(_Petit_Rx_Data+3)& (0+255),w,b
  2392  00021A  6E1C               	movwf	HandleMPetitodbusWriteMultipleRegisters@Petit_StartAddress,c
  2393  00021C  C011  F01D         	movff	??_HandleMPetitodbusWriteMultipleRegisters,HandleMPetitodbusWriteMultipleRegister
      +                          s@Petit_StartAddress+1
  2394                           
  2395                           ;PetitModbus.c: 228: Petit_NumberOfRegisters = ((unsigned int) (Petit_Rx_Data.DataBuf[2]
      +                          ) << 8) + (unsigned int) (Petit_Rx_Data.DataBuf[3]);
  2396  000220  0100               	movlb	0	; () banked
  2397  000222  5164               	movf	(_Petit_Rx_Data+4)& (0+255),w,b
  2398  000224  6E11               	movwf	??_HandleMPetitodbusWriteMultipleRegisters& (0+255),c
  2399  000226  0100               	movlb	0	; () banked
  2400  000228  5165               	movf	(_Petit_Rx_Data+5)& (0+255),w,b
  2401  00022A  6E1E               	movwf	HandleMPetitodbusWriteMultipleRegisters@Petit_NumberOfRegisters,c
  2402  00022C  C011  F01F         	movff	??_HandleMPetitodbusWriteMultipleRegisters,HandleMPetitodbusWriteMultipleRegister
      +                          s@Petit_NumberOfRegisters+1
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;PetitModbus.c: 229: Petit_ByteCount = Petit_Rx_Data.DataBuf[4];
  2406  000230  C066  F019         	movff	_Petit_Rx_Data+6,HandleMPetitodbusWriteMultipleRegisters@Petit_ByteCount
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;PetitModbus.c: 232: if((Petit_StartAddress+Petit_NumberOfRegisters)>11)
  2410  000234  501E               	movf	HandleMPetitodbusWriteMultipleRegisters@Petit_NumberOfRegisters,w,c
  2411  000236  241C               	addwf	HandleMPetitodbusWriteMultipleRegisters@Petit_StartAddress,w,c
  2412  000238  6E11               	movwf	??_HandleMPetitodbusWriteMultipleRegisters& (0+255),c
  2413  00023A  501F               	movf	HandleMPetitodbusWriteMultipleRegisters@Petit_NumberOfRegisters+1,w,c
  2414  00023C  201D               	addwfc	HandleMPetitodbusWriteMultipleRegisters@Petit_StartAddress+1,w,c
  2415  00023E  6E12               	movwf	(??_HandleMPetitodbusWriteMultipleRegisters+1)& (0+255),c
  2416  000240  5012               	movf	??_HandleMPetitodbusWriteMultipleRegisters+1,w,c
  2417  000242  E104               	bnz	u670
  2418  000244  0E0C               	movlw	12
  2419  000246  5C11               	subwf	??_HandleMPetitodbusWriteMultipleRegisters,w,c
  2420  000248  A0D8               	btfss	status,0,c
  2421  00024A  D004               	goto	l1449
  2422  00024C                     u670:
  2423                           
  2424                           ; BSR set to: 0
  2425                           ;PetitModbus.c: 233: HandlePetitModbusError(0x03);
  2426  00024C  0E03               	movlw	3
  2427  00024E  EC75  F004         	call	_HandlePetitModbusError
  2428  000252  0012               	return	
  2429  000254                     l1449:
  2430                           
  2431                           ;PetitModbus.c: 234: else
  2432                           ;PetitModbus.c: 235: {
  2433                           ;PetitModbus.c: 237: Petit_Tx_Data.Function = 16;
  2434  000254  0E10               	movlw	16
  2435  000256  0100               	movlb	0	; () banked
  2436  000258  6F85               	movwf	(_Petit_Tx_Data+1)& (0+255),b
  2437                           
  2438                           ; BSR set to: 0
  2439                           ;PetitModbus.c: 238: Petit_Tx_Data.Address = PETITMODBUS_SLAVE_ADDRESS;
  2440  00025A  C048  F084         	movff	_PETITMODBUS_SLAVE_ADDRESS,_Petit_Tx_Data
  2441                           
  2442                           ;PetitModbus.c: 239: Petit_Tx_Data.DataLen = 4;
  2443  00025E  0E00               	movlw	0
  2444  000260  0100               	movlb	0	; () banked
  2445  000262  6FA7               	movwf	(_Petit_Tx_Data+35)& (0+255),b
  2446  000264  0E04               	movlw	4
  2447  000266  6FA6               	movwf	(_Petit_Tx_Data+34)& (0+255),b
  2448                           
  2449                           ; BSR set to: 0
  2450                           ;PetitModbus.c: 240: Petit_Tx_Data.DataBuf[0] = Petit_Rx_Data.DataBuf[0];
  2451  000268  C062  F086         	movff	_Petit_Rx_Data+2,_Petit_Tx_Data+2
  2452                           
  2453                           ; BSR set to: 0
  2454                           ;PetitModbus.c: 241: Petit_Tx_Data.DataBuf[1] = Petit_Rx_Data.DataBuf[1];
  2455  00026C  C063  F087         	movff	_Petit_Rx_Data+3,_Petit_Tx_Data+3
  2456                           
  2457                           ; BSR set to: 0
  2458                           ;PetitModbus.c: 242: Petit_Tx_Data.DataBuf[2] = Petit_Rx_Data.DataBuf[2];
  2459  000270  C064  F088         	movff	_Petit_Rx_Data+4,_Petit_Tx_Data+4
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;PetitModbus.c: 243: Petit_Tx_Data.DataBuf[3] = Petit_Rx_Data.DataBuf[3];
  2463  000274  C065  F089         	movff	_Petit_Rx_Data+5,_Petit_Tx_Data+5
  2464                           
  2465                           ;PetitModbus.c: 246: for (Petit_i = 0; Petit_i <Petit_NumberOfRegisters; Petit_i++)
  2466  000278  0E00               	movlw	0
  2467  00027A  6E20               	movwf	HandleMPetitodbusWriteMultipleRegisters@Petit_i,c
  2468  00027C  D041               	goto	l1465
  2469  00027E                     l1461:
  2470                           
  2471                           ;PetitModbus.c: 247: {
  2472                           ;PetitModbus.c: 248: Petit_Value=(Petit_Rx_Data.DataBuf[5+2*Petit_i]<<8)+(Petit_Rx_Data.
      +                          DataBuf[6+2*Petit_i]);
  2473  00027E  5020               	movf	HandleMPetitodbusWriteMultipleRegisters@Petit_i,w,c
  2474  000280  6E11               	movwf	??_HandleMPetitodbusWriteMultipleRegisters& (0+255),c
  2475  000282  6A12               	clrf	(??_HandleMPetitodbusWriteMultipleRegisters+1)& (0+255),c
  2476  000284  90D8               	bcf	status,0,c
  2477  000286  3611               	rlcf	??_HandleMPetitodbusWriteMultipleRegisters,f,c
  2478  000288  3612               	rlcf	??_HandleMPetitodbusWriteMultipleRegisters+1,f,c
  2479  00028A  0E06               	movlw	6
  2480  00028C  2611               	addwf	??_HandleMPetitodbusWriteMultipleRegisters,f,c
  2481  00028E  0E00               	movlw	0
  2482  000290  2212               	addwfc	??_HandleMPetitodbusWriteMultipleRegisters+1,f,c
  2483  000292  0E62               	movlw	low (_Petit_Rx_Data+2)
  2484  000294  2411               	addwf	??_HandleMPetitodbusWriteMultipleRegisters,w,c
  2485  000296  6ED9               	movwf	fsr2l,c
  2486  000298  0E00               	movlw	high (_Petit_Rx_Data+2)
  2487  00029A  2012               	addwfc	??_HandleMPetitodbusWriteMultipleRegisters+1,w,c
  2488  00029C  6EDA               	movwf	fsr2h,c
  2489  00029E  50DF               	movf	indf2,w,c
  2490  0002A0  6E13               	movwf	(??_HandleMPetitodbusWriteMultipleRegisters+2)& (0+255),c
  2491  0002A2  5020               	movf	HandleMPetitodbusWriteMultipleRegisters@Petit_i,w,c
  2492  0002A4  6E14               	movwf	(??_HandleMPetitodbusWriteMultipleRegisters+3)& (0+255),c
  2493  0002A6  6A15               	clrf	(??_HandleMPetitodbusWriteMultipleRegisters+4)& (0+255),c
  2494  0002A8  90D8               	bcf	status,0,c
  2495  0002AA  3614               	rlcf	??_HandleMPetitodbusWriteMultipleRegisters+3,f,c
  2496  0002AC  3615               	rlcf	??_HandleMPetitodbusWriteMultipleRegisters+4,f,c
  2497  0002AE  0E05               	movlw	5
  2498  0002B0  2614               	addwf	??_HandleMPetitodbusWriteMultipleRegisters+3,f,c
  2499  0002B2  0E00               	movlw	0
  2500  0002B4  2215               	addwfc	??_HandleMPetitodbusWriteMultipleRegisters+4,f,c
  2501  0002B6  0E62               	movlw	low (_Petit_Rx_Data+2)
  2502  0002B8  2414               	addwf	??_HandleMPetitodbusWriteMultipleRegisters+3,w,c
  2503  0002BA  6ED9               	movwf	fsr2l,c
  2504  0002BC  0E00               	movlw	high (_Petit_Rx_Data+2)
  2505  0002BE  2015               	addwfc	??_HandleMPetitodbusWriteMultipleRegisters+4,w,c
  2506  0002C0  6EDA               	movwf	fsr2h,c
  2507  0002C2  50DF               	movf	indf2,w,c
  2508  0002C4  6E16               	movwf	(??_HandleMPetitodbusWriteMultipleRegisters+5)& (0+255),c
  2509  0002C6  5016               	movf	??_HandleMPetitodbusWriteMultipleRegisters+5,w,c
  2510  0002C8  6E18               	movwf	(??_HandleMPetitodbusWriteMultipleRegisters+7)& (0+255),c
  2511  0002CA  6A17               	clrf	(??_HandleMPetitodbusWriteMultipleRegisters+6)& (0+255),c
  2512  0002CC  5013               	movf	??_HandleMPetitodbusWriteMultipleRegisters+2,w,c
  2513  0002CE  2417               	addwf	??_HandleMPetitodbusWriteMultipleRegisters+6,w,c
  2514  0002D0  6E1A               	movwf	HandleMPetitodbusWriteMultipleRegisters@Petit_Value,c
  2515  0002D2  0E00               	movlw	0
  2516  0002D4  2018               	addwfc	??_HandleMPetitodbusWriteMultipleRegisters+7,w,c
  2517  0002D6  6E1B               	movwf	HandleMPetitodbusWriteMultipleRegisters@Petit_Value+1,c
  2518                           
  2519                           ;PetitModbus.c: 249: PetitRegisters[Petit_StartAddress+Petit_i].ActValue=Petit_Value;
  2520  0002D8  5020               	movf	HandleMPetitodbusWriteMultipleRegisters@Petit_i,w,c
  2521  0002DA  241C               	addwf	HandleMPetitodbusWriteMultipleRegisters@Petit_StartAddress,w,c
  2522  0002DC  6E11               	movwf	??_HandleMPetitodbusWriteMultipleRegisters& (0+255),c
  2523  0002DE  0E00               	movlw	0
  2524  0002E0  201D               	addwfc	HandleMPetitodbusWriteMultipleRegisters@Petit_StartAddress+1,w,c
  2525  0002E2  6E12               	movwf	(??_HandleMPetitodbusWriteMultipleRegisters+1)& (0+255),c
  2526  0002E4  90D8               	bcf	status,0,c
  2527  0002E6  3611               	rlcf	??_HandleMPetitodbusWriteMultipleRegisters,f,c
  2528  0002E8  3612               	rlcf	??_HandleMPetitodbusWriteMultipleRegisters+1,f,c
  2529  0002EA  0E26               	movlw	low _PetitRegisters
  2530  0002EC  2411               	addwf	??_HandleMPetitodbusWriteMultipleRegisters,w,c
  2531  0002EE  6ED9               	movwf	fsr2l,c
  2532  0002F0  0E00               	movlw	high _PetitRegisters
  2533  0002F2  2012               	addwfc	??_HandleMPetitodbusWriteMultipleRegisters+1,w,c
  2534  0002F4  6EDA               	movwf	fsr2h,c
  2535  0002F6  C01A  FFDE         	movff	HandleMPetitodbusWriteMultipleRegisters@Petit_Value,postinc2
  2536  0002FA  C01B  FFDD         	movff	HandleMPetitodbusWriteMultipleRegisters@Petit_Value+1,postdec2
  2537  0002FE  2A20               	incf	HandleMPetitodbusWriteMultipleRegisters@Petit_i,f,c
  2538  000300                     l1465:
  2539  000300  5020               	movf	HandleMPetitodbusWriteMultipleRegisters@Petit_i,w,c
  2540  000302  6E11               	movwf	??_HandleMPetitodbusWriteMultipleRegisters& (0+255),c
  2541  000304  6A12               	clrf	(??_HandleMPetitodbusWriteMultipleRegisters+1)& (0+255),c
  2542  000306  501E               	movf	HandleMPetitodbusWriteMultipleRegisters@Petit_NumberOfRegisters,w,c
  2543  000308  5C11               	subwf	??_HandleMPetitodbusWriteMultipleRegisters,w,c
  2544  00030A  501F               	movf	HandleMPetitodbusWriteMultipleRegisters@Petit_NumberOfRegisters+1,w,c
  2545  00030C  5812               	subwfb	??_HandleMPetitodbusWriteMultipleRegisters+1,w,c
  2546  00030E  A0D8               	btfss	status,0,c
  2547  000310  D7B6               	goto	l1461
  2548                           
  2549                           ;PetitModbus.c: 250: }
  2550                           ;PetitModbus.c: 252: PetitSendMessage();
  2551  000312  ECB5  F004         	call	_PetitSendMessage	;wreg free
  2552  000316  0012               	return	
  2553  000318                     __end_of_HandleMPetitodbusWriteMultipleRegisters:
  2554                           	opt stack 0
  2555                           tblptru	equ	0xFF8
  2556                           tblptrh	equ	0xFF7
  2557                           tblptrl	equ	0xFF6
  2558                           tablat	equ	0xFF5
  2559                           prodh	equ	0xFF4
  2560                           prodl	equ	0xFF3
  2561                           intcon	equ	0xFF2
  2562                           postinc0	equ	0xFEE
  2563                           wreg	equ	0xFE8
  2564                           indf1	equ	0xFE7
  2565                           postdec1	equ	0xFE5
  2566                           fsr1h	equ	0xFE2
  2567                           fsr1l	equ	0xFE1
  2568                           indf2	equ	0xFDF
  2569                           postinc2	equ	0xFDE
  2570                           postdec2	equ	0xFDD
  2571                           preinc2	equ	0xFDC
  2572                           fsr2h	equ	0xFDA
  2573                           fsr2l	equ	0xFD9
  2574                           status	equ	0xFD8
  2575                           
  2576 ;; *************** function _HandlePetitModbusError *****************
  2577 ;; Defined at:
  2578 ;;		line 118 in file "PetitModbus/PetitModbus.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;  ErrorCode       1    wreg     unsigned char 
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;  ErrorCode       1   15[COMRAM] unsigned char 
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  1    wreg      void 
  2585 ;; Registers used:
  2586 ;;		wreg, status,2, status,0, cstack
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2592 ;;      Params:         0       0       0       0
  2593 ;;      Locals:         1       0       0       0
  2594 ;;      Temps:          0       0       0       0
  2595 ;;      Totals:         1       0       0       0
  2596 ;;Total ram usage:        1 bytes
  2597 ;; Hardware stack levels used:    1
  2598 ;; Hardware stack levels required when called:    3
  2599 ;; This function calls:
  2600 ;;		_PetitSendMessage
  2601 ;; This function is called by:
  2602 ;;		_HandlePetitModbusReadHoldingRegisters
  2603 ;;		_HandlePetitModbusWriteSingleRegister
  2604 ;;		_HandleMPetitodbusWriteMultipleRegisters
  2605 ;;		_ProcessPetitModbus
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608                           
  2609                           	psect	text14
  2610  0008EA                     __ptext14:
  2611                           	opt stack 0
  2612  0008EA                     _HandlePetitModbusError:
  2613                           	opt stack 25
  2614                           
  2615                           ;incstack = 0
  2616                           ;HandlePetitModbusError@ErrorCode stored from wreg
  2617  0008EA  6E10               	movwf	HandlePetitModbusError@ErrorCode,c
  2618                           
  2619                           ;PetitModbus.c: 121: Petit_Tx_Data.Function = ErrorCode | 0x80;
  2620  0008EC  5010               	movf	HandlePetitModbusError@ErrorCode,w,c
  2621  0008EE  0980               	iorlw	128
  2622  0008F0  0100               	movlb	0	; () banked
  2623  0008F2  6F85               	movwf	(_Petit_Tx_Data+1)& (0+255),b
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;PetitModbus.c: 122: Petit_Tx_Data.Address = PETITMODBUS_SLAVE_ADDRESS;
  2627  0008F4  C048  F084         	movff	_PETITMODBUS_SLAVE_ADDRESS,_Petit_Tx_Data
  2628                           
  2629                           ; BSR set to: 0
  2630                           ;PetitModbus.c: 123: Petit_Tx_Data.DataLen = 0;
  2631  0008F8  0E00               	movlw	0
  2632  0008FA  0100               	movlb	0	; () banked
  2633  0008FC  6FA7               	movwf	(_Petit_Tx_Data+35)& (0+255),b
  2634  0008FE  0E00               	movlw	0
  2635  000900  6FA6               	movwf	(_Petit_Tx_Data+34)& (0+255),b
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;PetitModbus.c: 124: PetitSendMessage();
  2639  000902  ECB5  F004         	call	_PetitSendMessage	;wreg free
  2640  000906  0012               	return		;funcret
  2641  000908                     __end_of_HandlePetitModbusError:
  2642                           	opt stack 0
  2643                           tblptru	equ	0xFF8
  2644                           tblptrh	equ	0xFF7
  2645                           tblptrl	equ	0xFF6
  2646                           tablat	equ	0xFF5
  2647                           prodh	equ	0xFF4
  2648                           prodl	equ	0xFF3
  2649                           intcon	equ	0xFF2
  2650                           postinc0	equ	0xFEE
  2651                           wreg	equ	0xFE8
  2652                           indf1	equ	0xFE7
  2653                           postdec1	equ	0xFE5
  2654                           fsr1h	equ	0xFE2
  2655                           fsr1l	equ	0xFE1
  2656                           indf2	equ	0xFDF
  2657                           postinc2	equ	0xFDE
  2658                           postdec2	equ	0xFDD
  2659                           preinc2	equ	0xFDC
  2660                           fsr2h	equ	0xFDA
  2661                           fsr2l	equ	0xFD9
  2662                           status	equ	0xFD8
  2663                           
  2664 ;; *************** function _PetitSendMessage *****************
  2665 ;; Defined at:
  2666 ;;		line 101 in file "PetitModbus/PetitModbus.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;		None
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;		None
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  1    wreg      unsigned char 
  2673 ;; Registers used:
  2674 ;;		wreg, status,2
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2680 ;;      Params:         0       0       0       0
  2681 ;;      Locals:         0       0       0       0
  2682 ;;      Temps:          0       0       0       0
  2683 ;;      Totals:         0       0       0       0
  2684 ;;Total ram usage:        0 bytes
  2685 ;; Hardware stack levels used:    1
  2686 ;; Hardware stack levels required when called:    2
  2687 ;; This function calls:
  2688 ;;		Nothing
  2689 ;; This function is called by:
  2690 ;;		_HandlePetitModbusError
  2691 ;;		_HandlePetitModbusReadHoldingRegisters
  2692 ;;		_HandlePetitModbusWriteSingleRegister
  2693 ;;		_HandleMPetitodbusWriteMultipleRegisters
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           	psect	text15
  2698  00096A                     __ptext15:
  2699                           	opt stack 0
  2700  00096A                     _PetitSendMessage:
  2701                           	opt stack 26
  2702                           
  2703                           ;PetitModbus.c: 103: if (Petit_Tx_State != PETIT_RXTX_IDLE)
  2704                           
  2705                           ;incstack = 0
  2706  00096A  5047               	movf	_Petit_Tx_State,w,c
  2707  00096C  A4D8               	btfss	status,2,c
  2708  00096E  0012               	return	
  2709                           
  2710                           ;PetitModbus.c: 106: Petit_Tx_Current =0;
  2711                           
  2712                           ;PetitModbus.c: 104: return 0;
  2713                           ;	Return value of _PetitSendMessage is never used
  2714  000970  0E00               	movlw	0
  2715  000972  6E41               	movwf	_Petit_Tx_Current+1,c
  2716  000974  0E00               	movlw	0
  2717  000976  6E40               	movwf	_Petit_Tx_Current,c
  2718                           
  2719                           ;PetitModbus.c: 107: Petit_Tx_State =PETIT_RXTX_START;
  2720  000978  0E01               	movlw	1
  2721  00097A  6E47               	movwf	_Petit_Tx_State,c
  2722  00097C  0012               	return	
  2723  00097E                     __end_of_PetitSendMessage:
  2724                           	opt stack 0
  2725                           tblptru	equ	0xFF8
  2726                           tblptrh	equ	0xFF7
  2727                           tblptrl	equ	0xFF6
  2728                           tablat	equ	0xFF5
  2729                           prodh	equ	0xFF4
  2730                           prodl	equ	0xFF3
  2731                           intcon	equ	0xFF2
  2732                           postinc0	equ	0xFEE
  2733                           wreg	equ	0xFE8
  2734                           indf1	equ	0xFE7
  2735                           postdec1	equ	0xFE5
  2736                           fsr1h	equ	0xFE2
  2737                           fsr1l	equ	0xFE1
  2738                           indf2	equ	0xFDF
  2739                           postinc2	equ	0xFDE
  2740                           postdec2	equ	0xFDD
  2741                           preinc2	equ	0xFDC
  2742                           fsr2h	equ	0xFDA
  2743                           fsr2l	equ	0xFD9
  2744                           status	equ	0xFD8
  2745                           
  2746 ;; *************** function _InitPetitModbus *****************
  2747 ;; Defined at:
  2748 ;;		line 462 in file "PetitModbus/PetitModbus.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  PetitModbusS    1    wreg     unsigned char 
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;  PetitModbusS    1   15[COMRAM] unsigned char 
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  1    wreg      void 
  2755 ;; Registers used:
  2756 ;;		wreg, status,2, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2762 ;;      Params:         0       0       0       0
  2763 ;;      Locals:         1       0       0       0
  2764 ;;      Temps:          0       0       0       0
  2765 ;;      Totals:         1       0       0       0
  2766 ;;Total ram usage:        1 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; Hardware stack levels required when called:    4
  2769 ;; This function calls:
  2770 ;;		_PetitModBus_TIMER_Initialise
  2771 ;;		_PetitModBus_UART_Initialise
  2772 ;; This function is called by:
  2773 ;;		_main
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           	psect	text16
  2778  00097E                     __ptext16:
  2779                           	opt stack 0
  2780  00097E                     _InitPetitModbus:
  2781                           	opt stack 26
  2782                           
  2783                           ;incstack = 0
  2784                           ;InitPetitModbus@PetitModbusSlaveAddress stored from wreg
  2785  00097E  6E10               	movwf	InitPetitModbus@PetitModbusSlaveAddress,c
  2786                           
  2787                           ;PetitModbus.c: 464: PETITMODBUS_SLAVE_ADDRESS =PetitModbusSlaveAddress;
  2788  000980  C010  F048         	movff	InitPetitModbus@PetitModbusSlaveAddress,_PETITMODBUS_SLAVE_ADDRESS
  2789                           
  2790                           ;PetitModbus.c: 466: PetitModBus_UART_Initialise();
  2791  000984  ECD8  F004         	call	_PetitModBus_UART_Initialise	;wreg free
  2792                           
  2793                           ;PetitModbus.c: 467: PetitModBus_TIMER_Initialise();
  2794  000988  ECDB  F004         	call	_PetitModBus_TIMER_Initialise	;wreg free
  2795  00098C  0012               	return		;funcret
  2796  00098E                     __end_of_InitPetitModbus:
  2797                           	opt stack 0
  2798                           tblptru	equ	0xFF8
  2799                           tblptrh	equ	0xFF7
  2800                           tblptrl	equ	0xFF6
  2801                           tablat	equ	0xFF5
  2802                           prodh	equ	0xFF4
  2803                           prodl	equ	0xFF3
  2804                           intcon	equ	0xFF2
  2805                           postinc0	equ	0xFEE
  2806                           wreg	equ	0xFE8
  2807                           indf1	equ	0xFE7
  2808                           postdec1	equ	0xFE5
  2809                           fsr1h	equ	0xFE2
  2810                           fsr1l	equ	0xFE1
  2811                           indf2	equ	0xFDF
  2812                           postinc2	equ	0xFDE
  2813                           postdec2	equ	0xFDD
  2814                           preinc2	equ	0xFDC
  2815                           fsr2h	equ	0xFDA
  2816                           fsr2l	equ	0xFD9
  2817                           status	equ	0xFD8
  2818                           
  2819 ;; *************** function _PetitModBus_UART_Initialise *****************
  2820 ;; Defined at:
  2821 ;;		line 10 in file "PetitModbus/PetitModbusPort.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;		None
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;		None
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      void 
  2828 ;; Registers used:
  2829 ;;		wreg, status,2, cstack
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2835 ;;      Params:         0       0       0       0
  2836 ;;      Locals:         0       0       0       0
  2837 ;;      Temps:          0       0       0       0
  2838 ;;      Totals:         0       0       0       0
  2839 ;;Total ram usage:        0 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; Hardware stack levels required when called:    3
  2842 ;; This function calls:
  2843 ;;		_InitUART
  2844 ;; This function is called by:
  2845 ;;		_InitPetitModbus
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           	psect	text17
  2850  0009B0                     __ptext17:
  2851                           	opt stack 0
  2852  0009B0                     _PetitModBus_UART_Initialise:
  2853                           	opt stack 26
  2854                           
  2855                           ;PetitModbusPort.c: 12: InitUART();
  2856                           
  2857                           ;incstack = 0
  2858  0009B0  ECAA  F004         	call	_InitUART	;wreg free
  2859  0009B4  0012               	return		;funcret
  2860  0009B6                     __end_of_PetitModBus_UART_Initialise:
  2861                           	opt stack 0
  2862                           tblptru	equ	0xFF8
  2863                           tblptrh	equ	0xFF7
  2864                           tblptrl	equ	0xFF6
  2865                           tablat	equ	0xFF5
  2866                           prodh	equ	0xFF4
  2867                           prodl	equ	0xFF3
  2868                           intcon	equ	0xFF2
  2869                           postinc0	equ	0xFEE
  2870                           wreg	equ	0xFE8
  2871                           indf1	equ	0xFE7
  2872                           postdec1	equ	0xFE5
  2873                           fsr1h	equ	0xFE2
  2874                           fsr1l	equ	0xFE1
  2875                           indf2	equ	0xFDF
  2876                           postinc2	equ	0xFDE
  2877                           postdec2	equ	0xFDD
  2878                           preinc2	equ	0xFDC
  2879                           fsr2h	equ	0xFDA
  2880                           fsr2l	equ	0xFD9
  2881                           status	equ	0xFD8
  2882                           
  2883 ;; *************** function _InitUART *****************
  2884 ;; Defined at:
  2885 ;;		line 81 in file "Init/Init.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;		None
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;		None
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  1    wreg      void 
  2892 ;; Registers used:
  2893 ;;		wreg, status,2
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2899 ;;      Params:         0       0       0       0
  2900 ;;      Locals:         0       0       0       0
  2901 ;;      Temps:          0       0       0       0
  2902 ;;      Totals:         0       0       0       0
  2903 ;;Total ram usage:        0 bytes
  2904 ;; Hardware stack levels used:    1
  2905 ;; Hardware stack levels required when called:    2
  2906 ;; This function calls:
  2907 ;;		Nothing
  2908 ;; This function is called by:
  2909 ;;		_PetitModBus_UART_Initialise
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           	psect	text18
  2914  000954                     __ptext18:
  2915                           	opt stack 0
  2916  000954                     _InitUART:
  2917                           	opt stack 26
  2918                           
  2919                           ;Init.c: 84: SPBRG = ((int)(20000000UL/(16UL * 57600) -1));
  2920                           
  2921                           ;incstack = 0
  2922  000954  0E14               	movlw	20
  2923  000956  6EAF               	movwf	4015,c	;volatile
  2924                           
  2925                           ;Init.c: 85: TXSTA = 0x24;
  2926  000958  0E24               	movlw	36
  2927  00095A  6EAC               	movwf	4012,c	;volatile
  2928                           
  2929                           ;Init.c: 86: RCSTA = 0x90;
  2930  00095C  0E90               	movlw	144
  2931  00095E  6EAB               	movwf	4011,c	;volatile
  2932                           
  2933                           ;Init.c: 87: TRISC6 = 0;
  2934  000960  9C94               	bcf	3988,6,c	;volatile
  2935                           
  2936                           ;Init.c: 88: TRISC7 = 1;
  2937  000962  8E94               	bsf	3988,7,c	;volatile
  2938                           
  2939                           ;Init.c: 90: RCIF = 0;
  2940  000964  9A9E               	bcf	3998,5,c	;volatile
  2941                           
  2942                           ;Init.c: 91: RCIE = 1;
  2943  000966  8A9D               	bsf	3997,5,c	;volatile
  2944  000968  0012               	return		;funcret
  2945  00096A                     __end_of_InitUART:
  2946                           	opt stack 0
  2947                           tblptru	equ	0xFF8
  2948                           tblptrh	equ	0xFF7
  2949                           tblptrl	equ	0xFF6
  2950                           tablat	equ	0xFF5
  2951                           prodh	equ	0xFF4
  2952                           prodl	equ	0xFF3
  2953                           intcon	equ	0xFF2
  2954                           postinc0	equ	0xFEE
  2955                           wreg	equ	0xFE8
  2956                           indf1	equ	0xFE7
  2957                           postdec1	equ	0xFE5
  2958                           fsr1h	equ	0xFE2
  2959                           fsr1l	equ	0xFE1
  2960                           indf2	equ	0xFDF
  2961                           postinc2	equ	0xFDE
  2962                           postdec2	equ	0xFDD
  2963                           preinc2	equ	0xFDC
  2964                           fsr2h	equ	0xFDA
  2965                           fsr2l	equ	0xFD9
  2966                           status	equ	0xFD8
  2967                           
  2968 ;; *************** function _PetitModBus_TIMER_Initialise *****************
  2969 ;; Defined at:
  2970 ;;		line 16 in file "PetitModbus/PetitModbusPort.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;		None
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;		None
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  1    wreg      void 
  2977 ;; Registers used:
  2978 ;;		wreg, status,2, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2984 ;;      Params:         0       0       0       0
  2985 ;;      Locals:         0       0       0       0
  2986 ;;      Temps:          0       0       0       0
  2987 ;;      Totals:         0       0       0       0
  2988 ;;Total ram usage:        0 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    3
  2991 ;; This function calls:
  2992 ;;		_InitTMR1
  2993 ;; This function is called by:
  2994 ;;		_InitPetitModbus
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text19
  2999  0009B6                     __ptext19:
  3000                           	opt stack 0
  3001  0009B6                     _PetitModBus_TIMER_Initialise:
  3002                           	opt stack 26
  3003                           
  3004                           ;PetitModbusPort.c: 18: InitTMR1();
  3005                           
  3006                           ;incstack = 0
  3007  0009B6  EC9E  F004         	call	_InitTMR1	;wreg free
  3008  0009BA  0012               	return		;funcret
  3009  0009BC                     __end_of_PetitModBus_TIMER_Initialise:
  3010                           	opt stack 0
  3011                           tblptru	equ	0xFF8
  3012                           tblptrh	equ	0xFF7
  3013                           tblptrl	equ	0xFF6
  3014                           tablat	equ	0xFF5
  3015                           prodh	equ	0xFF4
  3016                           prodl	equ	0xFF3
  3017                           intcon	equ	0xFF2
  3018                           postinc0	equ	0xFEE
  3019                           wreg	equ	0xFE8
  3020                           indf1	equ	0xFE7
  3021                           postdec1	equ	0xFE5
  3022                           fsr1h	equ	0xFE2
  3023                           fsr1l	equ	0xFE1
  3024                           indf2	equ	0xFDF
  3025                           postinc2	equ	0xFDE
  3026                           postdec2	equ	0xFDD
  3027                           preinc2	equ	0xFDC
  3028                           fsr2h	equ	0xFDA
  3029                           fsr2l	equ	0xFD9
  3030                           status	equ	0xFD8
  3031                           
  3032 ;; *************** function _InitTMR1 *****************
  3033 ;; Defined at:
  3034 ;;		line 95 in file "Init/Init.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;		None
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;		None
  3039 ;; Return value:  Size  Location     Type
  3040 ;;                  1    wreg      void 
  3041 ;; Registers used:
  3042 ;;		wreg, status,2
  3043 ;; Tracked objects:
  3044 ;;		On entry : 0/0
  3045 ;;		On exit  : 0/0
  3046 ;;		Unchanged: 0/0
  3047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3048 ;;      Params:         0       0       0       0
  3049 ;;      Locals:         0       0       0       0
  3050 ;;      Temps:          0       0       0       0
  3051 ;;      Totals:         0       0       0       0
  3052 ;;Total ram usage:        0 bytes
  3053 ;; Hardware stack levels used:    1
  3054 ;; Hardware stack levels required when called:    2
  3055 ;; This function calls:
  3056 ;;		Nothing
  3057 ;; This function is called by:
  3058 ;;		_PetitModBus_TIMER_Initialise
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062                           	psect	text20
  3063  00093C                     __ptext20:
  3064                           	opt stack 0
  3065  00093C                     _InitTMR1:
  3066                           	opt stack 26
  3067                           
  3068                           ;Init.c: 97: T1CONbits.RD16 =1;
  3069                           
  3070                           ;incstack = 0
  3071  00093C  8ECD               	bsf	4045,7,c	;volatile
  3072                           
  3073                           ;Init.c: 98: T1CONbits.T1CKPS =0b11;
  3074  00093E  0E30               	movlw	48
  3075  000940  12CD               	iorwf	4045,f,c	;volatile
  3076                           
  3077                           ;Init.c: 99: T1CONbits.TMR1CS =0;
  3078  000942  92CD               	bcf	4045,1,c	;volatile
  3079                           
  3080                           ;Init.c: 100: TMR1H =0;
  3081  000944  0E00               	movlw	0
  3082  000946  6ECF               	movwf	4047,c	;volatile
  3083                           
  3084                           ;Init.c: 101: TMR1L =0;
  3085  000948  0E00               	movlw	0
  3086  00094A  6ECE               	movwf	4046,c	;volatile
  3087                           
  3088                           ;Init.c: 103: TMR1IF =0;
  3089  00094C  909E               	bcf	3998,0,c	;volatile
  3090                           
  3091                           ;Init.c: 104: TMR1IE =1;
  3092  00094E  809D               	bsf	3997,0,c	;volatile
  3093                           
  3094                           ;Init.c: 106: T1CONbits.TMR1ON =1;
  3095  000950  80CD               	bsf	4045,0,c	;volatile
  3096  000952  0012               	return		;funcret
  3097  000954                     __end_of_InitTMR1:
  3098                           	opt stack 0
  3099                           tblptru	equ	0xFF8
  3100                           tblptrh	equ	0xFF7
  3101                           tblptrl	equ	0xFF6
  3102                           tablat	equ	0xFF5
  3103                           prodh	equ	0xFF4
  3104                           prodl	equ	0xFF3
  3105                           intcon	equ	0xFF2
  3106                           postinc0	equ	0xFEE
  3107                           wreg	equ	0xFE8
  3108                           indf1	equ	0xFE7
  3109                           postdec1	equ	0xFE5
  3110                           fsr1h	equ	0xFE2
  3111                           fsr1l	equ	0xFE1
  3112                           indf2	equ	0xFDF
  3113                           postinc2	equ	0xFDE
  3114                           postdec2	equ	0xFDD
  3115                           preinc2	equ	0xFDC
  3116                           fsr2h	equ	0xFDA
  3117                           fsr2l	equ	0xFD9
  3118                           status	equ	0xFD8
  3119                           
  3120 ;; *************** function _InitOSC *****************
  3121 ;; Defined at:
  3122 ;;		line 60 in file "Init/Init.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;		None
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;		None
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  1    wreg      void 
  3129 ;; Registers used:
  3130 ;;		wreg, status,2
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3136 ;;      Params:         0       0       0       0
  3137 ;;      Locals:         0       0       0       0
  3138 ;;      Temps:          0       0       0       0
  3139 ;;      Totals:         0       0       0       0
  3140 ;;Total ram usage:        0 bytes
  3141 ;; Hardware stack levels used:    1
  3142 ;; Hardware stack levels required when called:    2
  3143 ;; This function calls:
  3144 ;;		Nothing
  3145 ;; This function is called by:
  3146 ;;		_main
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           	psect	text21
  3151  0009A6                     __ptext21:
  3152                           	opt stack 0
  3153  0009A6                     _InitOSC:
  3154                           	opt stack 28
  3155                           
  3156                           ;Init.c: 62: OSCCONbits.SCS = 0b00;
  3157                           
  3158                           ;incstack = 0
  3159  0009A6  0EFC               	movlw	-4
  3160  0009A8  16D3               	andwf	4051,f,c	;volatile
  3161  0009AA                     l43:
  3162  0009AA  B6D3               	btfsc	4051,3,c	;volatile
  3163  0009AC  0012               	return	
  3164  0009AE  D7FD               	goto	l43
  3165  0009B0                     __end_of_InitOSC:
  3166                           	opt stack 0
  3167                           tblptru	equ	0xFF8
  3168                           tblptrh	equ	0xFF7
  3169                           tblptrl	equ	0xFF6
  3170                           tablat	equ	0xFF5
  3171                           prodh	equ	0xFF4
  3172                           prodl	equ	0xFF3
  3173                           intcon	equ	0xFF2
  3174                           postinc0	equ	0xFEE
  3175                           wreg	equ	0xFE8
  3176                           indf1	equ	0xFE7
  3177                           postdec1	equ	0xFE5
  3178                           fsr1h	equ	0xFE2
  3179                           fsr1l	equ	0xFE1
  3180                           indf2	equ	0xFDF
  3181                           postinc2	equ	0xFDE
  3182                           postdec2	equ	0xFDD
  3183                           preinc2	equ	0xFDC
  3184                           fsr2h	equ	0xFDA
  3185                           fsr2l	equ	0xFD9
  3186                           status	equ	0xFD8
  3187                           
  3188 ;; *************** function _InitIO *****************
  3189 ;; Defined at:
  3190 ;;		line 67 in file "Init/Init.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;		None
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;		None
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  1    wreg      void 
  3197 ;; Registers used:
  3198 ;;		wreg, status,2
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3204 ;;      Params:         0       0       0       0
  3205 ;;      Locals:         0       0       0       0
  3206 ;;      Temps:          0       0       0       0
  3207 ;;      Totals:         0       0       0       0
  3208 ;;Total ram usage:        0 bytes
  3209 ;; Hardware stack levels used:    1
  3210 ;; Hardware stack levels required when called:    2
  3211 ;; This function calls:
  3212 ;;		Nothing
  3213 ;; This function is called by:
  3214 ;;		_main
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           	psect	text22
  3219  000922                     __ptext22:
  3220                           	opt stack 0
  3221  000922                     _InitIO:
  3222                           	opt stack 28
  3223                           
  3224                           ;Init.c: 69: LATA =0x0000;
  3225                           
  3226                           ;incstack = 0
  3227  000922  0E00               	movlw	0
  3228  000924  6E89               	movwf	3977,c	;volatile
  3229                           
  3230                           ;Init.c: 70: TRISA =0x0007;
  3231  000926  0E07               	movlw	7
  3232  000928  6E92               	movwf	3986,c	;volatile
  3233                           
  3234                           ;Init.c: 72: LATB =0x0000;
  3235  00092A  0E00               	movlw	0
  3236  00092C  6E8A               	movwf	3978,c	;volatile
  3237                           
  3238                           ;Init.c: 73: TRISB =0x0000;
  3239  00092E  0E00               	movlw	0
  3240  000930  6E93               	movwf	3987,c	;volatile
  3241                           
  3242                           ;Init.c: 75: LATC =0x0000;
  3243  000932  0E00               	movlw	0
  3244  000934  6E8B               	movwf	3979,c	;volatile
  3245                           
  3246                           ;Init.c: 76: TRISC =0x0081;
  3247  000936  0E81               	movlw	129
  3248  000938  6E94               	movwf	3988,c	;volatile
  3249  00093A  0012               	return		;funcret
  3250  00093C                     __end_of_InitIO:
  3251                           	opt stack 0
  3252                           tblptru	equ	0xFF8
  3253                           tblptrh	equ	0xFF7
  3254                           tblptrl	equ	0xFF6
  3255                           tablat	equ	0xFF5
  3256                           prodh	equ	0xFF4
  3257                           prodl	equ	0xFF3
  3258                           intcon	equ	0xFF2
  3259                           postinc0	equ	0xFEE
  3260                           wreg	equ	0xFE8
  3261                           indf1	equ	0xFE7
  3262                           postdec1	equ	0xFE5
  3263                           fsr1h	equ	0xFE2
  3264                           fsr1l	equ	0xFE1
  3265                           indf2	equ	0xFDF
  3266                           postinc2	equ	0xFDE
  3267                           postdec2	equ	0xFDD
  3268                           preinc2	equ	0xFDC
  3269                           fsr2h	equ	0xFDA
  3270                           fsr2l	equ	0xFD9
  3271                           status	equ	0xFD8
  3272                           
  3273 ;; *************** function _tc_int *****************
  3274 ;; Defined at:
  3275 ;;		line 3 in file "Interrupts/Interrupts.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;		None
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;		None
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  1    wreg      void 
  3282 ;; Registers used:
  3283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3289 ;;      Params:         0       0       0       0
  3290 ;;      Locals:         0       0       0       0
  3291 ;;      Temps:         14       0       0       0
  3292 ;;      Totals:        14       0       0       0
  3293 ;;Total ram usage:       14 bytes
  3294 ;; Hardware stack levels used:    1
  3295 ;; Hardware stack levels required when called:    1
  3296 ;; This function calls:
  3297 ;;		_PetitModBus_TimerValues
  3298 ;;		_ReceiveInterrupt
  3299 ;; This function is called by:
  3300 ;;		Interrupt level 2
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           	psect	intcode
  3305  000008                     __pintcode:
  3306                           	opt stack 0
  3307  000008                     _tc_int:
  3308                           	opt stack 24
  3309                           
  3310                           ;incstack = 0
  3311  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3312  00000A  CFFA F002          	movff	pclath,??_tc_int
  3313  00000E  CFFB F003          	movff	pclatu,??_tc_int+1
  3314  000012  CFE9 F004          	movff	fsr0l,??_tc_int+2
  3315  000016  CFEA F005          	movff	fsr0h,??_tc_int+3
  3316  00001A  CFE1 F006          	movff	fsr1l,??_tc_int+4
  3317  00001E  CFE2 F007          	movff	fsr1h,??_tc_int+5
  3318  000022  CFD9 F008          	movff	fsr2l,??_tc_int+6
  3319  000026  CFDA F009          	movff	fsr2h,??_tc_int+7
  3320  00002A  CFF3 F00A          	movff	prodl,??_tc_int+8
  3321  00002E  CFF4 F00B          	movff	prodh,??_tc_int+9
  3322  000032  CFF6 F00C          	movff	tblptrl,??_tc_int+10
  3323  000036  CFF7 F00D          	movff	tblptrh,??_tc_int+11
  3324  00003A  CFF8 F00E          	movff	tblptru,??_tc_int+12
  3325  00003E  CFF5 F00F          	movff	tablat,??_tc_int+13
  3326                           
  3327                           ;Interrupts.c: 5: if (TMR1IE && TMR1IF)
  3328  000042  B09D               	btfsc	3997,0,c	;volatile
  3329  000044  A09E               	btfss	3998,0,c	;volatile
  3330  000046  D009               	goto	i2l1601
  3331                           
  3332                           ;Interrupts.c: 6: {
  3333                           ;Interrupts.c: 7: TMR1IF =0;
  3334  000048  909E               	bcf	3998,0,c	;volatile
  3335                           
  3336                           ;Interrupts.c: 8: TMR1H =0xFD;
  3337  00004A  0EFD               	movlw	253
  3338  00004C  6ECF               	movwf	4047,c	;volatile
  3339                           
  3340                           ;Interrupts.c: 9: TMR1L =0x8F;
  3341  00004E  0E8F               	movlw	143
  3342  000050  6ECE               	movwf	4046,c	;volatile
  3343                           
  3344                           ;Interrupts.c: 11: Timer1_Tick_Counter++;
  3345  000052  4A42               	infsnz	_Timer1_Tick_Counter,f,c	;volatile
  3346  000054  2A43               	incf	_Timer1_Tick_Counter+1,f,c	;volatile
  3347                           
  3348                           ;Interrupts.c: 13: PetitModBus_TimerValues();
  3349  000056  ECDE  F004         	call	_PetitModBus_TimerValues	;wreg free
  3350  00005A                     i2l1601:
  3351                           
  3352                           ;Interrupts.c: 14: }
  3353                           ;Interrupts.c: 16: if( RCIE && RCIF)
  3354  00005A  BA9D               	btfsc	3997,5,c	;volatile
  3355  00005C  AA9E               	btfss	3998,5,c	;volatile
  3356  00005E  D004               	goto	i2l80
  3357                           
  3358                           ;Interrupts.c: 17: {
  3359                           ;Interrupts.c: 18: ReceiveInterrupt(RCREG);
  3360  000060  50AE               	movf	4014,w,c	;volatile
  3361  000062  EC50  F004         	call	_ReceiveInterrupt
  3362                           
  3363                           ;Interrupts.c: 19: RCIF=0;
  3364  000066  9A9E               	bcf	3998,5,c	;volatile
  3365  000068                     i2l80:
  3366  000068  C00F  FFF5         	movff	??_tc_int+13,tablat
  3367  00006C  C00E  FFF8         	movff	??_tc_int+12,tblptru
  3368  000070  C00D  FFF7         	movff	??_tc_int+11,tblptrh
  3369  000074  C00C  FFF6         	movff	??_tc_int+10,tblptrl
  3370  000078  C00B  FFF4         	movff	??_tc_int+9,prodh
  3371  00007C  C00A  FFF3         	movff	??_tc_int+8,prodl
  3372  000080  C009  FFDA         	movff	??_tc_int+7,fsr2h
  3373  000084  C008  FFD9         	movff	??_tc_int+6,fsr2l
  3374  000088  C007  FFE2         	movff	??_tc_int+5,fsr1h
  3375  00008C  C006  FFE1         	movff	??_tc_int+4,fsr1l
  3376  000090  C005  FFEA         	movff	??_tc_int+3,fsr0h
  3377  000094  C004  FFE9         	movff	??_tc_int+2,fsr0l
  3378  000098  C003  FFFB         	movff	??_tc_int+1,pclatu
  3379  00009C  C002  FFFA         	movff	??_tc_int,pclath
  3380  0000A0  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3381  0000A2  0011               	retfie		f
  3382  0000A4                     __end_of_tc_int:
  3383                           	opt stack 0
  3384                           pclatu	equ	0xFFB
  3385                           pclath	equ	0xFFA
  3386                           tblptru	equ	0xFF8
  3387                           tblptrh	equ	0xFF7
  3388                           tblptrl	equ	0xFF6
  3389                           tablat	equ	0xFF5
  3390                           prodh	equ	0xFF4
  3391                           prodl	equ	0xFF3
  3392                           intcon	equ	0xFF2
  3393                           postinc0	equ	0xFEE
  3394                           fsr0h	equ	0xFEA
  3395                           fsr0l	equ	0xFE9
  3396                           wreg	equ	0xFE8
  3397                           indf1	equ	0xFE7
  3398                           postdec1	equ	0xFE5
  3399                           fsr1h	equ	0xFE2
  3400                           fsr1l	equ	0xFE1
  3401                           indf2	equ	0xFDF
  3402                           postinc2	equ	0xFDE
  3403                           postdec2	equ	0xFDD
  3404                           preinc2	equ	0xFDC
  3405                           fsr2h	equ	0xFDA
  3406                           fsr2l	equ	0xFD9
  3407                           status	equ	0xFD8
  3408                           
  3409 ;; *************** function _ReceiveInterrupt *****************
  3410 ;; Defined at:
  3411 ;;		line 42 in file "PetitModbus/PetitModbusPort.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;  Data            1    wreg     unsigned char 
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;  Data            1    0[COMRAM] unsigned char 
  3416 ;; Return value:  Size  Location     Type
  3417 ;;                  1    wreg      void 
  3418 ;; Registers used:
  3419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3420 ;; Tracked objects:
  3421 ;;		On entry : 0/0
  3422 ;;		On exit  : 0/0
  3423 ;;		Unchanged: 0/0
  3424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3425 ;;      Params:         0       0       0       0
  3426 ;;      Locals:         1       0       0       0
  3427 ;;      Temps:          0       0       0       0
  3428 ;;      Totals:         1       0       0       0
  3429 ;;Total ram usage:        1 bytes
  3430 ;; Hardware stack levels used:    1
  3431 ;; This function calls:
  3432 ;;		Nothing
  3433 ;; This function is called by:
  3434 ;;		_tc_int
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           	psect	text24
  3439  0008A0                     __ptext24:
  3440                           	opt stack 0
  3441  0008A0                     _ReceiveInterrupt:
  3442                           	opt stack 24
  3443                           
  3444                           ;incstack = 0
  3445                           ;ReceiveInterrupt@Data stored from wreg
  3446  0008A0  6E01               	movwf	ReceiveInterrupt@Data,c
  3447                           
  3448                           ;PetitModbusPort.c: 44: PetitReceiveBuffer[PetitReceiveCounter] =Data;
  3449  0008A2  5044               	movf	_PetitReceiveCounter,w,c	;volatile
  3450  0008A4  0D01               	mullw	1
  3451  0008A6  0EA8               	movlw	low _PetitReceiveBuffer
  3452  0008A8  24F3               	addwf	prodl,w,c
  3453  0008AA  6ED9               	movwf	fsr2l,c
  3454  0008AC  0E00               	movlw	high _PetitReceiveBuffer
  3455  0008AE  20F4               	addwfc	prodh,w,c
  3456  0008B0  6EDA               	movwf	fsr2h,c
  3457  0008B2  C001  FFDF         	movff	ReceiveInterrupt@Data,indf2
  3458                           
  3459                           ;PetitModbusPort.c: 45: PetitReceiveCounter++;
  3460  0008B6  2A44               	incf	_PetitReceiveCounter,f,c	;volatile
  3461                           
  3462                           ;PetitModbusPort.c: 47: if(PetitReceiveCounter>(11*2 + 10))
  3463  0008B8  0E20               	movlw	32
  3464  0008BA  6444               	cpfsgt	_PetitReceiveCounter,c	;volatile
  3465  0008BC  D002               	goto	i2l247
  3466                           
  3467                           ;PetitModbusPort.c: 48: PetitReceiveCounter=0;
  3468  0008BE  0E00               	movlw	0
  3469  0008C0  6E44               	movwf	_PetitReceiveCounter,c	;volatile
  3470  0008C2                     i2l247:
  3471                           
  3472                           ;PetitModbusPort.c: 50: PetitModbusTimerValue=0;
  3473  0008C2  0E00               	movlw	0
  3474  0008C4  6E3D               	movwf	_PetitModbusTimerValue+1,c	;volatile
  3475  0008C6  0E00               	movlw	0
  3476  0008C8  6E3C               	movwf	_PetitModbusTimerValue,c	;volatile
  3477  0008CA  0012               	return		;funcret
  3478  0008CC                     __end_of_ReceiveInterrupt:
  3479                           	opt stack 0
  3480                           pclatu	equ	0xFFB
  3481                           pclath	equ	0xFFA
  3482                           tblptru	equ	0xFF8
  3483                           tblptrh	equ	0xFF7
  3484                           tblptrl	equ	0xFF6
  3485                           tablat	equ	0xFF5
  3486                           prodh	equ	0xFF4
  3487                           prodl	equ	0xFF3
  3488                           intcon	equ	0xFF2
  3489                           postinc0	equ	0xFEE
  3490                           fsr0h	equ	0xFEA
  3491                           fsr0l	equ	0xFE9
  3492                           wreg	equ	0xFE8
  3493                           indf1	equ	0xFE7
  3494                           postdec1	equ	0xFE5
  3495                           fsr1h	equ	0xFE2
  3496                           fsr1l	equ	0xFE1
  3497                           indf2	equ	0xFDF
  3498                           postinc2	equ	0xFDE
  3499                           postdec2	equ	0xFDD
  3500                           preinc2	equ	0xFDC
  3501                           fsr2h	equ	0xFDA
  3502                           fsr2l	equ	0xFD9
  3503                           status	equ	0xFD8
  3504                           
  3505 ;; *************** function _PetitModBus_TimerValues *****************
  3506 ;; Defined at:
  3507 ;;		line 54 in file "PetitModbus/PetitModbusPort.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;		None
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;		None
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  1    wreg      void 
  3514 ;; Registers used:
  3515 ;;		status,2, status,0
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3521 ;;      Params:         0       0       0       0
  3522 ;;      Locals:         0       0       0       0
  3523 ;;      Temps:          0       0       0       0
  3524 ;;      Totals:         0       0       0       0
  3525 ;;Total ram usage:        0 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; This function calls:
  3528 ;;		Nothing
  3529 ;; This function is called by:
  3530 ;;		_tc_int
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534                           	psect	text25
  3535  0009BC                     __ptext25:
  3536                           	opt stack 0
  3537  0009BC                     _PetitModBus_TimerValues:
  3538                           	opt stack 24
  3539                           
  3540                           ;PetitModbusPort.c: 56: PetitModbusTimerValue++;
  3541                           
  3542                           ;incstack = 0
  3543  0009BC  4A3C               	infsnz	_PetitModbusTimerValue,f,c	;volatile
  3544  0009BE  2A3D               	incf	_PetitModbusTimerValue+1,f,c	;volatile
  3545  0009C0  0012               	return		;funcret
  3546  0009C2                     __end_of_PetitModBus_TimerValues:
  3547                           	opt stack 0
  3548  0000                     pclatu	equ	0xFFB
  3549                           pclath	equ	0xFFA
  3550                           tblptru	equ	0xFF8
  3551                           tblptrh	equ	0xFF7
  3552                           tblptrl	equ	0xFF6
  3553                           tablat	equ	0xFF5
  3554                           prodh	equ	0xFF4
  3555                           prodl	equ	0xFF3
  3556                           intcon	equ	0xFF2
  3557                           postinc0	equ	0xFEE
  3558                           fsr0h	equ	0xFEA
  3559                           fsr0l	equ	0xFE9
  3560                           wreg	equ	0xFE8
  3561                           indf1	equ	0xFE7
  3562                           postdec1	equ	0xFE5
  3563                           fsr1h	equ	0xFE2
  3564                           fsr1l	equ	0xFE1
  3565                           indf2	equ	0xFDF
  3566                           postinc2	equ	0xFDE
  3567                           postdec2	equ	0xFDD
  3568                           preinc2	equ	0xFDC
  3569                           fsr2h	equ	0xFDA
  3570                           fsr2l	equ	0xFD9
  3571                           status	equ	0xFD8
  3572                           pclatu	equ	0xFFB
  3573                           pclath	equ	0xFFA
  3574                           tblptru	equ	0xFF8
  3575                           tblptrh	equ	0xFF7
  3576                           tblptrl	equ	0xFF6
  3577                           tablat	equ	0xFF5
  3578                           prodh	equ	0xFF4
  3579                           prodl	equ	0xFF3
  3580                           intcon	equ	0xFF2
  3581                           postinc0	equ	0xFEE
  3582                           fsr0h	equ	0xFEA
  3583                           fsr0l	equ	0xFE9
  3584                           wreg	equ	0xFE8
  3585                           indf1	equ	0xFE7
  3586                           postdec1	equ	0xFE5
  3587                           fsr1h	equ	0xFE2
  3588                           fsr1l	equ	0xFE1
  3589                           indf2	equ	0xFDF
  3590                           postinc2	equ	0xFDE
  3591                           postdec2	equ	0xFDD
  3592                           preinc2	equ	0xFDC
  3593                           fsr2h	equ	0xFDA
  3594                           fsr2l	equ	0xFD9
  3595                           status	equ	0xFD8
  3596                           
  3597                           	psect	rparam
  3598  0000                     pclatu	equ	0xFFB
  3599                           pclath	equ	0xFFA
  3600                           tblptru	equ	0xFF8
  3601                           tblptrh	equ	0xFF7
  3602                           tblptrl	equ	0xFF6
  3603                           tablat	equ	0xFF5
  3604                           prodh	equ	0xFF4
  3605                           prodl	equ	0xFF3
  3606                           intcon	equ	0xFF2
  3607                           postinc0	equ	0xFEE
  3608                           fsr0h	equ	0xFEA
  3609                           fsr0l	equ	0xFE9
  3610                           wreg	equ	0xFE8
  3611                           indf1	equ	0xFE7
  3612                           postdec1	equ	0xFE5
  3613                           fsr1h	equ	0xFE2
  3614                           fsr1l	equ	0xFE1
  3615                           indf2	equ	0xFDF
  3616                           postinc2	equ	0xFDE
  3617                           postdec2	equ	0xFDD
  3618                           preinc2	equ	0xFDC
  3619                           fsr2h	equ	0xFDA
  3620                           fsr2l	equ	0xFD9
  3621                           status	equ	0xFD8
  3622                           
  3623                           	psect	temp
  3624  00004D                     btemp:
  3625                           	opt stack 0
  3626  00004D                     	ds	1
  3627  0000                     int$flags	set	btemp
  3628                           pclatu	equ	0xFFB
  3629                           pclath	equ	0xFFA
  3630                           tblptru	equ	0xFF8
  3631                           tblptrh	equ	0xFF7
  3632                           tblptrl	equ	0xFF6
  3633                           tablat	equ	0xFF5
  3634                           prodh	equ	0xFF4
  3635                           prodl	equ	0xFF3
  3636                           intcon	equ	0xFF2
  3637                           postinc0	equ	0xFEE
  3638                           fsr0h	equ	0xFEA
  3639                           fsr0l	equ	0xFE9
  3640                           wreg	equ	0xFE8
  3641                           indf1	equ	0xFE7
  3642                           postdec1	equ	0xFE5
  3643                           fsr1h	equ	0xFE2
  3644                           fsr1l	equ	0xFE1
  3645                           indf2	equ	0xFDF
  3646                           postinc2	equ	0xFDE
  3647                           postdec2	equ	0xFDD
  3648                           preinc2	equ	0xFDC
  3649                           fsr2h	equ	0xFDA
  3650                           fsr2l	equ	0xFD9
  3651                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         170
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      76
    BANK0           160      0     136
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    PetitModBus_UART_String@s	PTR unsigned char  size(2) Largest target is 32
		 -> Petit_Tx_Buf(BANK0[32]), 

    Petit_CRC16@CRC	PTR unsigned int  size(2) Largest target is 2
		 -> Petit_Tx_CRC16(COMRAM[2]), Petit_Rx_CRC16(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _ProcessPetitModbus->_Petit_RxRTU
    _Petit_TxRTU->_Petit_CRC16
    _Petit_DoSlaveTX->_PetitModBus_UART_String
    _PetitModBus_UART_String->_PetitModBus_UART_Putch
    _Petit_RxRTU->_Petit_CRC16
    _HandlePetitModbusWriteSingleRegister->_HandlePetitModbusError
    _HandlePetitModbusReadHoldingRegisters->_HandlePetitModbusError
    _HandleMPetitodbusWriteMultipleRegisters->_HandlePetitModbusError

Critical Paths under _tc_int in COMRAM

    _tc_int->_ReceiveInterrupt

Critical Paths under _main in BANK0

    None.

Critical Paths under _tc_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2229
                                             35 COMRAM     2     2      0
                             _InitIO
                            _InitOSC
                    _InitPetitModbus
                 _ProcessPetitModbus
 ---------------------------------------------------------------------------------
 (1) _ProcessPetitModbus                                   0     0      0    2214
_HandleMPetitodbusWriteMultipleRegis
             _HandlePetitModbusError
_HandlePetitModbusReadHoldingRegiste
_HandlePetitModbusWriteSingleRegiste
              _Petit_RxDataAvailable
                        _Petit_RxRTU
                        _Petit_TxRTU
 ---------------------------------------------------------------------------------
 (2) _Petit_TxRTU                                          0     0      0     824
                        _Petit_CRC16
                    _Petit_DoSlaveTX
 ---------------------------------------------------------------------------------
 (3) _Petit_DoSlaveTX                                      0     0      0     240
            _PetitModBus_UART_String
 ---------------------------------------------------------------------------------
 (4) _PetitModBus_UART_String                              6     2      4     240
                                             16 COMRAM     6     2      4
             _PetitModBus_UART_Putch
 ---------------------------------------------------------------------------------
 (5) _PetitModBus_UART_Putch                               1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Petit_RxRTU                                          9     9      0     725
                                             26 COMRAM     9     9      0
     _CheckPetitModbusBufferComplete
                        _Petit_CRC16
               _Petit_CheckRxTimeout
 ---------------------------------------------------------------------------------
 (3) _Petit_CheckRxTimeout                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Petit_CRC16                                         11     9      2     584
                                             15 COMRAM    11     9      2
 ---------------------------------------------------------------------------------
 (3) _CheckPetitModbusBufferComplete                       4     4      0      25
                                             15 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _Petit_RxDataAvailable                                1     1      0      23
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _HandlePetitModbusWriteSingleRegister                 7     7      0     183
                                             16 COMRAM     7     7      0
             _HandlePetitModbusError
                   _PetitSendMessage
 ---------------------------------------------------------------------------------
 (2) _HandlePetitModbusReadHoldingRegisters               10    10      0     206
                                             16 COMRAM    10    10      0
             _HandlePetitModbusError
                   _PetitSendMessage
 ---------------------------------------------------------------------------------
 (2) _HandleMPetitodbusWriteMultipleRegisters             16    16      0     231
                                             16 COMRAM    16    16      0
             _HandlePetitModbusError
                   _PetitSendMessage
 ---------------------------------------------------------------------------------
 (3) _HandlePetitModbusError                               1     1      0      22
                                             15 COMRAM     1     1      0
                   _PetitSendMessage
 ---------------------------------------------------------------------------------
 (3) _PetitSendMessage                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitPetitModbus                                      1     1      0      15
                                             15 COMRAM     1     1      0
       _PetitModBus_TIMER_Initialise
        _PetitModBus_UART_Initialise
 ---------------------------------------------------------------------------------
 (2) _PetitModBus_UART_Initialise                          0     0      0       0
                           _InitUART
 ---------------------------------------------------------------------------------
 (3) _InitUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PetitModBus_TIMER_Initialise                         0     0      0       0
                           _InitTMR1
 ---------------------------------------------------------------------------------
 (3) _InitTMR1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitOSC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitIO                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tc_int                                              14    14      0      22
                                              1 COMRAM    14    14      0
            _PetitModBus_TimerValues
                   _ReceiveInterrupt
 ---------------------------------------------------------------------------------
 (7) _ReceiveInterrupt                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _PetitModBus_TimerValues                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitIO
   _InitOSC
   _InitPetitModbus
     _PetitModBus_TIMER_Initialise
       _InitTMR1
     _PetitModBus_UART_Initialise
       _InitUART
   _ProcessPetitModbus
     _HandleMPetitodbusWriteMultipleRegisters
       _HandlePetitModbusError
         _PetitSendMessage
       _PetitSendMessage
     _HandlePetitModbusError
       _PetitSendMessage
     _HandlePetitModbusReadHoldingRegisters
       _HandlePetitModbusError
         _PetitSendMessage
       _PetitSendMessage
     _HandlePetitModbusWriteSingleRegister
       _HandlePetitModbusError
         _PetitSendMessage
       _PetitSendMessage
     _Petit_RxDataAvailable
     _Petit_RxRTU
       _CheckPetitModbusBufferComplete
       _Petit_CRC16
       _Petit_CheckRxTimeout
     _Petit_TxRTU
       _Petit_CRC16
       _Petit_DoSlaveTX
         _PetitModBus_UART_String
           _PetitModBus_UART_Putch

 _tc_int (ROOT)
   _PetitModBus_TimerValues
   _ReceiveInterrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      88       5       85.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      4C       1       80.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D4       3        0.0%
DATA                 0      0      D4      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Tue Mar 06 22:07:07 2018

                                          ??_ProcessPetitModbus 0024  
                                                   __CFG_CP0$ON 000000  
                                                   __CFG_CP1$ON 000000  
                                                   __CFG_CP2$ON 000000  
                                                   __CFG_CP3$ON 000000  
                                                            l43 09AA  
                                                   __CFG_CPB$ON 000000  
                                                   __CFG_CPD$ON 000000  
                                                           l235 0990  
                                                           l190 01EA  
                                                           _GIE 007F97  
                                                           u500 0914  
                                                           u620 0368  
                                                           u640 06D4  
                                                           u720 014E  
                                                           u670 024C  
                                                           u840 059E  
                                                           u848 05A0  
                                                           prod 000FF3  
                                                           wreg 000FE8  
                                                  __CFG_IESO$ON 000000  
HandleMPetitodbusWriteMultipleRegisters@Petit_NumberOfRegisters 001E  
  HandlePetitModbusReadHoldingRegisters@Petit_NumberOfRegisters 0017  
                                                  __CFG_LVP$OFF 000000  
                                                          l1401 0370  
                                                          l1405 0394  
                                                          l1413 0404  
                                                          l1317 07C0  
                                                          l1309 0768  
                                                          l1501 0132  
                                                          l1319 07D0  
                                                          l1511 015E  
                                                          l1433 0702  
                                                          l1425 06DC  
                                                          l1361 0622  
                                                          l1363 062C  
                                                          l1515 017E  
                                                          l1291 087C  
                                                          l1461 027E  
                                                          l1429 06FA  
                                                          l1381 0660  
                                                          l1439 072A  
                                                          l1391 067C  
                                                          l1367 0640  
                                                          l1375 0658  
                                                          l1295 0892  
                                                          l1465 0300  
                                                          l1449 0254  
                                                          l1369 0650  
                                                          l1385 0664  
                                                          l1537 0474  
                                                          l1545 04B2  
                                                          l1617 050E  
                                                          l1491 00F6  
                                                          l1581 0806  
                                                          l1637 05C6  
                                                          l1583 080C  
                                                          l1497 0122  
                                                          l1577 07FA  
                                                          l1579 0800  
                                                          l1587 0814  
                                                          _LATA 000F89  
                                                          _LATB 000F8A  
                                                          _LATC 000F8B  
                                                          _PEIE 007F96  
                                                          _RCIE 007CED  
                                                          _RCIF 007CF5  
                                                          i2l80 0068  
                                                          _TRMT 007D61  
                                                  __CFG_WRT0$ON 000000  
                                                  __CFG_WRT1$ON 000000  
                                                  __CFG_WRT2$ON 000000  
                                                  __CFG_WRT3$ON 000000  
                                                 __CFG_EBTR0$ON 000000  
                                                 __CFG_FCMEN$ON 000000  
                                                 __CFG_EBTR1$ON 000000  
                                                 __CFG_EBTR2$ON 000000  
                                                 __CFG_EBTR3$ON 000000  
                                                  __CFG_WRTB$ON 000000  
                                                  __CFG_WRTC$ON 000000  
                                                  __CFG_WRTD$ON 000000  
                                                 __CFG_EBTRB$ON 000000  
                                                          _main 04F4  
                                                          fsr0h 000FEA  
                                                          fsr1h 000FE2  
                                                          fsr0l 000FE9  
                                                          fsr2h 000FDA  
                                                          indf1 000FE7  
                                                          fsr1l 000FE1  
                                                          indf2 000FDF  
                                                          fsr2l 000FD9  
                                                          btemp 004D  
                                                          pclat 000FFA  
                                                 __CFG_BOREN$ON 000000  
                                        _PetitModBus_UART_Putch 098E  
                                                          prodh 000FF4  
                                                          prodl 000FF3  
                                                          start 00A4  
                                             ??_InitPetitModbus 0010  
                                                 __CFG_MCLRE$ON 000000  
                                       ??_Petit_RxDataAvailable 0010  
                                                  ___param_bank 000010  
                                               __end_of_InitOSC 09B0  
        HandleMPetitodbusWriteMultipleRegisters@Petit_ByteCount 0019  
                                                         ?_main 0001  
                                                         i2l247 08C2  
                                                         _RCREG 000FAE  
                                                         _RCSTA 000FAB  
                                                         _TMR1H 000FCF  
                                                         _TMR1L 000FCE  
                                                         _SPBRG 000FAF  
                                                 __CFG_WINEN$ON 000000  
                                                         _TRISA 000F92  
                                                         _TRISB 000F93  
                                                         _TRISC 000F94  
                                                         _TXREG 000FAD  
                                                         _TXSTA 000FAC  
                                                Petit_CRC16@CRC 0010  
                                                         tablat 000FF5  
                                      ?_PetitModBus_TimerValues 0001  
                                       _PetitModBus_UART_String 0872  
                                                         status 000FD8  
                                              _ReceiveInterrupt 08A0  
                                             _Petit_Tx_Buf_Size 003E  
                                               __initialization 082C  
                                                __CFG_HPOL$HIGH 000000  
                                                  __end_of_main 05D0  
                                              __end_of_InitUART 096A  
                                              __end_of_InitTMR1 0954  
       HandlePetitModbusReadHoldingRegisters@Petit_StartAddress 0015  
                                                 ??_Petit_CRC16 0012  
                                                __CFG_OSC$HSPLL 000000  
                                                __CFG_LPOL$HIGH 000000  
                                                        ??_main 0024  
                                  __end_of_Petit_CheckRxTimeout 0922  
                                                 __activetblptr 000002  
                                                 ??_Petit_RxRTU 001B  
                                                 ??_Petit_TxRTU 001B  
                                                        i2l1601 005A  
                                                __CFG_WDTEN$OFF 000000  
                                                        _TMR1IE 007CE8  
                                                        _TMR1IF 007CF0  
                                                        _TRISC6 007CA6  
                                                        _TRISC7 007CA7  
                                                     ??_InitOSC 0010  
                                                        _InitIO 0922  
                                                __CFG_PWRTEN$ON 000000  
               HandlePetitModbusWriteSingleRegister@Petit_Value 0013  
                                                __CFG_STVREN$ON 000000  
                                                        clear_0 0832  
                                                        clear_1 083E  
                                                        _tc_int 0008  
     HandleMPetitodbusWriteMultipleRegisters@Petit_StartAddress 001C  
                                               Petit_CRC16@Data 0018  
                                                  __pdataCOMRAM 0048  
                                           __end_of_Petit_CRC16 07D8  
                         Petit_RxRTU@Petit_ReceiveBufferControl 0022  
                                                        preinc2 000FDC  
                                                        tblptrh 000FF7  
                                                        tblptrl 000FF6  
                                                        tblptru 000FF8  
                               HandlePetitModbusError@ErrorCode 0010  
                               __end_of_PetitModBus_TimerValues 09C2  
                                     ??_PetitModBus_UART_String 0015  
                                           __end_of_Petit_RxRTU 01F0  
                                           __end_of_Petit_TxRTU 04F4  
                                  ?_PetitModBus_UART_Initialise 0001  
                                       ?_HandlePetitModbusError 0001  
                                                    __accesstop 0060  
                                       __end_of__initialization 0864  
                                                 ___rparam_used 000001  
                                                __pcstackCOMRAM 0001  
                                     __size_of_PetitSendMessage 0014  
                   HandlePetitModbusWriteSingleRegister@Petit_i 0017  
                                __end_of_HandlePetitModbusError 0908  
                                               _InitPetitModbus 097E  
                                      __size_of_Petit_DoSlaveTX 001E  
                                                    __pbssBANK0 0060  
                                       ?_PetitModBus_UART_Putch 0001  
                                                     ?_InitUART 0001  
                                                     ?_InitTMR1 0001  
                                 ??_PetitModBus_UART_Initialise 0010  
                           PetitModBus_UART_String@DummyCounter 0015  
                                          _Petit_CheckRxTimeout 0908  
                                                       ?_InitIO 0001  
                                __size_of_Petit_RxDataAvailable 000C  
                                 __end_of_Petit_RxDataAvailable 09A6  
                  HandlePetitModbusReadHoldingRegisters@Petit_i 0019  
                                               __CFG_WDPS$32768 000000  
                                   __size_of_ProcessPetitModbus 0054  
                                                       ?_tc_int 0001  
                                                   _Petit_CRC16 0730  
                                      __end_of_ReceiveInterrupt 08CC  
                                                   _Petit_RxRTU 00A8  
                                                   _Petit_TxRTU 0416  
                                __end_of_PetitModBus_UART_Putch 099A  
                                                    ??_InitUART 0010  
                                                    ??_InitTMR1 0010  
                                               __CFG_PWMPIN$OFF 000000  
        HandlePetitModbusReadHoldingRegisters@Petit_CurrentData 0013  
                                         ?_Petit_CheckRxTimeout 0001  
                                                       _InitOSC 09A6  
                                                       __Hparam 0000  
                                               __size_of_InitIO 001A  
                                                       __Lparam 0000  
                              __size_of_PetitModBus_TimerValues 0006  
                                                       __pcinit 082C  
                                                       __ramtop 0300  
                                               __size_of_tc_int 009C  
                                                       __ptext0 04F4  
                                                       __ptext1 07D8  
                                                       __ptext2 0416  
                                                       __ptext3 08CC  
                                                       __ptext4 0872  
                                                       __ptext5 098E  
                                                       __ptext6 00A8  
                                                       __ptext7 0908  
                                                       __ptext8 0730  
                                                       __ptext9 05D0  
                                       __end_of_InitPetitModbus 098E  
                                                     _T1CONbits 000FCD  
                                                 _Petit_Rx_Data 0060  
                                          end_of_initialization 0864  
                                                 _Petit_Tx_Data 0084  
                                                 __Lmediumconst 0000  
                                             ??_Petit_DoSlaveTX 0017  
                                   Petit_RxDataAvailable@Result 0010  
                                                       postdec1 000FE5  
                                                       postdec2 000FDD  
                                                       postinc0 000FEE  
                                                       postinc2 000FDE  
                                              _PetitSendMessage 096A  
                                                     _PORTCbits 000F82  
                                          ReceiveInterrupt@Data 0001  
            HandleMPetitodbusWriteMultipleRegisters@Petit_Value 001A  
                HandleMPetitodbusWriteMultipleRegisters@Petit_i 0020  
                                        ??_Petit_CheckRxTimeout 0010  
               __end_of_HandleMPetitodbusWriteMultipleRegisters 0318  
              __size_of_HandleMPetitodbusWriteMultipleRegisters 0128  
                     ??_HandleMPetitodbusWriteMultipleRegisters 0011  
                      ?_HandleMPetitodbusWriteMultipleRegisters 0001  
                       _HandleMPetitodbusWriteMultipleRegisters 01F0  
                                              __CFG_T1OSCMX$OFF 000000  
                                                  Petit_CRC16@i 0019  
                                                __end_of_InitIO 093C  
                                 PetitModBus_UART_String@Length 0013  
                                                 __pidataCOMRAM 09C2  
                                                __end_of_tc_int 00A4  
                                              ?_InitPetitModbus 0001  
                                           start_initialization 082C  
                          __end_of_PetitModBus_TIMER_Initialise 09BC  
                         __size_of_PetitModBus_TIMER_Initialise 0006  
                                  _PetitModBus_TIMER_Initialise 09B6  
                                              _Petit_Tx_Current 0040  
                        InitPetitModbus@PetitModbusSlaveAddress 0010  
                                             __size_of_InitUART 0016  
                                             __size_of_InitTMR1 0018  
                                      PetitModBus_UART_String@s 0011  
                                                      ??_InitIO 0010  
                                     _PETITMODBUS_SLAVE_ADDRESS 0048  
                                       _PetitModBus_TimerValues 09BC  
                                                  ?_Petit_CRC16 0010  
                                                      ??_tc_int 0002  
                        __end_of_CheckPetitModbusBufferComplete 0680  
                       __size_of_CheckPetitModbusBufferComplete 00B0  
                                _CheckPetitModbusBufferComplete 05D0  
                                                  ?_Petit_RxRTU 0001  
                                                  ?_Petit_TxRTU 0001  
                                             ?_ReceiveInterrupt 0001  
                                      ?_PetitModBus_UART_String 0011  
                                                   __pbssCOMRAM 0026  
                                           _PetitReceiveCounter 0044  
                                            ??_ReceiveInterrupt 0001  
                                 ?_PetitModBus_TIMER_Initialise 0001  
                                                      ?_InitOSC 0001  
                                    __end_of_ProcessPetitModbus 082C  
                                                     __pintcode 0008  
                                         _Petit_RxDataAvailable 099A  
                                               _Petit_DoSlaveTX 08CC  
                           __end_of_PetitModBus_UART_Initialise 09B6  
                                   _PetitModBus_UART_Initialise 09B0  
                                       _Petit_Rx_Data_Available 0045  
                                      __end_of_PetitSendMessage 097E  
                                                      _LATCbits 000F8B  
                                                  _Petit_Tx_Buf 00C8  
                                     ??_PetitModBus_TimerValues 0001  
                               __end_of_PetitModBus_UART_String 08A0  
                                            Petit_RxRTU@Petit_i 0023  
                                      ??_HandlePetitModbusError 0010  
                  __end_of_HandlePetitModbusWriteSingleRegister 0730  
                 __size_of_HandlePetitModbusWriteSingleRegister 00B0  
                        ??_HandlePetitModbusWriteSingleRegister 0011  
                         ?_HandlePetitModbusWriteSingleRegister 0001  
                          _HandlePetitModbusWriteSingleRegister 0680  
                                                     copy_data0 0858  
                                                      _InitUART 0954  
                                                      _InitTMR1 093C  
                                ??_PetitModBus_TIMER_Initialise 0010  
                                       PetitModBus_UART_Putch@c 0010  
                                              __size_of_InitOSC 000A  
                                                      __Hrparam 0000  
                                                      __Lrparam 0000  
                                        ?_Petit_RxDataAvailable 0001  
                                            _PetitReceiveBuffer 00A8  
                                         _PetitModbusTimerValue 003C  
                                       __end_of_Petit_DoSlaveTX 08EA  
                                          __size_of_Petit_CRC16 00A8  
                                      ??_PetitModBus_UART_Putch 0010  
                                          __size_of_Petit_RxRTU 0148  
                                          __size_of_Petit_TxRTU 00DE  
                                                      __ptext10 099A  
                                                      __ptext11 0680  
                                                      __ptext20 093C  
                                                      __ptext12 0318  
                                                      __ptext21 09A6  
                                                      __ptext13 01F0  
                                                      __ptext22 0922  
                                                      __ptext14 08EA  
                                                      __ptext15 096A  
                                                      __ptext24 08A0  
                                                      __ptext16 097E  
                                                      __ptext25 09BC  
                                                      __ptext17 09B0  
                                                      __ptext18 0954  
                                                      __ptext19 09B6  
                                                 __size_of_main 00DC  
                                 __size_of_Petit_CheckRxTimeout 001A  
                                                      int$flags 004D  
                                                _PetitRegisters 0026  
                                                _Petit_Rx_CRC16 0049  
                                                _Petit_Tx_CRC16 004B  
                                                _Petit_Rx_State 0046  
                               __size_of_HandlePetitModbusError 001E  
                                                _Petit_Tx_State 0047  
                 __end_of_HandlePetitModbusReadHoldingRegisters 0416  
                __size_of_HandlePetitModbusReadHoldingRegisters 00FE  
                       ??_HandlePetitModbusReadHoldingRegisters 0011  
                        ?_HandlePetitModbusReadHoldingRegisters 0001  
                         _HandlePetitModbusReadHoldingRegisters 0318  
                                      __size_of_InitPetitModbus 0010  
                                                      intlevel2 0000  
                              ??_CheckPetitModbusBufferComplete 0010  
                               ?_CheckPetitModbusBufferComplete 0001  
                                           _Timer1_Tick_Counter 0042  
                              __size_of_PetitModBus_UART_String 002E  
                                     __size_of_ReceiveInterrupt 002C  
                                                    _OSCCONbits 000FD3  
                                              ?_Petit_DoSlaveTX 0001  
                                            _ProcessPetitModbus 07D8  
                               __size_of_PetitModBus_UART_Putch 000C  
             HandlePetitModbusWriteSingleRegister@Petit_Address 0015  
       CheckPetitModbusBufferComplete@PetitExpectedReceiveCount 0012  
                                           ?_ProcessPetitModbus 0001  
                                             ?_PetitSendMessage 0001  
                                        _HandlePetitModbusError 08EA  
                                            ??_PetitSendMessage 0010  
                          __size_of_PetitModBus_UART_Initialise 0006  
