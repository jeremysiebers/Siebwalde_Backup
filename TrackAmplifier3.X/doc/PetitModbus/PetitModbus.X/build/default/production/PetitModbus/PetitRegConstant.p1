Version 3.2 HI-TECH Software Intermediate Code
"29 PetitModbus/PetitModbus.h
[s S1 `s 1 ]
[n S1 . ActValue ]
[; ;PetitModbus.h: 27: extern unsigned char PETITMODBUS_SLAVE_ADDRESS;
[; ;PetitModbus.h: 29: typedef struct{
[; ;PetitModbus.h: 30: short ActValue;
[; ;PetitModbus.h: 31: }PetitRegStructure;
[; ;PetitModbus.h: 33: extern PetitRegStructure PetitRegisters[11];
[; ;PetitModbus.h: 34: extern volatile unsigned short PetitModbusTimerValue;
[; ;PetitModbus.h: 37: extern void InitPetitModbus(unsigned char PetitModbusSlaveAddress);
[; ;PetitModbus.h: 38: extern void ProcessPetitModbus(void);
[; ;PetitModbusPort.h: 19: extern volatile unsigned char PetitReceiveBuffer[(11*2 + 10)];
[; ;PetitModbusPort.h: 20: extern volatile unsigned char PetitReceiveCounter;
[; ;PetitModbusPort.h: 22: extern void PetitModBus_UART_Initialise(void);
[; ;PetitModbusPort.h: 23: extern void PetitModBus_TIMER_Initialise(void);
[; ;PetitModbusPort.h: 24: extern void PetitModBus_UART_Putch(unsigned char c);
[; ;PetitModbusPort.h: 25: extern unsigned char PetitModBus_UART_String(unsigned char *s, unsigned int Length);
[; ;PetitModbusPort.h: 27: extern void ReceiveInterrupt(unsigned char Data);
[; ;PetitModbusPort.h: 28: extern void PetitModBus_TimerValues(void);
"6 PetitModbus/PetitRegConstant.c
[v _PetitRegisters `S1 ~T0 @X0 -> 11 `i e ]
[; ;PetitRegConstant.c: 6: PetitRegStructure PetitRegisters [11];
