

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Mar 20 14:51:51 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F767
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 1.45
    50                           ; Generated 16/11/2017 GMT
    51                           ; 
    52                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F767 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  000E                     	;# 
    98  000F                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0014                     	;# 
   104  0015                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  0081                     	;# 
   118  0085                     	;# 
   119  0086                     	;# 
   120  0087                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  008F                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0095                     	;# 
   131  0095                     	;# 
   132  0096                     	;# 
   133  0097                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009B                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  009F                     	;# 
   141  0105                     	;# 
   142  0109                     	;# 
   143  010C                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  018C                     	;# 
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  0006                     	;# 
   155  0007                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  000E                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0014                     	;# 
   169  0015                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  001D                     	;# 
   180  001E                     	;# 
   181  001F                     	;# 
   182  0081                     	;# 
   183  0085                     	;# 
   184  0086                     	;# 
   185  0087                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  018C                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  018C                     	;# 
   278  0000                     	;# 
   279  0001                     	;# 
   280  0002                     	;# 
   281  0003                     	;# 
   282  0004                     	;# 
   283  0005                     	;# 
   284  0006                     	;# 
   285  0007                     	;# 
   286  0009                     	;# 
   287  000A                     	;# 
   288  000B                     	;# 
   289  000C                     	;# 
   290  000D                     	;# 
   291  000E                     	;# 
   292  000E                     	;# 
   293  000F                     	;# 
   294  0010                     	;# 
   295  0011                     	;# 
   296  0012                     	;# 
   297  0013                     	;# 
   298  0014                     	;# 
   299  0015                     	;# 
   300  0015                     	;# 
   301  0016                     	;# 
   302  0017                     	;# 
   303  0018                     	;# 
   304  0019                     	;# 
   305  001A                     	;# 
   306  001B                     	;# 
   307  001B                     	;# 
   308  001C                     	;# 
   309  001D                     	;# 
   310  001E                     	;# 
   311  001F                     	;# 
   312  0081                     	;# 
   313  0085                     	;# 
   314  0086                     	;# 
   315  0087                     	;# 
   316  008C                     	;# 
   317  008D                     	;# 
   318  008E                     	;# 
   319  008F                     	;# 
   320  0090                     	;# 
   321  0091                     	;# 
   322  0092                     	;# 
   323  0093                     	;# 
   324  0094                     	;# 
   325  0095                     	;# 
   326  0095                     	;# 
   327  0096                     	;# 
   328  0097                     	;# 
   329  0098                     	;# 
   330  0099                     	;# 
   331  009B                     	;# 
   332  009C                     	;# 
   333  009D                     	;# 
   334  009E                     	;# 
   335  009F                     	;# 
   336  0105                     	;# 
   337  0109                     	;# 
   338  010C                     	;# 
   339  010D                     	;# 
   340  010E                     	;# 
   341  010F                     	;# 
   342  018C                     	;# 
   343  0000                     	;# 
   344  0001                     	;# 
   345  0002                     	;# 
   346  0003                     	;# 
   347  0004                     	;# 
   348  0005                     	;# 
   349  0006                     	;# 
   350  0007                     	;# 
   351  0009                     	;# 
   352  000A                     	;# 
   353  000B                     	;# 
   354  000C                     	;# 
   355  000D                     	;# 
   356  000E                     	;# 
   357  000E                     	;# 
   358  000F                     	;# 
   359  0010                     	;# 
   360  0011                     	;# 
   361  0012                     	;# 
   362  0013                     	;# 
   363  0014                     	;# 
   364  0015                     	;# 
   365  0015                     	;# 
   366  0016                     	;# 
   367  0017                     	;# 
   368  0018                     	;# 
   369  0019                     	;# 
   370  001A                     	;# 
   371  001B                     	;# 
   372  001B                     	;# 
   373  001C                     	;# 
   374  001D                     	;# 
   375  001E                     	;# 
   376  001F                     	;# 
   377  0081                     	;# 
   378  0085                     	;# 
   379  0086                     	;# 
   380  0087                     	;# 
   381  008C                     	;# 
   382  008D                     	;# 
   383  008E                     	;# 
   384  008F                     	;# 
   385  0090                     	;# 
   386  0091                     	;# 
   387  0092                     	;# 
   388  0093                     	;# 
   389  0094                     	;# 
   390  0095                     	;# 
   391  0095                     	;# 
   392  0096                     	;# 
   393  0097                     	;# 
   394  0098                     	;# 
   395  0099                     	;# 
   396  009B                     	;# 
   397  009C                     	;# 
   398  009D                     	;# 
   399  009E                     	;# 
   400  009F                     	;# 
   401  0105                     	;# 
   402  0109                     	;# 
   403  010C                     	;# 
   404  010D                     	;# 
   405  010E                     	;# 
   406  010F                     	;# 
   407  018C                     	;# 
   408  0000                     	;# 
   409  0001                     	;# 
   410  0002                     	;# 
   411  0003                     	;# 
   412  0004                     	;# 
   413  0005                     	;# 
   414  0006                     	;# 
   415  0007                     	;# 
   416  0009                     	;# 
   417  000A                     	;# 
   418  000B                     	;# 
   419  000C                     	;# 
   420  000D                     	;# 
   421  000E                     	;# 
   422  000E                     	;# 
   423  000F                     	;# 
   424  0010                     	;# 
   425  0011                     	;# 
   426  0012                     	;# 
   427  0013                     	;# 
   428  0014                     	;# 
   429  0015                     	;# 
   430  0015                     	;# 
   431  0016                     	;# 
   432  0017                     	;# 
   433  0018                     	;# 
   434  0019                     	;# 
   435  001A                     	;# 
   436  001B                     	;# 
   437  001B                     	;# 
   438  001C                     	;# 
   439  001D                     	;# 
   440  001E                     	;# 
   441  001F                     	;# 
   442  0081                     	;# 
   443  0085                     	;# 
   444  0086                     	;# 
   445  0087                     	;# 
   446  008C                     	;# 
   447  008D                     	;# 
   448  008E                     	;# 
   449  008F                     	;# 
   450  0090                     	;# 
   451  0091                     	;# 
   452  0092                     	;# 
   453  0093                     	;# 
   454  0094                     	;# 
   455  0095                     	;# 
   456  0095                     	;# 
   457  0096                     	;# 
   458  0097                     	;# 
   459  0098                     	;# 
   460  0099                     	;# 
   461  009B                     	;# 
   462  009C                     	;# 
   463  009D                     	;# 
   464  009E                     	;# 
   465  009F                     	;# 
   466  0105                     	;# 
   467  0109                     	;# 
   468  010C                     	;# 
   469  010D                     	;# 
   470  010E                     	;# 
   471  010F                     	;# 
   472  018C                     	;# 
   473  0000                     	;# 
   474  0001                     	;# 
   475  0002                     	;# 
   476  0003                     	;# 
   477  0004                     	;# 
   478  0005                     	;# 
   479  0006                     	;# 
   480  0007                     	;# 
   481  0009                     	;# 
   482  000A                     	;# 
   483  000B                     	;# 
   484  000C                     	;# 
   485  000D                     	;# 
   486  000E                     	;# 
   487  000E                     	;# 
   488  000F                     	;# 
   489  0010                     	;# 
   490  0011                     	;# 
   491  0012                     	;# 
   492  0013                     	;# 
   493  0014                     	;# 
   494  0015                     	;# 
   495  0015                     	;# 
   496  0016                     	;# 
   497  0017                     	;# 
   498  0018                     	;# 
   499  0019                     	;# 
   500  001A                     	;# 
   501  001B                     	;# 
   502  001B                     	;# 
   503  001C                     	;# 
   504  001D                     	;# 
   505  001E                     	;# 
   506  001F                     	;# 
   507  0081                     	;# 
   508  0085                     	;# 
   509  0086                     	;# 
   510  0087                     	;# 
   511  008C                     	;# 
   512  008D                     	;# 
   513  008E                     	;# 
   514  008F                     	;# 
   515  0090                     	;# 
   516  0091                     	;# 
   517  0092                     	;# 
   518  0093                     	;# 
   519  0094                     	;# 
   520  0095                     	;# 
   521  0095                     	;# 
   522  0096                     	;# 
   523  0097                     	;# 
   524  0098                     	;# 
   525  0099                     	;# 
   526  009B                     	;# 
   527  009C                     	;# 
   528  009D                     	;# 
   529  009E                     	;# 
   530  009F                     	;# 
   531  0105                     	;# 
   532  0109                     	;# 
   533  010C                     	;# 
   534  010D                     	;# 
   535  010E                     	;# 
   536  010F                     	;# 
   537  018C                     	;# 
   538  0000                     	;# 
   539  0001                     	;# 
   540  0002                     	;# 
   541  0003                     	;# 
   542  0004                     	;# 
   543  0005                     	;# 
   544  0006                     	;# 
   545  0007                     	;# 
   546  0009                     	;# 
   547  000A                     	;# 
   548  000B                     	;# 
   549  000C                     	;# 
   550  000D                     	;# 
   551  000E                     	;# 
   552  000E                     	;# 
   553  000F                     	;# 
   554  0010                     	;# 
   555  0011                     	;# 
   556  0012                     	;# 
   557  0013                     	;# 
   558  0014                     	;# 
   559  0015                     	;# 
   560  0015                     	;# 
   561  0016                     	;# 
   562  0017                     	;# 
   563  0018                     	;# 
   564  0019                     	;# 
   565  001A                     	;# 
   566  001B                     	;# 
   567  001B                     	;# 
   568  001C                     	;# 
   569  001D                     	;# 
   570  001E                     	;# 
   571  001F                     	;# 
   572  0081                     	;# 
   573  0085                     	;# 
   574  0086                     	;# 
   575  0087                     	;# 
   576  008C                     	;# 
   577  008D                     	;# 
   578  008E                     	;# 
   579  008F                     	;# 
   580  0090                     	;# 
   581  0091                     	;# 
   582  0092                     	;# 
   583  0093                     	;# 
   584  0094                     	;# 
   585  0095                     	;# 
   586  0095                     	;# 
   587  0096                     	;# 
   588  0097                     	;# 
   589  0098                     	;# 
   590  0099                     	;# 
   591  009B                     	;# 
   592  009C                     	;# 
   593  009D                     	;# 
   594  009E                     	;# 
   595  009F                     	;# 
   596  0105                     	;# 
   597  0109                     	;# 
   598  010C                     	;# 
   599  010D                     	;# 
   600  010E                     	;# 
   601  010F                     	;# 
   602  018C                     	;# 
   603  0000                     	;# 
   604  0001                     	;# 
   605  0002                     	;# 
   606  0003                     	;# 
   607  0004                     	;# 
   608  0005                     	;# 
   609  0006                     	;# 
   610  0007                     	;# 
   611  0009                     	;# 
   612  000A                     	;# 
   613  000B                     	;# 
   614  000C                     	;# 
   615  000D                     	;# 
   616  000E                     	;# 
   617  000E                     	;# 
   618  000F                     	;# 
   619  0010                     	;# 
   620  0011                     	;# 
   621  0012                     	;# 
   622  0013                     	;# 
   623  0014                     	;# 
   624  0015                     	;# 
   625  0015                     	;# 
   626  0016                     	;# 
   627  0017                     	;# 
   628  0018                     	;# 
   629  0019                     	;# 
   630  001A                     	;# 
   631  001B                     	;# 
   632  001B                     	;# 
   633  001C                     	;# 
   634  001D                     	;# 
   635  001E                     	;# 
   636  001F                     	;# 
   637  0081                     	;# 
   638  0085                     	;# 
   639  0086                     	;# 
   640  0087                     	;# 
   641  008C                     	;# 
   642  008D                     	;# 
   643  008E                     	;# 
   644  008F                     	;# 
   645  0090                     	;# 
   646  0091                     	;# 
   647  0092                     	;# 
   648  0093                     	;# 
   649  0094                     	;# 
   650  0095                     	;# 
   651  0095                     	;# 
   652  0096                     	;# 
   653  0097                     	;# 
   654  0098                     	;# 
   655  0099                     	;# 
   656  009B                     	;# 
   657  009C                     	;# 
   658  009D                     	;# 
   659  009E                     	;# 
   660  009F                     	;# 
   661  0105                     	;# 
   662  0109                     	;# 
   663  010C                     	;# 
   664  010D                     	;# 
   665  010E                     	;# 
   666  010F                     	;# 
   667  018C                     	;# 
   668  0000                     	;# 
   669  0001                     	;# 
   670  0002                     	;# 
   671  0003                     	;# 
   672  0004                     	;# 
   673  0005                     	;# 
   674  0006                     	;# 
   675  0007                     	;# 
   676  0009                     	;# 
   677  000A                     	;# 
   678  000B                     	;# 
   679  000C                     	;# 
   680  000D                     	;# 
   681  000E                     	;# 
   682  000E                     	;# 
   683  000F                     	;# 
   684  0010                     	;# 
   685  0011                     	;# 
   686  0012                     	;# 
   687  0013                     	;# 
   688  0014                     	;# 
   689  0015                     	;# 
   690  0015                     	;# 
   691  0016                     	;# 
   692  0017                     	;# 
   693  0018                     	;# 
   694  0019                     	;# 
   695  001A                     	;# 
   696  001B                     	;# 
   697  001B                     	;# 
   698  001C                     	;# 
   699  001D                     	;# 
   700  001E                     	;# 
   701  001F                     	;# 
   702  0081                     	;# 
   703  0085                     	;# 
   704  0086                     	;# 
   705  0087                     	;# 
   706  008C                     	;# 
   707  008D                     	;# 
   708  008E                     	;# 
   709  008F                     	;# 
   710  0090                     	;# 
   711  0091                     	;# 
   712  0092                     	;# 
   713  0093                     	;# 
   714  0094                     	;# 
   715  0095                     	;# 
   716  0095                     	;# 
   717  0096                     	;# 
   718  0097                     	;# 
   719  0098                     	;# 
   720  0099                     	;# 
   721  009B                     	;# 
   722  009C                     	;# 
   723  009D                     	;# 
   724  009E                     	;# 
   725  009F                     	;# 
   726  0105                     	;# 
   727  0109                     	;# 
   728  010C                     	;# 
   729  010D                     	;# 
   730  010E                     	;# 
   731  010F                     	;# 
   732  018C                     	;# 
   733                           
   734                           	psect	idataBANK0
   735  07FB                     __pidataBANK0:	
   736                           
   737                           ;initializer for _PETITMODBUS_SLAVE_ADDRESS
   738  07FB  3401               	retlw	1
   739                           
   740                           ;initializer for _Petit_Rx_CRC16
   741  07FC  34FF               	retlw	255
   742  07FD  34FF               	retlw	255
   743                           
   744                           ;initializer for _Petit_Tx_CRC16
   745  07FE  34FF               	retlw	255
   746  07FF  34FF               	retlw	255
   747                           
   748                           	psect	stringtext
   749  0100                     __pstringtext:	
   750  0100                     stringtab:	
   751  0100                     __stringtab:	
   752                           
   753                           ;	String table - string pointers are 2 bytes each
   754  0100  1BFF               	btfsc	btemp+1,7
   755  0101  290A               	ljmp	stringcode
   756  0102  1383               	bcf	3,7
   757  0103  187F               	btfsc	btemp+1,0
   758  0104  1783               	bsf	3,7
   759  0105  0800               	movf	0,w
   760  0106  0A84               	incf	4,f
   761  0107  1903               	skipnz
   762  0108  0AFF               	incf	btemp+1,f
   763  0109  0008               	return
   764  010A                     stringcode:	
   765  010A  087F               	movf	btemp+1,w
   766  010B  397F               	andlw	127
   767  010C  008A               	movwf	10
   768  010D  0804               	movf	4,w
   769  010E  0A84               	incf	4,f
   770  010F  1903               	skipnz
   771  0110  0AFF               	incf	btemp+1,f
   772  0111  0082               	movwf	2
   773  0112                     __stringbase:	
   774  0112                     __end_of__stringtab:	
   775  0112                     _auchCRCLo:	
   776  0112  3400               	retlw	0
   777  0113  34C0               	retlw	192
   778  0114  34C1               	retlw	193
   779  0115  3401               	retlw	1
   780  0116  34C3               	retlw	195
   781  0117  3403               	retlw	3
   782  0118  3402               	retlw	2
   783  0119  34C2               	retlw	194
   784  011A  34C6               	retlw	198
   785  011B  3406               	retlw	6
   786  011C  3407               	retlw	7
   787  011D  34C7               	retlw	199
   788  011E  3405               	retlw	5
   789  011F  34C5               	retlw	197
   790  0120  34C4               	retlw	196
   791  0121  3404               	retlw	4
   792  0122  34CC               	retlw	204
   793  0123  340C               	retlw	12
   794  0124  340D               	retlw	13
   795  0125  34CD               	retlw	205
   796  0126  340F               	retlw	15
   797  0127  34CF               	retlw	207
   798  0128  34CE               	retlw	206
   799  0129  340E               	retlw	14
   800  012A  340A               	retlw	10
   801  012B  34CA               	retlw	202
   802  012C  34CB               	retlw	203
   803  012D  340B               	retlw	11
   804  012E  34C9               	retlw	201
   805  012F  3409               	retlw	9
   806  0130  3408               	retlw	8
   807  0131  34C8               	retlw	200
   808  0132  34D8               	retlw	216
   809  0133  3418               	retlw	24
   810  0134  3419               	retlw	25
   811  0135  34D9               	retlw	217
   812  0136  341B               	retlw	27
   813  0137  34DB               	retlw	219
   814  0138  34DA               	retlw	218
   815  0139  341A               	retlw	26
   816  013A  341E               	retlw	30
   817  013B  34DE               	retlw	222
   818  013C  34DF               	retlw	223
   819  013D  341F               	retlw	31
   820  013E  34DD               	retlw	221
   821  013F  341D               	retlw	29
   822  0140  341C               	retlw	28
   823  0141  34DC               	retlw	220
   824  0142  3414               	retlw	20
   825  0143  34D4               	retlw	212
   826  0144  34D5               	retlw	213
   827  0145  3415               	retlw	21
   828  0146  34D7               	retlw	215
   829  0147  3417               	retlw	23
   830  0148  3416               	retlw	22
   831  0149  34D6               	retlw	214
   832  014A  34D2               	retlw	210
   833  014B  3412               	retlw	18
   834  014C  3413               	retlw	19
   835  014D  34D3               	retlw	211
   836  014E  3411               	retlw	17
   837  014F  34D1               	retlw	209
   838  0150  34D0               	retlw	208
   839  0151  3410               	retlw	16
   840  0152  34F0               	retlw	240
   841  0153  3430               	retlw	48
   842  0154  3431               	retlw	49
   843  0155  34F1               	retlw	241
   844  0156  3433               	retlw	51
   845  0157  34F3               	retlw	243
   846  0158  34F2               	retlw	242
   847  0159  3432               	retlw	50
   848  015A  3436               	retlw	54
   849  015B  34F6               	retlw	246
   850  015C  34F7               	retlw	247
   851  015D  3437               	retlw	55
   852  015E  34F5               	retlw	245
   853  015F  3435               	retlw	53
   854  0160  3434               	retlw	52
   855  0161  34F4               	retlw	244
   856  0162  343C               	retlw	60
   857  0163  34FC               	retlw	252
   858  0164  34FD               	retlw	253
   859  0165  343D               	retlw	61
   860  0166  34FF               	retlw	255
   861  0167  343F               	retlw	63
   862  0168  343E               	retlw	62
   863  0169  34FE               	retlw	254
   864  016A  34FA               	retlw	250
   865  016B  343A               	retlw	58
   866  016C  343B               	retlw	59
   867  016D  34FB               	retlw	251
   868  016E  3439               	retlw	57
   869  016F  34F9               	retlw	249
   870  0170  34F8               	retlw	248
   871  0171  3438               	retlw	56
   872  0172  3428               	retlw	40
   873  0173  34E8               	retlw	232
   874  0174  34E9               	retlw	233
   875  0175  3429               	retlw	41
   876  0176  34EB               	retlw	235
   877  0177  342B               	retlw	43
   878  0178  342A               	retlw	42
   879  0179  34EA               	retlw	234
   880  017A  34EE               	retlw	238
   881  017B  342E               	retlw	46
   882  017C  342F               	retlw	47
   883  017D  34EF               	retlw	239
   884  017E  342D               	retlw	45
   885  017F  34ED               	retlw	237
   886  0180  34EC               	retlw	236
   887  0181  342C               	retlw	44
   888  0182  34E4               	retlw	228
   889  0183  3424               	retlw	36
   890  0184  3425               	retlw	37
   891  0185  34E5               	retlw	229
   892  0186  3427               	retlw	39
   893  0187  34E7               	retlw	231
   894  0188  34E6               	retlw	230
   895  0189  3426               	retlw	38
   896  018A  3422               	retlw	34
   897  018B  34E2               	retlw	226
   898  018C  34E3               	retlw	227
   899  018D  3423               	retlw	35
   900  018E  34E1               	retlw	225
   901  018F  3421               	retlw	33
   902  0190  3420               	retlw	32
   903  0191  34E0               	retlw	224
   904  0192  34A0               	retlw	160
   905  0193  3460               	retlw	96
   906  0194  3461               	retlw	97
   907  0195  34A1               	retlw	161
   908  0196  3463               	retlw	99
   909  0197  34A3               	retlw	163
   910  0198  34A2               	retlw	162
   911  0199  3462               	retlw	98
   912  019A  3466               	retlw	102
   913  019B  34A6               	retlw	166
   914  019C  34A7               	retlw	167
   915  019D  3467               	retlw	103
   916  019E  34A5               	retlw	165
   917  019F  3465               	retlw	101
   918  01A0  3464               	retlw	100
   919  01A1  34A4               	retlw	164
   920  01A2  346C               	retlw	108
   921  01A3  34AC               	retlw	172
   922  01A4  34AD               	retlw	173
   923  01A5  346D               	retlw	109
   924  01A6  34AF               	retlw	175
   925  01A7  346F               	retlw	111
   926  01A8  346E               	retlw	110
   927  01A9  34AE               	retlw	174
   928  01AA  34AA               	retlw	170
   929  01AB  346A               	retlw	106
   930  01AC  346B               	retlw	107
   931  01AD  34AB               	retlw	171
   932  01AE  3469               	retlw	105
   933  01AF  34A9               	retlw	169
   934  01B0  34A8               	retlw	168
   935  01B1  3468               	retlw	104
   936  01B2  3478               	retlw	120
   937  01B3  34B8               	retlw	184
   938  01B4  34B9               	retlw	185
   939  01B5  3479               	retlw	121
   940  01B6  34BB               	retlw	187
   941  01B7  347B               	retlw	123
   942  01B8  347A               	retlw	122
   943  01B9  34BA               	retlw	186
   944  01BA  34BE               	retlw	190
   945  01BB  347E               	retlw	126
   946  01BC  347F               	retlw	127
   947  01BD  34BF               	retlw	191
   948  01BE  347D               	retlw	125
   949  01BF  34BD               	retlw	189
   950  01C0  34BC               	retlw	188
   951  01C1  347C               	retlw	124
   952  01C2  34B4               	retlw	180
   953  01C3  3474               	retlw	116
   954  01C4  3475               	retlw	117
   955  01C5  34B5               	retlw	181
   956  01C6  3477               	retlw	119
   957  01C7  34B7               	retlw	183
   958  01C8  34B6               	retlw	182
   959  01C9  3476               	retlw	118
   960  01CA  3472               	retlw	114
   961  01CB  34B2               	retlw	178
   962  01CC  34B3               	retlw	179
   963  01CD  3473               	retlw	115
   964  01CE  34B1               	retlw	177
   965  01CF  3471               	retlw	113
   966  01D0  3470               	retlw	112
   967  01D1  34B0               	retlw	176
   968  01D2  3450               	retlw	80
   969  01D3  3490               	retlw	144
   970  01D4  3491               	retlw	145
   971  01D5  3451               	retlw	81
   972  01D6  3493               	retlw	147
   973  01D7  3453               	retlw	83
   974  01D8  3452               	retlw	82
   975  01D9  3492               	retlw	146
   976  01DA  3496               	retlw	150
   977  01DB  3456               	retlw	86
   978  01DC  3457               	retlw	87
   979  01DD  3497               	retlw	151
   980  01DE  3455               	retlw	85
   981  01DF  3495               	retlw	149
   982  01E0  3494               	retlw	148
   983  01E1  3454               	retlw	84
   984  01E2  349C               	retlw	156
   985  01E3  345C               	retlw	92
   986  01E4  345D               	retlw	93
   987  01E5  349D               	retlw	157
   988  01E6  345F               	retlw	95
   989  01E7  349F               	retlw	159
   990  01E8  349E               	retlw	158
   991  01E9  345E               	retlw	94
   992  01EA  345A               	retlw	90
   993  01EB  349A               	retlw	154
   994  01EC  349B               	retlw	155
   995  01ED  345B               	retlw	91
   996  01EE  3499               	retlw	153
   997  01EF  3459               	retlw	89
   998  01F0  3458               	retlw	88
   999  01F1  3498               	retlw	152
  1000  01F2  3488               	retlw	136
  1001  01F3  3448               	retlw	72
  1002  01F4  3449               	retlw	73
  1003  01F5  3489               	retlw	137
  1004  01F6  344B               	retlw	75
  1005  01F7  348B               	retlw	139
  1006  01F8  348A               	retlw	138
  1007  01F9  344A               	retlw	74
  1008  01FA  344E               	retlw	78
  1009  01FB  348E               	retlw	142
  1010  01FC  348F               	retlw	143
  1011  01FD  344F               	retlw	79
  1012  01FE  348D               	retlw	141
  1013  01FF  344D               	retlw	77
  1014  0200  344C               	retlw	76
  1015  0201  348C               	retlw	140
  1016  0202  3444               	retlw	68
  1017  0203  3484               	retlw	132
  1018  0204  3485               	retlw	133
  1019  0205  3445               	retlw	69
  1020  0206  3487               	retlw	135
  1021  0207  3447               	retlw	71
  1022  0208  3446               	retlw	70
  1023  0209  3486               	retlw	134
  1024  020A  3482               	retlw	130
  1025  020B  3442               	retlw	66
  1026  020C  3443               	retlw	67
  1027  020D  3483               	retlw	131
  1028  020E  3441               	retlw	65
  1029  020F  3481               	retlw	129
  1030  0210  3480               	retlw	128
  1031  0211  3440               	retlw	64
  1032  0212                     __end_of_auchCRCLo:	
  1033  0212                     _auchCRCHi:	
  1034  0212  3400               	retlw	0
  1035  0213  34C1               	retlw	193
  1036  0214  3481               	retlw	129
  1037  0215  3440               	retlw	64
  1038  0216  3401               	retlw	1
  1039  0217  34C0               	retlw	192
  1040  0218  3480               	retlw	128
  1041  0219  3441               	retlw	65
  1042  021A  3401               	retlw	1
  1043  021B  34C0               	retlw	192
  1044  021C  3480               	retlw	128
  1045  021D  3441               	retlw	65
  1046  021E  3400               	retlw	0
  1047  021F  34C1               	retlw	193
  1048  0220  3481               	retlw	129
  1049  0221  3440               	retlw	64
  1050  0222  3401               	retlw	1
  1051  0223  34C0               	retlw	192
  1052  0224  3480               	retlw	128
  1053  0225  3441               	retlw	65
  1054  0226  3400               	retlw	0
  1055  0227  34C1               	retlw	193
  1056  0228  3481               	retlw	129
  1057  0229  3440               	retlw	64
  1058  022A  3400               	retlw	0
  1059  022B  34C1               	retlw	193
  1060  022C  3481               	retlw	129
  1061  022D  3440               	retlw	64
  1062  022E  3401               	retlw	1
  1063  022F  34C0               	retlw	192
  1064  0230  3480               	retlw	128
  1065  0231  3441               	retlw	65
  1066  0232  3401               	retlw	1
  1067  0233  34C0               	retlw	192
  1068  0234  3480               	retlw	128
  1069  0235  3441               	retlw	65
  1070  0236  3400               	retlw	0
  1071  0237  34C1               	retlw	193
  1072  0238  3481               	retlw	129
  1073  0239  3440               	retlw	64
  1074  023A  3400               	retlw	0
  1075  023B  34C1               	retlw	193
  1076  023C  3481               	retlw	129
  1077  023D  3440               	retlw	64
  1078  023E  3401               	retlw	1
  1079  023F  34C0               	retlw	192
  1080  0240  3480               	retlw	128
  1081  0241  3441               	retlw	65
  1082  0242  3400               	retlw	0
  1083  0243  34C1               	retlw	193
  1084  0244  3481               	retlw	129
  1085  0245  3440               	retlw	64
  1086  0246  3401               	retlw	1
  1087  0247  34C0               	retlw	192
  1088  0248  3480               	retlw	128
  1089  0249  3441               	retlw	65
  1090  024A  3401               	retlw	1
  1091  024B  34C0               	retlw	192
  1092  024C  3480               	retlw	128
  1093  024D  3441               	retlw	65
  1094  024E  3400               	retlw	0
  1095  024F  34C1               	retlw	193
  1096  0250  3481               	retlw	129
  1097  0251  3440               	retlw	64
  1098  0252  3401               	retlw	1
  1099  0253  34C0               	retlw	192
  1100  0254  3480               	retlw	128
  1101  0255  3441               	retlw	65
  1102  0256  3400               	retlw	0
  1103  0257  34C1               	retlw	193
  1104  0258  3481               	retlw	129
  1105  0259  3440               	retlw	64
  1106  025A  3400               	retlw	0
  1107  025B  34C1               	retlw	193
  1108  025C  3481               	retlw	129
  1109  025D  3440               	retlw	64
  1110  025E  3401               	retlw	1
  1111  025F  34C0               	retlw	192
  1112  0260  3480               	retlw	128
  1113  0261  3441               	retlw	65
  1114  0262  3400               	retlw	0
  1115  0263  34C1               	retlw	193
  1116  0264  3481               	retlw	129
  1117  0265  3440               	retlw	64
  1118  0266  3401               	retlw	1
  1119  0267  34C0               	retlw	192
  1120  0268  3480               	retlw	128
  1121  0269  3441               	retlw	65
  1122  026A  3401               	retlw	1
  1123  026B  34C0               	retlw	192
  1124  026C  3480               	retlw	128
  1125  026D  3441               	retlw	65
  1126  026E  3400               	retlw	0
  1127  026F  34C1               	retlw	193
  1128  0270  3481               	retlw	129
  1129  0271  3440               	retlw	64
  1130  0272  3400               	retlw	0
  1131  0273  34C1               	retlw	193
  1132  0274  3481               	retlw	129
  1133  0275  3440               	retlw	64
  1134  0276  3401               	retlw	1
  1135  0277  34C0               	retlw	192
  1136  0278  3480               	retlw	128
  1137  0279  3441               	retlw	65
  1138  027A  3401               	retlw	1
  1139  027B  34C0               	retlw	192
  1140  027C  3480               	retlw	128
  1141  027D  3441               	retlw	65
  1142  027E  3400               	retlw	0
  1143  027F  34C1               	retlw	193
  1144  0280  3481               	retlw	129
  1145  0281  3440               	retlw	64
  1146  0282  3401               	retlw	1
  1147  0283  34C0               	retlw	192
  1148  0284  3480               	retlw	128
  1149  0285  3441               	retlw	65
  1150  0286  3400               	retlw	0
  1151  0287  34C1               	retlw	193
  1152  0288  3481               	retlw	129
  1153  0289  3440               	retlw	64
  1154  028A  3400               	retlw	0
  1155  028B  34C1               	retlw	193
  1156  028C  3481               	retlw	129
  1157  028D  3440               	retlw	64
  1158  028E  3401               	retlw	1
  1159  028F  34C0               	retlw	192
  1160  0290  3480               	retlw	128
  1161  0291  3441               	retlw	65
  1162  0292  3401               	retlw	1
  1163  0293  34C0               	retlw	192
  1164  0294  3480               	retlw	128
  1165  0295  3441               	retlw	65
  1166  0296  3400               	retlw	0
  1167  0297  34C1               	retlw	193
  1168  0298  3481               	retlw	129
  1169  0299  3440               	retlw	64
  1170  029A  3400               	retlw	0
  1171  029B  34C1               	retlw	193
  1172  029C  3481               	retlw	129
  1173  029D  3440               	retlw	64
  1174  029E  3401               	retlw	1
  1175  029F  34C0               	retlw	192
  1176  02A0  3480               	retlw	128
  1177  02A1  3441               	retlw	65
  1178  02A2  3400               	retlw	0
  1179  02A3  34C1               	retlw	193
  1180  02A4  3481               	retlw	129
  1181  02A5  3440               	retlw	64
  1182  02A6  3401               	retlw	1
  1183  02A7  34C0               	retlw	192
  1184  02A8  3480               	retlw	128
  1185  02A9  3441               	retlw	65
  1186  02AA  3401               	retlw	1
  1187  02AB  34C0               	retlw	192
  1188  02AC  3480               	retlw	128
  1189  02AD  3441               	retlw	65
  1190  02AE  3400               	retlw	0
  1191  02AF  34C1               	retlw	193
  1192  02B0  3481               	retlw	129
  1193  02B1  3440               	retlw	64
  1194  02B2  3400               	retlw	0
  1195  02B3  34C1               	retlw	193
  1196  02B4  3481               	retlw	129
  1197  02B5  3440               	retlw	64
  1198  02B6  3401               	retlw	1
  1199  02B7  34C0               	retlw	192
  1200  02B8  3480               	retlw	128
  1201  02B9  3441               	retlw	65
  1202  02BA  3401               	retlw	1
  1203  02BB  34C0               	retlw	192
  1204  02BC  3480               	retlw	128
  1205  02BD  3441               	retlw	65
  1206  02BE  3400               	retlw	0
  1207  02BF  34C1               	retlw	193
  1208  02C0  3481               	retlw	129
  1209  02C1  3440               	retlw	64
  1210  02C2  3401               	retlw	1
  1211  02C3  34C0               	retlw	192
  1212  02C4  3480               	retlw	128
  1213  02C5  3441               	retlw	65
  1214  02C6  3400               	retlw	0
  1215  02C7  34C1               	retlw	193
  1216  02C8  3481               	retlw	129
  1217  02C9  3440               	retlw	64
  1218  02CA  3400               	retlw	0
  1219  02CB  34C1               	retlw	193
  1220  02CC  3481               	retlw	129
  1221  02CD  3440               	retlw	64
  1222  02CE  3401               	retlw	1
  1223  02CF  34C0               	retlw	192
  1224  02D0  3480               	retlw	128
  1225  02D1  3441               	retlw	65
  1226  02D2  3400               	retlw	0
  1227  02D3  34C1               	retlw	193
  1228  02D4  3481               	retlw	129
  1229  02D5  3440               	retlw	64
  1230  02D6  3401               	retlw	1
  1231  02D7  34C0               	retlw	192
  1232  02D8  3480               	retlw	128
  1233  02D9  3441               	retlw	65
  1234  02DA  3401               	retlw	1
  1235  02DB  34C0               	retlw	192
  1236  02DC  3480               	retlw	128
  1237  02DD  3441               	retlw	65
  1238  02DE  3400               	retlw	0
  1239  02DF  34C1               	retlw	193
  1240  02E0  3481               	retlw	129
  1241  02E1  3440               	retlw	64
  1242  02E2  3401               	retlw	1
  1243  02E3  34C0               	retlw	192
  1244  02E4  3480               	retlw	128
  1245  02E5  3441               	retlw	65
  1246  02E6  3400               	retlw	0
  1247  02E7  34C1               	retlw	193
  1248  02E8  3481               	retlw	129
  1249  02E9  3440               	retlw	64
  1250  02EA  3400               	retlw	0
  1251  02EB  34C1               	retlw	193
  1252  02EC  3481               	retlw	129
  1253  02ED  3440               	retlw	64
  1254  02EE  3401               	retlw	1
  1255  02EF  34C0               	retlw	192
  1256  02F0  3480               	retlw	128
  1257  02F1  3441               	retlw	65
  1258  02F2  3401               	retlw	1
  1259  02F3  34C0               	retlw	192
  1260  02F4  3480               	retlw	128
  1261  02F5  3441               	retlw	65
  1262  02F6  3400               	retlw	0
  1263  02F7  34C1               	retlw	193
  1264  02F8  3481               	retlw	129
  1265  02F9  3440               	retlw	64
  1266  02FA  3400               	retlw	0
  1267  02FB  34C1               	retlw	193
  1268  02FC  3481               	retlw	129
  1269  02FD  3440               	retlw	64
  1270  02FE  3401               	retlw	1
  1271  02FF  34C0               	retlw	192
  1272  0300  3480               	retlw	128
  1273  0301  3441               	retlw	65
  1274  0302  3400               	retlw	0
  1275  0303  34C1               	retlw	193
  1276  0304  3481               	retlw	129
  1277  0305  3440               	retlw	64
  1278  0306  3401               	retlw	1
  1279  0307  34C0               	retlw	192
  1280  0308  3480               	retlw	128
  1281  0309  3441               	retlw	65
  1282  030A  3401               	retlw	1
  1283  030B  34C0               	retlw	192
  1284  030C  3480               	retlw	128
  1285  030D  3441               	retlw	65
  1286  030E  3400               	retlw	0
  1287  030F  34C1               	retlw	193
  1288  0310  3481               	retlw	129
  1289  0311  3440               	retlw	64
  1290  0312                     __end_of_auchCRCHi:	
  1291  0017                     _CCP1CONbits	set	23
  1292  0015                     _CCPR1L	set	21
  1293  0017                     _CCP1CON	set	23
  1294  0018                     _RCSTAbits	set	24
  1295  001A                     _RCREG	set	26
  1296  000C                     _PIR1bits	set	12
  1297  0001                     _TMR0	set	1
  1298  000B                     _INTCONbits	set	11
  1299  0019                     _TXREG	set	25
  1300  0007                     _PORTCbits	set	7
  1301  0087                     _TRISCbits	set	135
  1302  0087                     _TRISC	set	135
  1303  0086                     _TRISB	set	134
  1304  0085                     _TRISA	set	133
  1305  009F                     _ADCON1bits	set	159
  1306  008F                     _OSCCON	set	143
  1307  0081                     _OPTION_REGbits	set	129
  1308  0099                     _SPBRG	set	153
  1309  008C                     _PIE1bits	set	140
  1310  0098                     _TXSTAbits	set	152
  1311                           
  1312                           ; #config settings
  1313  0000                     
  1314                           	psect	cinit
  1315  0015                     start_initialization:	
  1316  0015                     __initialization:	
  1317                           
  1318                           ; Initialize objects allocated to BANK0
  1319  0015  120A  118A  27FB  120A  118A  	fcall	__pidataBANK0	;fetch initializer
  1320  001A  00DC               	movwf	__pdataBANK0& (0+127)
  1321  001B  120A  118A  27FC  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
  1322  0020  00DD               	movwf	(__pdataBANK0+1)& (0+127)
  1323  0021  120A  118A  27FD  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
  1324  0026  00DE               	movwf	(__pdataBANK0+2)& (0+127)
  1325  0027  120A  118A  27FE  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
  1326  002C  00DF               	movwf	(__pdataBANK0+3)& (0+127)
  1327  002D  120A  118A  27FF  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
  1328  0032  00E0               	movwf	(__pdataBANK0+4)& (0+127)
  1329                           
  1330                           ; Clear objects allocated to BANK3
  1331  0033  1783               	bsf	3,7	;select IRP bank2
  1332  0034  3090               	movlw	low __pbssBANK3
  1333  0035  0084               	movwf	4
  1334  0036  30C6               	movlw	low (__pbssBANK3+54)
  1335  0037  120A  158A  27C2  120A  118A  	fcall	clear_ram0
  1336                           
  1337                           ; Clear objects allocated to BANK1
  1338  003C  1383               	bcf	3,7	;select IRP bank0
  1339  003D  30A0               	movlw	low __pbssBANK1
  1340  003E  0084               	movwf	4
  1341  003F  30E4               	movlw	low (__pbssBANK1+68)
  1342  0040  120A  158A  27C2  120A  118A  	fcall	clear_ram0
  1343                           
  1344                           ; Clear objects allocated to BANK0
  1345  0045  3020               	movlw	low __pbssBANK0
  1346  0046  0084               	movwf	4
  1347  0047  304D               	movlw	low (__pbssBANK0+45)
  1348  0048  120A  158A  27C2   	fcall	clear_ram0
  1349                           
  1350                           ; Clear objects allocated to COMMON
  1351  004B  01F6               	clrf	__pbssCOMMON& (0+127)
  1352  004C  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1353  004D  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1354  004E  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1355  004F                     end_of_initialization:	
  1356                           ;End of C runtime variable initialization code
  1357                           
  1358  004F                     __end_of__initialization:	
  1359  004F  0183               	clrf	3
  1360  0050  120A  118A  2F6B   	ljmp	_main	;jump to C main() function
  1361                           
  1362                           	psect	bssCOMMON
  1363  0076                     __pbssCOMMON:	
  1364  0076                     _PetitModbusTimerValue:	
  1365  0076                     	ds	2
  1366  0078                     _Petit_Rx_Data_Available:	
  1367  0078                     	ds	1
  1368  0079                     _PetitReceiveCounter:	
  1369  0079                     	ds	1
  1370                           
  1371                           	psect	bssBANK0
  1372  0020                     __pbssBANK0:	
  1373  0020                     _Petit_Rx_Data:	
  1374  0020                     	ds	36
  1375  0044                     _Petit_Tx_Buf_Size:	
  1376  0044                     	ds	2
  1377  0046                     _Petit_Tx_Current:	
  1378  0046                     	ds	2
  1379  0048                     _Timer1_Tick_Counter:	
  1380  0048                     	ds	2
  1381  004A                     _Petit_Rx_State:	
  1382  004A                     	ds	1
  1383  004B                     _Petit_Tx_State:	
  1384  004B                     	ds	1
  1385  004C                     _PETITMODBUS_BROADCAST_ADDRESS:	
  1386  004C                     	ds	1
  1387                           
  1388                           	psect	dataBANK0
  1389  005C                     __pdataBANK0:	
  1390  005C                     _PETITMODBUS_SLAVE_ADDRESS:	
  1391  005C                     	ds	1
  1392  005D                     _Petit_Rx_CRC16:	
  1393  005D                     	ds	2
  1394  005F                     _Petit_Tx_CRC16:	
  1395  005F                     	ds	2
  1396                           
  1397                           	psect	bssBANK1
  1398  00A0                     __pbssBANK1:	
  1399  00A0                     _Petit_Tx_Data:	
  1400  00A0                     	ds	36
  1401  00C4                     _PetitReceiveBuffer:	
  1402  00C4                     	ds	32
  1403                           
  1404                           	psect	bssBANK3
  1405  0190                     __pbssBANK3:	
  1406  0190                     _PetitRegisters:	
  1407  0190                     	ds	22
  1408  01A6                     _Petit_Tx_Buf:	
  1409  01A6                     	ds	32
  1410                           
  1411                           	psect	clrtext
  1412  0FC2                     clear_ram0:	
  1413                           ;	Called with FSR containing the base address, and
  1414                           ;	W with the last address+1
  1415                           
  1416  0FC2  0064               	clrwdt	;clear the watchdog before getting into this loop
  1417  0FC3                     clrloop0:	
  1418  0FC3  0180               	clrf	0	;clear RAM location pointed to by FSR
  1419  0FC4  0A84               	incf	4,f	;increment pointer
  1420  0FC5  0604               	xorwf	4,w	;XOR with final address
  1421  0FC6  1903               	btfsc	3,2	;have we reached the end yet?
  1422  0FC7  3400               	retlw	0	;all done for this memory range, return
  1423  0FC8  0604               	xorwf	4,w	;XOR again to restore value
  1424  0FC9  2FC3               	goto	clrloop0	;do the next byte
  1425                           
  1426                           	psect	cstackCOMMON
  1427  0070                     __pcstackCOMMON:	
  1428  0070                     ?_PetitModBus_UART_Initialise:	
  1429  0070                     ?_PetitModBus_TIMER_Initialise:	
  1430                           ; 1 bytes @ 0x0
  1431                           
  1432  0070                     ?_InitUART:	
  1433                           ; 1 bytes @ 0x0
  1434                           
  1435  0070                     ?_InitTMR1:	
  1436                           ; 1 bytes @ 0x0
  1437                           
  1438  0070                     ?_OSCILLATOR_Initialize:	
  1439                           ; 1 bytes @ 0x0
  1440                           
  1441  0070                     ?_PIN_MANAGER_Initialize:	
  1442                           ; 1 bytes @ 0x0
  1443                           
  1444  0070                     ?_PWM_Initialize:	
  1445                           ; 1 bytes @ 0x0
  1446                           
  1447  0070                     ?_INTERRUPT_Initialize:	
  1448                           ; 1 bytes @ 0x0
  1449                           
  1450  0070                     ?_Petit_DoSlaveTX:	
  1451                           ; 1 bytes @ 0x0
  1452                           
  1453  0070                     ?_PetitSendMessage:	
  1454                           ; 1 bytes @ 0x0
  1455                           
  1456  0070                     ?_HandlePetitModbusError:	
  1457                           ; 1 bytes @ 0x0
  1458                           
  1459  0070                     ?_HandlePetitModbusReadHoldingRegisters:	
  1460                           ; 1 bytes @ 0x0
  1461                           
  1462  0070                     ?_HandlePetitModbusWriteSingleRegister:	
  1463                           ; 1 bytes @ 0x0
  1464                           
  1465  0070                     ?_HandleMPetitodbusWriteMultipleRegisters:	
  1466                           ; 1 bytes @ 0x0
  1467                           
  1468  0070                     ?_Petit_RxDataAvailable:	
  1469                           ; 1 bytes @ 0x0
  1470                           
  1471  0070                     ?_Petit_CheckRxTimeout:	
  1472                           ; 1 bytes @ 0x0
  1473                           
  1474  0070                     ?_CheckPetitModbusBufferComplete:	
  1475                           ; 1 bytes @ 0x0
  1476                           
  1477  0070                     ?_Petit_RxRTU:	
  1478                           ; 1 bytes @ 0x0
  1479                           
  1480  0070                     ?_Petit_TxRTU:	
  1481                           ; 1 bytes @ 0x0
  1482                           
  1483  0070                     ?_ProcessPetitModbus:	
  1484                           ; 1 bytes @ 0x0
  1485                           
  1486  0070                     ?_InitPetitModbus:	
  1487                           ; 1 bytes @ 0x0
  1488                           
  1489  0070                     ?_PetitModBus_UART_Putch:	
  1490                           ; 1 bytes @ 0x0
  1491                           
  1492  0070                     ?_ReceiveInterrupt:	
  1493                           ; 1 bytes @ 0x0
  1494                           
  1495  0070                     ??_ReceiveInterrupt:	
  1496                           ; 1 bytes @ 0x0
  1497                           
  1498  0070                     ?_PetitModBus_TimerValues:	
  1499                           ; 1 bytes @ 0x0
  1500                           
  1501  0070                     ??_PetitModBus_TimerValues:	
  1502                           ; 1 bytes @ 0x0
  1503                           
  1504  0070                     ?_PetitModbusIntHandler:	
  1505                           ; 1 bytes @ 0x0
  1506                           
  1507  0070                     ?_SYSTEM_Initialize:	
  1508                           ; 1 bytes @ 0x0
  1509                           
  1510  0070                     ?_INTERRUPT_InterruptManager:	
  1511                           ; 1 bytes @ 0x0
  1512                           
  1513  0070                     ?_main:	
  1514                           ; 1 bytes @ 0x0
  1515                           
  1516                           
  1517                           ; 1 bytes @ 0x0
  1518  0070                     	ds	1
  1519  0071                     ReceiveInterrupt@Data:	
  1520                           
  1521                           ; 1 bytes @ 0x1
  1522  0071                     	ds	1
  1523  0072                     ??_PetitModbusIntHandler:	
  1524  0072                     ??_INTERRUPT_InterruptManager:	
  1525                           ; 1 bytes @ 0x2
  1526                           
  1527                           
  1528                           ; 1 bytes @ 0x2
  1529  0072                     	ds	4
  1530                           
  1531                           	psect	cstackBANK0
  1532  004D                     __pcstackBANK0:	
  1533  004D                     ??_PetitModBus_UART_Initialise:	
  1534  004D                     ??_PetitModBus_TIMER_Initialise:	
  1535                           ; 1 bytes @ 0x0
  1536                           
  1537  004D                     ??_InitUART:	
  1538                           ; 1 bytes @ 0x0
  1539                           
  1540  004D                     ??_InitTMR1:	
  1541                           ; 1 bytes @ 0x0
  1542                           
  1543  004D                     ??_OSCILLATOR_Initialize:	
  1544                           ; 1 bytes @ 0x0
  1545                           
  1546  004D                     ??_PIN_MANAGER_Initialize:	
  1547                           ; 1 bytes @ 0x0
  1548                           
  1549  004D                     ??_PWM_Initialize:	
  1550                           ; 1 bytes @ 0x0
  1551                           
  1552  004D                     ??_INTERRUPT_Initialize:	
  1553                           ; 1 bytes @ 0x0
  1554                           
  1555  004D                     ?_Petit_CRC16:	
  1556                           ; 1 bytes @ 0x0
  1557                           
  1558  004D                     ??_PetitSendMessage:	
  1559                           ; 1 bytes @ 0x0
  1560                           
  1561  004D                     ??_HandlePetitModbusError:	
  1562                           ; 1 bytes @ 0x0
  1563                           
  1564  004D                     ??_Petit_RxDataAvailable:	
  1565                           ; 1 bytes @ 0x0
  1566                           
  1567  004D                     ??_Petit_CheckRxTimeout:	
  1568                           ; 1 bytes @ 0x0
  1569                           
  1570  004D                     ??_CheckPetitModbusBufferComplete:	
  1571                           ; 1 bytes @ 0x0
  1572                           
  1573  004D                     ??_InitPetitModbus:	
  1574                           ; 1 bytes @ 0x0
  1575                           
  1576  004D                     ??_PetitModBus_UART_Putch:	
  1577                           ; 1 bytes @ 0x0
  1578                           
  1579  004D                     ??_SYSTEM_Initialize:	
  1580                           ; 1 bytes @ 0x0
  1581                           
  1582  004D                     ?_PWM_LoadDutyValue:	
  1583                           ; 1 bytes @ 0x0
  1584                           
  1585  004D                     Petit_CRC16@CRC:	
  1586                           ; 1 bytes @ 0x0
  1587                           
  1588  004D                     PetitModBus_UART_Putch@c:	
  1589                           ; 1 bytes @ 0x0
  1590                           
  1591  004D                     PWM_LoadDutyValue@dutyValue:	
  1592                           ; 1 bytes @ 0x0
  1593                           
  1594                           
  1595                           ; 2 bytes @ 0x0
  1596  004D                     	ds	1
  1597  004E                     ?_PetitModBus_UART_String:	
  1598  004E                     ??_Petit_CRC16:	
  1599                           ; 1 bytes @ 0x1
  1600                           
  1601  004E                     HandlePetitModbusError@ErrorCode:	
  1602                           ; 1 bytes @ 0x1
  1603                           
  1604  004E                     Petit_RxDataAvailable@Result:	
  1605                           ; 1 bytes @ 0x1
  1606                           
  1607  004E                     InitPetitModbus@PetitModbusSlaveAddress:	
  1608                           ; 1 bytes @ 0x1
  1609                           
  1610  004E                     PetitModBus_UART_String@Length:	
  1611                           ; 1 bytes @ 0x1
  1612                           
  1613                           
  1614                           ; 2 bytes @ 0x1
  1615  004E                     	ds	1
  1616  004F                     ??_HandlePetitModbusReadHoldingRegisters:	
  1617  004F                     ??_HandlePetitModbusWriteSingleRegister:	
  1618                           ; 1 bytes @ 0x2
  1619                           
  1620  004F                     ??_HandleMPetitodbusWriteMultipleRegisters:	
  1621                           ; 1 bytes @ 0x2
  1622                           
  1623  004F                     ??_PWM_LoadDutyValue:	
  1624                           ; 1 bytes @ 0x2
  1625                           
  1626  004F                     CheckPetitModbusBufferComplete@PetitExpectedReceiveCount:	
  1627                           ; 1 bytes @ 0x2
  1628                           
  1629                           
  1630                           ; 2 bytes @ 0x2
  1631  004F                     	ds	1
  1632  0050                     ??_PetitModBus_UART_String:	
  1633                           
  1634                           ; 1 bytes @ 0x3
  1635  0050                     	ds	1
  1636  0051                     PetitModBus_UART_String@s:	
  1637  0051                     HandlePetitModbusReadHoldingRegisters@Petit_CurrentData:	
  1638                           ; 1 bytes @ 0x4
  1639                           
  1640  0051                     HandlePetitModbusWriteSingleRegister@Petit_Value:	
  1641                           ; 2 bytes @ 0x4
  1642                           
  1643                           
  1644                           ; 2 bytes @ 0x4
  1645  0051                     	ds	1
  1646  0052                     Petit_CRC16@Data:	
  1647  0052                     PetitModBus_UART_String@DummyCounter:	
  1648                           ; 1 bytes @ 0x5
  1649                           
  1650                           
  1651                           ; 2 bytes @ 0x5
  1652  0052                     	ds	1
  1653  0053                     Petit_CRC16@uIndex:	
  1654  0053                     HandleMPetitodbusWriteMultipleRegisters@Petit_ByteCount:	
  1655                           ; 1 bytes @ 0x6
  1656                           
  1657  0053                     HandlePetitModbusReadHoldingRegisters@Petit_StartAddress:	
  1658                           ; 1 bytes @ 0x6
  1659                           
  1660  0053                     HandlePetitModbusWriteSingleRegister@Petit_Address:	
  1661                           ; 2 bytes @ 0x6
  1662                           
  1663                           
  1664                           ; 2 bytes @ 0x6
  1665  0053                     	ds	1
  1666  0054                     ??_Petit_DoSlaveTX:	
  1667  0054                     Petit_CRC16@uchCRCHi:	
  1668                           ; 1 bytes @ 0x7
  1669                           
  1670  0054                     HandleMPetitodbusWriteMultipleRegisters@Petit_Value:	
  1671                           ; 2 bytes @ 0x7
  1672                           
  1673                           
  1674                           ; 2 bytes @ 0x7
  1675  0054                     	ds	1
  1676  0055                     HandlePetitModbusWriteSingleRegister@Petit_i:	
  1677  0055                     HandlePetitModbusReadHoldingRegisters@Petit_NumberOfRegisters:	
  1678                           ; 1 bytes @ 0x8
  1679                           
  1680                           
  1681                           ; 2 bytes @ 0x8
  1682  0055                     	ds	1
  1683  0056                     Petit_CRC16@uchCRCLo:	
  1684  0056                     HandleMPetitodbusWriteMultipleRegisters@Petit_StartAddress:	
  1685                           ; 2 bytes @ 0x9
  1686                           
  1687                           
  1688                           ; 2 bytes @ 0x9
  1689  0056                     	ds	1
  1690  0057                     HandlePetitModbusReadHoldingRegisters@Petit_i:	
  1691                           
  1692                           ; 2 bytes @ 0xA
  1693  0057                     	ds	1
  1694  0058                     ??_Petit_RxRTU:	
  1695  0058                     ??_Petit_TxRTU:	
  1696                           ; 1 bytes @ 0xB
  1697                           
  1698  0058                     HandleMPetitodbusWriteMultipleRegisters@Petit_NumberOfRegisters:	
  1699                           ; 1 bytes @ 0xB
  1700                           
  1701                           
  1702                           ; 2 bytes @ 0xB
  1703  0058                     	ds	2
  1704  005A                     HandleMPetitodbusWriteMultipleRegisters@Petit_i:	
  1705  005A                     Petit_RxRTU@Petit_ReceiveBufferControl:	
  1706                           ; 1 bytes @ 0xD
  1707                           
  1708                           
  1709                           ; 1 bytes @ 0xD
  1710  005A                     	ds	1
  1711  005B                     Petit_RxRTU@Petit_i:	
  1712                           
  1713                           ; 1 bytes @ 0xE
  1714  005B                     	ds	1
  1715  005C                     ??_ProcessPetitModbus:	
  1716  005C                     ??_main:	
  1717                           ; 1 bytes @ 0xF
  1718                           
  1719                           
  1720                           	psect	maintext
  1721  076B                     __pmaintext:	
  1722                           ; 1 bytes @ 0xF
  1723 ;;
  1724 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1725 ;;
  1726 ;; *************** function _main *****************
  1727 ;; Defined at:
  1728 ;;		line 18 in file "main.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;		None
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;		None
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      void 
  1735 ;; Registers used:
  1736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : B00/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1742 ;;      Params:         0       0       0       0       0
  1743 ;;      Locals:         0       0       0       0       0
  1744 ;;      Temps:          0       0       0       0       0
  1745 ;;      Totals:         0       0       0       0       0
  1746 ;;Total ram usage:        0 bytes
  1747 ;; Hardware stack levels required when called:    8
  1748 ;; This function calls:
  1749 ;;		_InitPetitModbus
  1750 ;;		_PWM_LoadDutyValue
  1751 ;;		_ProcessPetitModbus
  1752 ;;		_SYSTEM_Initialize
  1753 ;; This function is called by:
  1754 ;;		Startup code after reset
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           
  1759                           ;psect for function _main
  1760  076B                     _main:	
  1761                           
  1762                           ;main.c: 20: SYSTEM_Initialize();
  1763                           
  1764                           ;incstack = 0
  1765                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1766  076B  120A  118A  209E  120A  118A  	fcall	_SYSTEM_Initialize
  1767                           
  1768                           ;main.c: 22: InitPetitModbus(1);
  1769  0770  3001               	movlw	1
  1770  0771  120A  118A  20D3  120A  118A  	fcall	_InitPetitModbus
  1771                           
  1772                           ;main.c: 24: PWM_LoadDutyValue(208);
  1773  0776  30D0               	movlw	208
  1774  0777  1283               	bcf	3,5	;RP0=0, select bank0
  1775  0778  1303               	bcf	3,6	;RP1=0, select bank0
  1776  0779  00CD               	movwf	PWM_LoadDutyValue@dutyValue
  1777  077A  3000               	movlw	0
  1778  077B  00CE               	movwf	PWM_LoadDutyValue@dutyValue+1
  1779  077C  120A  118A  2053  120A  118A  	fcall	_PWM_LoadDutyValue
  1780  0781                     l2103:	
  1781                           ;main.c: 27: while(1)
  1782                           
  1783                           
  1784                           ;main.c: 28: {
  1785                           ;main.c: 31: ProcessPetitModbus();
  1786  0781  120A  118A  2727  120A  118A  	fcall	_ProcessPetitModbus
  1787                           
  1788                           ;main.c: 34: if(Timer1_Tick_Counter>1000)
  1789  0786  3003               	movlw	3
  1790  0787  1283               	bcf	3,5	;RP0=0, select bank0
  1791  0788  1303               	bcf	3,6	;RP1=0, select bank0
  1792  0789  0249               	subwf	_Timer1_Tick_Counter+1,w	;volatile
  1793  078A  30E9               	movlw	233
  1794  078B  1903               	skipnz
  1795  078C  0248               	subwf	_Timer1_Tick_Counter,w	;volatile
  1796  078D  1C03               	skipc
  1797  078E  2F81               	goto	l2103
  1798                           
  1799                           ;main.c: 35: {
  1800                           ;main.c: 36: Timer1_Tick_Counter=0;
  1801  078F  01C8               	clrf	_Timer1_Tick_Counter	;volatile
  1802  0790  01C9               	clrf	_Timer1_Tick_Counter+1	;volatile
  1803                           
  1804                           ;main.c: 38: PetitRegisters[5].ActValue++;
  1805  0791  3001               	movlw	1
  1806  0792  1683               	bsf	3,5	;RP0=1, select bank3
  1807  0793  1703               	bsf	3,6	;RP1=1, select bank3
  1808  0794  079A               	addwf	(_PetitRegisters^(0+384)+10),f
  1809  0795  1803               	skipnc
  1810  0796  0A9B               	incf	((_PetitRegisters+1)^(0+384)+10),f
  1811  0797  3000               	movlw	0
  1812  0798  079B               	addwf	((_PetitRegisters+1)^(0+384)+10),f
  1813  0799  2F81               	goto	l2103
  1814  079A                     __end_of_main:	
  1815                           
  1816                           	psect	text1
  1817  009E                     __ptext1:	
  1818 ;; *************** function _SYSTEM_Initialize *****************
  1819 ;; Defined at:
  1820 ;;		line 28 in file "Peripherals/config.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;		None
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;		None
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  1    wreg      void 
  1827 ;; Registers used:
  1828 ;;		wreg, status,2, status,0, pclath, cstack
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1834 ;;      Params:         0       0       0       0       0
  1835 ;;      Locals:         0       0       0       0       0
  1836 ;;      Temps:          0       0       0       0       0
  1837 ;;      Totals:         0       0       0       0       0
  1838 ;;Total ram usage:        0 bytes
  1839 ;; Hardware stack levels used:    1
  1840 ;; Hardware stack levels required when called:    4
  1841 ;; This function calls:
  1842 ;;		_INTERRUPT_Initialize
  1843 ;;		_OSCILLATOR_Initialize
  1844 ;;		_PIN_MANAGER_Initialize
  1845 ;;		_PWM_Initialize
  1846 ;; This function is called by:
  1847 ;;		_main
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           
  1852                           ;psect for function _SYSTEM_Initialize
  1853  009E                     _SYSTEM_Initialize:	
  1854                           
  1855                           ;config.c: 29: OSCILLATOR_Initialize();
  1856                           
  1857                           ;incstack = 0
  1858                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1859  009E  120A  158A  27B7  120A  118A  	fcall	_OSCILLATOR_Initialize
  1860                           
  1861                           ;config.c: 30: PIN_MANAGER_Initialize();
  1862  00A3  120A  118A  20C3  120A  118A  	fcall	_PIN_MANAGER_Initialize
  1863                           
  1864                           ;config.c: 33: PWM_Initialize();
  1865  00A8  120A  158A  27D3  120A  118A  	fcall	_PWM_Initialize
  1866                           
  1867                           ;config.c: 36: INTERRUPT_Initialize();
  1868  00AD  120A  158A  27AC   	fcall	_INTERRUPT_Initialize
  1869  00B0  0008               	return
  1870  00B1                     __end_of_SYSTEM_Initialize:	
  1871                           
  1872                           	psect	text2
  1873  0FD3                     __ptext2:	
  1874 ;; *************** function _PWM_Initialize *****************
  1875 ;; Defined at:
  1876 ;;		line 14 in file "Peripherals/pwm.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;		None
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;		None
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  1    wreg      void 
  1883 ;; Registers used:
  1884 ;;		wreg
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1890 ;;      Params:         0       0       0       0       0
  1891 ;;      Locals:         0       0       0       0       0
  1892 ;;      Temps:          0       0       0       0       0
  1893 ;;      Totals:         0       0       0       0       0
  1894 ;;Total ram usage:        0 bytes
  1895 ;; Hardware stack levels used:    1
  1896 ;; Hardware stack levels required when called:    3
  1897 ;; This function calls:
  1898 ;;		Nothing
  1899 ;; This function is called by:
  1900 ;;		_SYSTEM_Initialize
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904                           
  1905                           ;psect for function _PWM_Initialize
  1906  0FD3                     _PWM_Initialize:	
  1907                           
  1908                           ;pwm.c: 18: CCP1CON = 0x0F;
  1909                           
  1910                           ;incstack = 0
  1911                           ; Regs used in _PWM_Initialize: [wreg]
  1912  0FD3  300F               	movlw	15
  1913  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  1914  0FD5  1303               	bcf	3,6	;RP1=0, select bank0
  1915  0FD6  0097               	movwf	23	;volatile
  1916                           
  1917                           ;pwm.c: 21: CCPR1L = 0x20;
  1918  0FD7  3020               	movlw	32
  1919  0FD8  0095               	movwf	21	;volatile
  1920                           
  1921                           ;pwm.c: 24: CCP1CONbits.CCP1X = 0x0;
  1922  0FD9  1297               	bcf	23,5	;volatile
  1923                           
  1924                           ;pwm.c: 25: CCP1CONbits.CCP1Y = 0x0;
  1925  0FDA  1217               	bcf	23,4	;volatile
  1926  0FDB  0008               	return
  1927  0FDC                     __end_of_PWM_Initialize:	
  1928                           
  1929                           	psect	text3
  1930  00C3                     __ptext3:	
  1931 ;; *************** function _PIN_MANAGER_Initialize *****************
  1932 ;; Defined at:
  1933 ;;		line 4 in file "Peripherals/pin_manager.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;		None
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;		None
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  1    wreg      void 
  1940 ;; Registers used:
  1941 ;;		wreg, status,2, status,0
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1947 ;;      Params:         0       0       0       0       0
  1948 ;;      Locals:         0       0       0       0       0
  1949 ;;      Temps:          0       0       0       0       0
  1950 ;;      Totals:         0       0       0       0       0
  1951 ;;Total ram usage:        0 bytes
  1952 ;; Hardware stack levels used:    1
  1953 ;; Hardware stack levels required when called:    3
  1954 ;; This function calls:
  1955 ;;		Nothing
  1956 ;; This function is called by:
  1957 ;;		_SYSTEM_Initialize
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           
  1962                           ;psect for function _PIN_MANAGER_Initialize
  1963  00C3                     _PIN_MANAGER_Initialize:	
  1964                           
  1965                           ;pin_manager.c: 6: ADCON1bits.PCFG = 0b1111;
  1966                           
  1967                           ;incstack = 0
  1968                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  1969  00C3  300F               	movlw	15
  1970  00C4  1683               	bsf	3,5	;RP0=1, select bank1
  1971  00C5  1303               	bcf	3,6	;RP1=0, select bank1
  1972  00C6  049F               	iorwf	31,f	;volatile
  1973                           
  1974                           ;pin_manager.c: 8: TRISA = 0xFF;
  1975  00C7  30FF               	movlw	255
  1976  00C8  0085               	movwf	5	;volatile
  1977                           
  1978                           ;pin_manager.c: 10: TRISB = 0xFF;
  1979  00C9  30FF               	movlw	255
  1980  00CA  0086               	movwf	6	;volatile
  1981                           
  1982                           ;pin_manager.c: 12: TRISC = 0xFF;
  1983  00CB  30FF               	movlw	255
  1984  00CC  0087               	movwf	7	;volatile
  1985                           
  1986                           ;pin_manager.c: 14: TRISCbits.TRISC4 = 0;
  1987  00CD  1207               	bcf	7,4	;volatile
  1988                           
  1989                           ;pin_manager.c: 15: TRISCbits.TRISC3 = 0;
  1990  00CE  1187               	bcf	7,3	;volatile
  1991                           
  1992                           ;pin_manager.c: 16: TRISCbits.TRISC2 = 0;
  1993  00CF  1107               	bcf	7,2	;volatile
  1994                           
  1995                           ;pin_manager.c: 17: TRISCbits.TRISC6 = 0;
  1996  00D0  1307               	bcf	7,6	;volatile
  1997                           
  1998                           ;pin_manager.c: 18: TRISCbits.TRISC7 = 1;
  1999  00D1  1787               	bsf	7,7	;volatile
  2000  00D2  0008               	return
  2001  00D3                     __end_of_PIN_MANAGER_Initialize:	
  2002                           
  2003                           	psect	text4
  2004  0FB7                     __ptext4:	
  2005 ;; *************** function _OSCILLATOR_Initialize *****************
  2006 ;; Defined at:
  2007 ;;		line 39 in file "Peripherals/config.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;		None
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;		None
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      void 
  2014 ;; Registers used:
  2015 ;;		status,2
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2021 ;;      Params:         0       0       0       0       0
  2022 ;;      Locals:         0       0       0       0       0
  2023 ;;      Temps:          0       0       0       0       0
  2024 ;;      Totals:         0       0       0       0       0
  2025 ;;Total ram usage:        0 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; Hardware stack levels required when called:    3
  2028 ;; This function calls:
  2029 ;;		Nothing
  2030 ;; This function is called by:
  2031 ;;		_SYSTEM_Initialize
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           
  2036                           ;psect for function _OSCILLATOR_Initialize
  2037  0FB7                     _OSCILLATOR_Initialize:	
  2038                           
  2039                           ;config.c: 42: OSCCON = 0x00;
  2040                           
  2041                           ;incstack = 0
  2042                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
  2043  0FB7  1683               	bsf	3,5	;RP0=1, select bank1
  2044  0FB8  1303               	bcf	3,6	;RP1=0, select bank1
  2045  0FB9  018F               	clrf	15	;volatile
  2046  0FBA  0008               	return
  2047  0FBB                     __end_of_OSCILLATOR_Initialize:	
  2048                           
  2049                           	psect	text5
  2050  0FAC                     __ptext5:	
  2051 ;; *************** function _INTERRUPT_Initialize *****************
  2052 ;; Defined at:
  2053 ;;		line 6 in file "Peripherals/interrupt_manager.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;		None
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;		None
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		None
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2067 ;;      Params:         0       0       0       0       0
  2068 ;;      Locals:         0       0       0       0       0
  2069 ;;      Temps:          0       0       0       0       0
  2070 ;;      Totals:         0       0       0       0       0
  2071 ;;Total ram usage:        0 bytes
  2072 ;; Hardware stack levels used:    1
  2073 ;; Hardware stack levels required when called:    3
  2074 ;; This function calls:
  2075 ;;		Nothing
  2076 ;; This function is called by:
  2077 ;;		_SYSTEM_Initialize
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081                           
  2082                           ;psect for function _INTERRUPT_Initialize
  2083  0FAC                     _INTERRUPT_Initialize:	
  2084                           
  2085                           ;interrupt_manager.c: 12: (INTCONbits.GIE = 1);
  2086                           
  2087                           ;incstack = 0
  2088                           ; Regs used in _INTERRUPT_Initialize: []
  2089  0FAC  178B               	bsf	11,7	;volatile
  2090                           
  2091                           ;interrupt_manager.c: 15: (INTCONbits.PEIE = 1);
  2092  0FAD  170B               	bsf	11,6	;volatile
  2093  0FAE  0008               	return
  2094  0FAF                     __end_of_INTERRUPT_Initialize:	
  2095                           
  2096                           	psect	text6
  2097  0727                     __ptext6:	
  2098 ;; *************** function _ProcessPetitModbus *****************
  2099 ;; Defined at:
  2100 ;;		line 500 in file "modbus/PetitModbus.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;		None
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;		None
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  1    wreg      void 
  2107 ;; Registers used:
  2108 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2114 ;;      Params:         0       0       0       0       0
  2115 ;;      Locals:         0       0       0       0       0
  2116 ;;      Temps:          0       0       0       0       0
  2117 ;;      Totals:         0       0       0       0       0
  2118 ;;Total ram usage:        0 bytes
  2119 ;; Hardware stack levels used:    1
  2120 ;; Hardware stack levels required when called:    7
  2121 ;; This function calls:
  2122 ;;		_HandleMPetitodbusWriteMultipleRegisters
  2123 ;;		_HandlePetitModbusError
  2124 ;;		_HandlePetitModbusReadHoldingRegisters
  2125 ;;		_HandlePetitModbusWriteSingleRegister
  2126 ;;		_Petit_RxDataAvailable
  2127 ;;		_Petit_RxRTU
  2128 ;;		_Petit_TxRTU
  2129 ;; This function is called by:
  2130 ;;		_main
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           
  2135                           ;psect for function _ProcessPetitModbus
  2136  0727                     _ProcessPetitModbus:	
  2137                           
  2138                           ;PetitModbus.c: 502: if (Petit_Tx_State != PETIT_RXTX_IDLE){
  2139                           
  2140                           ;incstack = 0
  2141                           ; Regs used in _ProcessPetitModbus: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2142  0727  1283               	bcf	3,5	;RP0=0, select bank0
  2143  0728  1303               	bcf	3,6	;RP1=0, select bank0
  2144  0729  084B               	movf	_Petit_Tx_State,w
  2145  072A  1903               	btfsc	3,2
  2146  072B  2F35               	goto	l143
  2147                           
  2148                           ;PetitModbus.c: 503: PORTCbits.RC3 = 1;
  2149  072C  1587               	bsf	7,3	;volatile
  2150                           
  2151                           ;PetitModbus.c: 504: Petit_TxRTU();
  2152  072D  120A  118A  24AD  120A  118A  	fcall	_Petit_TxRTU
  2153                           
  2154                           ;PetitModbus.c: 505: PORTCbits.RC3 = 0;
  2155  0732  1283               	bcf	3,5	;RP0=0, select bank0
  2156  0733  1303               	bcf	3,6	;RP1=0, select bank0
  2157  0734  1187               	bcf	7,3	;volatile
  2158  0735                     l143:	
  2159                           
  2160                           ;PetitModbus.c: 506: }
  2161                           ;PetitModbus.c: 508: Petit_RxRTU();
  2162  0735  120A  118A  23FE  120A  118A  	fcall	_Petit_RxRTU
  2163                           
  2164                           ;PetitModbus.c: 510: if (Petit_RxDataAvailable())
  2165  073A  120A  158A  27CA  120A  118A  	fcall	_Petit_RxDataAvailable
  2166  073F  3A00               	xorlw	0
  2167  0740  1903               	skipnz
  2168  0741  0008               	return
  2169                           
  2170                           ;PetitModbus.c: 511: {
  2171                           ;PetitModbus.c: 512: if (Petit_Rx_Data.Address == PETITMODBUS_SLAVE_ADDRESS || PETITMODB
      +                          US_BROADCAST_ADDRESS)
  2172  0742  1283               	bcf	3,5	;RP0=0, select bank0
  2173  0743  1303               	bcf	3,6	;RP1=0, select bank0
  2174  0744  0820               	movf	_Petit_Rx_Data,w
  2175  0745  065C               	xorwf	_PETITMODBUS_SLAVE_ADDRESS,w
  2176  0746  1903               	skipnz
  2177  0747  2F5D               	goto	l2085
  2178  0748  084C               	movf	_PETITMODBUS_BROADCAST_ADDRESS,w
  2179  0749  1903               	btfsc	3,2
  2180  074A  0008               	return
  2181  074B  2F5D               	goto	l2085
  2182  074C                     l2075:	
  2183                           ;PetitModbus.c: 517: {
  2184                           ;PetitModbus.c: 519: case 3: { HandlePetitModbusReadHoldingRegisters(); break; }
  2185                           
  2186                           ;PetitModbus.c: 513: {
  2187                           ;PetitModbus.c: 516: switch (Petit_Rx_Data.Function)
  2188                           
  2189  074C  120A  118A  2550   	fcall	_HandlePetitModbusReadHoldingRegisters
  2190  074F  0008               	return
  2191  0750                     l2077:	
  2192                           ;PetitModbus.c: 522: case 6: { HandlePetitModbusWriteSingleRegister(); break; }
  2193                           
  2194  0750  120A  118A  25EF   	fcall	_HandlePetitModbusWriteSingleRegister
  2195  0753  0008               	return
  2196  0754                     l2079:	
  2197                           ;PetitModbus.c: 525: case 16: { HandleMPetitodbusWriteMultipleRegisters(); break; }
  2198                           
  2199  0754  120A  118A  2312   	fcall	_HandleMPetitodbusWriteMultipleRegisters
  2200  0757  0008               	return
  2201  0758                     l2081:	
  2202                           ;PetitModbus.c: 527: default: { HandlePetitModbusError(0x01); break; }
  2203                           
  2204  0758  3001               	movlw	1
  2205  0759  120A  118A  27DF   	fcall	_HandlePetitModbusError
  2206                           
  2207                           ;PetitModbus.c: 528: }
  2208  075C  0008               	return
  2209  075D                     l2085:	
  2210  075D  1283               	bcf	3,5	;RP0=0, select bank0
  2211  075E  1303               	bcf	3,6	;RP1=0, select bank0
  2212  075F  0821               	movf	_Petit_Rx_Data+1,w
  2213                           
  2214                           ; Switch size 1, requested type "space"
  2215                           ; Number of cases is 3, Range of values is 3 to 16
  2216                           ; switch strategies available:
  2217                           ; Name         Instructions Cycles
  2218                           ; simple_byte           10     6 (average)
  2219                           ; direct_byte           53    11 (fixed)
  2220                           ; jumptable            263     9 (fixed)
  2221                           ;	Chosen strategy is simple_byte
  2222  0760  3A03               	xorlw	3	; case 3
  2223  0761  1903               	skipnz
  2224  0762  2F4C               	goto	l2075
  2225  0763  3A05               	xorlw	5	; case 6
  2226  0764  1903               	skipnz
  2227  0765  2F50               	goto	l2077
  2228  0766  3A16               	xorlw	22	; case 16
  2229  0767  1903               	skipnz
  2230  0768  2F54               	goto	l2079
  2231  0769  2F58               	goto	l2081
  2232  076A  0008               	return
  2233  076B                     __end_of_ProcessPetitModbus:	
  2234                           
  2235                           	psect	text7
  2236  04AD                     __ptext7:	
  2237 ;; *************** function _Petit_TxRTU *****************
  2238 ;; Defined at:
  2239 ;;		line 471 in file "modbus/PetitModbus.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;		None
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;		None
  2244 ;; Return value:  Size  Location     Type
  2245 ;;                  1    wreg      void 
  2246 ;; Registers used:
  2247 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2253 ;;      Params:         0       0       0       0       0
  2254 ;;      Locals:         0       0       0       0       0
  2255 ;;      Temps:          0       1       0       0       0
  2256 ;;      Totals:         0       1       0       0       0
  2257 ;;Total ram usage:        1 bytes
  2258 ;; Hardware stack levels used:    1
  2259 ;; Hardware stack levels required when called:    6
  2260 ;; This function calls:
  2261 ;;		_Petit_CRC16
  2262 ;;		_Petit_DoSlaveTX
  2263 ;; This function is called by:
  2264 ;;		_ProcessPetitModbus
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           
  2269                           ;psect for function _Petit_TxRTU
  2270  04AD                     _Petit_TxRTU:	
  2271                           
  2272                           ;PetitModbus.c: 473: Petit_Tx_CRC16 =0xFFFF;
  2273                           
  2274                           ;incstack = 0
  2275                           ; Regs used in _Petit_TxRTU: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2276  04AD  30FF               	movlw	255
  2277  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  2278  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  2279  04B0  00DF               	movwf	_Petit_Tx_CRC16
  2280  04B1  30FF               	movlw	255
  2281  04B2  00E0               	movwf	_Petit_Tx_CRC16+1
  2282                           
  2283                           ;PetitModbus.c: 474: Petit_Tx_Buf_Size =0;
  2284  04B3  01C4               	clrf	_Petit_Tx_Buf_Size
  2285  04B4  01C5               	clrf	_Petit_Tx_Buf_Size+1
  2286                           
  2287                           ;PetitModbus.c: 475: Petit_Tx_Buf[Petit_Tx_Buf_Size++] =Petit_Tx_Data.Address;
  2288  04B5  1683               	bsf	3,5	;RP0=1, select bank1
  2289  04B6  1303               	bcf	3,6	;RP1=0, select bank1
  2290  04B7  0820               	movf	_Petit_Tx_Data^(0+128),w
  2291  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  2292  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  2293  04BA  00D8               	movwf	??_Petit_TxRTU
  2294  04BB  0844               	movf	_Petit_Tx_Buf_Size,w
  2295  04BC  3EA6               	addlw	(low (_Petit_Tx_Buf| (0+256)))& (0+255)
  2296  04BD  0084               	movwf	4
  2297  04BE  0858               	movf	??_Petit_TxRTU,w
  2298  04BF  1783               	bsf	3,7	;select IRP bank3
  2299  04C0  0080               	movwf	0
  2300  04C1  3001               	movlw	1
  2301  04C2  07C4               	addwf	_Petit_Tx_Buf_Size,f
  2302  04C3  1803               	skipnc
  2303  04C4  0AC5               	incf	_Petit_Tx_Buf_Size+1,f
  2304  04C5  3000               	movlw	0
  2305  04C6  07C5               	addwf	_Petit_Tx_Buf_Size+1,f
  2306                           
  2307                           ;PetitModbus.c: 476: Petit_CRC16(Petit_Tx_Data.Address, &Petit_Tx_CRC16);
  2308  04C7  305F               	movlw	(low (_Petit_Tx_CRC16| 0))& (0+255)
  2309  04C8  00D8               	movwf	??_Petit_TxRTU
  2310  04C9  0858               	movf	??_Petit_TxRTU,w
  2311  04CA  00CD               	movwf	Petit_CRC16@CRC
  2312  04CB  1683               	bsf	3,5	;RP0=1, select bank1
  2313  04CC  1303               	bcf	3,6	;RP1=0, select bank1
  2314  04CD  0820               	movf	_Petit_Tx_Data^(0+128),w
  2315  04CE  120A  118A  26CF  120A  118A  	fcall	_Petit_CRC16
  2316                           
  2317                           ;PetitModbus.c: 477: Petit_Tx_Buf[Petit_Tx_Buf_Size++] =Petit_Tx_Data.Function;
  2318  04D3  1683               	bsf	3,5	;RP0=1, select bank1
  2319  04D4  1303               	bcf	3,6	;RP1=0, select bank1
  2320  04D5  0821               	movf	(_Petit_Tx_Data^(0+128)+1),w
  2321  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  2322  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  2323  04D8  00D8               	movwf	??_Petit_TxRTU
  2324  04D9  0844               	movf	_Petit_Tx_Buf_Size,w
  2325  04DA  3EA6               	addlw	(low (_Petit_Tx_Buf| (0+256)))& (0+255)
  2326  04DB  0084               	movwf	4
  2327  04DC  0858               	movf	??_Petit_TxRTU,w
  2328  04DD  1783               	bsf	3,7	;select IRP bank3
  2329  04DE  0080               	movwf	0
  2330  04DF  3001               	movlw	1
  2331  04E0  07C4               	addwf	_Petit_Tx_Buf_Size,f
  2332  04E1  1803               	skipnc
  2333  04E2  0AC5               	incf	_Petit_Tx_Buf_Size+1,f
  2334  04E3  3000               	movlw	0
  2335  04E4  07C5               	addwf	_Petit_Tx_Buf_Size+1,f
  2336                           
  2337                           ;PetitModbus.c: 478: Petit_CRC16(Petit_Tx_Data.Function, &Petit_Tx_CRC16);
  2338  04E5  305F               	movlw	(low (_Petit_Tx_CRC16| 0))& (0+255)
  2339  04E6  00D8               	movwf	??_Petit_TxRTU
  2340  04E7  0858               	movf	??_Petit_TxRTU,w
  2341  04E8  00CD               	movwf	Petit_CRC16@CRC
  2342  04E9  1683               	bsf	3,5	;RP0=1, select bank1
  2343  04EA  1303               	bcf	3,6	;RP1=0, select bank1
  2344  04EB  0821               	movf	(_Petit_Tx_Data^(0+128)+1),w
  2345  04EC  120A  118A  26CF  120A  118A  	fcall	_Petit_CRC16
  2346                           
  2347                           ;PetitModbus.c: 480: for(Petit_Tx_Current=0; Petit_Tx_Current < Petit_Tx_Data.DataLen; P
      +                          etit_Tx_Current++)
  2348  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  2349  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  2350  04F3  01C6               	clrf	_Petit_Tx_Current
  2351  04F4  01C7               	clrf	_Petit_Tx_Current+1
  2352  04F5                     l2017:	
  2353  04F5  1683               	bsf	3,5	;RP0=1, select bank1
  2354  04F6  1303               	bcf	3,6	;RP1=0, select bank1
  2355  04F7  0843               	movf	((_Petit_Tx_Data+1)^(0+128)+34),w
  2356  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  2357  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  2358  04FA  0247               	subwf	_Petit_Tx_Current+1,w
  2359  04FB  1D03               	skipz
  2360  04FC  2D03               	goto	u1225
  2361  04FD  1683               	bsf	3,5	;RP0=1, select bank1
  2362  04FE  1303               	bcf	3,6	;RP1=0, select bank1
  2363  04FF  0842               	movf	(_Petit_Tx_Data^(0+128)+34),w
  2364  0500  1283               	bcf	3,5	;RP0=0, select bank0
  2365  0501  1303               	bcf	3,6	;RP1=0, select bank0
  2366  0502  0246               	subwf	_Petit_Tx_Current,w
  2367  0503                     u1225:	
  2368  0503  1803               	btfsc	3,0
  2369  0504  2D2E               	goto	l2019
  2370                           
  2371                           ;PetitModbus.c: 481: {
  2372                           ;PetitModbus.c: 482: Petit_Tx_Buf[Petit_Tx_Buf_Size++]=Petit_Tx_Data.DataBuf[Petit_Tx_Cu
      +                          rrent];
  2373  0505  0846               	movf	_Petit_Tx_Current,w
  2374  0506  3EA2               	addlw	(low ((_Petit_Tx_Data| 0+2)))& (0+255)
  2375  0507  0084               	movwf	4
  2376  0508  1383               	bcf	3,7	;select IRP bank1
  2377  0509  0800               	movf	0,w
  2378  050A  00D8               	movwf	??_Petit_TxRTU
  2379  050B  0844               	movf	_Petit_Tx_Buf_Size,w
  2380  050C  3EA6               	addlw	(low (_Petit_Tx_Buf| (0+256)))& (0+255)
  2381  050D  0084               	movwf	4
  2382  050E  0858               	movf	??_Petit_TxRTU,w
  2383  050F  1783               	bsf	3,7	;select IRP bank3
  2384  0510  0080               	movwf	0
  2385  0511  3001               	movlw	1
  2386  0512  07C4               	addwf	_Petit_Tx_Buf_Size,f
  2387  0513  1803               	skipnc
  2388  0514  0AC5               	incf	_Petit_Tx_Buf_Size+1,f
  2389  0515  3000               	movlw	0
  2390  0516  07C5               	addwf	_Petit_Tx_Buf_Size+1,f
  2391                           
  2392                           ;PetitModbus.c: 483: Petit_CRC16(Petit_Tx_Data.DataBuf[Petit_Tx_Current], &Petit_Tx_CRC1
      +                          6);
  2393  0517  305F               	movlw	(low (_Petit_Tx_CRC16| 0))& (0+255)
  2394  0518  00D8               	movwf	??_Petit_TxRTU
  2395  0519  0858               	movf	??_Petit_TxRTU,w
  2396  051A  00CD               	movwf	Petit_CRC16@CRC
  2397  051B  0846               	movf	_Petit_Tx_Current,w
  2398  051C  3EA2               	addlw	(low ((_Petit_Tx_Data| 0+2)))& (0+255)
  2399  051D  0084               	movwf	4
  2400  051E  1383               	bcf	3,7	;select IRP bank1
  2401  051F  0800               	movf	0,w
  2402  0520  120A  118A  26CF  120A  118A  	fcall	_Petit_CRC16
  2403  0525  3001               	movlw	1
  2404  0526  1283               	bcf	3,5	;RP0=0, select bank0
  2405  0527  1303               	bcf	3,6	;RP1=0, select bank0
  2406  0528  07C6               	addwf	_Petit_Tx_Current,f
  2407  0529  1803               	skipnc
  2408  052A  0AC7               	incf	_Petit_Tx_Current+1,f
  2409  052B  3000               	movlw	0
  2410  052C  07C7               	addwf	_Petit_Tx_Current+1,f
  2411  052D  2CF5               	goto	l2017
  2412  052E                     l2019:	
  2413                           
  2414                           ;PetitModbus.c: 484: }
  2415                           ;PetitModbus.c: 486: Petit_Tx_Buf[Petit_Tx_Buf_Size++] = Petit_Tx_CRC16 & 0x00FF;
  2416  052E  085F               	movf	_Petit_Tx_CRC16,w
  2417  052F  00D8               	movwf	??_Petit_TxRTU
  2418  0530  0844               	movf	_Petit_Tx_Buf_Size,w
  2419  0531  3EA6               	addlw	(low (_Petit_Tx_Buf| (0+256)))& (0+255)
  2420  0532  0084               	movwf	4
  2421  0533  0858               	movf	??_Petit_TxRTU,w
  2422  0534  1783               	bsf	3,7	;select IRP bank3
  2423  0535  0080               	movwf	0
  2424  0536  3001               	movlw	1
  2425  0537  07C4               	addwf	_Petit_Tx_Buf_Size,f
  2426  0538  1803               	skipnc
  2427  0539  0AC5               	incf	_Petit_Tx_Buf_Size+1,f
  2428  053A  3000               	movlw	0
  2429  053B  07C5               	addwf	_Petit_Tx_Buf_Size+1,f
  2430                           
  2431                           ;PetitModbus.c: 487: Petit_Tx_Buf[Petit_Tx_Buf_Size++] =(Petit_Tx_CRC16 & 0xFF00) >> 8;
  2432  053C  0860               	movf	_Petit_Tx_CRC16+1,w
  2433  053D  00D8               	movwf	??_Petit_TxRTU
  2434  053E  0844               	movf	_Petit_Tx_Buf_Size,w
  2435  053F  3EA6               	addlw	(low (_Petit_Tx_Buf| (0+256)))& (0+255)
  2436  0540  0084               	movwf	4
  2437  0541  0858               	movf	??_Petit_TxRTU,w
  2438  0542  0080               	movwf	0
  2439  0543  3001               	movlw	1
  2440  0544  07C4               	addwf	_Petit_Tx_Buf_Size,f
  2441  0545  1803               	skipnc
  2442  0546  0AC5               	incf	_Petit_Tx_Buf_Size+1,f
  2443  0547  3000               	movlw	0
  2444  0548  07C5               	addwf	_Petit_Tx_Buf_Size+1,f
  2445                           
  2446                           ;PetitModbus.c: 489: Petit_DoSlaveTX();
  2447  0549  120A  118A  20E3   	fcall	_Petit_DoSlaveTX
  2448                           
  2449                           ;PetitModbus.c: 491: Petit_Tx_State =PETIT_RXTX_IDLE;
  2450  054C  1283               	bcf	3,5	;RP0=0, select bank0
  2451  054D  1303               	bcf	3,6	;RP1=0, select bank0
  2452  054E  01CB               	clrf	_Petit_Tx_State
  2453  054F  0008               	return
  2454  0550                     __end_of_Petit_TxRTU:	
  2455                           
  2456                           	psect	text8
  2457  00E3                     __ptext8:	
  2458 ;; *************** function _Petit_DoSlaveTX *****************
  2459 ;; Defined at:
  2460 ;;		line 127 in file "modbus/PetitModbus.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;		None
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;		None
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      unsigned char 
  2467 ;; Registers used:
  2468 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2474 ;;      Params:         0       0       0       0       0
  2475 ;;      Locals:         0       0       0       0       0
  2476 ;;      Temps:          0       0       0       0       0
  2477 ;;      Totals:         0       0       0       0       0
  2478 ;;Total ram usage:        0 bytes
  2479 ;; Hardware stack levels used:    1
  2480 ;; Hardware stack levels required when called:    5
  2481 ;; This function calls:
  2482 ;;		_PetitModBus_UART_String
  2483 ;; This function is called by:
  2484 ;;		_Petit_TxRTU
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           
  2489                           ;psect for function _Petit_DoSlaveTX
  2490  00E3                     _Petit_DoSlaveTX:	
  2491                           
  2492                           ;PetitModbus.c: 129: PetitModBus_UART_String(Petit_Tx_Buf,Petit_Tx_Buf_Size);
  2493                           
  2494                           ;incstack = 0
  2495                           ; Regs used in _Petit_DoSlaveTX: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2496  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  2497  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  2498  00E5  0845               	movf	_Petit_Tx_Buf_Size+1,w
  2499  00E6  00CF               	movwf	PetitModBus_UART_String@Length+1
  2500  00E7  0844               	movf	_Petit_Tx_Buf_Size,w
  2501  00E8  00CE               	movwf	PetitModBus_UART_String@Length
  2502  00E9  30A6               	movlw	(low (_Petit_Tx_Buf| (0+256)))& (0+255)
  2503  00EA  120A  118A  27BD   	fcall	_PetitModBus_UART_String
  2504                           
  2505                           ;PetitModbus.c: 131: Petit_Tx_Buf_Size = 0;
  2506  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  2507  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  2508  00EF  01C4               	clrf	_Petit_Tx_Buf_Size
  2509  00F0  01C5               	clrf	_Petit_Tx_Buf_Size+1
  2510  00F1  0008               	return
  2511  00F2                     __end_of_Petit_DoSlaveTX:	
  2512                           ;PetitModbus.c: 132: return 1;
  2513                           ;	Return value of _Petit_DoSlaveTX is never used
  2514                           
  2515                           
  2516                           	psect	text9
  2517  07BD                     __ptext9:	
  2518 ;; *************** function _PetitModBus_UART_String *****************
  2519 ;; Defined at:
  2520 ;;		line 29 in file "modbus/PetitModbusPort.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;  s               1    wreg     PTR unsigned char 
  2523 ;;		 -> Petit_Tx_Buf(32), 
  2524 ;;  Length          2    1[BANK0 ] unsigned int 
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;  s               1    4[BANK0 ] PTR unsigned char 
  2527 ;;		 -> Petit_Tx_Buf(32), 
  2528 ;;  DummyCounter    2    5[BANK0 ] unsigned short 
  2529 ;; Return value:  Size  Location     Type
  2530 ;;                  1    wreg      unsigned char 
  2531 ;; Registers used:
  2532 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2533 ;; Tracked objects:
  2534 ;;		On entry : 0/0
  2535 ;;		On exit  : 0/0
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2538 ;;      Params:         0       2       0       0       0
  2539 ;;      Locals:         0       3       0       0       0
  2540 ;;      Temps:          0       1       0       0       0
  2541 ;;      Totals:         0       6       0       0       0
  2542 ;;Total ram usage:        6 bytes
  2543 ;; Hardware stack levels used:    1
  2544 ;; Hardware stack levels required when called:    4
  2545 ;; This function calls:
  2546 ;;		_PetitModBus_UART_Putch
  2547 ;; This function is called by:
  2548 ;;		_Petit_DoSlaveTX
  2549 ;; This function uses a non-reentrant model
  2550 ;;
  2551                           
  2552                           
  2553                           ;psect for function _PetitModBus_UART_String
  2554  07BD                     _PetitModBus_UART_String:	
  2555                           
  2556                           ;incstack = 0
  2557                           ; Regs used in _PetitModBus_UART_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2558                           ;PetitModBus_UART_String@s stored from wreg
  2559  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  2560  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  2561  07BF  00D1               	movwf	PetitModBus_UART_String@s
  2562                           
  2563                           ;PetitModbusPort.c: 31: unsigned short DummyCounter;
  2564                           ;PetitModbusPort.c: 33: for(DummyCounter=0;DummyCounter<Length;DummyCounter++){
  2565  07C0  01D2               	clrf	PetitModBus_UART_String@DummyCounter
  2566  07C1  01D3               	clrf	PetitModBus_UART_String@DummyCounter+1
  2567  07C2                     l1675:	
  2568  07C2  084F               	movf	PetitModBus_UART_String@Length+1,w
  2569  07C3  0253               	subwf	PetitModBus_UART_String@DummyCounter+1,w
  2570  07C4  1D03               	skipz
  2571  07C5  2FC8               	goto	u895
  2572  07C6  084E               	movf	PetitModBus_UART_String@Length,w
  2573  07C7  0252               	subwf	PetitModBus_UART_String@DummyCounter,w
  2574  07C8                     u895:	
  2575  07C8  1803               	btfsc	3,0
  2576  07C9  0008               	return
  2577                           
  2578                           ;PetitModbusPort.c: 34: PetitModBus_UART_Putch(s[DummyCounter]);
  2579  07CA  0852               	movf	PetitModBus_UART_String@DummyCounter,w
  2580  07CB  0751               	addwf	PetitModBus_UART_String@s,w
  2581  07CC  00D0               	movwf	??_PetitModBus_UART_String
  2582  07CD  0850               	movf	??_PetitModBus_UART_String,w
  2583  07CE  0084               	movwf	4
  2584  07CF  1783               	bsf	3,7	;select IRP bank2
  2585  07D0  0800               	movf	0,w
  2586  07D1  120A  118A  20F2  120A  118A  	fcall	_PetitModBus_UART_Putch
  2587  07D6  3001               	movlw	1
  2588  07D7  1283               	bcf	3,5	;RP0=0, select bank0
  2589  07D8  1303               	bcf	3,6	;RP1=0, select bank0
  2590  07D9  07D2               	addwf	PetitModBus_UART_String@DummyCounter,f
  2591  07DA  1803               	skipnc
  2592  07DB  0AD3               	incf	PetitModBus_UART_String@DummyCounter+1,f
  2593  07DC  3000               	movlw	0
  2594  07DD  07D3               	addwf	PetitModBus_UART_String@DummyCounter+1,f
  2595  07DE  2FC2               	goto	l1675
  2596  07DF                     __end_of_PetitModBus_UART_String:	
  2597                           ;PetitModbusPort.c: 35: }
  2598                           ;PetitModbusPort.c: 36: return 1;
  2599                           ;	Return value of _PetitModBus_UART_String is never used
  2600                           
  2601                           
  2602                           	psect	text10
  2603  00F2                     __ptext10:	
  2604 ;; *************** function _PetitModBus_UART_Putch *****************
  2605 ;; Defined at:
  2606 ;;		line 22 in file "modbus/PetitModbusPort.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;  c               1    wreg     unsigned char 
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;  c               1    0[BANK0 ] unsigned char 
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  1    wreg      void 
  2613 ;; Registers used:
  2614 ;;		wreg
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2620 ;;      Params:         0       0       0       0       0
  2621 ;;      Locals:         0       1       0       0       0
  2622 ;;      Temps:          0       0       0       0       0
  2623 ;;      Totals:         0       1       0       0       0
  2624 ;;Total ram usage:        1 bytes
  2625 ;; Hardware stack levels used:    1
  2626 ;; Hardware stack levels required when called:    3
  2627 ;; This function calls:
  2628 ;;		Nothing
  2629 ;; This function is called by:
  2630 ;;		_PetitModBus_UART_String
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           
  2635                           ;psect for function _PetitModBus_UART_Putch
  2636  00F2                     _PetitModBus_UART_Putch:	
  2637                           
  2638                           ;incstack = 0
  2639                           ; Regs used in _PetitModBus_UART_Putch: [wreg]
  2640                           ;PetitModBus_UART_Putch@c stored from wreg
  2641  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  2642  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  2643  00F4  00CD               	movwf	PetitModBus_UART_Putch@c
  2644  00F5                     l184:	
  2645                           ;PetitModbusPort.c: 24: while(!TXSTAbits.TRMT);
  2646                           
  2647  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  2648  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  2649  00F7  1C98               	btfss	24,1	;volatile
  2650  00F8  28F5               	goto	l184
  2651                           
  2652                           ;PetitModbusPort.c: 25: TXREG = c;
  2653  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  2654  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  2655  00FB  084D               	movf	PetitModBus_UART_Putch@c,w
  2656  00FC  0099               	movwf	25	;volatile
  2657  00FD  0008               	return
  2658  00FE                     __end_of_PetitModBus_UART_Putch:	
  2659                           
  2660                           	psect	text11
  2661  03FE                     __ptext11:	
  2662 ;; *************** function _Petit_RxRTU *****************
  2663 ;; Defined at:
  2664 ;;		line 416 in file "modbus/PetitModbus.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;		None
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;  Petit_i         1   14[BANK0 ] unsigned char 
  2669 ;;  Petit_Receiv    1   13[BANK0 ] unsigned char 
  2670 ;; Return value:  Size  Location     Type
  2671 ;;                  1    wreg      void 
  2672 ;; Registers used:
  2673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2679 ;;      Params:         0       0       0       0       0
  2680 ;;      Locals:         0       2       0       0       0
  2681 ;;      Temps:          0       2       0       0       0
  2682 ;;      Totals:         0       4       0       0       0
  2683 ;;Total ram usage:        4 bytes
  2684 ;; Hardware stack levels used:    1
  2685 ;; Hardware stack levels required when called:    4
  2686 ;; This function calls:
  2687 ;;		_CheckPetitModbusBufferComplete
  2688 ;;		_Petit_CRC16
  2689 ;;		_Petit_CheckRxTimeout
  2690 ;; This function is called by:
  2691 ;;		_ProcessPetitModbus
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           
  2696                           ;psect for function _Petit_RxRTU
  2697  03FE                     _Petit_RxRTU:	
  2698                           
  2699                           ;PetitModbus.c: 418: unsigned char Petit_i;
  2700                           ;PetitModbus.c: 419: unsigned char Petit_ReceiveBufferControl=0;
  2701                           
  2702                           ;incstack = 0
  2703                           ; Regs used in _Petit_RxRTU: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2704  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  2705  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  2706  0400  01DA               	clrf	Petit_RxRTU@Petit_ReceiveBufferControl
  2707                           
  2708                           ;PetitModbus.c: 421: Petit_ReceiveBufferControl =CheckPetitModbusBufferComplete();
  2709  0401  120A  118A  266D  120A  118A  	fcall	_CheckPetitModbusBufferComplete
  2710  0406  1283               	bcf	3,5	;RP0=0, select bank0
  2711  0407  1303               	bcf	3,6	;RP1=0, select bank0
  2712  0408  00D8               	movwf	??_Petit_RxRTU
  2713  0409  0858               	movf	??_Petit_RxRTU,w
  2714  040A  00DA               	movwf	Petit_RxRTU@Petit_ReceiveBufferControl
  2715                           
  2716                           ;PetitModbus.c: 423: if(Petit_ReceiveBufferControl==3)
  2717  040B  3003               	movlw	3
  2718  040C  065A               	xorwf	Petit_RxRTU@Petit_ReceiveBufferControl,w
  2719  040D  1D03               	btfss	3,2
  2720  040E  2C5E               	goto	l1969
  2721                           
  2722                           ;PetitModbus.c: 424: {
  2723                           ;PetitModbus.c: 427: Petit_Rx_Data.Address =PetitReceiveBuffer[0];
  2724  040F  1683               	bsf	3,5	;RP0=1, select bank1
  2725  0410  1303               	bcf	3,6	;RP1=0, select bank1
  2726  0411  0844               	movf	_PetitReceiveBuffer^(0+128),w	;volatile
  2727  0412  1283               	bcf	3,5	;RP0=0, select bank0
  2728  0413  1303               	bcf	3,6	;RP1=0, select bank0
  2729  0414  00D8               	movwf	??_Petit_RxRTU
  2730  0415  0858               	movf	??_Petit_RxRTU,w
  2731  0416  00A0               	movwf	_Petit_Rx_Data
  2732                           
  2733                           ;PetitModbus.c: 428: Petit_Rx_CRC16 = 0xffff;
  2734  0417  30FF               	movlw	255
  2735  0418  00DD               	movwf	_Petit_Rx_CRC16
  2736  0419  30FF               	movlw	255
  2737  041A  00DE               	movwf	_Petit_Rx_CRC16+1
  2738                           
  2739                           ;PetitModbus.c: 429: Petit_CRC16(Petit_Rx_Data.Address, &Petit_Rx_CRC16);
  2740  041B  305D               	movlw	(low (_Petit_Rx_CRC16| 0))& (0+255)
  2741  041C  00D8               	movwf	??_Petit_RxRTU
  2742  041D  0858               	movf	??_Petit_RxRTU,w
  2743  041E  00CD               	movwf	Petit_CRC16@CRC
  2744  041F  0820               	movf	_Petit_Rx_Data,w
  2745  0420  120A  118A  26CF  120A  118A  	fcall	_Petit_CRC16
  2746                           
  2747                           ;PetitModbus.c: 430: Petit_Rx_Data.Function =PetitReceiveBuffer[1];
  2748  0425  1683               	bsf	3,5	;RP0=1, select bank1
  2749  0426  1303               	bcf	3,6	;RP1=0, select bank1
  2750  0427  0845               	movf	(_PetitReceiveBuffer^(0+128)+1),w	;volatile
  2751  0428  1283               	bcf	3,5	;RP0=0, select bank0
  2752  0429  1303               	bcf	3,6	;RP1=0, select bank0
  2753  042A  00D8               	movwf	??_Petit_RxRTU
  2754  042B  0858               	movf	??_Petit_RxRTU,w
  2755  042C  00A1               	movwf	_Petit_Rx_Data+1
  2756                           
  2757                           ;PetitModbus.c: 431: Petit_CRC16(Petit_Rx_Data.Function, &Petit_Rx_CRC16);
  2758  042D  305D               	movlw	(low (_Petit_Rx_CRC16| 0))& (0+255)
  2759  042E  00D8               	movwf	??_Petit_RxRTU
  2760  042F  0858               	movf	??_Petit_RxRTU,w
  2761  0430  00CD               	movwf	Petit_CRC16@CRC
  2762  0431  0821               	movf	_Petit_Rx_Data+1,w
  2763  0432  120A  118A  26CF  120A  118A  	fcall	_Petit_CRC16
  2764                           
  2765                           ;PetitModbus.c: 433: Petit_Rx_Data.DataLen=0;
  2766  0437  1283               	bcf	3,5	;RP0=0, select bank0
  2767  0438  1303               	bcf	3,6	;RP1=0, select bank0
  2768  0439  01C2               	clrf	_Petit_Rx_Data+34
  2769  043A  01C3               	clrf	_Petit_Rx_Data+35
  2770                           
  2771                           ;PetitModbus.c: 435: for(Petit_i=2;Petit_i<PetitReceiveCounter;Petit_i++)
  2772  043B  3002               	movlw	2
  2773  043C  00D8               	movwf	??_Petit_RxRTU
  2774  043D  0858               	movf	??_Petit_RxRTU,w
  2775  043E  00DB               	movwf	Petit_RxRTU@Petit_i
  2776  043F                     l1963:	
  2777  043F  0879               	movf	_PetitReceiveCounter,w	;volatile
  2778  0440  025B               	subwf	Petit_RxRTU@Petit_i,w
  2779  0441  1803               	btfsc	3,0
  2780  0442  2C59               	goto	l1965
  2781                           
  2782                           ;PetitModbus.c: 436: Petit_Rx_Data.DataBuf[Petit_Rx_Data.DataLen++]=PetitReceiveBuffer[P
      +                          etit_i];
  2783  0443  085B               	movf	Petit_RxRTU@Petit_i,w
  2784  0444  3EC4               	addlw	(low (_PetitReceiveBuffer| 0))& (0+255)
  2785  0445  0084               	movwf	4
  2786  0446  1383               	bcf	3,7	;select IRP bank1
  2787  0447  0800               	movf	0,w
  2788  0448  00D8               	movwf	??_Petit_RxRTU
  2789  0449  0842               	movf	_Petit_Rx_Data+34,w
  2790  044A  3E22               	addlw	(low ((_Petit_Rx_Data| 0+2)))& (0+255)
  2791  044B  0084               	movwf	4
  2792  044C  0858               	movf	??_Petit_RxRTU,w
  2793  044D  0080               	movwf	0
  2794  044E  3001               	movlw	1
  2795  044F  07C2               	addwf	_Petit_Rx_Data+34,f
  2796  0450  1803               	skipnc
  2797  0451  0AC3               	incf	_Petit_Rx_Data+35,f
  2798  0452  3000               	movlw	0
  2799  0453  07C3               	addwf	_Petit_Rx_Data+35,f
  2800  0454  3001               	movlw	1
  2801  0455  00D8               	movwf	??_Petit_RxRTU
  2802  0456  0858               	movf	??_Petit_RxRTU,w
  2803  0457  07DB               	addwf	Petit_RxRTU@Petit_i,f
  2804  0458  2C3F               	goto	l1963
  2805  0459                     l1965:	
  2806                           
  2807                           ;PetitModbus.c: 438: Petit_Rx_State =PETIT_RXTX_DATABUF;
  2808  0459  3002               	movlw	2
  2809  045A  00D8               	movwf	??_Petit_RxRTU
  2810  045B  0858               	movf	??_Petit_RxRTU,w
  2811  045C  00CA               	movwf	_Petit_Rx_State
  2812                           
  2813                           ;PetitModbus.c: 440: PetitReceiveCounter=0;
  2814  045D  01F9               	clrf	_PetitReceiveCounter	;volatile
  2815  045E                     l1969:	
  2816                           
  2817                           ;PetitModbus.c: 441: }
  2818                           ;PetitModbus.c: 443: Petit_CheckRxTimeout();
  2819  045E  120A  158A  27E6  120A  118A  	fcall	_Petit_CheckRxTimeout
  2820                           
  2821                           ;PetitModbus.c: 445: if ((Petit_Rx_State == PETIT_RXTX_DATABUF) && (Petit_Rx_Data.DataLe
      +                          n >= 2))
  2822  0463  3002               	movlw	2
  2823  0464  1283               	bcf	3,5	;RP0=0, select bank0
  2824  0465  1303               	bcf	3,6	;RP1=0, select bank0
  2825  0466  064A               	xorwf	_Petit_Rx_State,w
  2826  0467  1D03               	btfss	3,2
  2827  0468  0008               	return
  2828  0469  3000               	movlw	0
  2829  046A  0243               	subwf	_Petit_Rx_Data+35,w
  2830  046B  3002               	movlw	2
  2831  046C  1903               	skipnz
  2832  046D  0242               	subwf	_Petit_Rx_Data+34,w
  2833  046E  1C03               	skipc
  2834  046F  0008               	return
  2835                           
  2836                           ;PetitModbus.c: 446: {
  2837                           ;PetitModbus.c: 448: Petit_Rx_Data.DataLen -= 2;
  2838  0470  3002               	movlw	2
  2839  0471  02C2               	subwf	_Petit_Rx_Data+34,f
  2840  0472  3000               	movlw	0
  2841  0473  1C03               	skipc
  2842  0474  03C3               	decf	_Petit_Rx_Data+35,f
  2843  0475  02C3               	subwf	_Petit_Rx_Data+35,f
  2844                           
  2845                           ;PetitModbus.c: 449: for (Petit_i = 0; Petit_i < Petit_Rx_Data.DataLen; ++Petit_i)
  2846  0476  01DB               	clrf	Petit_RxRTU@Petit_i
  2847  0477                     l1983:	
  2848  0477  085B               	movf	Petit_RxRTU@Petit_i,w
  2849  0478  00D8               	movwf	??_Petit_RxRTU
  2850  0479  01D9               	clrf	??_Petit_RxRTU+1
  2851  047A  0843               	movf	_Petit_Rx_Data+35,w
  2852  047B  0259               	subwf	??_Petit_RxRTU+1,w
  2853  047C  1D03               	skipz
  2854  047D  2C80               	goto	u1205
  2855  047E  0842               	movf	_Petit_Rx_Data+34,w
  2856  047F  0258               	subwf	??_Petit_RxRTU,w
  2857  0480                     u1205:	
  2858  0480  1803               	btfsc	3,0
  2859  0481  2C97               	goto	l1985
  2860                           
  2861                           ;PetitModbus.c: 450: {
  2862                           ;PetitModbus.c: 451: Petit_CRC16(Petit_Rx_Data.DataBuf[Petit_i], &Petit_Rx_CRC16);
  2863  0482  305D               	movlw	(low (_Petit_Rx_CRC16| 0))& (0+255)
  2864  0483  00D8               	movwf	??_Petit_RxRTU
  2865  0484  0858               	movf	??_Petit_RxRTU,w
  2866  0485  00CD               	movwf	Petit_CRC16@CRC
  2867  0486  085B               	movf	Petit_RxRTU@Petit_i,w
  2868  0487  3E22               	addlw	(low ((_Petit_Rx_Data| 0+2)))& (0+255)
  2869  0488  0084               	movwf	4
  2870  0489  1383               	bcf	3,7	;select IRP bank0
  2871  048A  0800               	movf	0,w
  2872  048B  120A  118A  26CF  120A  118A  	fcall	_Petit_CRC16
  2873  0490  3001               	movlw	1
  2874  0491  1283               	bcf	3,5	;RP0=0, select bank0
  2875  0492  1303               	bcf	3,6	;RP1=0, select bank0
  2876  0493  00D8               	movwf	??_Petit_RxRTU
  2877  0494  0858               	movf	??_Petit_RxRTU,w
  2878  0495  07DB               	addwf	Petit_RxRTU@Petit_i,f
  2879  0496  2C77               	goto	l1983
  2880  0497                     l1985:	
  2881                           
  2882                           ;PetitModbus.c: 452: }
  2883                           ;PetitModbus.c: 454: if (((unsigned int) Petit_Rx_Data.DataBuf[Petit_Rx_Data.DataLen] + 
      +                          ((unsigned int) Petit_Rx_Data.DataBuf[Petit_Rx_Data.DataLen + 1] << 8)) == Petit_Rx_CRC1
      +                          6)
  2884  0497  0842               	movf	_Petit_Rx_Data+34,w
  2885  0498  3E22               	addlw	(low ((_Petit_Rx_Data| 0+2)))& (0+255)
  2886  0499  0084               	movwf	4
  2887  049A  1383               	bcf	3,7	;select IRP bank0
  2888  049B  0800               	movf	0,w
  2889  049C  00D8               	movwf	??_Petit_RxRTU
  2890  049D  0842               	movf	_Petit_Rx_Data+34,w
  2891  049E  3E01               	addlw	1
  2892  049F  3E22               	addlw	(low ((_Petit_Rx_Data| 0+2)))& (0+255)
  2893  04A0  0084               	movwf	4
  2894  04A1  085E               	movf	_Petit_Rx_CRC16+1,w
  2895  04A2  0600               	xorwf	0,w
  2896  04A3  1D03               	skipz
  2897  04A4  2CA7               	goto	u1215
  2898  04A5  085D               	movf	_Petit_Rx_CRC16,w
  2899  04A6  0658               	xorwf	??_Petit_RxRTU,w
  2900  04A7                     u1215:	
  2901  04A7  1D03               	skipz
  2902  04A8  2CAB               	goto	l1989
  2903                           
  2904                           ;PetitModbus.c: 455: {
  2905                           ;PetitModbus.c: 457: Petit_Rx_Data_Available = 1;
  2906  04A9  01F8               	clrf	_Petit_Rx_Data_Available
  2907  04AA  0AF8               	incf	_Petit_Rx_Data_Available,f
  2908  04AB                     l1989:	
  2909                           
  2910                           ;PetitModbus.c: 459: }
  2911                           ;PetitModbus.c: 461: Petit_Rx_State = PETIT_RXTX_IDLE;
  2912  04AB  01CA               	clrf	_Petit_Rx_State
  2913  04AC  0008               	return
  2914  04AD                     __end_of_Petit_RxRTU:	
  2915                           
  2916                           	psect	text12
  2917  0FE6                     __ptext12:	
  2918 ;; *************** function _Petit_CheckRxTimeout *****************
  2919 ;; Defined at:
  2920 ;;		line 349 in file "modbus/PetitModbus.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;		None
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;		None
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      unsigned char 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2934 ;;      Params:         0       0       0       0       0
  2935 ;;      Locals:         0       0       0       0       0
  2936 ;;      Temps:          0       0       0       0       0
  2937 ;;      Totals:         0       0       0       0       0
  2938 ;;Total ram usage:        0 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; Hardware stack levels required when called:    3
  2941 ;; This function calls:
  2942 ;;		Nothing
  2943 ;; This function is called by:
  2944 ;;		_Petit_RxRTU
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           
  2949                           ;psect for function _Petit_CheckRxTimeout
  2950  0FE6                     _Petit_CheckRxTimeout:	
  2951                           
  2952                           ;PetitModbus.c: 352: if (PetitModbusTimerValue>= 250)
  2953                           
  2954                           ;incstack = 0
  2955                           ; Regs used in _Petit_CheckRxTimeout: [wreg+status,2]
  2956  0FE6  3000               	movlw	0
  2957  0FE7  0277               	subwf	_PetitModbusTimerValue+1,w	;volatile
  2958  0FE8  30FA               	movlw	250
  2959  0FE9  1903               	skipnz
  2960  0FEA  0276               	subwf	_PetitModbusTimerValue,w	;volatile
  2961  0FEB  1C03               	skipc
  2962  0FEC  0008               	return
  2963                           
  2964                           ;PetitModbus.c: 353: {
  2965                           ;PetitModbus.c: 354: PetitModbusTimerValue =0;
  2966  0FED  01F6               	clrf	_PetitModbusTimerValue	;volatile
  2967  0FEE  01F7               	clrf	_PetitModbusTimerValue+1	;volatile
  2968                           
  2969                           ;PetitModbus.c: 355: PetitReceiveCounter =0;
  2970  0FEF  01F9               	clrf	_PetitReceiveCounter	;volatile
  2971                           
  2972                           ;PetitModbus.c: 356: return 1;
  2973                           ;	Return value of _Petit_CheckRxTimeout is never used
  2974  0FF0  0008               	return
  2975  0FF1                     __end_of_Petit_CheckRxTimeout:	
  2976                           ;PetitModbus.c: 357: }
  2977                           ;PetitModbus.c: 359: return 0;
  2978                           ;	Return value of _Petit_CheckRxTimeout is never used
  2979                           
  2980                           
  2981                           	psect	text13
  2982  06CF                     __ptext13:	
  2983 ;; *************** function _Petit_CRC16 *****************
  2984 ;; Defined at:
  2985 ;;		line 94 in file "modbus/PetitModbus.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;  Data            1    wreg     const unsigned char 
  2988 ;;  CRC             1    0[BANK0 ] PTR unsigned int 
  2989 ;;		 -> Petit_Tx_CRC16(2), Petit_Rx_CRC16(2), 
  2990 ;; Auto vars:     Size  Location     Type
  2991 ;;  Data            1    5[BANK0 ] const unsigned char 
  2992 ;;  uchCRCLo        2    9[BANK0 ] unsigned int 
  2993 ;;  uchCRCHi        2    7[BANK0 ] unsigned int 
  2994 ;;  uIndex          1    6[BANK0 ] unsigned char 
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  1    wreg      void 
  2997 ;; Registers used:
  2998 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3004 ;;      Params:         0       1       0       0       0
  3005 ;;      Locals:         0       6       0       0       0
  3006 ;;      Temps:          0       4       0       0       0
  3007 ;;      Totals:         0      11       0       0       0
  3008 ;;Total ram usage:       11 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    3
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_Petit_RxRTU
  3015 ;;		_Petit_TxRTU
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           
  3020                           ;psect for function _Petit_CRC16
  3021  06CF                     _Petit_CRC16:	
  3022                           
  3023                           ;incstack = 0
  3024                           ; Regs used in _Petit_CRC16: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  3025                           ;Petit_CRC16@Data stored from wreg
  3026  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  3027  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  3028  06D1  00D2               	movwf	Petit_CRC16@Data
  3029                           
  3030                           ;PetitModbus.c: 97: unsigned int uchCRCHi = *CRC >> 8;
  3031  06D2  084D               	movf	Petit_CRC16@CRC,w
  3032  06D3  0084               	movwf	4
  3033  06D4  1383               	bcf	3,7	;select IRP bank0
  3034  06D5  0800               	movf	0,w
  3035  06D6  00CE               	movwf	??_Petit_CRC16
  3036  06D7  0A84               	incf	4,f
  3037  06D8  0800               	movf	0,w
  3038  06D9  00CF               	movwf	??_Petit_CRC16+1
  3039  06DA  084F               	movf	??_Petit_CRC16+1,w
  3040  06DB  00CE               	movwf	??_Petit_CRC16
  3041  06DC  01CF               	clrf	??_Petit_CRC16+1
  3042  06DD  084E               	movf	??_Petit_CRC16,w
  3043  06DE  00D4               	movwf	Petit_CRC16@uchCRCHi
  3044  06DF  084F               	movf	??_Petit_CRC16+1,w
  3045  06E0  00D5               	movwf	Petit_CRC16@uchCRCHi+1
  3046                           
  3047                           ;PetitModbus.c: 98: unsigned int uchCRCLo = *CRC & 0x00FF;
  3048  06E1  084D               	movf	Petit_CRC16@CRC,w
  3049  06E2  0084               	movwf	4
  3050  06E3  0800               	movf	0,w
  3051  06E4  00CE               	movwf	??_Petit_CRC16
  3052  06E5  0A84               	incf	4,f
  3053  06E6  0800               	movf	0,w
  3054  06E7  00CF               	movwf	??_Petit_CRC16+1
  3055  06E8  30FF               	movlw	255
  3056  06E9  054E               	andwf	??_Petit_CRC16,w
  3057  06EA  00D6               	movwf	Petit_CRC16@uchCRCLo
  3058  06EB  3000               	movlw	0
  3059  06EC  054F               	andwf	??_Petit_CRC16+1,w
  3060  06ED  00D7               	movwf	Petit_CRC16@uchCRCLo+1
  3061                           
  3062                           ;PetitModbus.c: 99: unsigned char uIndex ;
  3063                           ;PetitModbus.c: 101: uIndex = uchCRCLo ^ Data;
  3064  06EE  0852               	movf	Petit_CRC16@Data,w
  3065  06EF  0656               	xorwf	Petit_CRC16@uchCRCLo,w
  3066  06F0  00CE               	movwf	??_Petit_CRC16
  3067  06F1  084E               	movf	??_Petit_CRC16,w
  3068  06F2  00D3               	movwf	Petit_CRC16@uIndex
  3069                           
  3070                           ;PetitModbus.c: 102: uchCRCLo = uchCRCHi ^ auchCRCHi[uIndex] ;
  3071  06F3  0853               	movf	Petit_CRC16@uIndex,w
  3072  06F4  3E12               	addlw	low (_auchCRCHi| (0+32768))
  3073  06F5  0084               	movwf	4
  3074  06F6  3082               	movlw	high (_auchCRCHi| (0+32768))
  3075  06F7  1803               	skipnc
  3076  06F8  3E01               	addlw	1
  3077  06F9  00FF               	movwf	127
  3078  06FA  120A  118A  2100  120A  118A  	fcall	stringtab
  3079  06FF  00CE               	movwf	??_Petit_CRC16
  3080  0700  0854               	movf	Petit_CRC16@uchCRCHi,w
  3081  0701  064E               	xorwf	??_Petit_CRC16,w
  3082  0702  00D6               	movwf	Petit_CRC16@uchCRCLo
  3083  0703  0855               	movf	Petit_CRC16@uchCRCHi+1,w
  3084  0704  00D7               	movwf	Petit_CRC16@uchCRCLo+1
  3085                           
  3086                           ;PetitModbus.c: 103: uchCRCHi = auchCRCLo[uIndex] ;
  3087  0705  0853               	movf	Petit_CRC16@uIndex,w
  3088  0706  3E12               	addlw	low (_auchCRCLo| (0+32768))
  3089  0707  0084               	movwf	4
  3090  0708  3081               	movlw	high (_auchCRCLo| (0+32768))
  3091  0709  1803               	skipnc
  3092  070A  3E01               	addlw	1
  3093  070B  00FF               	movwf	127
  3094  070C  120A  118A  2100   	fcall	stringtab
  3095  070F  00CE               	movwf	??_Petit_CRC16
  3096  0710  01CF               	clrf	??_Petit_CRC16+1
  3097  0711  084E               	movf	??_Petit_CRC16,w
  3098  0712  00D4               	movwf	Petit_CRC16@uchCRCHi
  3099  0713  084F               	movf	??_Petit_CRC16+1,w
  3100  0714  00D5               	movwf	Petit_CRC16@uchCRCHi+1
  3101                           
  3102                           ;PetitModbus.c: 104: *CRC = (unsigned int)(uchCRCHi << 8 | uchCRCLo) ;
  3103  0715  0854               	movf	Petit_CRC16@uchCRCHi,w
  3104  0716  00CF               	movwf	??_Petit_CRC16+1
  3105  0717  01CE               	clrf	??_Petit_CRC16
  3106  0718  0856               	movf	Petit_CRC16@uchCRCLo,w
  3107  0719  044E               	iorwf	??_Petit_CRC16,w
  3108  071A  00D0               	movwf	??_Petit_CRC16+2
  3109  071B  0857               	movf	Petit_CRC16@uchCRCLo+1,w
  3110  071C  044F               	iorwf	??_Petit_CRC16+1,w
  3111  071D  00D1               	movwf	??_Petit_CRC16+3
  3112  071E  084D               	movf	Petit_CRC16@CRC,w
  3113  071F  0084               	movwf	4
  3114  0720  0850               	movf	??_Petit_CRC16+2,w
  3115  0721  1383               	bcf	3,7	;select IRP bank0
  3116  0722  0080               	movwf	0
  3117  0723  0A84               	incf	4,f
  3118  0724  0851               	movf	??_Petit_CRC16+3,w
  3119  0725  0080               	movwf	0
  3120  0726  0008               	return
  3121  0727                     __end_of_Petit_CRC16:	
  3122                           
  3123                           	psect	text14
  3124  066D                     __ptext14:	
  3125 ;; *************** function _CheckPetitModbusBufferComplete *****************
  3126 ;; Defined at:
  3127 ;;		line 371 in file "modbus/PetitModbus.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;		None
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;  PetitExpecte    2    2[BANK0 ] int 
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  1    wreg      unsigned char 
  3134 ;; Registers used:
  3135 ;;		wreg, status,2, status,0
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3141 ;;      Params:         0       0       0       0       0
  3142 ;;      Locals:         0       2       0       0       0
  3143 ;;      Temps:          0       2       0       0       0
  3144 ;;      Totals:         0       4       0       0       0
  3145 ;;Total ram usage:        4 bytes
  3146 ;; Hardware stack levels used:    1
  3147 ;; Hardware stack levels required when called:    3
  3148 ;; This function calls:
  3149 ;;		Nothing
  3150 ;; This function is called by:
  3151 ;;		_Petit_RxRTU
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           
  3156                           ;psect for function _CheckPetitModbusBufferComplete
  3157  066D                     _CheckPetitModbusBufferComplete:	
  3158                           
  3159                           ;PetitModbus.c: 373: int PetitExpectedReceiveCount=0;
  3160                           
  3161                           ;incstack = 0
  3162                           ; Regs used in _CheckPetitModbusBufferComplete: [wreg+status,2+status,0]
  3163  066D  1283               	bcf	3,5	;RP0=0, select bank0
  3164  066E  1303               	bcf	3,6	;RP1=0, select bank0
  3165  066F  01CF               	clrf	CheckPetitModbusBufferComplete@PetitExpectedReceiveCount
  3166  0670  01D0               	clrf	CheckPetitModbusBufferComplete@PetitExpectedReceiveCount+1
  3167                           
  3168                           ;PetitModbus.c: 375: if(PetitReceiveCounter>4)
  3169  0671  3005               	movlw	5
  3170  0672  0279               	subwf	_PetitReceiveCounter,w	;volatile
  3171  0673  1C03               	skipc
  3172  0674  2EBD               	goto	l1763
  3173                           
  3174                           ;PetitModbus.c: 376: {
  3175                           ;PetitModbus.c: 377: if(PetitReceiveBuffer[0]== PETITMODBUS_SLAVE_ADDRESS || PETITMODBUS
      +                          _BROADCAST_ADDRESS)
  3176  0675  1683               	bsf	3,5	;RP0=1, select bank1
  3177  0676  1303               	bcf	3,6	;RP1=0, select bank1
  3178  0677  0844               	movf	_PetitReceiveBuffer^(0+128),w	;volatile
  3179  0678  1283               	bcf	3,5	;RP0=0, select bank0
  3180  0679  1303               	bcf	3,6	;RP1=0, select bank0
  3181  067A  065C               	xorwf	_PETITMODBUS_SLAVE_ADDRESS,w
  3182  067B  1903               	skipnz
  3183  067C  2E80               	goto	l1731
  3184  067D  084C               	movf	_PETITMODBUS_BROADCAST_ADDRESS,w
  3185  067E  1903               	btfsc	3,2
  3186  067F  2EBA               	goto	l1757
  3187  0680                     l1731:	
  3188                           
  3189                           ;PetitModbus.c: 378: {
  3190                           ;PetitModbus.c: 379: if(PetitReceiveBuffer[1]==0x01 || PetitReceiveBuffer[1]==0x02 || Pe
      +                          titReceiveBuffer[1]==0x03 || PetitReceiveBuffer[1]==0x04 || PetitReceiveBuffer[1]==0x05 
      +                          || PetitReceiveBuffer[1]==0x06)
  3191  0680  1683               	bsf	3,5	;RP0=1, select bank1
  3192  0681  1303               	bcf	3,6	;RP1=0, select bank1
  3193  0682  0345               	decf	(_PetitReceiveBuffer^(0+128)+1),w	;volatile
  3194  0683  1903               	btfsc	3,2
  3195  0684  2E99               	goto	l1743
  3196  0685  3002               	movlw	2
  3197  0686  0645               	xorwf	(_PetitReceiveBuffer^(0+128)+1),w	;volatile
  3198  0687  1903               	btfsc	3,2
  3199  0688  2E99               	goto	l1743
  3200  0689  3003               	movlw	3
  3201  068A  0645               	xorwf	(_PetitReceiveBuffer^(0+128)+1),w	;volatile
  3202  068B  1903               	btfsc	3,2
  3203  068C  2E99               	goto	l1743
  3204  068D  3004               	movlw	4
  3205  068E  0645               	xorwf	(_PetitReceiveBuffer^(0+128)+1),w	;volatile
  3206  068F  1903               	btfsc	3,2
  3207  0690  2E99               	goto	l1743
  3208  0691  3005               	movlw	5
  3209  0692  0645               	xorwf	(_PetitReceiveBuffer^(0+128)+1),w	;volatile
  3210  0693  1903               	btfsc	3,2
  3211  0694  2E99               	goto	l1743
  3212  0695  3006               	movlw	6
  3213  0696  0645               	xorwf	(_PetitReceiveBuffer^(0+128)+1),w	;volatile
  3214  0697  1D03               	btfss	3,2
  3215  0698  2E9F               	goto	l1745
  3216  0699                     l1743:	
  3217                           
  3218                           ;PetitModbus.c: 380: {
  3219                           ;PetitModbus.c: 381: PetitExpectedReceiveCount =8;
  3220  0699  3008               	movlw	8
  3221  069A  1283               	bcf	3,5	;RP0=0, select bank0
  3222  069B  1303               	bcf	3,6	;RP1=0, select bank0
  3223  069C  00CF               	movwf	CheckPetitModbusBufferComplete@PetitExpectedReceiveCount
  3224  069D  3000               	movlw	0
  3225  069E  2EB5               	goto	L1
  3226  069F                     l1745:	
  3227                           ;PetitModbus.c: 382: }
  3228                           
  3229                           
  3230                           ;PetitModbus.c: 383: else if(PetitReceiveBuffer[1]==0x0F || PetitReceiveBuffer[1]==0x10)
  3231  069F  300F               	movlw	15
  3232  06A0  1683               	bsf	3,5	;RP0=1, select bank1
  3233  06A1  1303               	bcf	3,6	;RP1=0, select bank1
  3234  06A2  0645               	xorwf	(_PetitReceiveBuffer^(0+128)+1),w	;volatile
  3235  06A3  1903               	btfsc	3,2
  3236  06A4  2EA9               	goto	l1749
  3237  06A5  3010               	movlw	16
  3238  06A6  0645               	xorwf	(_PetitReceiveBuffer^(0+128)+1),w	;volatile
  3239  06A7  1D03               	btfss	3,2
  3240  06A8  2EB7               	goto	l1751
  3241  06A9                     l1749:	
  3242                           
  3243                           ;PetitModbus.c: 384: {
  3244                           ;PetitModbus.c: 385: PetitExpectedReceiveCount=PetitReceiveBuffer[6]+9;
  3245  06A9  084A               	movf	(_PetitReceiveBuffer^(0+128)+6),w	;volatile
  3246  06AA  3E09               	addlw	9
  3247  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  3248  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  3249  06AD  00CD               	movwf	??_CheckPetitModbusBufferComplete
  3250  06AE  3000               	movlw	0
  3251  06AF  1803               	skipnc
  3252  06B0  3001               	movlw	1
  3253  06B1  00CE               	movwf	??_CheckPetitModbusBufferComplete+1
  3254  06B2  084D               	movf	??_CheckPetitModbusBufferComplete,w
  3255  06B3  00CF               	movwf	CheckPetitModbusBufferComplete@PetitExpectedReceiveCount
  3256  06B4  084E               	movf	??_CheckPetitModbusBufferComplete+1,w
  3257  06B5                     L1:	
  3258  06B5  00D0               	movwf	CheckPetitModbusBufferComplete@PetitExpectedReceiveCount+1
  3259                           
  3260                           ;PetitModbus.c: 386: }
  3261  06B6  2EBF               	goto	l1767
  3262  06B7                     l1751:	
  3263                           
  3264                           ;PetitModbus.c: 387: else
  3265                           ;PetitModbus.c: 388: {
  3266                           ;PetitModbus.c: 389: PetitReceiveCounter=0;
  3267  06B7  01F9               	clrf	_PetitReceiveCounter	;volatile
  3268                           
  3269                           ;PetitModbus.c: 390: return 0;
  3270  06B8  3000               	movlw	0
  3271  06B9  0008               	return
  3272  06BA                     l1757:	
  3273                           ;PetitModbus.c: 391: }
  3274                           ;PetitModbus.c: 392: }
  3275                           
  3276                           
  3277                           ;PetitModbus.c: 393: else
  3278                           ;PetitModbus.c: 394: {
  3279                           ;PetitModbus.c: 395: PetitReceiveCounter=0;
  3280  06BA  01F9               	clrf	_PetitReceiveCounter	;volatile
  3281                           
  3282                           ;PetitModbus.c: 396: return 1;
  3283  06BB  3001               	movlw	1
  3284  06BC  0008               	return
  3285  06BD                     l1763:	
  3286                           ;PetitModbus.c: 397: }
  3287                           ;PetitModbus.c: 398: }
  3288                           
  3289                           
  3290                           ;PetitModbus.c: 399: else
  3291                           ;PetitModbus.c: 400: return 2;
  3292  06BD  3002               	movlw	2
  3293  06BE  0008               	return
  3294  06BF                     l1767:	
  3295                           
  3296                           ;PetitModbus.c: 402: if(PetitReceiveCounter==PetitExpectedReceiveCount)
  3297  06BF  0879               	movf	_PetitReceiveCounter,w	;volatile
  3298  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  3299  06C1  00CD               	movwf	??_CheckPetitModbusBufferComplete
  3300  06C2  01CE               	clrf	??_CheckPetitModbusBufferComplete+1
  3301  06C3  0850               	movf	CheckPetitModbusBufferComplete@PetitExpectedReceiveCount+1,w
  3302  06C4  064E               	xorwf	??_CheckPetitModbusBufferComplete+1,w
  3303  06C5  1D03               	skipz
  3304  06C6  2EC9               	goto	u1045
  3305  06C7  084F               	movf	CheckPetitModbusBufferComplete@PetitExpectedReceiveCount,w
  3306  06C8  064D               	xorwf	??_CheckPetitModbusBufferComplete,w
  3307  06C9                     u1045:	
  3308  06C9  1D03               	skipz
  3309  06CA  2ECD               	goto	l1773
  3310                           
  3311                           ;PetitModbus.c: 403: {
  3312                           ;PetitModbus.c: 404: return 3;
  3313  06CB  3003               	movlw	3
  3314  06CC  0008               	return
  3315  06CD                     l1773:	
  3316                           
  3317                           ;PetitModbus.c: 405: }
  3318                           ;PetitModbus.c: 407: return 2;
  3319  06CD  3002               	movlw	2
  3320  06CE  0008               	return
  3321  06CF                     __end_of_CheckPetitModbusBufferComplete:	
  3322                           
  3323                           	psect	text15
  3324  0FCA                     __ptext15:	
  3325 ;; *************** function _Petit_RxDataAvailable *****************
  3326 ;; Defined at:
  3327 ;;		line 333 in file "modbus/PetitModbus.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;		None
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;  Result          1    1[BANK0 ] unsigned char 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  1    wreg      unsigned char 
  3334 ;; Registers used:
  3335 ;;		wreg, status,2
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3341 ;;      Params:         0       0       0       0       0
  3342 ;;      Locals:         0       1       0       0       0
  3343 ;;      Temps:          0       1       0       0       0
  3344 ;;      Totals:         0       2       0       0       0
  3345 ;;Total ram usage:        2 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:    3
  3348 ;; This function calls:
  3349 ;;		Nothing
  3350 ;; This function is called by:
  3351 ;;		_ProcessPetitModbus
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           
  3355                           
  3356                           ;psect for function _Petit_RxDataAvailable
  3357  0FCA                     _Petit_RxDataAvailable:	
  3358                           
  3359                           ;PetitModbus.c: 335: unsigned char Result = Petit_Rx_Data_Available;
  3360                           
  3361                           ;incstack = 0
  3362                           ; Regs used in _Petit_RxDataAvailable: [wreg+status,2]
  3363  0FCA  0878               	movf	_Petit_Rx_Data_Available,w
  3364  0FCB  1283               	bcf	3,5	;RP0=0, select bank0
  3365  0FCC  1303               	bcf	3,6	;RP1=0, select bank0
  3366  0FCD  00CD               	movwf	??_Petit_RxDataAvailable
  3367  0FCE  084D               	movf	??_Petit_RxDataAvailable,w
  3368  0FCF  00CE               	movwf	Petit_RxDataAvailable@Result
  3369                           
  3370                           ;PetitModbus.c: 337: Petit_Rx_Data_Available = 0;
  3371  0FD0  01F8               	clrf	_Petit_Rx_Data_Available
  3372                           
  3373                           ;PetitModbus.c: 339: return Result;
  3374  0FD1  084E               	movf	Petit_RxDataAvailable@Result,w
  3375  0FD2  0008               	return
  3376  0FD3                     __end_of_Petit_RxDataAvailable:	
  3377                           
  3378                           	psect	text16
  3379  05EF                     __ptext16:	
  3380 ;; *************** function _HandlePetitModbusWriteSingleRegister *****************
  3381 ;; Defined at:
  3382 ;;		line 233 in file "modbus/PetitModbus.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;		None
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;  Petit_Addres    2    6[BANK0 ] unsigned int 
  3387 ;;  Petit_Value     2    4[BANK0 ] unsigned int 
  3388 ;;  Petit_i         1    8[BANK0 ] unsigned char 
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  1    wreg      void 
  3391 ;; Registers used:
  3392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3398 ;;      Params:         0       0       0       0       0
  3399 ;;      Locals:         0       5       0       0       0
  3400 ;;      Temps:          0       2       0       0       0
  3401 ;;      Totals:         0       7       0       0       0
  3402 ;;Total ram usage:        7 bytes
  3403 ;; Hardware stack levels used:    1
  3404 ;; Hardware stack levels required when called:    5
  3405 ;; This function calls:
  3406 ;;		_HandlePetitModbusError
  3407 ;;		_PetitSendMessage
  3408 ;; This function is called by:
  3409 ;;		_ProcessPetitModbus
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413                           
  3414                           ;psect for function _HandlePetitModbusWriteSingleRegister
  3415  05EF                     _HandlePetitModbusWriteSingleRegister:	
  3416                           
  3417                           ;PetitModbus.c: 236: unsigned int Petit_Address = 0;
  3418                           
  3419                           ;incstack = 0
  3420                           ; Regs used in _HandlePetitModbusWriteSingleRegister: [wreg-fsr0h+status,2+status,0+btem
      +                          p+1+pclath+cstack]
  3421  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  3422  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  3423  05F1  01D3               	clrf	HandlePetitModbusWriteSingleRegister@Petit_Address
  3424  05F2  01D4               	clrf	HandlePetitModbusWriteSingleRegister@Petit_Address+1
  3425                           
  3426                           ;PetitModbus.c: 237: unsigned int Petit_Value = 0;
  3427  05F3  01D1               	clrf	HandlePetitModbusWriteSingleRegister@Petit_Value
  3428  05F4  01D2               	clrf	HandlePetitModbusWriteSingleRegister@Petit_Value+1
  3429                           
  3430                           ;PetitModbus.c: 238: unsigned char Petit_i = 0;
  3431  05F5  01D5               	clrf	HandlePetitModbusWriteSingleRegister@Petit_i
  3432                           
  3433                           ;PetitModbus.c: 241: Petit_Address = ((unsigned int) (Petit_Rx_Data.DataBuf[0]) << 8) + 
      +                          (unsigned int) (Petit_Rx_Data.DataBuf[1]);
  3434  05F6  0822               	movf	_Petit_Rx_Data+2,w
  3435  05F7  00CF               	movwf	??_HandlePetitModbusWriteSingleRegister
  3436  05F8  01D0               	clrf	??_HandlePetitModbusWriteSingleRegister+1
  3437  05F9  084F               	movf	??_HandlePetitModbusWriteSingleRegister,w
  3438  05FA  00D0               	movwf	??_HandlePetitModbusWriteSingleRegister+1
  3439  05FB  01CF               	clrf	??_HandlePetitModbusWriteSingleRegister
  3440  05FC  0823               	movf	_Petit_Rx_Data+3,w
  3441  05FD  074F               	addwf	??_HandlePetitModbusWriteSingleRegister,w
  3442  05FE  00D3               	movwf	HandlePetitModbusWriteSingleRegister@Petit_Address
  3443  05FF  3000               	movlw	0
  3444  0600  1803               	skipnc
  3445  0601  3001               	movlw	1
  3446  0602  0750               	addwf	??_HandlePetitModbusWriteSingleRegister+1,w
  3447  0603  00D4               	movwf	HandlePetitModbusWriteSingleRegister@Petit_Address+1
  3448                           
  3449                           ;PetitModbus.c: 242: Petit_Value = ((unsigned int) (Petit_Rx_Data.DataBuf[2]) << 8) + (u
      +                          nsigned int) (Petit_Rx_Data.DataBuf[3]);
  3450  0604  0824               	movf	_Petit_Rx_Data+4,w
  3451  0605  00CF               	movwf	??_HandlePetitModbusWriteSingleRegister
  3452  0606  01D0               	clrf	??_HandlePetitModbusWriteSingleRegister+1
  3453  0607  084F               	movf	??_HandlePetitModbusWriteSingleRegister,w
  3454  0608  00D0               	movwf	??_HandlePetitModbusWriteSingleRegister+1
  3455  0609  01CF               	clrf	??_HandlePetitModbusWriteSingleRegister
  3456  060A  0825               	movf	_Petit_Rx_Data+5,w
  3457  060B  074F               	addwf	??_HandlePetitModbusWriteSingleRegister,w
  3458  060C  00D1               	movwf	HandlePetitModbusWriteSingleRegister@Petit_Value
  3459  060D  3000               	movlw	0
  3460  060E  1803               	skipnc
  3461  060F  3001               	movlw	1
  3462  0610  0750               	addwf	??_HandlePetitModbusWriteSingleRegister+1,w
  3463  0611  00D2               	movwf	HandlePetitModbusWriteSingleRegister@Petit_Value+1
  3464                           
  3465                           ;PetitModbus.c: 245: Petit_Tx_Data.Function = 6;
  3466  0612  3006               	movlw	6
  3467  0613  00CF               	movwf	??_HandlePetitModbusWriteSingleRegister
  3468  0614  084F               	movf	??_HandlePetitModbusWriteSingleRegister,w
  3469  0615  1683               	bsf	3,5	;RP0=1, select bank1
  3470  0616  1303               	bcf	3,6	;RP1=0, select bank1
  3471  0617  00A1               	movwf	(_Petit_Tx_Data^(0+128)+1)
  3472                           
  3473                           ;PetitModbus.c: 246: Petit_Tx_Data.Address = PETITMODBUS_SLAVE_ADDRESS;
  3474  0618  1283               	bcf	3,5	;RP0=0, select bank0
  3475  0619  1303               	bcf	3,6	;RP1=0, select bank0
  3476  061A  085C               	movf	_PETITMODBUS_SLAVE_ADDRESS,w
  3477  061B  00CF               	movwf	??_HandlePetitModbusWriteSingleRegister
  3478  061C  084F               	movf	??_HandlePetitModbusWriteSingleRegister,w
  3479  061D  1683               	bsf	3,5	;RP0=1, select bank1
  3480  061E  1303               	bcf	3,6	;RP1=0, select bank1
  3481  061F  00A0               	movwf	_Petit_Tx_Data^(0+128)
  3482                           
  3483                           ;PetitModbus.c: 247: Petit_Tx_Data.DataLen = 4;
  3484  0620  3004               	movlw	4
  3485  0621  00C2               	movwf	(_Petit_Tx_Data^(0+128)+34)
  3486  0622  3000               	movlw	0
  3487  0623  00C3               	movwf	(_Petit_Tx_Data^(0+128)+35)
  3488                           
  3489                           ;PetitModbus.c: 249: if (Petit_Rx_Data.Address == PETITMODBUS_BROADCAST_ADDRESS)
  3490  0624  1283               	bcf	3,5	;RP0=0, select bank0
  3491  0625  1303               	bcf	3,6	;RP1=0, select bank0
  3492  0626  0820               	movf	_Petit_Rx_Data,w
  3493  0627  064C               	xorwf	_PETITMODBUS_BROADCAST_ADDRESS,w
  3494  0628  1D03               	skipz
  3495  0629  2E36               	goto	l1873
  3496                           
  3497                           ;PetitModbus.c: 250: {
  3498                           ;PetitModbus.c: 251: PetitRegisters[Petit_Address].ActValue=Petit_Value;
  3499  062A  0853               	movf	HandlePetitModbusWriteSingleRegister@Petit_Address,w
  3500  062B  00CF               	movwf	??_HandlePetitModbusWriteSingleRegister
  3501  062C  074F               	addwf	??_HandlePetitModbusWriteSingleRegister,w
  3502  062D  3E90               	addlw	(low (_PetitRegisters| (0+256)))& (0+255)
  3503  062E  0084               	movwf	4
  3504  062F  0851               	movf	HandlePetitModbusWriteSingleRegister@Petit_Value,w
  3505  0630  1783               	bsf	3,7	;select IRP bank3
  3506  0631  0080               	movwf	0
  3507  0632  0A84               	incf	4,f
  3508  0633  0852               	movf	HandlePetitModbusWriteSingleRegister@Petit_Value+1,w
  3509  0634  0080               	movwf	0
  3510                           
  3511                           ;PetitModbus.c: 252: return;
  3512  0635  0008               	return
  3513  0636                     l1873:	
  3514                           ;PetitModbus.c: 253: }
  3515                           
  3516                           
  3517                           ;PetitModbus.c: 254: else if(Petit_Address>=11){
  3518  0636  3000               	movlw	0
  3519  0637  0254               	subwf	HandlePetitModbusWriteSingleRegister@Petit_Address+1,w
  3520  0638  300B               	movlw	11
  3521  0639  1903               	skipnz
  3522  063A  0253               	subwf	HandlePetitModbusWriteSingleRegister@Petit_Address,w
  3523  063B  1C03               	skipc
  3524  063C  2E44               	goto	l1877
  3525                           
  3526                           ;PetitModbus.c: 255: HandlePetitModbusError(0x03);
  3527  063D  3003               	movlw	3
  3528  063E  120A  118A  27DF  120A  118A  	fcall	_HandlePetitModbusError
  3529                           
  3530                           ;PetitModbus.c: 256: }
  3531  0643  2E69               	goto	l1891
  3532  0644                     l1877:	
  3533                           
  3534                           ;PetitModbus.c: 257: else
  3535                           ;PetitModbus.c: 258: {
  3536                           ;PetitModbus.c: 259: PetitRegisters[Petit_Address].ActValue=Petit_Value;
  3537  0644  1283               	bcf	3,5	;RP0=0, select bank0
  3538  0645  1303               	bcf	3,6	;RP1=0, select bank0
  3539  0646  0853               	movf	HandlePetitModbusWriteSingleRegister@Petit_Address,w
  3540  0647  00CF               	movwf	??_HandlePetitModbusWriteSingleRegister
  3541  0648  074F               	addwf	??_HandlePetitModbusWriteSingleRegister,w
  3542  0649  3E90               	addlw	(low (_PetitRegisters| (0+256)))& (0+255)
  3543  064A  0084               	movwf	4
  3544  064B  0851               	movf	HandlePetitModbusWriteSingleRegister@Petit_Value,w
  3545  064C  1783               	bsf	3,7	;select IRP bank3
  3546  064D  0080               	movwf	0
  3547  064E  0A84               	incf	4,f
  3548  064F  0852               	movf	HandlePetitModbusWriteSingleRegister@Petit_Value+1,w
  3549  0650  0080               	movwf	0
  3550                           
  3551                           ;PetitModbus.c: 261: for (Petit_i = 0; Petit_i < 4; ++Petit_i)
  3552  0651  01D5               	clrf	HandlePetitModbusWriteSingleRegister@Petit_i
  3553  0652  3004               	movlw	4
  3554  0653  0255               	subwf	HandlePetitModbusWriteSingleRegister@Petit_i,w
  3555  0654  1803               	btfsc	3,0
  3556  0655  2E69               	goto	l1891
  3557  0656                     l1885:	
  3558                           
  3559                           ;PetitModbus.c: 262: Petit_Tx_Data.DataBuf[Petit_i] = Petit_Rx_Data.DataBuf[Petit_i];
  3560  0656  0855               	movf	HandlePetitModbusWriteSingleRegister@Petit_i,w
  3561  0657  3E22               	addlw	(low ((_Petit_Rx_Data| 0+2)))& (0+255)
  3562  0658  0084               	movwf	4
  3563  0659  1383               	bcf	3,7	;select IRP bank0
  3564  065A  0800               	movf	0,w
  3565  065B  00CF               	movwf	??_HandlePetitModbusWriteSingleRegister
  3566  065C  0855               	movf	HandlePetitModbusWriteSingleRegister@Petit_i,w
  3567  065D  3EA2               	addlw	(low ((_Petit_Tx_Data| 0+2)))& (0+255)
  3568  065E  0084               	movwf	4
  3569  065F  084F               	movf	??_HandlePetitModbusWriteSingleRegister,w
  3570  0660  0080               	movwf	0
  3571  0661  3001               	movlw	1
  3572  0662  00CF               	movwf	??_HandlePetitModbusWriteSingleRegister
  3573  0663  084F               	movf	??_HandlePetitModbusWriteSingleRegister,w
  3574  0664  07D5               	addwf	HandlePetitModbusWriteSingleRegister@Petit_i,f
  3575  0665  3004               	movlw	4
  3576  0666  0255               	subwf	HandlePetitModbusWriteSingleRegister@Petit_i,w
  3577  0667  1C03               	skipc
  3578  0668  2E56               	goto	l1885
  3579  0669                     l1891:	
  3580                           
  3581                           ;PetitModbus.c: 263: }
  3582                           ;PetitModbus.c: 265: PetitSendMessage();
  3583  0669  120A  158A  27DC   	fcall	_PetitSendMessage
  3584  066C  0008               	return
  3585  066D                     __end_of_HandlePetitModbusWriteSingleRegister:	
  3586                           
  3587                           	psect	text17
  3588  0550                     __ptext17:	
  3589 ;; *************** function _HandlePetitModbusReadHoldingRegisters *****************
  3590 ;; Defined at:
  3591 ;;		line 182 in file "modbus/PetitModbus.c"
  3592 ;; Parameters:    Size  Location     Type
  3593 ;;		None
  3594 ;; Auto vars:     Size  Location     Type
  3595 ;;  Petit_Curren    2    4[BANK0 ] unsigned short 
  3596 ;;  Petit_i         2   10[BANK0 ] unsigned int 
  3597 ;;  Petit_Number    2    8[BANK0 ] unsigned int 
  3598 ;;  Petit_StartA    2    6[BANK0 ] unsigned int 
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  1    wreg      void 
  3601 ;; Registers used:
  3602 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3603 ;; Tracked objects:
  3604 ;;		On entry : 0/0
  3605 ;;		On exit  : 0/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3608 ;;      Params:         0       0       0       0       0
  3609 ;;      Locals:         0       8       0       0       0
  3610 ;;      Temps:          0       2       0       0       0
  3611 ;;      Totals:         0      10       0       0       0
  3612 ;;Total ram usage:       10 bytes
  3613 ;; Hardware stack levels used:    1
  3614 ;; Hardware stack levels required when called:    5
  3615 ;; This function calls:
  3616 ;;		_HandlePetitModbusError
  3617 ;;		_PetitSendMessage
  3618 ;; This function is called by:
  3619 ;;		_ProcessPetitModbus
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           
  3624                           ;psect for function _HandlePetitModbusReadHoldingRegisters
  3625  0550                     _HandlePetitModbusReadHoldingRegisters:	
  3626                           
  3627                           ;PetitModbus.c: 187: unsigned int Petit_StartAddress = 0;
  3628                           
  3629                           ;incstack = 0
  3630                           ; Regs used in _HandlePetitModbusReadHoldingRegisters: [wreg-fsr0h+status,2+status,0+bte
      +                          mp+1+pclath+cstack]
  3631  0550  1283               	bcf	3,5	;RP0=0, select bank0
  3632  0551  1303               	bcf	3,6	;RP1=0, select bank0
  3633  0552  01D3               	clrf	HandlePetitModbusReadHoldingRegisters@Petit_StartAddress
  3634  0553  01D4               	clrf	HandlePetitModbusReadHoldingRegisters@Petit_StartAddress+1
  3635                           
  3636                           ;PetitModbus.c: 188: unsigned int Petit_NumberOfRegisters = 0;
  3637  0554  01D5               	clrf	HandlePetitModbusReadHoldingRegisters@Petit_NumberOfRegisters
  3638  0555  01D6               	clrf	HandlePetitModbusReadHoldingRegisters@Petit_NumberOfRegisters+1
  3639                           
  3640                           ;PetitModbus.c: 189: unsigned int Petit_i = 0;
  3641  0556  01D7               	clrf	HandlePetitModbusReadHoldingRegisters@Petit_i
  3642  0557  01D8               	clrf	HandlePetitModbusReadHoldingRegisters@Petit_i+1
  3643                           
  3644                           ;PetitModbus.c: 192: Petit_StartAddress = ((unsigned int) (Petit_Rx_Data.DataBuf[0]) << 
      +                          8) + (unsigned int) (Petit_Rx_Data.DataBuf[1]);
  3645  0558  0822               	movf	_Petit_Rx_Data+2,w
  3646  0559  00CF               	movwf	??_HandlePetitModbusReadHoldingRegisters
  3647  055A  01D0               	clrf	??_HandlePetitModbusReadHoldingRegisters+1
  3648  055B  084F               	movf	??_HandlePetitModbusReadHoldingRegisters,w
  3649  055C  00D0               	movwf	??_HandlePetitModbusReadHoldingRegisters+1
  3650  055D  01CF               	clrf	??_HandlePetitModbusReadHoldingRegisters
  3651  055E  0823               	movf	_Petit_Rx_Data+3,w
  3652  055F  074F               	addwf	??_HandlePetitModbusReadHoldingRegisters,w
  3653  0560  00D3               	movwf	HandlePetitModbusReadHoldingRegisters@Petit_StartAddress
  3654  0561  3000               	movlw	0
  3655  0562  1803               	skipnc
  3656  0563  3001               	movlw	1
  3657  0564  0750               	addwf	??_HandlePetitModbusReadHoldingRegisters+1,w
  3658  0565  00D4               	movwf	HandlePetitModbusReadHoldingRegisters@Petit_StartAddress+1
  3659                           
  3660                           ;PetitModbus.c: 193: Petit_NumberOfRegisters = ((unsigned int) (Petit_Rx_Data.DataBuf[2]
      +                          ) << 8) + (unsigned int) (Petit_Rx_Data.DataBuf[3]);
  3661  0566  0824               	movf	_Petit_Rx_Data+4,w
  3662  0567  00CF               	movwf	??_HandlePetitModbusReadHoldingRegisters
  3663  0568  01D0               	clrf	??_HandlePetitModbusReadHoldingRegisters+1
  3664  0569  084F               	movf	??_HandlePetitModbusReadHoldingRegisters,w
  3665  056A  00D0               	movwf	??_HandlePetitModbusReadHoldingRegisters+1
  3666  056B  01CF               	clrf	??_HandlePetitModbusReadHoldingRegisters
  3667  056C  0825               	movf	_Petit_Rx_Data+5,w
  3668  056D  074F               	addwf	??_HandlePetitModbusReadHoldingRegisters,w
  3669  056E  00D5               	movwf	HandlePetitModbusReadHoldingRegisters@Petit_NumberOfRegisters
  3670  056F  3000               	movlw	0
  3671  0570  1803               	skipnc
  3672  0571  3001               	movlw	1
  3673  0572  0750               	addwf	??_HandlePetitModbusReadHoldingRegisters+1,w
  3674  0573  00D6               	movwf	HandlePetitModbusReadHoldingRegisters@Petit_NumberOfRegisters+1
  3675                           
  3676                           ;PetitModbus.c: 195: if (Petit_Rx_Data.Address == PETITMODBUS_BROADCAST_ADDRESS)
  3677  0574  0820               	movf	_Petit_Rx_Data,w
  3678  0575  064C               	xorwf	_PETITMODBUS_BROADCAST_ADDRESS,w
  3679  0576  1903               	btfsc	3,2
  3680  0577  0008               	return
  3681                           
  3682                           ;PetitModbus.c: 200: else if((Petit_StartAddress+Petit_NumberOfRegisters)>11){
  3683                           
  3684                           ;PetitModbus.c: 198: }
  3685                           
  3686                           ;PetitModbus.c: 196: {
  3687                           ;PetitModbus.c: 197: return;
  3688  0578  0855               	movf	HandlePetitModbusReadHoldingRegisters@Petit_NumberOfRegisters,w
  3689  0579  0753               	addwf	HandlePetitModbusReadHoldingRegisters@Petit_StartAddress,w
  3690  057A  00CF               	movwf	??_HandlePetitModbusReadHoldingRegisters
  3691  057B  0856               	movf	HandlePetitModbusReadHoldingRegisters@Petit_NumberOfRegisters+1,w
  3692  057C  1803               	skipnc
  3693  057D  0A56               	incf	HandlePetitModbusReadHoldingRegisters@Petit_NumberOfRegisters+1,w
  3694  057E  0754               	addwf	HandlePetitModbusReadHoldingRegisters@Petit_StartAddress+1,w
  3695  057F  00D0               	movwf	??_HandlePetitModbusReadHoldingRegisters+1
  3696  0580  3000               	movlw	0
  3697  0581  0250               	subwf	??_HandlePetitModbusReadHoldingRegisters+1,w
  3698  0582  300C               	movlw	12
  3699  0583  1903               	skipnz
  3700  0584  024F               	subwf	??_HandlePetitModbusReadHoldingRegisters,w
  3701  0585  1C03               	skipc
  3702  0586  2D8C               	goto	l1835
  3703                           
  3704                           ;PetitModbus.c: 201: HandlePetitModbusError(0x02);
  3705  0587  3002               	movlw	2
  3706  0588  120A  118A  27DF   	fcall	_HandlePetitModbusError
  3707                           
  3708                           ;PetitModbus.c: 202: }
  3709  058B  0008               	return
  3710  058C                     l1835:	
  3711                           
  3712                           ;PetitModbus.c: 203: else
  3713                           ;PetitModbus.c: 204: {
  3714                           ;PetitModbus.c: 206: Petit_Tx_Data.Function = 3;
  3715  058C  3003               	movlw	3
  3716  058D  1283               	bcf	3,5	;RP0=0, select bank0
  3717  058E  1303               	bcf	3,6	;RP1=0, select bank0
  3718  058F  00CF               	movwf	??_HandlePetitModbusReadHoldingRegisters
  3719  0590  084F               	movf	??_HandlePetitModbusReadHoldingRegisters,w
  3720  0591  1683               	bsf	3,5	;RP0=1, select bank1
  3721  0592  1303               	bcf	3,6	;RP1=0, select bank1
  3722  0593  00A1               	movwf	(_Petit_Tx_Data^(0+128)+1)
  3723                           
  3724                           ;PetitModbus.c: 207: Petit_Tx_Data.Address = PETITMODBUS_SLAVE_ADDRESS;
  3725  0594  1283               	bcf	3,5	;RP0=0, select bank0
  3726  0595  1303               	bcf	3,6	;RP1=0, select bank0
  3727  0596  085C               	movf	_PETITMODBUS_SLAVE_ADDRESS,w
  3728  0597  00CF               	movwf	??_HandlePetitModbusReadHoldingRegisters
  3729  0598  084F               	movf	??_HandlePetitModbusReadHoldingRegisters,w
  3730  0599  1683               	bsf	3,5	;RP0=1, select bank1
  3731  059A  1303               	bcf	3,6	;RP1=0, select bank1
  3732  059B  00A0               	movwf	_Petit_Tx_Data^(0+128)
  3733                           
  3734                           ;PetitModbus.c: 208: Petit_Tx_Data.DataLen = 1;
  3735  059C  3001               	movlw	1
  3736  059D  00C2               	movwf	(_Petit_Tx_Data^(0+128)+34)
  3737  059E  3000               	movlw	0
  3738  059F  00C3               	movwf	(_Petit_Tx_Data^(0+128)+35)
  3739                           
  3740                           ;PetitModbus.c: 209: Petit_Tx_Data.DataBuf[0] = 0;
  3741  05A0  01A2               	clrf	(_Petit_Tx_Data^(0+128)+2)
  3742                           
  3743                           ;PetitModbus.c: 211: for (Petit_i = 0; Petit_i < Petit_NumberOfRegisters; Petit_i++)
  3744  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  3745  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  3746  05A3  01D7               	clrf	HandlePetitModbusReadHoldingRegisters@Petit_i
  3747  05A4  01D8               	clrf	HandlePetitModbusReadHoldingRegisters@Petit_i+1
  3748  05A5                     l1849:	
  3749  05A5  0856               	movf	HandlePetitModbusReadHoldingRegisters@Petit_NumberOfRegisters+1,w
  3750  05A6  0258               	subwf	HandlePetitModbusReadHoldingRegisters@Petit_i+1,w
  3751  05A7  1D03               	skipz
  3752  05A8  2DAB               	goto	u1075
  3753  05A9  0855               	movf	HandlePetitModbusReadHoldingRegisters@Petit_NumberOfRegisters,w
  3754  05AA  0257               	subwf	HandlePetitModbusReadHoldingRegisters@Petit_i,w
  3755  05AB                     u1075:	
  3756  05AB  1803               	btfsc	3,0
  3757  05AC  2DEB               	goto	l1851
  3758                           
  3759                           ;PetitModbus.c: 212: {
  3760                           ;PetitModbus.c: 213: unsigned short Petit_CurrentData = PetitRegisters[Petit_StartAddres
      +                          s+Petit_i].ActValue;
  3761  05AD  0857               	movf	HandlePetitModbusReadHoldingRegisters@Petit_i,w
  3762  05AE  0753               	addwf	HandlePetitModbusReadHoldingRegisters@Petit_StartAddress,w
  3763  05AF  00CF               	movwf	??_HandlePetitModbusReadHoldingRegisters
  3764  05B0  074F               	addwf	??_HandlePetitModbusReadHoldingRegisters,w
  3765  05B1  3E90               	addlw	(low (_PetitRegisters| (0+256)))& (0+255)
  3766  05B2  0084               	movwf	4
  3767  05B3  1783               	bsf	3,7	;select IRP bank3
  3768  05B4  0800               	movf	0,w
  3769  05B5  00D1               	movwf	HandlePetitModbusReadHoldingRegisters@Petit_CurrentData
  3770  05B6  0A84               	incf	4,f
  3771  05B7  0800               	movf	0,w
  3772  05B8  00D2               	movwf	HandlePetitModbusReadHoldingRegisters@Petit_CurrentData+1
  3773                           
  3774                           ;PetitModbus.c: 215: Petit_Tx_Data.DataBuf[Petit_Tx_Data.DataLen] = (unsigned char) ((Pe
      +                          tit_CurrentData & 0xFF00) >> 8);
  3775  05B9  0852               	movf	HandlePetitModbusReadHoldingRegisters@Petit_CurrentData+1,w
  3776  05BA  00CF               	movwf	??_HandlePetitModbusReadHoldingRegisters
  3777  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  3778  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  3779  05BD  0842               	movf	(_Petit_Tx_Data^(0+128)+34),w
  3780  05BE  3EA2               	addlw	(low ((_Petit_Tx_Data| 0+2)))& (0+255)
  3781  05BF  0084               	movwf	4
  3782  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  3783  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  3784  05C2  084F               	movf	??_HandlePetitModbusReadHoldingRegisters,w
  3785  05C3  1383               	bcf	3,7	;select IRP bank1
  3786  05C4  0080               	movwf	0
  3787                           
  3788                           ;PetitModbus.c: 216: Petit_Tx_Data.DataBuf[Petit_Tx_Data.DataLen + 1] = (unsigned char) 
      +                          (Petit_CurrentData & 0xFF);
  3789  05C5  0851               	movf	HandlePetitModbusReadHoldingRegisters@Petit_CurrentData,w
  3790  05C6  00CF               	movwf	??_HandlePetitModbusReadHoldingRegisters
  3791  05C7  1683               	bsf	3,5	;RP0=1, select bank1
  3792  05C8  1303               	bcf	3,6	;RP1=0, select bank1
  3793  05C9  0842               	movf	(_Petit_Tx_Data^(0+128)+34),w
  3794  05CA  3E01               	addlw	1
  3795  05CB  3EA2               	addlw	(low ((_Petit_Tx_Data| 0+2)))& (0+255)
  3796  05CC  0084               	movwf	4
  3797  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  3798  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  3799  05CF  084F               	movf	??_HandlePetitModbusReadHoldingRegisters,w
  3800  05D0  0080               	movwf	0
  3801                           
  3802                           ;PetitModbus.c: 217: Petit_Tx_Data.DataLen += 2;
  3803  05D1  3002               	movlw	2
  3804  05D2  1683               	bsf	3,5	;RP0=1, select bank1
  3805  05D3  1303               	bcf	3,6	;RP1=0, select bank1
  3806  05D4  07C2               	addwf	(_Petit_Tx_Data^(0+128)+34),f
  3807  05D5  1803               	skipnc
  3808  05D6  0AC3               	incf	((_Petit_Tx_Data+1)^(0+128)+34),f
  3809  05D7  3000               	movlw	0
  3810  05D8  07C3               	addwf	((_Petit_Tx_Data+1)^(0+128)+34),f
  3811                           
  3812                           ;PetitModbus.c: 218: Petit_Tx_Data.DataBuf[0] = Petit_Tx_Data.DataLen - 1;
  3813  05D9  0842               	movf	(_Petit_Tx_Data^(0+128)+34),w
  3814  05DA  3EFF               	addlw	255
  3815  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  3816  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  3817  05DD  00CF               	movwf	??_HandlePetitModbusReadHoldingRegisters
  3818  05DE  084F               	movf	??_HandlePetitModbusReadHoldingRegisters,w
  3819  05DF  1683               	bsf	3,5	;RP0=1, select bank1
  3820  05E0  1303               	bcf	3,6	;RP1=0, select bank1
  3821  05E1  00A2               	movwf	(_Petit_Tx_Data^(0+128)+2)
  3822  05E2  3001               	movlw	1
  3823  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  3824  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  3825  05E5  07D7               	addwf	HandlePetitModbusReadHoldingRegisters@Petit_i,f
  3826  05E6  1803               	skipnc
  3827  05E7  0AD8               	incf	HandlePetitModbusReadHoldingRegisters@Petit_i+1,f
  3828  05E8  3000               	movlw	0
  3829  05E9  07D8               	addwf	HandlePetitModbusReadHoldingRegisters@Petit_i+1,f
  3830  05EA  2DA5               	goto	l1849
  3831  05EB                     l1851:	
  3832                           
  3833                           ;PetitModbus.c: 219: }
  3834                           ;PetitModbus.c: 221: PetitSendMessage();
  3835  05EB  120A  158A  27DC   	fcall	_PetitSendMessage
  3836  05EE  0008               	return
  3837  05EF                     __end_of_HandlePetitModbusReadHoldingRegisters:	
  3838                           
  3839                           	psect	text18
  3840  0312                     __ptext18:	
  3841 ;; *************** function _HandleMPetitodbusWriteMultipleRegisters *****************
  3842 ;; Defined at:
  3843 ;;		line 276 in file "modbus/PetitModbus.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;		None
  3846 ;; Auto vars:     Size  Location     Type
  3847 ;;  Petit_Number    2   11[BANK0 ] unsigned int 
  3848 ;;  Petit_StartA    2    9[BANK0 ] unsigned int 
  3849 ;;  Petit_Value     2    7[BANK0 ] unsigned int 
  3850 ;;  Petit_i         1   13[BANK0 ] unsigned char 
  3851 ;;  Petit_ByteCo    1    6[BANK0 ] unsigned char 
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  1    wreg      void 
  3854 ;; Registers used:
  3855 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3861 ;;      Params:         0       0       0       0       0
  3862 ;;      Locals:         0       8       0       0       0
  3863 ;;      Temps:          0       4       0       0       0
  3864 ;;      Totals:         0      12       0       0       0
  3865 ;;Total ram usage:       12 bytes
  3866 ;; Hardware stack levels used:    1
  3867 ;; Hardware stack levels required when called:    5
  3868 ;; This function calls:
  3869 ;;		_HandlePetitModbusError
  3870 ;;		_PetitSendMessage
  3871 ;; This function is called by:
  3872 ;;		_ProcessPetitModbus
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           
  3877                           ;psect for function _HandleMPetitodbusWriteMultipleRegisters
  3878  0312                     _HandleMPetitodbusWriteMultipleRegisters:	
  3879                           
  3880                           ;PetitModbus.c: 279: unsigned int Petit_StartAddress =0;
  3881                           
  3882                           ;incstack = 0
  3883                           ; Regs used in _HandleMPetitodbusWriteMultipleRegisters: [wreg-fsr0h+status,2+status,0+b
      +                          temp+1+pclath+cstack]
  3884  0312  1283               	bcf	3,5	;RP0=0, select bank0
  3885  0313  1303               	bcf	3,6	;RP1=0, select bank0
  3886  0314  01D6               	clrf	HandleMPetitodbusWriteMultipleRegisters@Petit_StartAddress
  3887  0315  01D7               	clrf	HandleMPetitodbusWriteMultipleRegisters@Petit_StartAddress+1
  3888                           
  3889                           ;PetitModbus.c: 280: unsigned char Petit_ByteCount =0;
  3890  0316  01D3               	clrf	HandleMPetitodbusWriteMultipleRegisters@Petit_ByteCount
  3891                           
  3892                           ;PetitModbus.c: 281: unsigned int Petit_NumberOfRegisters =0;
  3893  0317  01D8               	clrf	HandleMPetitodbusWriteMultipleRegisters@Petit_NumberOfRegisters
  3894  0318  01D9               	clrf	HandleMPetitodbusWriteMultipleRegisters@Petit_NumberOfRegisters+1
  3895                           
  3896                           ;PetitModbus.c: 282: unsigned char Petit_i =0;
  3897  0319  01DA               	clrf	HandleMPetitodbusWriteMultipleRegisters@Petit_i
  3898                           
  3899                           ;PetitModbus.c: 283: unsigned int Petit_Value =0;
  3900  031A  01D4               	clrf	HandleMPetitodbusWriteMultipleRegisters@Petit_Value
  3901  031B  01D5               	clrf	HandleMPetitodbusWriteMultipleRegisters@Petit_Value+1
  3902                           
  3903                           ;PetitModbus.c: 286: Petit_StartAddress = ((unsigned int) (Petit_Rx_Data.DataBuf[0]) << 
      +                          8) + (unsigned int) (Petit_Rx_Data.DataBuf[1]);
  3904  031C  0822               	movf	_Petit_Rx_Data+2,w
  3905  031D  00CF               	movwf	??_HandleMPetitodbusWriteMultipleRegisters
  3906  031E  01D0               	clrf	??_HandleMPetitodbusWriteMultipleRegisters+1
  3907  031F  084F               	movf	??_HandleMPetitodbusWriteMultipleRegisters,w
  3908  0320  00D0               	movwf	??_HandleMPetitodbusWriteMultipleRegisters+1
  3909  0321  01CF               	clrf	??_HandleMPetitodbusWriteMultipleRegisters
  3910  0322  0823               	movf	_Petit_Rx_Data+3,w
  3911  0323  074F               	addwf	??_HandleMPetitodbusWriteMultipleRegisters,w
  3912  0324  00D6               	movwf	HandleMPetitodbusWriteMultipleRegisters@Petit_StartAddress
  3913  0325  3000               	movlw	0
  3914  0326  1803               	skipnc
  3915  0327  3001               	movlw	1
  3916  0328  0750               	addwf	??_HandleMPetitodbusWriteMultipleRegisters+1,w
  3917  0329  00D7               	movwf	HandleMPetitodbusWriteMultipleRegisters@Petit_StartAddress+1
  3918                           
  3919                           ;PetitModbus.c: 287: Petit_NumberOfRegisters = ((unsigned int) (Petit_Rx_Data.DataBuf[2]
      +                          ) << 8) + (unsigned int) (Petit_Rx_Data.DataBuf[3]);
  3920  032A  0824               	movf	_Petit_Rx_Data+4,w
  3921  032B  00CF               	movwf	??_HandleMPetitodbusWriteMultipleRegisters
  3922  032C  01D0               	clrf	??_HandleMPetitodbusWriteMultipleRegisters+1
  3923  032D  084F               	movf	??_HandleMPetitodbusWriteMultipleRegisters,w
  3924  032E  00D0               	movwf	??_HandleMPetitodbusWriteMultipleRegisters+1
  3925  032F  01CF               	clrf	??_HandleMPetitodbusWriteMultipleRegisters
  3926  0330  0825               	movf	_Petit_Rx_Data+5,w
  3927  0331  074F               	addwf	??_HandleMPetitodbusWriteMultipleRegisters,w
  3928  0332  00D8               	movwf	HandleMPetitodbusWriteMultipleRegisters@Petit_NumberOfRegisters
  3929  0333  3000               	movlw	0
  3930  0334  1803               	skipnc
  3931  0335  3001               	movlw	1
  3932  0336  0750               	addwf	??_HandleMPetitodbusWriteMultipleRegisters+1,w
  3933  0337  00D9               	movwf	HandleMPetitodbusWriteMultipleRegisters@Petit_NumberOfRegisters+1
  3934                           
  3935                           ;PetitModbus.c: 288: Petit_ByteCount = Petit_Rx_Data.DataBuf[4];
  3936  0338  0826               	movf	_Petit_Rx_Data+6,w
  3937  0339  00CF               	movwf	??_HandleMPetitodbusWriteMultipleRegisters
  3938  033A  084F               	movf	??_HandleMPetitodbusWriteMultipleRegisters,w
  3939  033B  00D3               	movwf	HandleMPetitodbusWriteMultipleRegisters@Petit_ByteCount
  3940                           
  3941                           ;PetitModbus.c: 290: if (Petit_Rx_Data.Address == PETITMODBUS_BROADCAST_ADDRESS)
  3942  033C  0820               	movf	_Petit_Rx_Data,w
  3943  033D  064C               	xorwf	_PETITMODBUS_BROADCAST_ADDRESS,w
  3944  033E  1D03               	skipz
  3945  033F  2B78               	goto	l1915
  3946                           
  3947                           ;PetitModbus.c: 291: {
  3948                           ;PetitModbus.c: 292: for (Petit_i = 0; Petit_i <Petit_NumberOfRegisters; Petit_i++)
  3949  0340  01DA               	clrf	HandleMPetitodbusWriteMultipleRegisters@Petit_i
  3950  0341                     l1911:	
  3951  0341  085A               	movf	HandleMPetitodbusWriteMultipleRegisters@Petit_i,w
  3952  0342  00CF               	movwf	??_HandleMPetitodbusWriteMultipleRegisters
  3953  0343  01D0               	clrf	??_HandleMPetitodbusWriteMultipleRegisters+1
  3954  0344  0859               	movf	HandleMPetitodbusWriteMultipleRegisters@Petit_NumberOfRegisters+1,w
  3955  0345  0250               	subwf	??_HandleMPetitodbusWriteMultipleRegisters+1,w
  3956  0346  1D03               	skipz
  3957  0347  2B4A               	goto	u1135
  3958  0348  0858               	movf	HandleMPetitodbusWriteMultipleRegisters@Petit_NumberOfRegisters,w
  3959  0349  024F               	subwf	??_HandleMPetitodbusWriteMultipleRegisters,w
  3960  034A                     u1135:	
  3961  034A  1803               	btfsc	3,0
  3962  034B  0008               	return
  3963                           
  3964                           ;PetitModbus.c: 293: {
  3965                           ;PetitModbus.c: 294: Petit_Value=(Petit_Rx_Data.DataBuf[5+2*Petit_i]<<8)+(Petit_Rx_Data.
      +                          DataBuf[6+2*Petit_i]);
  3966  034C  085A               	movf	HandleMPetitodbusWriteMultipleRegisters@Petit_i,w
  3967  034D  00CF               	movwf	??_HandleMPetitodbusWriteMultipleRegisters
  3968  034E  074F               	addwf	??_HandleMPetitodbusWriteMultipleRegisters,w
  3969  034F  3E05               	addlw	5
  3970  0350  3E22               	addlw	(low ((_Petit_Rx_Data| 0+2)))& (0+255)
  3971  0351  0084               	movwf	4
  3972  0352  1383               	bcf	3,7	;select IRP bank0
  3973  0353  0800               	movf	0,w
  3974  0354  00D0               	movwf	??_HandleMPetitodbusWriteMultipleRegisters+1
  3975  0355  01D1               	clrf	??_HandleMPetitodbusWriteMultipleRegisters+2
  3976  0356  0850               	movf	??_HandleMPetitodbusWriteMultipleRegisters+1,w
  3977  0357  00D1               	movwf	??_HandleMPetitodbusWriteMultipleRegisters+2
  3978  0358  01D0               	clrf	??_HandleMPetitodbusWriteMultipleRegisters+1
  3979  0359  085A               	movf	HandleMPetitodbusWriteMultipleRegisters@Petit_i,w
  3980  035A  00D2               	movwf	??_HandleMPetitodbusWriteMultipleRegisters+3
  3981  035B  0752               	addwf	??_HandleMPetitodbusWriteMultipleRegisters+3,w
  3982  035C  3E06               	addlw	6
  3983  035D  3E22               	addlw	(low ((_Petit_Rx_Data| 0+2)))& (0+255)
  3984  035E  0084               	movwf	4
  3985  035F  0800               	movf	0,w
  3986  0360  0750               	addwf	??_HandleMPetitodbusWriteMultipleRegisters+1,w
  3987  0361  00D4               	movwf	HandleMPetitodbusWriteMultipleRegisters@Petit_Value
  3988  0362  3000               	movlw	0
  3989  0363  1803               	skipnc
  3990  0364  3001               	movlw	1
  3991  0365  0751               	addwf	??_HandleMPetitodbusWriteMultipleRegisters+2,w
  3992  0366  00D5               	movwf	HandleMPetitodbusWriteMultipleRegisters@Petit_Value+1
  3993                           
  3994                           ;PetitModbus.c: 295: PetitRegisters[Petit_StartAddress+Petit_i].ActValue=Petit_Value;
  3995  0367  0856               	movf	HandleMPetitodbusWriteMultipleRegisters@Petit_StartAddress,w
  3996  0368  075A               	addwf	HandleMPetitodbusWriteMultipleRegisters@Petit_i,w
  3997  0369  00CF               	movwf	??_HandleMPetitodbusWriteMultipleRegisters
  3998  036A  074F               	addwf	??_HandleMPetitodbusWriteMultipleRegisters,w
  3999  036B  3E90               	addlw	(low (_PetitRegisters| (0+256)))& (0+255)
  4000  036C  0084               	movwf	4
  4001  036D  0854               	movf	HandleMPetitodbusWriteMultipleRegisters@Petit_Value,w
  4002  036E  1783               	bsf	3,7	;select IRP bank3
  4003  036F  0080               	movwf	0
  4004  0370  0A84               	incf	4,f
  4005  0371  0855               	movf	HandleMPetitodbusWriteMultipleRegisters@Petit_Value+1,w
  4006  0372  0080               	movwf	0
  4007  0373  3001               	movlw	1
  4008  0374  00CF               	movwf	??_HandleMPetitodbusWriteMultipleRegisters
  4009  0375  084F               	movf	??_HandleMPetitodbusWriteMultipleRegisters,w
  4010  0376  07DA               	addwf	HandleMPetitodbusWriteMultipleRegisters@Petit_i,f
  4011  0377  2B41               	goto	l1911
  4012  0378                     l1915:	
  4013                           ;PetitModbus.c: 298: }
  4014                           
  4015                           ;PetitModbus.c: 296: }
  4016                           ;PetitModbus.c: 297: return;
  4017                           
  4018                           
  4019                           ;PetitModbus.c: 299: else if((Petit_StartAddress+Petit_NumberOfRegisters)>11){
  4020  0378  0858               	movf	HandleMPetitodbusWriteMultipleRegisters@Petit_NumberOfRegisters,w
  4021  0379  0756               	addwf	HandleMPetitodbusWriteMultipleRegisters@Petit_StartAddress,w
  4022  037A  00CF               	movwf	??_HandleMPetitodbusWriteMultipleRegisters
  4023  037B  0859               	movf	HandleMPetitodbusWriteMultipleRegisters@Petit_NumberOfRegisters+1,w
  4024  037C  1803               	skipnc
  4025  037D  0A59               	incf	HandleMPetitodbusWriteMultipleRegisters@Petit_NumberOfRegisters+1,w
  4026  037E  0757               	addwf	HandleMPetitodbusWriteMultipleRegisters@Petit_StartAddress+1,w
  4027  037F  00D0               	movwf	??_HandleMPetitodbusWriteMultipleRegisters+1
  4028  0380  3000               	movlw	0
  4029  0381  0250               	subwf	??_HandleMPetitodbusWriteMultipleRegisters+1,w
  4030  0382  300C               	movlw	12
  4031  0383  1903               	skipnz
  4032  0384  024F               	subwf	??_HandleMPetitodbusWriteMultipleRegisters,w
  4033  0385  1C03               	skipc
  4034  0386  2B8C               	goto	l1919
  4035                           
  4036                           ;PetitModbus.c: 300: HandlePetitModbusError(0x03);
  4037  0387  3003               	movlw	3
  4038  0388  120A  118A  27DF   	fcall	_HandlePetitModbusError
  4039                           
  4040                           ;PetitModbus.c: 302: }
  4041  038B  0008               	return
  4042  038C                     l1919:	
  4043                           
  4044                           ;PetitModbus.c: 303: else
  4045                           ;PetitModbus.c: 304: {
  4046                           ;PetitModbus.c: 306: Petit_Tx_Data.Function = 16;
  4047  038C  3010               	movlw	16
  4048  038D  1283               	bcf	3,5	;RP0=0, select bank0
  4049  038E  1303               	bcf	3,6	;RP1=0, select bank0
  4050  038F  00CF               	movwf	??_HandleMPetitodbusWriteMultipleRegisters
  4051  0390  084F               	movf	??_HandleMPetitodbusWriteMultipleRegisters,w
  4052  0391  1683               	bsf	3,5	;RP0=1, select bank1
  4053  0392  1303               	bcf	3,6	;RP1=0, select bank1
  4054  0393  00A1               	movwf	(_Petit_Tx_Data^(0+128)+1)
  4055                           
  4056                           ;PetitModbus.c: 307: Petit_Tx_Data.Address = PETITMODBUS_SLAVE_ADDRESS;
  4057  0394  1283               	bcf	3,5	;RP0=0, select bank0
  4058  0395  1303               	bcf	3,6	;RP1=0, select bank0
  4059  0396  085C               	movf	_PETITMODBUS_SLAVE_ADDRESS,w
  4060  0397  00CF               	movwf	??_HandleMPetitodbusWriteMultipleRegisters
  4061  0398  084F               	movf	??_HandleMPetitodbusWriteMultipleRegisters,w
  4062  0399  1683               	bsf	3,5	;RP0=1, select bank1
  4063  039A  1303               	bcf	3,6	;RP1=0, select bank1
  4064  039B  00A0               	movwf	_Petit_Tx_Data^(0+128)
  4065                           
  4066                           ;PetitModbus.c: 308: Petit_Tx_Data.DataLen = 4;
  4067  039C  3004               	movlw	4
  4068  039D  00C2               	movwf	(_Petit_Tx_Data^(0+128)+34)
  4069  039E  3000               	movlw	0
  4070  039F  00C3               	movwf	(_Petit_Tx_Data^(0+128)+35)
  4071                           
  4072                           ;PetitModbus.c: 309: Petit_Tx_Data.DataBuf[0] = Petit_Rx_Data.DataBuf[0];
  4073  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  4074  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  4075  03A2  0822               	movf	_Petit_Rx_Data+2,w
  4076  03A3  00CF               	movwf	??_HandleMPetitodbusWriteMultipleRegisters
  4077  03A4  084F               	movf	??_HandleMPetitodbusWriteMultipleRegisters,w
  4078  03A5  1683               	bsf	3,5	;RP0=1, select bank1
  4079  03A6  1303               	bcf	3,6	;RP1=0, select bank1
  4080  03A7  00A2               	movwf	(_Petit_Tx_Data^(0+128)+2)
  4081                           
  4082                           ;PetitModbus.c: 310: Petit_Tx_Data.DataBuf[1] = Petit_Rx_Data.DataBuf[1];
  4083  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  4084  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  4085  03AA  0823               	movf	_Petit_Rx_Data+3,w
  4086  03AB  00CF               	movwf	??_HandleMPetitodbusWriteMultipleRegisters
  4087  03AC  084F               	movf	??_HandleMPetitodbusWriteMultipleRegisters,w
  4088  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  4089  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  4090  03AF  00A3               	movwf	(_Petit_Tx_Data^(0+128)+3)
  4091                           
  4092                           ;PetitModbus.c: 311: Petit_Tx_Data.DataBuf[2] = Petit_Rx_Data.DataBuf[2];
  4093  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  4094  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  4095  03B2  0824               	movf	_Petit_Rx_Data+4,w
  4096  03B3  00CF               	movwf	??_HandleMPetitodbusWriteMultipleRegisters
  4097  03B4  084F               	movf	??_HandleMPetitodbusWriteMultipleRegisters,w
  4098  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  4099  03B6  1303               	bcf	3,6	;RP1=0, select bank1
  4100  03B7  00A4               	movwf	(_Petit_Tx_Data^(0+128)+4)
  4101                           
  4102                           ;PetitModbus.c: 312: Petit_Tx_Data.DataBuf[3] = Petit_Rx_Data.DataBuf[3];
  4103  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  4104  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  4105  03BA  0825               	movf	_Petit_Rx_Data+5,w
  4106  03BB  00CF               	movwf	??_HandleMPetitodbusWriteMultipleRegisters
  4107  03BC  084F               	movf	??_HandleMPetitodbusWriteMultipleRegisters,w
  4108  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  4109  03BE  1303               	bcf	3,6	;RP1=0, select bank1
  4110  03BF  00A5               	movwf	(_Petit_Tx_Data^(0+128)+5)
  4111                           
  4112                           ;PetitModbus.c: 315: for (Petit_i = 0; Petit_i <Petit_NumberOfRegisters; Petit_i++)
  4113  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  4114  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  4115  03C2  01DA               	clrf	HandleMPetitodbusWriteMultipleRegisters@Petit_i
  4116  03C3                     l1929:	
  4117  03C3  085A               	movf	HandleMPetitodbusWriteMultipleRegisters@Petit_i,w
  4118  03C4  00CF               	movwf	??_HandleMPetitodbusWriteMultipleRegisters
  4119  03C5  01D0               	clrf	??_HandleMPetitodbusWriteMultipleRegisters+1
  4120  03C6  0859               	movf	HandleMPetitodbusWriteMultipleRegisters@Petit_NumberOfRegisters+1,w
  4121  03C7  0250               	subwf	??_HandleMPetitodbusWriteMultipleRegisters+1,w
  4122  03C8  1D03               	skipz
  4123  03C9  2BCC               	goto	u1155
  4124  03CA  0858               	movf	HandleMPetitodbusWriteMultipleRegisters@Petit_NumberOfRegisters,w
  4125  03CB  024F               	subwf	??_HandleMPetitodbusWriteMultipleRegisters,w
  4126  03CC                     u1155:	
  4127  03CC  1803               	btfsc	3,0
  4128  03CD  2BFA               	goto	l1931
  4129                           
  4130                           ;PetitModbus.c: 316: {
  4131                           ;PetitModbus.c: 317: Petit_Value=(Petit_Rx_Data.DataBuf[5+2*Petit_i]<<8)+(Petit_Rx_Data.
      +                          DataBuf[6+2*Petit_i]);
  4132  03CE  085A               	movf	HandleMPetitodbusWriteMultipleRegisters@Petit_i,w
  4133  03CF  00CF               	movwf	??_HandleMPetitodbusWriteMultipleRegisters
  4134  03D0  074F               	addwf	??_HandleMPetitodbusWriteMultipleRegisters,w
  4135  03D1  3E05               	addlw	5
  4136  03D2  3E22               	addlw	(low ((_Petit_Rx_Data| 0+2)))& (0+255)
  4137  03D3  0084               	movwf	4
  4138  03D4  1383               	bcf	3,7	;select IRP bank0
  4139  03D5  0800               	movf	0,w
  4140  03D6  00D0               	movwf	??_HandleMPetitodbusWriteMultipleRegisters+1
  4141  03D7  01D1               	clrf	??_HandleMPetitodbusWriteMultipleRegisters+2
  4142  03D8  0850               	movf	??_HandleMPetitodbusWriteMultipleRegisters+1,w
  4143  03D9  00D1               	movwf	??_HandleMPetitodbusWriteMultipleRegisters+2
  4144  03DA  01D0               	clrf	??_HandleMPetitodbusWriteMultipleRegisters+1
  4145  03DB  085A               	movf	HandleMPetitodbusWriteMultipleRegisters@Petit_i,w
  4146  03DC  00D2               	movwf	??_HandleMPetitodbusWriteMultipleRegisters+3
  4147  03DD  0752               	addwf	??_HandleMPetitodbusWriteMultipleRegisters+3,w
  4148  03DE  3E06               	addlw	6
  4149  03DF  3E22               	addlw	(low ((_Petit_Rx_Data| 0+2)))& (0+255)
  4150  03E0  0084               	movwf	4
  4151  03E1  0800               	movf	0,w
  4152  03E2  0750               	addwf	??_HandleMPetitodbusWriteMultipleRegisters+1,w
  4153  03E3  00D4               	movwf	HandleMPetitodbusWriteMultipleRegisters@Petit_Value
  4154  03E4  3000               	movlw	0
  4155  03E5  1803               	skipnc
  4156  03E6  3001               	movlw	1
  4157  03E7  0751               	addwf	??_HandleMPetitodbusWriteMultipleRegisters+2,w
  4158  03E8  00D5               	movwf	HandleMPetitodbusWriteMultipleRegisters@Petit_Value+1
  4159                           
  4160                           ;PetitModbus.c: 318: PetitRegisters[Petit_StartAddress+Petit_i].ActValue=Petit_Value;
  4161  03E9  0856               	movf	HandleMPetitodbusWriteMultipleRegisters@Petit_StartAddress,w
  4162  03EA  075A               	addwf	HandleMPetitodbusWriteMultipleRegisters@Petit_i,w
  4163  03EB  00CF               	movwf	??_HandleMPetitodbusWriteMultipleRegisters
  4164  03EC  074F               	addwf	??_HandleMPetitodbusWriteMultipleRegisters,w
  4165  03ED  3E90               	addlw	(low (_PetitRegisters| (0+256)))& (0+255)
  4166  03EE  0084               	movwf	4
  4167  03EF  0854               	movf	HandleMPetitodbusWriteMultipleRegisters@Petit_Value,w
  4168  03F0  1783               	bsf	3,7	;select IRP bank3
  4169  03F1  0080               	movwf	0
  4170  03F2  0A84               	incf	4,f
  4171  03F3  0855               	movf	HandleMPetitodbusWriteMultipleRegisters@Petit_Value+1,w
  4172  03F4  0080               	movwf	0
  4173  03F5  3001               	movlw	1
  4174  03F6  00CF               	movwf	??_HandleMPetitodbusWriteMultipleRegisters
  4175  03F7  084F               	movf	??_HandleMPetitodbusWriteMultipleRegisters,w
  4176  03F8  07DA               	addwf	HandleMPetitodbusWriteMultipleRegisters@Petit_i,f
  4177  03F9  2BC3               	goto	l1929
  4178  03FA                     l1931:	
  4179                           
  4180                           ;PetitModbus.c: 319: }
  4181                           ;PetitModbus.c: 321: PetitSendMessage();
  4182  03FA  120A  158A  27DC   	fcall	_PetitSendMessage
  4183  03FD  0008               	return
  4184  03FE                     __end_of_HandleMPetitodbusWriteMultipleRegisters:	
  4185                           
  4186                           	psect	text19
  4187  07DF                     __ptext19:	
  4188 ;; *************** function _HandlePetitModbusError *****************
  4189 ;; Defined at:
  4190 ;;		line 159 in file "modbus/PetitModbus.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;  ErrorCode       1    wreg     unsigned char 
  4193 ;; Auto vars:     Size  Location     Type
  4194 ;;  ErrorCode       1    1[BANK0 ] unsigned char 
  4195 ;; Return value:  Size  Location     Type
  4196 ;;                  1    wreg      void 
  4197 ;; Registers used:
  4198 ;;		wreg, status,2, status,0, pclath, cstack
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/0
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4204 ;;      Params:         0       0       0       0       0
  4205 ;;      Locals:         0       1       0       0       0
  4206 ;;      Temps:          0       1       0       0       0
  4207 ;;      Totals:         0       2       0       0       0
  4208 ;;Total ram usage:        2 bytes
  4209 ;; Hardware stack levels used:    1
  4210 ;; Hardware stack levels required when called:    4
  4211 ;; This function calls:
  4212 ;;		_PetitSendMessage
  4213 ;; This function is called by:
  4214 ;;		_HandlePetitModbusReadHoldingRegisters
  4215 ;;		_HandlePetitModbusWriteSingleRegister
  4216 ;;		_HandleMPetitodbusWriteMultipleRegisters
  4217 ;;		_ProcessPetitModbus
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220                           
  4221                           
  4222                           ;psect for function _HandlePetitModbusError
  4223  07DF                     _HandlePetitModbusError:	
  4224                           
  4225                           ;incstack = 0
  4226                           ; Regs used in _HandlePetitModbusError: [wreg+status,2+status,0+pclath+cstack]
  4227                           ;HandlePetitModbusError@ErrorCode stored from wreg
  4228  07DF  1283               	bcf	3,5	;RP0=0, select bank0
  4229  07E0  1303               	bcf	3,6	;RP1=0, select bank0
  4230  07E1  00CE               	movwf	HandlePetitModbusError@ErrorCode
  4231                           
  4232                           ;PetitModbus.c: 161: if (Petit_Rx_Data.Address == PETITMODBUS_BROADCAST_ADDRESS)
  4233  07E2  0820               	movf	_Petit_Rx_Data,w
  4234  07E3  064C               	xorwf	_PETITMODBUS_BROADCAST_ADDRESS,w
  4235  07E4  1903               	btfsc	3,2
  4236  07E5  0008               	return
  4237                           
  4238                           ;PetitModbus.c: 165: else
  4239                           ;PetitModbus.c: 166: {
  4240                           ;PetitModbus.c: 168: Petit_Tx_Data.Function = ErrorCode | 0x80;
  4241                           
  4242                           ;PetitModbus.c: 164: }
  4243                           
  4244                           ;PetitModbus.c: 162: {
  4245                           ;PetitModbus.c: 163: return;
  4246  07E6  084E               	movf	HandlePetitModbusError@ErrorCode,w
  4247  07E7  3880               	iorlw	128
  4248  07E8  00CD               	movwf	??_HandlePetitModbusError
  4249  07E9  084D               	movf	??_HandlePetitModbusError,w
  4250  07EA  1683               	bsf	3,5	;RP0=1, select bank1
  4251  07EB  1303               	bcf	3,6	;RP1=0, select bank1
  4252  07EC  00A1               	movwf	(_Petit_Tx_Data^(0+128)+1)
  4253                           
  4254                           ;PetitModbus.c: 169: Petit_Tx_Data.Address = PETITMODBUS_SLAVE_ADDRESS;
  4255  07ED  1283               	bcf	3,5	;RP0=0, select bank0
  4256  07EE  1303               	bcf	3,6	;RP1=0, select bank0
  4257  07EF  085C               	movf	_PETITMODBUS_SLAVE_ADDRESS,w
  4258  07F0  00CD               	movwf	??_HandlePetitModbusError
  4259  07F1  084D               	movf	??_HandlePetitModbusError,w
  4260  07F2  1683               	bsf	3,5	;RP0=1, select bank1
  4261  07F3  1303               	bcf	3,6	;RP1=0, select bank1
  4262  07F4  00A0               	movwf	_Petit_Tx_Data^(0+128)
  4263                           
  4264                           ;PetitModbus.c: 170: Petit_Tx_Data.DataLen = 0;
  4265  07F5  01C2               	clrf	(_Petit_Tx_Data^(0+128)+34)
  4266  07F6  01C3               	clrf	((_Petit_Tx_Data+1)^(0+128)+34)
  4267                           
  4268                           ;PetitModbus.c: 171: PetitSendMessage();
  4269  07F7  120A  158A  27DC   	fcall	_PetitSendMessage
  4270  07FA  0008               	return
  4271  07FB                     __end_of_HandlePetitModbusError:	
  4272                           
  4273                           	psect	text20
  4274  0FDC                     __ptext20:	
  4275 ;; *************** function _PetitSendMessage *****************
  4276 ;; Defined at:
  4277 ;;		line 142 in file "modbus/PetitModbus.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;		None
  4280 ;; Auto vars:     Size  Location     Type
  4281 ;;		None
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  1    wreg      unsigned char 
  4284 ;; Registers used:
  4285 ;;		wreg, status,2, status,0
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4291 ;;      Params:         0       0       0       0       0
  4292 ;;      Locals:         0       0       0       0       0
  4293 ;;      Temps:          0       0       0       0       0
  4294 ;;      Totals:         0       0       0       0       0
  4295 ;;Total ram usage:        0 bytes
  4296 ;; Hardware stack levels used:    1
  4297 ;; Hardware stack levels required when called:    3
  4298 ;; This function calls:
  4299 ;;		Nothing
  4300 ;; This function is called by:
  4301 ;;		_HandlePetitModbusError
  4302 ;;		_HandlePetitModbusReadHoldingRegisters
  4303 ;;		_HandlePetitModbusWriteSingleRegister
  4304 ;;		_HandleMPetitodbusWriteMultipleRegisters
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307                           
  4308                           
  4309                           ;psect for function _PetitSendMessage
  4310  0FDC                     _PetitSendMessage:	
  4311                           
  4312                           ;PetitModbus.c: 144: if (Petit_Tx_State != PETIT_RXTX_IDLE){
  4313                           
  4314                           ;incstack = 0
  4315                           ; Regs used in _PetitSendMessage: [wreg+status,2+status,0]
  4316  0FDC  1283               	bcf	3,5	;RP0=0, select bank0
  4317  0FDD  1303               	bcf	3,6	;RP1=0, select bank0
  4318  0FDE  084B               	movf	_Petit_Tx_State,w
  4319  0FDF  1D03               	btfss	3,2
  4320  0FE0  0008               	return
  4321                           
  4322                           ;PetitModbus.c: 146: }
  4323                           ;PetitModbus.c: 147: Petit_Tx_Current =0;
  4324                           
  4325                           ;PetitModbus.c: 145: return 0;
  4326                           ;	Return value of _PetitSendMessage is never used
  4327  0FE1  01C6               	clrf	_Petit_Tx_Current
  4328  0FE2  01C7               	clrf	_Petit_Tx_Current+1
  4329                           
  4330                           ;PetitModbus.c: 148: Petit_Tx_State =PETIT_RXTX_START;
  4331  0FE3  01CB               	clrf	_Petit_Tx_State
  4332  0FE4  0ACB               	incf	_Petit_Tx_State,f
  4333  0FE5  0008               	return
  4334  0FE6                     __end_of_PetitSendMessage:	
  4335                           ;PetitModbus.c: 150: return 1;
  4336                           ;	Return value of _PetitSendMessage is never used
  4337                           
  4338                           
  4339                           	psect	text21
  4340  0053                     __ptext21:	
  4341 ;; *************** function _PWM_LoadDutyValue *****************
  4342 ;; Defined at:
  4343 ;;		line 29 in file "Peripherals/pwm.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;  dutyValue       2    0[BANK0 ] unsigned int 
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;		None
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  1    wreg      void 
  4350 ;; Registers used:
  4351 ;;		wreg, status,2, status,0
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4357 ;;      Params:         0       2       0       0       0
  4358 ;;      Locals:         0       0       0       0       0
  4359 ;;      Temps:          0       2       0       0       0
  4360 ;;      Totals:         0       4       0       0       0
  4361 ;;Total ram usage:        4 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; Hardware stack levels required when called:    3
  4364 ;; This function calls:
  4365 ;;		Nothing
  4366 ;; This function is called by:
  4367 ;;		_main
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           
  4372                           ;psect for function _PWM_LoadDutyValue
  4373  0053                     _PWM_LoadDutyValue:	
  4374                           
  4375                           ;pwm.c: 31: CCPR1L = ((dutyValue & 0x03FC) >> 2);
  4376                           
  4377                           ;incstack = 0
  4378                           ; Regs used in _PWM_LoadDutyValue: [wreg+status,2+status,0]
  4379  0053  1283               	bcf	3,5	;RP0=0, select bank0
  4380  0054  1303               	bcf	3,6	;RP1=0, select bank0
  4381  0055  084E               	movf	PWM_LoadDutyValue@dutyValue+1,w
  4382  0056  00D0               	movwf	??_PWM_LoadDutyValue+1
  4383  0057  084D               	movf	PWM_LoadDutyValue@dutyValue,w
  4384  0058  00CF               	movwf	??_PWM_LoadDutyValue
  4385  0059  1003               	clrc
  4386  005A  0CD0               	rrf	??_PWM_LoadDutyValue+1,f
  4387  005B  0CCF               	rrf	??_PWM_LoadDutyValue,f
  4388  005C  1003               	clrc
  4389  005D  0CD0               	rrf	??_PWM_LoadDutyValue+1,f
  4390  005E  0CCF               	rrf	??_PWM_LoadDutyValue,f
  4391  005F  084F               	movf	??_PWM_LoadDutyValue,w
  4392  0060  0095               	movwf	21	;volatile
  4393                           
  4394                           ;pwm.c: 34: CCP1CON = (CCP1CON & 0xCF) | ((dutyValue & 0x0003) << 4);
  4395  0061  084D               	movf	PWM_LoadDutyValue@dutyValue,w
  4396  0062  3903               	andlw	3
  4397  0063  00CF               	movwf	??_PWM_LoadDutyValue
  4398  0064  3004               	movlw	4
  4399  0065                     u1275:	
  4400  0065  1003               	clrc
  4401  0066  0DCF               	rlf	??_PWM_LoadDutyValue,f
  4402  0067  3EFF               	addlw	-1
  4403  0068  1D03               	skipz
  4404  0069  2865               	goto	u1275
  4405  006A  0817               	movf	23,w	;volatile
  4406  006B  39CF               	andlw	207
  4407  006C  044F               	iorwf	??_PWM_LoadDutyValue,w
  4408  006D  0097               	movwf	23	;volatile
  4409  006E  0008               	return
  4410  006F                     __end_of_PWM_LoadDutyValue:	
  4411                           
  4412                           	psect	text22
  4413  00D3                     __ptext22:	
  4414 ;; *************** function _InitPetitModbus *****************
  4415 ;; Defined at:
  4416 ;;		line 539 in file "modbus/PetitModbus.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;  PetitModbusS    1    wreg     unsigned char 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  PetitModbusS    1    1[BANK0 ] unsigned char 
  4421 ;; Return value:  Size  Location     Type
  4422 ;;                  1    wreg      void 
  4423 ;; Registers used:
  4424 ;;		wreg, status,2, status,0, pclath, cstack
  4425 ;; Tracked objects:
  4426 ;;		On entry : 0/0
  4427 ;;		On exit  : 0/0
  4428 ;;		Unchanged: 0/0
  4429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4430 ;;      Params:         0       0       0       0       0
  4431 ;;      Locals:         0       1       0       0       0
  4432 ;;      Temps:          0       1       0       0       0
  4433 ;;      Totals:         0       2       0       0       0
  4434 ;;Total ram usage:        2 bytes
  4435 ;; Hardware stack levels used:    1
  4436 ;; Hardware stack levels required when called:    5
  4437 ;; This function calls:
  4438 ;;		_PetitModBus_TIMER_Initialise
  4439 ;;		_PetitModBus_UART_Initialise
  4440 ;; This function is called by:
  4441 ;;		_main
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445                           
  4446                           ;psect for function _InitPetitModbus
  4447  00D3                     _InitPetitModbus:	
  4448                           
  4449                           ;incstack = 0
  4450                           ; Regs used in _InitPetitModbus: [wreg+status,2+status,0+pclath+cstack]
  4451                           ;InitPetitModbus@PetitModbusSlaveAddress stored from wreg
  4452  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  4453  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  4454  00D5  00CE               	movwf	InitPetitModbus@PetitModbusSlaveAddress
  4455                           
  4456                           ;PetitModbus.c: 541: PETITMODBUS_SLAVE_ADDRESS = PetitModbusSlaveAddress;
  4457  00D6  084E               	movf	InitPetitModbus@PetitModbusSlaveAddress,w
  4458  00D7  00CD               	movwf	??_InitPetitModbus
  4459  00D8  084D               	movf	??_InitPetitModbus,w
  4460  00D9  00DC               	movwf	_PETITMODBUS_SLAVE_ADDRESS
  4461                           
  4462                           ;PetitModbus.c: 543: PetitModBus_UART_Initialise();
  4463  00DA  120A  158A  27B3  120A  118A  	fcall	_PetitModBus_UART_Initialise
  4464                           
  4465                           ;PetitModbus.c: 544: PetitModBus_TIMER_Initialise();
  4466  00DF  120A  158A  27AF   	fcall	_PetitModBus_TIMER_Initialise
  4467  00E2  0008               	return
  4468  00E3                     __end_of_InitPetitModbus:	
  4469                           
  4470                           	psect	text23
  4471  0FB3                     __ptext23:	
  4472 ;; *************** function _PetitModBus_UART_Initialise *****************
  4473 ;; Defined at:
  4474 ;;		line 10 in file "modbus/PetitModbusPort.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;		None
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;		None
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  1    wreg      void 
  4481 ;; Registers used:
  4482 ;;		wreg, status,2, status,0, pclath, cstack
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4488 ;;      Params:         0       0       0       0       0
  4489 ;;      Locals:         0       0       0       0       0
  4490 ;;      Temps:          0       0       0       0       0
  4491 ;;      Totals:         0       0       0       0       0
  4492 ;;Total ram usage:        0 bytes
  4493 ;; Hardware stack levels used:    1
  4494 ;; Hardware stack levels required when called:    4
  4495 ;; This function calls:
  4496 ;;		_InitUART
  4497 ;; This function is called by:
  4498 ;;		_InitPetitModbus
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           
  4503                           ;psect for function _PetitModBus_UART_Initialise
  4504  0FB3                     _PetitModBus_UART_Initialise:	
  4505                           
  4506                           ;PetitModbusPort.c: 12: InitUART();
  4507                           
  4508                           ;incstack = 0
  4509                           ; Regs used in _PetitModBus_UART_Initialise: [wreg+status,2+status,0+pclath+cstack]
  4510  0FB3  120A  118A  206F   	fcall	_InitUART
  4511  0FB6  0008               	return
  4512  0FB7                     __end_of_PetitModBus_UART_Initialise:	
  4513                           
  4514                           	psect	text24
  4515  006F                     __ptext24:	
  4516 ;; *************** function _InitUART *****************
  4517 ;; Defined at:
  4518 ;;		line 6 in file "modbus/Init.c"
  4519 ;; Parameters:    Size  Location     Type
  4520 ;;		None
  4521 ;; Auto vars:     Size  Location     Type
  4522 ;;		None
  4523 ;; Return value:  Size  Location     Type
  4524 ;;                  1    wreg      void 
  4525 ;; Registers used:
  4526 ;;		wreg
  4527 ;; Tracked objects:
  4528 ;;		On entry : 0/0
  4529 ;;		On exit  : 0/0
  4530 ;;		Unchanged: 0/0
  4531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4532 ;;      Params:         0       0       0       0       0
  4533 ;;      Locals:         0       0       0       0       0
  4534 ;;      Temps:          0       0       0       0       0
  4535 ;;      Totals:         0       0       0       0       0
  4536 ;;Total ram usage:        0 bytes
  4537 ;; Hardware stack levels used:    1
  4538 ;; Hardware stack levels required when called:    3
  4539 ;; This function calls:
  4540 ;;		Nothing
  4541 ;; This function is called by:
  4542 ;;		_PetitModBus_UART_Initialise
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545                           
  4546                           
  4547                           ;psect for function _InitUART
  4548  006F                     _InitUART:	
  4549                           
  4550                           ;Init.c: 10: PIE1bits.RCIE = 0;
  4551                           
  4552                           ;incstack = 0
  4553                           ; Regs used in _InitUART: [wreg]
  4554  006F  1683               	bsf	3,5	;RP0=1, select bank1
  4555  0070  1303               	bcf	3,6	;RP1=0, select bank1
  4556  0071  128C               	bcf	12,5	;volatile
  4557                           
  4558                           ;Init.c: 11: PIE1bits.TXIE = 0;
  4559  0072  120C               	bcf	12,4	;volatile
  4560                           
  4561                           ;Init.c: 13: SPBRG = ((int)(20000000UL/(16UL * 9600) -1));
  4562  0073  3081               	movlw	129
  4563  0074  0099               	movwf	25	;volatile
  4564                           
  4565                           ;Init.c: 15: RCSTAbits.SPEN = 1;
  4566  0075  1283               	bcf	3,5	;RP0=0, select bank0
  4567  0076  1303               	bcf	3,6	;RP1=0, select bank0
  4568  0077  1798               	bsf	24,7	;volatile
  4569                           
  4570                           ;Init.c: 16: RCSTAbits.RX9 = 0;
  4571  0078  1318               	bcf	24,6	;volatile
  4572                           
  4573                           ;Init.c: 17: RCSTAbits.SREN = 0;
  4574  0079  1298               	bcf	24,5	;volatile
  4575                           
  4576                           ;Init.c: 18: RCSTAbits.CREN = 1;
  4577  007A  1618               	bsf	24,4	;volatile
  4578                           
  4579                           ;Init.c: 19: RCSTAbits.ADDEN= 0;
  4580  007B  1198               	bcf	24,3	;volatile
  4581                           
  4582                           ;Init.c: 21: TXSTAbits.CSRC = 0;
  4583  007C  1683               	bsf	3,5	;RP0=1, select bank1
  4584  007D  1303               	bcf	3,6	;RP1=0, select bank1
  4585  007E  1398               	bcf	24,7	;volatile
  4586                           
  4587                           ;Init.c: 22: TXSTAbits.TXEN = 1;
  4588  007F  1698               	bsf	24,5	;volatile
  4589                           
  4590                           ;Init.c: 23: TXSTAbits.SYNC = 0;
  4591  0080  1218               	bcf	24,4	;volatile
  4592                           
  4593                           ;Init.c: 24: TXSTAbits.BRGH = 1;
  4594  0081  1518               	bsf	24,2	;volatile
  4595                           
  4596                           ;Init.c: 26: PIE1bits.TXIE = 0;
  4597  0082  120C               	bcf	12,4	;volatile
  4598                           
  4599                           ;Init.c: 27: PIR1bits.RCIF = 0;
  4600  0083  1283               	bcf	3,5	;RP0=0, select bank0
  4601  0084  1303               	bcf	3,6	;RP1=0, select bank0
  4602  0085  128C               	bcf	12,5	;volatile
  4603                           
  4604                           ;Init.c: 28: PIE1bits.RCIE = 1;
  4605  0086  1683               	bsf	3,5	;RP0=1, select bank1
  4606  0087  1303               	bcf	3,6	;RP1=0, select bank1
  4607  0088  168C               	bsf	12,5	;volatile
  4608  0089  0008               	return
  4609  008A                     __end_of_InitUART:	
  4610                           
  4611                           	psect	text25
  4612  0FAF                     __ptext25:	
  4613 ;; *************** function _PetitModBus_TIMER_Initialise *****************
  4614 ;; Defined at:
  4615 ;;		line 16 in file "modbus/PetitModbusPort.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;		None
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;		None
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  1    wreg      void 
  4622 ;; Registers used:
  4623 ;;		wreg, status,2, status,0, pclath, cstack
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4629 ;;      Params:         0       0       0       0       0
  4630 ;;      Locals:         0       0       0       0       0
  4631 ;;      Temps:          0       0       0       0       0
  4632 ;;      Totals:         0       0       0       0       0
  4633 ;;Total ram usage:        0 bytes
  4634 ;; Hardware stack levels used:    1
  4635 ;; Hardware stack levels required when called:    4
  4636 ;; This function calls:
  4637 ;;		_InitTMR1
  4638 ;; This function is called by:
  4639 ;;		_InitPetitModbus
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           
  4644                           ;psect for function _PetitModBus_TIMER_Initialise
  4645  0FAF                     _PetitModBus_TIMER_Initialise:	
  4646                           
  4647                           ;PetitModbusPort.c: 18: InitTMR1();
  4648                           
  4649                           ;incstack = 0
  4650                           ; Regs used in _PetitModBus_TIMER_Initialise: [wreg+status,2+status,0+pclath+cstack]
  4651  0FAF  120A  158A  27F1   	fcall	_InitTMR1
  4652  0FB2  0008               	return
  4653  0FB3                     __end_of_PetitModBus_TIMER_Initialise:	
  4654                           
  4655                           	psect	text26
  4656  0FF1                     __ptext26:	
  4657 ;; *************** function _InitTMR1 *****************
  4658 ;; Defined at:
  4659 ;;		line 33 in file "modbus/Init.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;		None
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;		None
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  1    wreg      void 
  4666 ;; Registers used:
  4667 ;;		wreg, status,2, status,0
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4673 ;;      Params:         0       0       0       0       0
  4674 ;;      Locals:         0       0       0       0       0
  4675 ;;      Temps:          0       0       0       0       0
  4676 ;;      Totals:         0       0       0       0       0
  4677 ;;Total ram usage:        0 bytes
  4678 ;; Hardware stack levels used:    1
  4679 ;; Hardware stack levels required when called:    3
  4680 ;; This function calls:
  4681 ;;		Nothing
  4682 ;; This function is called by:
  4683 ;;		_PetitModBus_TIMER_Initialise
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           
  4688                           ;psect for function _InitTMR1
  4689  0FF1                     _InitTMR1:	
  4690                           
  4691                           ;Init.c: 36: OPTION_REGbits.PS = 0b100;
  4692                           
  4693                           ;incstack = 0
  4694                           ; Regs used in _InitTMR1: [wreg+status,2+status,0]
  4695  0FF1  1683               	bsf	3,5	;RP0=1, select bank1
  4696  0FF2  1303               	bcf	3,6	;RP1=0, select bank1
  4697  0FF3  0801               	movf	1,w	;volatile
  4698  0FF4  39F8               	andlw	-8
  4699  0FF5  3804               	iorlw	4
  4700  0FF6  0081               	movwf	1	;volatile
  4701                           
  4702                           ;Init.c: 38: OPTION_REGbits.T0CS = 0;
  4703  0FF7  1281               	bcf	1,5	;volatile
  4704                           
  4705                           ;Init.c: 40: OPTION_REGbits.T0SE = 0;
  4706  0FF8  1201               	bcf	1,4	;volatile
  4707                           
  4708                           ;Init.c: 42: OPTION_REGbits.PSA = 0;
  4709  0FF9  1181               	bcf	1,3	;volatile
  4710                           
  4711                           ;Init.c: 45: INTCONbits.TMR0IF = 0;
  4712  0FFA  110B               	bcf	11,2	;volatile
  4713                           
  4714                           ;Init.c: 48: TMR0 = 0x00;
  4715  0FFB  1283               	bcf	3,5	;RP0=0, select bank0
  4716  0FFC  1303               	bcf	3,6	;RP1=0, select bank0
  4717  0FFD  0181               	clrf	1	;volatile
  4718                           
  4719                           ;Init.c: 51: INTCONbits.TMR0IE = 1;
  4720  0FFE  168B               	bsf	11,5	;volatile
  4721  0FFF  0008               	return
  4722  1000                     __end_of_InitTMR1:	
  4723                           
  4724                           	psect	text27
  4725  00B1                     __ptext27:	
  4726 ;; *************** function _INTERRUPT_InterruptManager *****************
  4727 ;; Defined at:
  4728 ;;		line 24 in file "Peripherals/interrupt_manager.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;		None
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;		None
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  1    wreg      void 
  4735 ;; Registers used:
  4736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4742 ;;      Params:         0       0       0       0       0
  4743 ;;      Locals:         0       0       0       0       0
  4744 ;;      Temps:          4       0       0       0       0
  4745 ;;      Totals:         4       0       0       0       0
  4746 ;;Total ram usage:        4 bytes
  4747 ;; Hardware stack levels used:    1
  4748 ;; Hardware stack levels required when called:    2
  4749 ;; This function calls:
  4750 ;;		_PetitModbusIntHandler
  4751 ;; This function is called by:
  4752 ;;		Interrupt level 1
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           
  4757                           ;psect for function _INTERRUPT_InterruptManager
  4758  00B1                     _INTERRUPT_InterruptManager:	
  4759                           
  4760                           ;interrupt_manager.c: 31: PetitModbusIntHandler();
  4761  00B1  120A  118A  279A  120A  118A  	fcall	_PetitModbusIntHandler
  4762  00B6  0875               	movf	??_INTERRUPT_InterruptManager+3,w
  4763  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  4764  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  4765  00B9  00FF               	movwf	127
  4766  00BA  0874               	movf	??_INTERRUPT_InterruptManager+2,w
  4767  00BB  008A               	movwf	10
  4768  00BC  0873               	movf	??_INTERRUPT_InterruptManager+1,w
  4769  00BD  0084               	movwf	4
  4770  00BE  0E72               	swapf	??_INTERRUPT_InterruptManager^(0+-128),w
  4771  00BF  0083               	movwf	3
  4772  00C0  0EFE               	swapf	126,f
  4773  00C1  0E7E               	swapf	126,w
  4774  00C2  0009               	retfie
  4775  00C3                     __end_of_INTERRUPT_InterruptManager:	
  4776                           
  4777                           	psect	intentry
  4778  0004                     __pintentry:	
  4779                           ;incstack = 0
  4780                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4781                           
  4782  0004                     interrupt_function:	
  4783  007E                     saved_w	set	btemp
  4784  0004  00FE               	movwf	btemp
  4785  0005  0E03               	swapf	3,w
  4786  0006  00F2               	movwf	??_INTERRUPT_InterruptManager
  4787  0007  0804               	movf	4,w
  4788  0008  00F3               	movwf	??_INTERRUPT_InterruptManager+1
  4789  0009  080A               	movf	10,w
  4790  000A  00F4               	movwf	??_INTERRUPT_InterruptManager+2
  4791  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4792  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4793  000D  087F               	movf	btemp+1,w
  4794  000E  00F5               	movwf	??_INTERRUPT_InterruptManager+3
  4795  000F  120A  118A  28B1   	ljmp	_INTERRUPT_InterruptManager
  4796                           
  4797                           	psect	text28
  4798  079A                     __ptext28:	
  4799 ;; *************** function _PetitModbusIntHandler *****************
  4800 ;; Defined at:
  4801 ;;		line 4 in file "modbus/Interrupts.c"
  4802 ;; Parameters:    Size  Location     Type
  4803 ;;		None
  4804 ;; Auto vars:     Size  Location     Type
  4805 ;;		None
  4806 ;; Return value:  Size  Location     Type
  4807 ;;                  1    wreg      void 
  4808 ;; Registers used:
  4809 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4810 ;; Tracked objects:
  4811 ;;		On entry : 0/0
  4812 ;;		On exit  : 0/0
  4813 ;;		Unchanged: 0/0
  4814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4815 ;;      Params:         0       0       0       0       0
  4816 ;;      Locals:         0       0       0       0       0
  4817 ;;      Temps:          0       0       0       0       0
  4818 ;;      Totals:         0       0       0       0       0
  4819 ;;Total ram usage:        0 bytes
  4820 ;; Hardware stack levels used:    1
  4821 ;; Hardware stack levels required when called:    1
  4822 ;; This function calls:
  4823 ;;		_PetitModBus_TimerValues
  4824 ;;		_ReceiveInterrupt
  4825 ;; This function is called by:
  4826 ;;		_INTERRUPT_InterruptManager
  4827 ;; This function uses a non-reentrant model
  4828 ;;
  4829                           
  4830                           
  4831                           ;psect for function _PetitModbusIntHandler
  4832  079A                     _PetitModbusIntHandler:	
  4833                           
  4834                           ;Interrupts.c: 6: if (INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  4835                           
  4836                           ;incstack = 0
  4837                           ; Regs used in _PetitModbusIntHandler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4838  079A  1A8B               	btfsc	11,5	;volatile
  4839  079B  1D0B               	btfss	11,2	;volatile
  4840  079C  2FAD               	goto	i1l1637
  4841                           
  4842                           ;Interrupts.c: 7: {
  4843                           ;Interrupts.c: 8: INTCONbits.TMR0IF =0;
  4844  079D  110B               	bcf	11,2	;volatile
  4845                           
  4846                           ;Interrupts.c: 10: TMR0 =0x65;
  4847  079E  3065               	movlw	101
  4848  079F  1283               	bcf	3,5	;RP0=0, select bank0
  4849  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  4850  07A1  0081               	movwf	1	;volatile
  4851                           
  4852                           ;Interrupts.c: 12: Timer1_Tick_Counter++;
  4853  07A2  3001               	movlw	1
  4854  07A3  07C8               	addwf	_Timer1_Tick_Counter,f	;volatile
  4855  07A4  1803               	skipnc
  4856  07A5  0AC9               	incf	_Timer1_Tick_Counter+1,f	;volatile
  4857  07A6  3000               	movlw	0
  4858  07A7  07C9               	addwf	_Timer1_Tick_Counter+1,f	;volatile
  4859                           
  4860                           ;Interrupts.c: 14: PetitModBus_TimerValues();
  4861  07A8  120A  158A  27BB  120A  118A  	fcall	_PetitModBus_TimerValues
  4862  07AD                     i1l1637:	
  4863                           
  4864                           ;Interrupts.c: 17: }
  4865                           ;Interrupts.c: 19: if( PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  4866  07AD  1683               	bsf	3,5	;RP0=1, select bank1
  4867  07AE  1303               	bcf	3,6	;RP1=0, select bank1
  4868  07AF  1E8C               	btfss	12,5	;volatile
  4869  07B0  0008               	return
  4870  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  4871  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  4872  07B3  1E8C               	btfss	12,5	;volatile
  4873  07B4  0008               	return
  4874                           
  4875                           ;Interrupts.c: 20: {
  4876                           ;Interrupts.c: 21: ReceiveInterrupt(RCREG);
  4877  07B5  081A               	movf	26,w	;volatile
  4878  07B6  120A  118A  208A   	fcall	_ReceiveInterrupt
  4879                           
  4880                           ;Interrupts.c: 22: PIR1bits.RCIF = 0;
  4881  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  4882  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  4883  07BB  128C               	bcf	12,5	;volatile
  4884  07BC  0008               	return
  4885  07BD                     __end_of_PetitModbusIntHandler:	
  4886                           
  4887                           	psect	text29
  4888  008A                     __ptext29:	
  4889 ;; *************** function _ReceiveInterrupt *****************
  4890 ;; Defined at:
  4891 ;;		line 42 in file "modbus/PetitModbusPort.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;  Data            1    wreg     unsigned char 
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;  Data            1    1[COMMON] unsigned char 
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  1    wreg      void 
  4898 ;; Registers used:
  4899 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4905 ;;      Params:         0       0       0       0       0
  4906 ;;      Locals:         1       0       0       0       0
  4907 ;;      Temps:          1       0       0       0       0
  4908 ;;      Totals:         2       0       0       0       0
  4909 ;;Total ram usage:        2 bytes
  4910 ;; Hardware stack levels used:    1
  4911 ;; This function calls:
  4912 ;;		Nothing
  4913 ;; This function is called by:
  4914 ;;		_PetitModbusIntHandler
  4915 ;; This function uses a non-reentrant model
  4916 ;;
  4917                           
  4918                           
  4919                           ;psect for function _ReceiveInterrupt
  4920  008A                     _ReceiveInterrupt:	
  4921                           
  4922                           ;incstack = 0
  4923                           ; Regs used in _ReceiveInterrupt: [wreg-fsr0h+status,2+status,0]
  4924                           ;ReceiveInterrupt@Data stored from wreg
  4925  008A  00F1               	movwf	ReceiveInterrupt@Data
  4926                           
  4927                           ;PetitModbusPort.c: 44: PetitReceiveBuffer[PetitReceiveCounter] =Data;
  4928  008B  0871               	movf	ReceiveInterrupt@Data,w
  4929  008C  00F0               	movwf	??_ReceiveInterrupt
  4930  008D  0879               	movf	_PetitReceiveCounter,w
  4931  008E  3EC4               	addlw	(low (_PetitReceiveBuffer| 0))& (0+255)
  4932  008F  0084               	movwf	4
  4933  0090  0870               	movf	??_ReceiveInterrupt,w
  4934  0091  1383               	bcf	3,7	;select IRP bank1
  4935  0092  0080               	movwf	0
  4936                           
  4937                           ;PetitModbusPort.c: 45: PetitReceiveCounter++;
  4938  0093  3001               	movlw	1
  4939  0094  00F0               	movwf	??_ReceiveInterrupt
  4940  0095  0870               	movf	??_ReceiveInterrupt,w
  4941  0096  07F9               	addwf	_PetitReceiveCounter,f	;volatile
  4942                           
  4943                           ;PetitModbusPort.c: 47: if(PetitReceiveCounter>(11*2 + 10)){
  4944  0097  3021               	movlw	33
  4945  0098  0279               	subwf	_PetitReceiveCounter,w	;volatile
  4946  0099  1803               	btfsc	3,0
  4947                           
  4948                           ;PetitModbusPort.c: 48: PetitReceiveCounter=0;
  4949  009A  01F9               	clrf	_PetitReceiveCounter	;volatile
  4950                           
  4951                           ;PetitModbusPort.c: 49: }
  4952                           ;PetitModbusPort.c: 50: PetitModbusTimerValue=0;
  4953  009B  01F6               	clrf	_PetitModbusTimerValue	;volatile
  4954  009C  01F7               	clrf	_PetitModbusTimerValue+1	;volatile
  4955  009D  0008               	return
  4956  009E                     __end_of_ReceiveInterrupt:	
  4957                           
  4958                           	psect	text30
  4959  0FBB                     __ptext30:	
  4960 ;; *************** function _PetitModBus_TimerValues *****************
  4961 ;; Defined at:
  4962 ;;		line 54 in file "modbus/PetitModbusPort.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;		None
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;		None
  4967 ;; Return value:  Size  Location     Type
  4968 ;;                  1    wreg      void 
  4969 ;; Registers used:
  4970 ;;		wreg
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4976 ;;      Params:         0       0       0       0       0
  4977 ;;      Locals:         0       0       0       0       0
  4978 ;;      Temps:          0       0       0       0       0
  4979 ;;      Totals:         0       0       0       0       0
  4980 ;;Total ram usage:        0 bytes
  4981 ;; Hardware stack levels used:    1
  4982 ;; This function calls:
  4983 ;;		Nothing
  4984 ;; This function is called by:
  4985 ;;		_PetitModbusIntHandler
  4986 ;; This function uses a non-reentrant model
  4987 ;;
  4988                           
  4989                           
  4990                           ;psect for function _PetitModBus_TimerValues
  4991  0FBB                     _PetitModBus_TimerValues:	
  4992                           
  4993                           ;PetitModbusPort.c: 56: PetitModbusTimerValue++;
  4994                           
  4995                           ;incstack = 0
  4996                           ; Regs used in _PetitModBus_TimerValues: [wreg]
  4997  0FBB  3001               	movlw	1
  4998  0FBC  07F6               	addwf	_PetitModbusTimerValue,f	;volatile
  4999  0FBD  1803               	skipnc
  5000  0FBE  0AF7               	incf	_PetitModbusTimerValue+1,f	;volatile
  5001  0FBF  3000               	movlw	0
  5002  0FC0  07F7               	addwf	_PetitModbusTimerValue+1,f	;volatile
  5003  0FC1  0008               	return
  5004  0FC2                     __end_of_PetitModBus_TimerValues:	
  5005  007E                     btemp	set	126	;btemp
  5006  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    512
    Data        5
    BSS         171
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     15      65
    BANK1            80      0      68
    BANK3            96      0      54
    BANK2            96      0       0

Pointer List with Targets:

    PetitModBus_UART_String@s	PTR unsigned char  size(1) Largest target is 32
		 -> Petit_Tx_Buf(BANK3[32]), 

    Petit_CRC16@CRC	PTR unsigned int  size(1) Largest target is 2
		 -> Petit_Tx_CRC16(BANK0[2]), Petit_Rx_CRC16(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _PetitModbusIntHandler->_ReceiveInterrupt

Critical Paths under _main in BANK0

    _ProcessPetitModbus->_Petit_RxRTU
    _Petit_TxRTU->_Petit_CRC16
    _Petit_DoSlaveTX->_PetitModBus_UART_String
    _PetitModBus_UART_String->_PetitModBus_UART_Putch
    _Petit_RxRTU->_Petit_CRC16
    _HandlePetitModbusWriteSingleRegister->_HandlePetitModbusError
    _HandlePetitModbusReadHoldingRegisters->_HandlePetitModbusError
    _HandleMPetitodbusWriteMultipleRegisters->_HandlePetitModbusError

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3325
                    _InitPetitModbus
                  _PWM_LoadDutyValue
                 _ProcessPetitModbus
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PWM_Initialize
 ---------------------------------------------------------------------------------
 (2) _PWM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ProcessPetitModbus                                   0     0      0    3167
_HandleMPetitodbusWriteMultipleRegis
             _HandlePetitModbusError
_HandlePetitModbusReadHoldingRegiste
_HandlePetitModbusWriteSingleRegiste
              _Petit_RxDataAvailable
                        _Petit_RxRTU
                        _Petit_TxRTU
 ---------------------------------------------------------------------------------
 (2) _Petit_TxRTU                                          1     1      0     971
                                             11 BANK0      1     1      0
                        _Petit_CRC16
                    _Petit_DoSlaveTX
 ---------------------------------------------------------------------------------
 (3) _Petit_DoSlaveTX                                      0     0      0     256
            _PetitModBus_UART_String
 ---------------------------------------------------------------------------------
 (4) _PetitModBus_UART_String                              6     4      2     256
                                              1 BANK0      6     4      2
             _PetitModBus_UART_Putch
 ---------------------------------------------------------------------------------
 (5) _PetitModBus_UART_Putch                               1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Petit_RxRTU                                          4     4      0     928
                                             11 BANK0      4     4      0
     _CheckPetitModbusBufferComplete
                        _Petit_CRC16
               _Petit_CheckRxTimeout
 ---------------------------------------------------------------------------------
 (3) _Petit_CheckRxTimeout                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Petit_CRC16                                         11    10      1     715
                                              0 BANK0     11    10      1
 ---------------------------------------------------------------------------------
 (3) _CheckPetitModbusBufferComplete                       4     4      0      40
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _Petit_RxDataAvailable                                2     2      0      34
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _HandlePetitModbusWriteSingleRegister                 7     7      0     331
                                              2 BANK0      7     7      0
             _HandlePetitModbusError
                   _PetitSendMessage
 ---------------------------------------------------------------------------------
 (2) _HandlePetitModbusReadHoldingRegisters               10    10      0     303
                                              2 BANK0     10    10      0
             _HandlePetitModbusError
                   _PetitSendMessage
 ---------------------------------------------------------------------------------
 (2) _HandleMPetitodbusWriteMultipleRegisters             12    12      0     569
                                              2 BANK0     12    12      0
             _HandlePetitModbusError
                   _PetitSendMessage
 ---------------------------------------------------------------------------------
 (3) _HandlePetitModbusError                               2     2      0      31
                                              0 BANK0      2     2      0
                   _PetitSendMessage
 ---------------------------------------------------------------------------------
 (3) _PetitSendMessage                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_LoadDutyValue                                    4     2      2     127
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _InitPetitModbus                                      2     2      0      31
                                              0 BANK0      2     2      0
       _PetitModBus_TIMER_Initialise
        _PetitModBus_UART_Initialise
 ---------------------------------------------------------------------------------
 (2) _PetitModBus_UART_Initialise                          0     0      0       0
                           _InitUART
 ---------------------------------------------------------------------------------
 (3) _InitUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PetitModBus_TIMER_Initialise                         0     0      0       0
                           _InitTMR1
 ---------------------------------------------------------------------------------
 (3) _InitTMR1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           4     4      0      22
                                              2 COMMON     4     4      0
              _PetitModbusIntHandler
 ---------------------------------------------------------------------------------
 (7) _PetitModbusIntHandler                                0     0      0      22
            _PetitModBus_TimerValues
                   _ReceiveInterrupt
 ---------------------------------------------------------------------------------
 (8) _ReceiveInterrupt                                     2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _PetitModBus_TimerValues                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitPetitModbus
     _PetitModBus_TIMER_Initialise
       _InitTMR1
     _PetitModBus_UART_Initialise
       _InitUART
   _PWM_LoadDutyValue
   _ProcessPetitModbus
     _HandleMPetitodbusWriteMultipleRegisters
       _HandlePetitModbusError
         _PetitSendMessage
       _PetitSendMessage
     _HandlePetitModbusError
       _PetitSendMessage
     _HandlePetitModbusReadHoldingRegisters
       _HandlePetitModbusError
         _PetitSendMessage
       _PetitSendMessage
     _HandlePetitModbusWriteSingleRegister
       _HandlePetitModbusError
         _PetitSendMessage
       _PetitSendMessage
     _Petit_RxDataAvailable
     _Petit_RxRTU
       _CheckPetitModbusBufferComplete
       _Petit_CRC16
       _Petit_CheckRxTimeout
     _Petit_TxRTU
       _Petit_CRC16
       _Petit_DoSlaveTX
         _PetitModBus_UART_String
           _PetitModBus_UART_Putch
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _PetitModbusIntHandler
     _PetitModBus_TimerValues
     _ReceiveInterrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      36      10       56.3%
BITBANK3            60      0       0       9        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      12        0.0%
BITBANK2            60      0       0      11        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      44       8       85.0%
BITBANK1            50      0       0       7        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      F      41       5       81.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      C5       6        0.0%
ABS                  0      0      C5       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Mar 20 14:51:51 2018

                                                             pc 0002  
                                          ??_ProcessPetitModbus 005C  
                                       __size_of_PWM_Initialize 0009  
                                                   __CFG_CP$OFF 0000  
                                                            fsr 0004  
                                                           l143 0735  
                                                           l184 00F5  
                                                           u895 07C8  
                                                           fsr0 0004  
                                                           indf 0000  
                                                  __CFG_BORV$20 0000  
                                                  __CFG_FOSC$HS 0000  
HandleMPetitodbusWriteMultipleRegisters@Petit_NumberOfRegisters 0058  
  HandlePetitModbusReadHoldingRegisters@Petit_NumberOfRegisters 0055  
                                                          l2103 0781  
                                                          l2017 04F5  
                                                          l2019 052E  
                                                          l2081 0758  
                                                          l2075 074C  
                                                          l2077 0750  
                                                          l2085 075D  
                                                          l2079 0754  
                                                          l1731 0680  
                                                          l1911 0341  
                                                          l1751 06B7  
                                                          l1743 0699  
                                                          l1745 069F  
                                                          l1931 03FA  
                                                          l1915 0378  
                                                          l1851 05EB  
                                                          l1835 058C  
                                                          l1763 06BD  
                                                          l1675 07C2  
                                                          l1773 06CD  
                                                          l1749 06A9  
                                                          l1757 06BA  
                                                          l1919 038C  
                                                          l1767 06BF  
                                                          l1929 03C3  
                                                          l1849 05A5  
                                                          l1873 0636  
                                                          l1891 0669  
                                                          l1963 043F  
                                                          l1885 0656  
                                                          l1877 0644  
                                                          l1965 0459  
                                                          l1983 0477  
                                                          l1985 0497  
                                                          l1969 045E  
                                                          l1989 04AB  
                                                          u1045 06C9  
                                                          u1205 0480  
                                                          u1135 034A  
                                                          u1215 04A7  
                                                          u1225 0503  
                                                          u1155 03CC  
                                                          u1075 05AB  
                                                          u1275 0065  
                                                 __CFG_DEBUG$ON 0000  
                                                          _TMR0 0001  
                                                          _main 076B  
                                                          btemp 007E  
                                        _PetitModBus_UART_Putch 00F2  
                                                          start 0012  
                                                 __CFG_IESO$OFF 0000  
                                             ??_InitPetitModbus 004D  
                                                 __CFG_MCLRE$ON 0000  
                                       ??_Petit_RxDataAvailable 004D  
        HandleMPetitodbusWriteMultipleRegisters@Petit_ByteCount 0053  
                                __size_of_OSCILLATOR_Initialize 0004  
                                 __end_of_OSCILLATOR_Initialize 0FBB  
                                                         ?_main 0070  
                                                 __CFG_WDTE$OFF 0000  
                                                         _RCREG 001A  
                                                         _SPBRG 0099  
                                                         _TRISA 0085  
                                                         _TRISB 0086  
                                                         _TRISC 0087  
                                                         _TXREG 0019  
                                                __CFG_FCMEN$OFF 0000  
                                                Petit_CRC16@CRC 004D  
                                       ??_PetitModbusIntHandler 0072  
                                                __CFG_BOREN$OFF 0000  
                                                         pclath 000A  
                                      ?_PetitModBus_TimerValues 0070  
                                       _PetitModBus_UART_String 07BD  
                                                         status 0003  
                                                         wtemp0 007E  
                                              _ReceiveInterrupt 008A  
                                             _Petit_Tx_Buf_Size 0044  
                                               __initialization 0015  
                                                  __end_of_main 079A  
                                              __end_of_InitUART 008A  
                                              __end_of_InitTMR1 1000  
       HandlePetitModbusReadHoldingRegisters@Petit_StartAddress 0053  
                                                 ??_Petit_CRC16 004E  
                                   ?_INTERRUPT_InterruptManager 0070  
                                                        ??_main 005C  
                                  __end_of_Petit_CheckRxTimeout 0FF1  
                                                 ??_Petit_RxRTU 0058  
                                                 ??_Petit_TxRTU 0058  
                                               __CFG_CCP2MX$RC1 0000  
                                                        _CCPR1L 0015  
                                                        i1l1637 07AD  
                                                        _OSCCON 008F  
                                                __CFG_PWRTE$OFF 0000  
               HandlePetitModbusWriteSingleRegister@Petit_Value 0051  
                                                _PWM_Initialize 0FD3  
     HandleMPetitodbusWriteMultipleRegisters@Petit_StartAddress 0056  
                                               Petit_CRC16@Data 0052  
                                           __end_of_Petit_CRC16 0727  
                                                        saved_w 007E  
                         Petit_RxRTU@Petit_ReceiveBufferControl 005A  
                               HandlePetitModbusError@ErrorCode 004E  
                               __end_of_PetitModBus_TimerValues 0FC2  
                                     ??_PetitModBus_UART_String 0050  
                                               __CFG_BORSEN$OFF 0000  
                                           __end_of_Petit_RxRTU 04AD  
                                           __end_of_Petit_TxRTU 0550  
                                  ?_PetitModBus_UART_Initialise 0070  
                                 __size_of_INTERRUPT_Initialize 0003  
                                       ?_HandlePetitModbusError 0070  
                                             _SYSTEM_Initialize 009E  
                                       __end_of__initialization 004F  
                                            ?_SYSTEM_Initialize 0070  
                                        __end_of_PWM_Initialize 0FDC  
                                                __pcstackCOMMON 0070  
                                                  __pidataBANK0 07FB  
                                           ??_SYSTEM_Initialize 004D  
                                     __size_of_PetitSendMessage 000A  
                                                _OPTION_REGbits 0081  
                   HandlePetitModbusWriteSingleRegister@Petit_i 0055  
                                __end_of_HandlePetitModbusError 07FB  
                                               _InitPetitModbus 00D3  
                                     __end_of_SYSTEM_Initialize 00B1  
                                      __size_of_Petit_DoSlaveTX 000F  
                                                    __pbssBANK0 0020  
                                                    __pbssBANK1 00A0  
                                                    __pbssBANK3 0190  
                                       ?_PetitModBus_UART_Putch 0070  
                                                     ?_InitUART 0070  
                                                     ?_InitTMR1 0070  
                                 ??_PetitModBus_UART_Initialise 004D  
                           PetitModBus_UART_String@DummyCounter 0052  
                                          _Petit_CheckRxTimeout 0FE6  
                                               ?_PWM_Initialize 0070  
                                                    __pmaintext 076B  
                                __size_of_Petit_RxDataAvailable 0009  
                                 __end_of_Petit_RxDataAvailable 0FD3  
                                                    __pintentry 0004  
                  HandlePetitModbusReadHoldingRegisters@Petit_i 0057  
                                   __size_of_ProcessPetitModbus 0044  
                                                       _CCP1CON 0017  
                                                   _Petit_CRC16 06CF  
                                      __end_of_ReceiveInterrupt 009E  
                                                   _Petit_RxRTU 03FE  
                                                   _Petit_TxRTU 04AD  
                                __end_of_PetitModBus_UART_Putch 00FE  
                                                    __stringtab 0100  
                                                    ??_InitUART 004D  
                                                    ??_InitTMR1 004D  
                                             __end_of_auchCRCHi 0312  
                                __size_of_PetitModbusIntHandler 0023  
                                             __end_of_auchCRCLo 0212  
                                 __end_of_PetitModbusIntHandler 07BD  
        HandlePetitModbusReadHoldingRegisters@Petit_CurrentData 0051  
                                         ?_Petit_CheckRxTimeout 0070  
                              __size_of_PetitModBus_TimerValues 0007  
                                                       __ptext1 009E  
                                                       __ptext2 0FD3  
                                                       __ptext3 00C3  
                                                       __ptext4 0FB7  
                                                       __ptext5 0FAC  
                                                       __ptext6 0727  
                                                       __ptext7 04AD  
                                                       __ptext8 00E3  
                                                       __ptext9 07BD  
                                       __end_of_InitPetitModbus 00E3  
                                         _OSCILLATOR_Initialize 0FB7  
                                      ??_PIN_MANAGER_Initialize 004D  
                                    __size_of_SYSTEM_Initialize 0013  
                                                       clrloop0 0FC3  
                                                 _Petit_Rx_Data 0020  
                                          end_of_initialization 004F  
                                 _PETITMODBUS_BROADCAST_ADDRESS 004C  
                                                 _Petit_Tx_Data 00A0  
                                             ??_Petit_DoSlaveTX 0054  
                                   Petit_RxDataAvailable@Result 004E  
                                                     _RCSTAbits 0018  
                                                  __pstringtext 0100  
                                              _PetitSendMessage 0FDC  
                                                     _PORTCbits 0007  
                                          ReceiveInterrupt@Data 0071  
                                                     _TRISCbits 0087  
            HandleMPetitodbusWriteMultipleRegisters@Petit_Value 0054  
                HandleMPetitodbusWriteMultipleRegisters@Petit_i 005A  
                                        ??_Petit_CheckRxTimeout 004D  
                                             _PWM_LoadDutyValue 0053  
               __end_of_HandleMPetitodbusWriteMultipleRegisters 03FE  
              __size_of_HandleMPetitodbusWriteMultipleRegisters 00EC  
                     ??_HandleMPetitodbusWriteMultipleRegisters 004F  
                      ?_HandleMPetitodbusWriteMultipleRegisters 0070  
                       _HandleMPetitodbusWriteMultipleRegisters 0312  
                                                   _CCP1CONbits 0017  
                                                     _TXSTAbits 0098  
                                            ?_PWM_LoadDutyValue 004D  
                                  __end_of_INTERRUPT_Initialize 0FAF  
                                           ??_PWM_LoadDutyValue 004F  
                                 PetitModBus_UART_String@Length 004E  
                                        ?_OSCILLATOR_Initialize 0070  
                                              ?_InitPetitModbus 0070  
                                           start_initialization 0015  
                          __end_of_PetitModBus_TIMER_Initialise 0FB3  
                         __size_of_PetitModBus_TIMER_Initialise 0004  
                                  _PetitModBus_TIMER_Initialise 0FAF  
                               __size_of_PIN_MANAGER_Initialize 0010  
                                              _Petit_Tx_Current 0046  
                                     __end_of_PWM_LoadDutyValue 006F  
                        InitPetitModbus@PetitModbusSlaveAddress 004E  
                                              ??_PWM_Initialize 004D  
                                           Petit_CRC16@uchCRCHi 0054  
                                           Petit_CRC16@uchCRCLo 0056  
                                             __size_of_InitUART 001B  
                                             __size_of_InitTMR1 000F  
                                      PetitModBus_UART_String@s 0051  
                                     _PETITMODBUS_SLAVE_ADDRESS 005C  
                                       _PetitModBus_TimerValues 0FBB  
                                                   __pdataBANK0 005C  
                                                  ?_Petit_CRC16 004D  
                        __end_of_CheckPetitModbusBufferComplete 06CF  
                       __size_of_CheckPetitModbusBufferComplete 0062  
                                _CheckPetitModbusBufferComplete 066D  
                                                  ?_Petit_RxRTU 0070  
                                                  ?_Petit_TxRTU 0070  
                                             ?_ReceiveInterrupt 0070  
                                      ?_PetitModBus_UART_String 004E  
                                                   __pbssCOMMON 0076  
                                                     ___latbits 0002  
                                                 __pcstackBANK0 004D  
                                           _PetitReceiveCounter 0079  
                                            ??_ReceiveInterrupt 0070  
                                 ?_PetitModBus_TIMER_Initialise 0070  
                                                     _auchCRCHi 0212  
                                                     _auchCRCLo 0112  
                                        _PIN_MANAGER_Initialize 00C3  
                                    __end_of_ProcessPetitModbus 076B  
                                  ??_INTERRUPT_InterruptManager 0072  
                                         _Petit_RxDataAvailable 0FCA  
                                               _Petit_DoSlaveTX 00E3  
                           __end_of_PetitModBus_UART_Initialise 0FB7  
                                   _PetitModBus_UART_Initialise 0FB3  
                                    __size_of_PWM_LoadDutyValue 001C  
                                       _Petit_Rx_Data_Available 0078  
                                          _INTERRUPT_Initialize 0FAC  
                                             interrupt_function 0004  
                                      __end_of_PetitSendMessage 0FE6  
                                                  _Petit_Tx_Buf 01A6  
                                                     clear_ram0 0FC2  
                                         _PetitModbusIntHandler 079A  
                                                      _PIE1bits 008C  
                                     ??_PetitModBus_TimerValues 0070  
                           __size_of_INTERRUPT_InterruptManager 0012  
                                                      _PIR1bits 000C  
                               __end_of_PetitModBus_UART_String 07DF  
                                            Petit_RxRTU@Petit_i 005B  
                                                   __stringbase 0112  
                                                    _ADCON1bits 009F  
                                      ??_HandlePetitModbusError 004D  
                  __end_of_HandlePetitModbusWriteSingleRegister 066D  
                 __size_of_HandlePetitModbusWriteSingleRegister 007E  
                        ??_HandlePetitModbusWriteSingleRegister 004F  
                         ?_HandlePetitModbusWriteSingleRegister 0070  
                          _HandlePetitModbusWriteSingleRegister 05EF  
                                         ?_INTERRUPT_Initialize 0070  
                                                      _InitUART 006F  
                                                      _InitTMR1 0FF1  
                                ??_PetitModBus_TIMER_Initialise 004D  
                                       PetitModBus_UART_Putch@c 004D  
                                    PWM_LoadDutyValue@dutyValue 004D  
                                       ??_OSCILLATOR_Initialize 004D  
                                        ?_Petit_RxDataAvailable 0070  
                                            _PetitReceiveBuffer 00C4  
                                         _PetitModbusTimerValue 0076  
                                            __end_of__stringtab 0112  
                                       __end_of_Petit_DoSlaveTX 00F2  
                                          __size_of_Petit_CRC16 0058  
                                      ??_PetitModBus_UART_Putch 004D  
                                          __size_of_Petit_RxRTU 00AF  
                                          __size_of_Petit_TxRTU 00A3  
                                                      __ptext10 00F2  
                                                      __ptext11 03FE  
                                                      __ptext20 0FDC  
                                                      __ptext12 0FE6  
                                                      __ptext21 0053  
                                                      __ptext13 06CF  
                                                      __ptext30 0FBB  
                                                      __ptext22 00D3  
                                                      __ptext14 066D  
                                                      __ptext23 0FB3  
                                                      __ptext15 0FCA  
                                                      __ptext24 006F  
                                                      __ptext16 05EF  
                                                      __ptext25 0FAF  
                                                      __ptext17 0550  
                                                      __ptext26 0FF1  
                                                      __ptext18 0312  
                                                      __ptext27 00B1  
                                                      __ptext19 07DF  
                                                      __ptext28 079A  
                                                      __ptext29 008A  
                                        ?_PetitModbusIntHandler 0070  
                                                 __size_of_main 002F  
                                 __size_of_Petit_CheckRxTimeout 000B  
                                                _PetitRegisters 0190  
                            __end_of_INTERRUPT_InterruptManager 00C3  
                                    _INTERRUPT_InterruptManager 00B1  
                                                _Petit_Rx_CRC16 005D  
                                                _Petit_Tx_CRC16 005F  
                                                _Petit_Rx_State 004A  
                               __size_of_HandlePetitModbusError 001C  
                                                    _INTCONbits 000B  
                                             Petit_CRC16@uIndex 0053  
                                                _Petit_Tx_State 004B  
                                        ??_INTERRUPT_Initialize 004D  
                 __end_of_HandlePetitModbusReadHoldingRegisters 05EF  
                __size_of_HandlePetitModbusReadHoldingRegisters 009F  
                       ??_HandlePetitModbusReadHoldingRegisters 004F  
                        ?_HandlePetitModbusReadHoldingRegisters 0070  
                         _HandlePetitModbusReadHoldingRegisters 0550  
                                      __size_of_InitPetitModbus 0010  
                                                      intlevel1 0000  
                              ??_CheckPetitModbusBufferComplete 004D  
                               ?_CheckPetitModbusBufferComplete 0070  
                                           _Timer1_Tick_Counter 0048  
                                       ?_PIN_MANAGER_Initialize 0070  
                              __size_of_PetitModBus_UART_String 0022  
                                     __size_of_ReceiveInterrupt 0014  
                                                     stringcode 010A  
                                              ?_Petit_DoSlaveTX 0070  
                                            _ProcessPetitModbus 0727  
                               __size_of_PetitModBus_UART_Putch 000C  
             HandlePetitModbusWriteSingleRegister@Petit_Address 0053  
                                                      stringtab 0100  
       CheckPetitModbusBufferComplete@PetitExpectedReceiveCount 004F  
                                           ?_ProcessPetitModbus 0070  
                                __end_of_PIN_MANAGER_Initialize 00D3  
                                             ?_PetitSendMessage 0070  
                                        _HandlePetitModbusError 07DF  
                                            ??_PetitSendMessage 004D  
                          __size_of_PetitModBus_UART_Initialise 0004  
